// DO NOT EDIT THIS FILE!
// This file is autogenerated from the internet-sourced OBO files.
// Any edits made will be lost when it is recreated.

// ReSharper disable InconsistentNaming

namespace PSI_Interface.CV
{
    public static partial class CV
    {
        /// <summary>Populate the CV Term data objects, breakdown part 1</summary>
        private static void PopulateTermData_MS_Part1()
        {
            TermData.Add(CVID.CVID_Unknown, new TermInfo(CVID.CVID_Unknown, @"??", @"??:0000000", @"CVID_Unknown", @"CVID_Unknown", false));
            TermData.Add(CVID.MS_Proteomics_Standards_Initiative_Mass_Spectrometry_Vocabularies, new TermInfo(CVID.MS_Proteomics_Standards_Initiative_Mass_Spectrometry_Vocabularies, @"MS", @"MS:0000000", @"Proteomics Standards Initiative Mass Spectrometry Vocabularies", @"Proteomics Standards Initiative Mass Spectrometry Vocabularies.", false));
            TermData.Add(CVID.MS_sample_number, new TermInfo(CVID.MS_sample_number, @"MS", @"MS:1000001", @"sample number", @"A reference number relevant to the sample under study.", false));
            TermData.Add(CVID.MS_sample_name, new TermInfo(CVID.MS_sample_name, @"MS", @"MS:1000002", @"sample name", @"A reference string relevant to the sample under study.", false));
            TermData.Add(CVID.MS_sample_state, new TermInfo(CVID.MS_sample_state, @"MS", @"MS:1000003", @"sample state", @"The chemical phase of a pure sample, or the state of a mixed sample.", false));
            TermData.Add(CVID.MS_sample_mass, new TermInfo(CVID.MS_sample_mass, @"MS", @"MS:1000004", @"sample mass", @"Total mass of sample used.", false));
            TermData.Add(CVID.MS_sample_volume, new TermInfo(CVID.MS_sample_volume, @"MS", @"MS:1000005", @"sample volume", @"Total volume of solution used.", false));
            TermData.Add(CVID.MS_sample_concentration, new TermInfo(CVID.MS_sample_concentration, @"MS", @"MS:1000006", @"sample concentration", @"Concentration of sample in picomol/ul, femtomol/ul or attomol/ul solution used.", false));
            TermData.Add(CVID.MS_inlet_type, new TermInfo(CVID.MS_inlet_type, @"MS", @"MS:1000007", @"inlet type", @"The nature of the sample inlet.", false));
            TermData.Add(CVID.MS_ionization_type, new TermInfo(CVID.MS_ionization_type, @"MS", @"MS:1000008", @"ionization type", @"The method by which gas phase ions are generated from the sample.", false));
            TermData.Add(CVID.MS_ionization_mode_OBSOLETE, new TermInfo(CVID.MS_ionization_mode_OBSOLETE, @"MS", @"MS:1000009", @"ionization mode", @"OBSOLETE Whether positive or negative ions are selected for analysis by the spectrometer.", true));
            TermData.Add(CVID.MS_analyzer_type_OBSOLETE, new TermInfo(CVID.MS_analyzer_type_OBSOLETE, @"MS", @"MS:1000010", @"analyzer type", @"OBSOLETE The common name of the particular analyzer stage being described. Synonym of mass analyzer, should be obsoleted.", true));
            TermData.Add(CVID.MS_mass_resolution, new TermInfo(CVID.MS_mass_resolution, @"MS", @"MS:1000011", @"mass resolution", @"Smallest mass difference between two equal magnitude peaks so that the valley between them is a specified fraction of the peak height.", false));
            TermData.Add(CVID.MS_resolution_measurement_method, new TermInfo(CVID.MS_resolution_measurement_method, @"MS", @"MS:1000012", @"resolution measurement method", @"Which of the available standard measures is used to define whether two peaks are separate.", false));
            TermData.Add(CVID.MS_resolution_type_OBSOLETE, new TermInfo(CVID.MS_resolution_type_OBSOLETE, @"MS", @"MS:1000013", @"resolution type", @"OBSOLETE Specify the nature of resolution for the mass analyzer. Resolution is usually either constant with respect to m/z or proportional to m/z.", true));
            TermData.Add(CVID.MS_accuracy, new TermInfo(CVID.MS_accuracy, @"MS", @"MS:1000014", @"accuracy", @"Accuracy is the degree of conformity of a measured mass to its actual value.", false));
            TermData.Add(CVID.MS_scan_rate, new TermInfo(CVID.MS_scan_rate, @"MS", @"MS:1000015", @"scan rate", @"Rate in Th/sec for scanning analyzers.", false));
            TermData.Add(CVID.MS_scan_start_time, new TermInfo(CVID.MS_scan_start_time, @"MS", @"MS:1000016", @"scan start time", @"The time that an analyzer started a scan, relative to the start of the MS run.", false));
            TermData.Add(CVID.MS_Scan_Function_OBSOLETE, new TermInfo(CVID.MS_Scan_Function_OBSOLETE, @"MS", @"MS:1000017", @"Scan Function", @"OBSOLETE Describes the type of mass analysis being performed. Two primary modes are: typical acquisition over a range of masses (Mass Scan), and Selected Ion Detection. The primary difference is that Selected Ion Detection produces a single value for the signal at the selected mass rather than producing a mass spectrum.", true));
            TermData.Add(CVID.MS_scan_direction, new TermInfo(CVID.MS_scan_direction, @"MS", @"MS:1000018", @"scan direction", @"Direction in terms of m/z of the scan for scanning analyzers (low to high, or high to low).", false));
            TermData.Add(CVID.MS_scan_law, new TermInfo(CVID.MS_scan_law, @"MS", @"MS:1000019", @"scan law", @"Describes the function in control of the m/z scan (for scanning instruments). Commonly the scan function is linear, but in principle any function can be used.", false));
            TermData.Add(CVID.MS_scanning_method_OBSOLETE, new TermInfo(CVID.MS_scanning_method_OBSOLETE, @"MS", @"MS:1000020", @"scanning method", @"Describes the acquisition data type produced by a tandem mass spectrometry experiment.", true));
            TermData.Add(CVID.MS_reflectron_state, new TermInfo(CVID.MS_reflectron_state, @"MS", @"MS:1000021", @"reflectron state", @"Status of the reflectron, turned on or off.", false));
            TermData.Add(CVID.MS_TOF_Total_Path_Length, new TermInfo(CVID.MS_TOF_Total_Path_Length, @"MS", @"MS:1000022", @"TOF Total Path Length", @"The length of the field free drift space in a time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_isolation_width_OBSOLETE, new TermInfo(CVID.MS_isolation_width_OBSOLETE, @"MS", @"MS:1000023", @"isolation width", @"OBSOLETE The total width (i.e. not half for plus-or-minus) of the gate applied around a selected precursor ion.", true));
            TermData.Add(CVID.MS_final_MS_exponent, new TermInfo(CVID.MS_final_MS_exponent, @"MS", @"MS:1000024", @"final MS exponent", @"Final MS level achieved when performing PFF with the ion trap (e.g. MS E10).", false));
            TermData.Add(CVID.MS_magnetic_field_strength, new TermInfo(CVID.MS_magnetic_field_strength, @"MS", @"MS:1000025", @"magnetic field strength", @"A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity.", false));
            TermData.Add(CVID.MS_detector_type, new TermInfo(CVID.MS_detector_type, @"MS", @"MS:1000026", @"detector type", @"Type of detector used in the mass spectrometer.", false));
            TermData.Add(CVID.MS_detector_acquisition_mode, new TermInfo(CVID.MS_detector_acquisition_mode, @"MS", @"MS:1000027", @"detector acquisition mode", @"Method by which detector signal is acquired by the data system.", false));
            TermData.Add(CVID.MS_detector_resolution, new TermInfo(CVID.MS_detector_resolution, @"MS", @"MS:1000028", @"detector resolution", @"The resolving power of the detector to detect the smallest difference between two ions so that the valley between them is a specified fraction of the peak height.", false));
            TermData.Add(CVID.MS_sampling_frequency, new TermInfo(CVID.MS_sampling_frequency, @"MS", @"MS:1000029", @"sampling frequency", @"The rate of signal sampling (measurement) with respect to time.", false));
            TermData.Add(CVID.MS_vendor_OBSOLETE, new TermInfo(CVID.MS_vendor_OBSOLETE, @"MS", @"MS:1000030", @"vendor", @"OBSOLETE Name of instrument vendor.", true));
            TermData.Add(CVID.MS_instrument_model, new TermInfo(CVID.MS_instrument_model, @"MS", @"MS:1000031", @"instrument model", @"Instrument model name not including the vendor's name.", false));
            TermData.Add(CVID.MS_customization, new TermInfo(CVID.MS_customization, @"MS", @"MS:1000032", @"customization", @"Free text description of a single customization made to the instrument; for several modifications, use several entries.", false));
            TermData.Add(CVID.MS_deisotoping, new TermInfo(CVID.MS_deisotoping, @"MS", @"MS:1000033", @"deisotoping", @"The removal of isotope peaks to represent the fragment ion as one data point and is commonly done to reduce complexity. It is done in conjunction with the charge state deconvolution.", false));
            TermData.Add(CVID.MS_charge_deconvolution, new TermInfo(CVID.MS_charge_deconvolution, @"MS", @"MS:1000034", @"charge deconvolution", @"The determination of the mass of an ion based on the mass spectral peaks that represent multiple-charge ions.", false));
            TermData.Add(CVID.MS_peak_picking, new TermInfo(CVID.MS_peak_picking, @"MS", @"MS:1000035", @"peak picking", @"Spectral peak processing conducted on the acquired data to convert profile data to centroided data.", false));
            TermData.Add(CVID.MS_scan_mode_OBSOLETE, new TermInfo(CVID.MS_scan_mode_OBSOLETE, @"MS", @"MS:1000036", @"scan mode", @"OBSOLETE.", true));
            TermData.Add(CVID.MS_polarity_OBSOLETE, new TermInfo(CVID.MS_polarity_OBSOLETE, @"MS", @"MS:1000037", @"polarity", @"OBSOLETE Terms to describe the polarity setting of the instrument.", true));
            TermData.Add(CVID.MS_minute_OBSOLETE, new TermInfo(CVID.MS_minute_OBSOLETE, @"MS", @"MS:1000038", @"minute", @"OBSOLETE Acquisition time in minutes.", true));
            TermData.Add(CVID.MS_second_OBSOLETE, new TermInfo(CVID.MS_second_OBSOLETE, @"MS", @"MS:1000039", @"second", @"OBSOLETE Acquisition time in seconds.", true));
            TermData.Add(CVID.MS_m_z, new TermInfo(CVID.MS_m_z, @"MS", @"MS:1000040", @"m/z", @"Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.", false));
            TermData.Add(CVID.MS_charge_state, new TermInfo(CVID.MS_charge_state, @"MS", @"MS:1000041", @"charge state", @"Number of net charges, positive or negative, on an ion.", false));
            TermData.Add(CVID.MS_peak_intensity, new TermInfo(CVID.MS_peak_intensity, @"MS", @"MS:1000042", @"peak intensity", @"Intensity of ions as measured by the height or area of a peak in a mass spectrum.", false));
            TermData.Add(CVID.MS_intensity_unit, new TermInfo(CVID.MS_intensity_unit, @"MS", @"MS:1000043", @"intensity unit", @"Intensity units are commonly arbitrary. Detected in counts per second (cps) when using counting detectors, but measured in volts when using analog detectors.", false));
            TermData.Add(CVID.MS_dissociation_method, new TermInfo(CVID.MS_dissociation_method, @"MS", @"MS:1000044", @"dissociation method", @"Fragmentation method used for dissociation or fragmentation.", false));
            TermData.Add(CVID.MS_collision_energy, new TermInfo(CVID.MS_collision_energy, @"MS", @"MS:1000045", @"collision energy", @"Energy for an ion experiencing collision with a stationary gas particle resulting in dissociation of the ion.", false));
            TermData.Add(CVID.MS_energy_unit_OBSOLETE, new TermInfo(CVID.MS_energy_unit_OBSOLETE, @"MS", @"MS:1000046", @"energy unit", @"OBSOLETE Energy units are represented in either eV or Joules.", true));
            TermData.Add(CVID.MS_emulsion, new TermInfo(CVID.MS_emulsion, @"MS", @"MS:1000047", @"emulsion", @"State if the sample is in emulsion form.", false));
            TermData.Add(CVID.MS_gaseous_sample_state, new TermInfo(CVID.MS_gaseous_sample_state, @"MS", @"MS:1000048", @"gaseous sample state", @"State if the sample is in gaseous form.", false));
            TermData.Add(CVID.MS_liquid_sample_state, new TermInfo(CVID.MS_liquid_sample_state, @"MS", @"MS:1000049", @"liquid sample state", @"State if the sample is in liquid form.", false));
            TermData.Add(CVID.MS_solid_sample_state, new TermInfo(CVID.MS_solid_sample_state, @"MS", @"MS:1000050", @"solid sample state", @"State if the sample is in solid form.", false));
            TermData.Add(CVID.MS_solution, new TermInfo(CVID.MS_solution, @"MS", @"MS:1000051", @"solution", @"State if the sample is in solution form.", false));
            TermData.Add(CVID.MS_suspension, new TermInfo(CVID.MS_suspension, @"MS", @"MS:1000052", @"suspension", @"State if the sample is in suspension form.", false));
            TermData.Add(CVID.MS_sample_batch, new TermInfo(CVID.MS_sample_batch, @"MS", @"MS:1000053", @"sample batch", @"Sample batch lot identifier.", false));
            TermData.Add(CVID.MS_chromatography_OBSOLETE, new TermInfo(CVID.MS_chromatography_OBSOLETE, @"MS", @"MS:1000054", @"chromatography", @"OBSOLETE Chromatographic conditions used to obtain the sample.", true));
            TermData.Add(CVID.MS_continuous_flow_fast_atom_bombardment, new TermInfo(CVID.MS_continuous_flow_fast_atom_bombardment, @"MS", @"MS:1000055", @"continuous flow fast atom bombardment", @"Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix.", false));
            TermData.Add(CVID.MS_direct_inlet, new TermInfo(CVID.MS_direct_inlet, @"MS", @"MS:1000056", @"direct inlet", @"The sample is directly inserted into the ion source, usually on the end of a heatable probe.", false));
            TermData.Add(CVID.MS_electrospray_inlet, new TermInfo(CVID.MS_electrospray_inlet, @"MS", @"MS:1000057", @"electrospray inlet", @"Inlet used for introducing the liquid sample into an electrospray ionization source.", false));
            TermData.Add(CVID.MS_flow_injection_analysis, new TermInfo(CVID.MS_flow_injection_analysis, @"MS", @"MS:1000058", @"flow injection analysis", @"Sample is directly injected or infused into the ionization source.", false));
            TermData.Add(CVID.MS_inductively_coupled_plasma, new TermInfo(CVID.MS_inductively_coupled_plasma, @"MS", @"MS:1000059", @"inductively coupled plasma", @"A gas discharge ion source in which the energy to the plasma is supplied by electromagnetic induction.", false));
            TermData.Add(CVID.MS_infusion, new TermInfo(CVID.MS_infusion, @"MS", @"MS:1000060", @"infusion", @"The continuous flow of solution of a sample into the ionization source.", false));
            TermData.Add(CVID.MS_jet_separator, new TermInfo(CVID.MS_jet_separator, @"MS", @"MS:1000061", @"jet separator", @"A device that separates carrier gas from gaseous analyte molecules on the basis of diffusivity.", false));
            TermData.Add(CVID.MS_membrane_separator, new TermInfo(CVID.MS_membrane_separator, @"MS", @"MS:1000062", @"membrane separator", @"A device to separate carrier molecules from analyte molecules on the basis of ease of diffusion across a semipermeable membrane.", false));
            TermData.Add(CVID.MS_moving_belt, new TermInfo(CVID.MS_moving_belt, @"MS", @"MS:1000063", @"moving belt", @"Continuous moving surface in the form of a belt which passes through an ion source carrying analyte molecules.", false));
            TermData.Add(CVID.MS_moving_wire, new TermInfo(CVID.MS_moving_wire, @"MS", @"MS:1000064", @"moving wire", @"Continuous moving surface in the form of a wire which passes through an ion source carrying analyte molecules.", false));
            TermData.Add(CVID.MS_open_split, new TermInfo(CVID.MS_open_split, @"MS", @"MS:1000065", @"open split", @"A division of flowing stream of liquid into two streams.", false));
            TermData.Add(CVID.MS_particle_beam, new TermInfo(CVID.MS_particle_beam, @"MS", @"MS:1000066", @"particle beam", @"Method for generating ions from a solution of an analyte.", false));
            TermData.Add(CVID.MS_reservoir, new TermInfo(CVID.MS_reservoir, @"MS", @"MS:1000067", @"reservoir", @"A sample inlet method involving a reservoir.", false));
            TermData.Add(CVID.MS_septum, new TermInfo(CVID.MS_septum, @"MS", @"MS:1000068", @"septum", @"A disc composed of a flexible material that seals the entrance to the reservoir. Can also be entrance to the vacuum chamber.", false));
            TermData.Add(CVID.MS_thermospray_inlet, new TermInfo(CVID.MS_thermospray_inlet, @"MS", @"MS:1000069", @"thermospray inlet", @"A method for generating gas phase ions from a solution of an analyte by rapid heating of the sample.", false));
            TermData.Add(CVID.MS_atmospheric_pressure_chemical_ionization, new TermInfo(CVID.MS_atmospheric_pressure_chemical_ionization, @"MS", @"MS:1000070", @"atmospheric pressure chemical ionization", @"Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization.", false));
            TermData.Add(CVID.MS_chemical_ionization, new TermInfo(CVID.MS_chemical_ionization, @"MS", @"MS:1000071", @"chemical ionization", @"The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization.", false));
            TermData.Add(CVID.MS_Electronic_Ionization_OBSOLETE, new TermInfo(CVID.MS_Electronic_Ionization_OBSOLETE, @"MS", @"MS:1000072", @"Electronic Ionization", @"OBSOLETE The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended.", true));
            TermData.Add(CVID.MS_electrospray_ionization, new TermInfo(CVID.MS_electrospray_ionization, @"MS", @"MS:1000073", @"electrospray ionization", @"A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended.", false));
            TermData.Add(CVID.MS_fast_atom_bombardment_ionization, new TermInfo(CVID.MS_fast_atom_bombardment_ionization, @"MS", @"MS:1000074", @"fast atom bombardment ionization", @"The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization.", false));
            TermData.Add(CVID.MS_matrix_assisted_laser_desorption_ionization, new TermInfo(CVID.MS_matrix_assisted_laser_desorption_ionization, @"MS", @"MS:1000075", @"matrix-assisted laser desorption ionization", @"The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization.", false));
            TermData.Add(CVID.MS_negative_ion_mode_OBSOLETE, new TermInfo(CVID.MS_negative_ion_mode_OBSOLETE, @"MS", @"MS:1000076", @"negative ion mode", @"OBSOLETE.", true));
            TermData.Add(CVID.MS_positive_ion_mode_OBSOLETE, new TermInfo(CVID.MS_positive_ion_mode_OBSOLETE, @"MS", @"MS:1000077", @"positive ion mode", @"OBSOLETE.", true));
            TermData.Add(CVID.MS_axial_ejection_linear_ion_trap, new TermInfo(CVID.MS_axial_ejection_linear_ion_trap, @"MS", @"MS:1000078", @"axial ejection linear ion trap", @"A linear ion trap mass spectrometer where ions are ejected along the axis of the analyzer.", false));
            TermData.Add(CVID.MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer, new TermInfo(CVID.MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer, @"MS", @"MS:1000079", @"fourier transform ion cyclotron resonance mass spectrometer", @"A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z.", false));
            TermData.Add(CVID.MS_magnetic_sector, new TermInfo(CVID.MS_magnetic_sector, @"MS", @"MS:1000080", @"magnetic sector", @"A device that produces a magnetic field perpendicular to a charged particle beam that deflects the beam to an extent that is proportional to the particle momentum per unit charge. For a monoenergetic beam, the deflection is proportional to m/z.", false));
            TermData.Add(CVID.MS_quadrupole, new TermInfo(CVID.MS_quadrupole, @"MS", @"MS:1000081", @"quadrupole", @"A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.", false));
            TermData.Add(CVID.MS_quadrupole_ion_trap, new TermInfo(CVID.MS_quadrupole_ion_trap, @"MS", @"MS:1000082", @"quadrupole ion trap", @"Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.", false));
            TermData.Add(CVID.MS_radial_ejection_linear_ion_trap, new TermInfo(CVID.MS_radial_ejection_linear_ion_trap, @"MS", @"MS:1000083", @"radial ejection linear ion trap", @"A linear ion trap mass spectrometer where ions are ejected along the radius of the analyzer.", false));
            TermData.Add(CVID.MS_time_of_flight, new TermInfo(CVID.MS_time_of_flight, @"MS", @"MS:1000084", @"time-of-flight", @"Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy.", false));
            TermData.Add(CVID.MS_baseline, new TermInfo(CVID.MS_baseline, @"MS", @"MS:1000085", @"baseline", @"An attribute of resolution when recording the detector response in absence of the analyte.", false));
            TermData.Add(CVID.MS_full_width_at_half_maximum, new TermInfo(CVID.MS_full_width_at_half_maximum, @"MS", @"MS:1000086", @"full width at half-maximum", @"A measure of resolution represented as width of the peak at half peak height.", false));
            TermData.Add(CVID.MS_ten_percent_valley, new TermInfo(CVID.MS_ten_percent_valley, @"MS", @"MS:1000087", @"ten percent valley", @"An attribute of resolution when the ratio between adjacent signals is 10% of the signal height.", false));
            TermData.Add(CVID.MS_constant_OBSOLETE, new TermInfo(CVID.MS_constant_OBSOLETE, @"MS", @"MS:1000088", @"constant", @"OBSOLETE When resolution is constant with respect to m/z.", true));
            TermData.Add(CVID.MS_proportional_OBSOLETE, new TermInfo(CVID.MS_proportional_OBSOLETE, @"MS", @"MS:1000089", @"proportional", @"OBSOLETE When resolution is proportional with respect to m/z.", true));
            TermData.Add(CVID.MS_mass_scan_OBSOLETE, new TermInfo(CVID.MS_mass_scan_OBSOLETE, @"MS", @"MS:1000090", @"mass scan", @"OBSOLETE A variation of instrument where a selected mass is scanned.", true));
            TermData.Add(CVID.MS_selected_ion_detection_OBSOLETE, new TermInfo(CVID.MS_selected_ion_detection_OBSOLETE, @"MS", @"MS:1000091", @"selected ion detection", @"OBSOLETE Please see Single Ion Monitoring.", true));
            TermData.Add(CVID.MS_decreasing_m_z_scan, new TermInfo(CVID.MS_decreasing_m_z_scan, @"MS", @"MS:1000092", @"decreasing m/z scan", @"High to low direction in terms of m/z of the scan for scanning analyzers.", false));
            TermData.Add(CVID.MS_increasing_m_z_scan, new TermInfo(CVID.MS_increasing_m_z_scan, @"MS", @"MS:1000093", @"increasing m/z scan", @"Low to high direction in terms of m/z of the scan for scanning analyzers.", false));
            TermData.Add(CVID.MS_exponential, new TermInfo(CVID.MS_exponential, @"MS", @"MS:1000094", @"exponential", @"The mass scan is done in exponential mode.", false));
            TermData.Add(CVID.MS_linear_OBSOLETE, new TermInfo(CVID.MS_linear_OBSOLETE, @"MS", @"MS:1000095", @"linear", @"OBSOLETE The mass scan is done in linear mode.", true));
            TermData.Add(CVID.MS_quadratic, new TermInfo(CVID.MS_quadratic, @"MS", @"MS:1000096", @"quadratic", @"The mass scan is done in quadratic mode.", false));
            TermData.Add(CVID.MS_constant_neutral_mass_loss_OBSOLETE, new TermInfo(CVID.MS_constant_neutral_mass_loss_OBSOLETE, @"MS", @"MS:1000097", @"constant neutral mass loss", @"OBSOLETE A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.", true));
            TermData.Add(CVID.MS_multiple_ion_monitoring_OBSOLETE, new TermInfo(CVID.MS_multiple_ion_monitoring_OBSOLETE, @"MS", @"MS:1000098", @"multiple ion monitoring", @"OBSOLETE Data acquired when monitoring the ion current of a few specific m/z values. Remap to MS:1000205 -Selected Ion Monitoring.", true));
            TermData.Add(CVID.MS_multiple_reaction_monitoring_OBSOLETE, new TermInfo(CVID.MS_multiple_reaction_monitoring_OBSOLETE, @"MS", @"MS:1000099", @"multiple reaction monitoring", @"OBSOLETE This term is not recommended. See Selected Reaction Monitoring.", true));
            TermData.Add(CVID.MS_precursor_ion_scan_OBSOLETE, new TermInfo(CVID.MS_precursor_ion_scan_OBSOLETE, @"MS", @"MS:1000100", @"precursor ion scan", @"OBSOLETE The specific scan function or process that will record a precursor ion spectrum.", true));
            TermData.Add(CVID.MS_product_ion_scan_OBSOLETE, new TermInfo(CVID.MS_product_ion_scan_OBSOLETE, @"MS", @"MS:1000101", @"product ion scan", @"OBSOLETE The specific scan function or process that records product ion spectrum.", true));
            TermData.Add(CVID.MS_single_ion_monitoring_OBSOLETE, new TermInfo(CVID.MS_single_ion_monitoring_OBSOLETE, @"MS", @"MS:1000102", @"single ion monitoring", @"OBSOLETE The operation of a mass spectrometer to monitor a single ion rather than scanning entire mass spectrum.", true));
            TermData.Add(CVID.MS_single_reaction_monitoring_OBSOLETE, new TermInfo(CVID.MS_single_reaction_monitoring_OBSOLETE, @"MS", @"MS:1000103", @"single reaction monitoring", @"OBSOLETE This term is not recommended. See Selected Reaction Monitoring.", true));
            TermData.Add(CVID.MS_None____OBSOLETE, new TermInfo(CVID.MS_None____OBSOLETE, @"MS", @"MS:1000104", @"None ??", @"OBSOLETE None.", true));
            TermData.Add(CVID.MS_reflectron_off, new TermInfo(CVID.MS_reflectron_off, @"MS", @"MS:1000105", @"reflectron off", @"Reflectron is off.", false));
            TermData.Add(CVID.MS_reflectron_on, new TermInfo(CVID.MS_reflectron_on, @"MS", @"MS:1000106", @"reflectron on", @"Reflectron is on.", false));
            TermData.Add(CVID.MS_channeltron, new TermInfo(CVID.MS_channeltron, @"MS", @"MS:1000107", @"channeltron", @"A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse.", false));
            TermData.Add(CVID.MS_conversion_dynode_electron_multiplier, new TermInfo(CVID.MS_conversion_dynode_electron_multiplier, @"MS", @"MS:1000108", @"conversion dynode electron multiplier", @"A surface that is held at high potential so that ions striking the surface produce electrons that are subsequently detected.", false));
            TermData.Add(CVID.MS_conversion_dynode_photomultiplier, new TermInfo(CVID.MS_conversion_dynode_photomultiplier, @"MS", @"MS:1000109", @"conversion dynode photomultiplier", @"A detector in which ions strike a conversion dynode to produce electrons that in turn generate photons through a phosphorescent screen that are detected by a photomultiplier.", false));
            TermData.Add(CVID.MS_daly_detector, new TermInfo(CVID.MS_daly_detector, @"MS", @"MS:1000110", @"daly detector", @"Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector.", false));
            TermData.Add(CVID.MS_electron_multiplier_tube, new TermInfo(CVID.MS_electron_multiplier_tube, @"MS", @"MS:1000111", @"electron multiplier tube", @"A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons.", false));
            TermData.Add(CVID.MS_faraday_cup, new TermInfo(CVID.MS_faraday_cup, @"MS", @"MS:1000112", @"faraday cup", @"A conducting cup or chamber that intercepts a charged particle beam and is electrically connected to a current measuring device.", false));
            TermData.Add(CVID.MS_focal_plane_array, new TermInfo(CVID.MS_focal_plane_array, @"MS", @"MS:1000113", @"focal plane array", @"An array of detectors for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.", false));
            TermData.Add(CVID.MS_microchannel_plate_detector, new TermInfo(CVID.MS_microchannel_plate_detector, @"MS", @"MS:1000114", @"microchannel plate detector", @"A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate.", false));
            TermData.Add(CVID.MS_multi_collector, new TermInfo(CVID.MS_multi_collector, @"MS", @"MS:1000115", @"multi-collector", @"A detector system commonly used in inductively coupled plasma mass spectrometers.", false));
            TermData.Add(CVID.MS_photomultiplier, new TermInfo(CVID.MS_photomultiplier, @"MS", @"MS:1000116", @"photomultiplier", @"A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected.", false));
            TermData.Add(CVID.MS_analog_digital_converter, new TermInfo(CVID.MS_analog_digital_converter, @"MS", @"MS:1000117", @"analog-digital converter", @"Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers.", false));
            TermData.Add(CVID.MS_pulse_counting, new TermInfo(CVID.MS_pulse_counting, @"MS", @"MS:1000118", @"pulse counting", @"Definition to do.", false));
            TermData.Add(CVID.MS_time_digital_converter, new TermInfo(CVID.MS_time_digital_converter, @"MS", @"MS:1000119", @"time-digital converter", @"A device for converting a signal of sporadic pluses into a digital representation of their time indices.", false));
            TermData.Add(CVID.MS_transient_recorder, new TermInfo(CVID.MS_transient_recorder, @"MS", @"MS:1000120", @"transient recorder", @"A detector acquisition mode used for detecting transient signals.", false));
            TermData.Add(CVID.MS_SCIEX_instrument_model, new TermInfo(CVID.MS_SCIEX_instrument_model, @"MS", @"MS:1000121", @"SCIEX instrument model", @"The brand of instruments from the joint venture between Applied Biosystems and MDS Analytical Technologies (formerly MDS SCIEX). Previously branded as \ Applied Biosystems|MDS SCIEX\ .", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_instrument_model, new TermInfo(CVID.MS_Bruker_Daltonics_instrument_model, @"MS", @"MS:1000122", @"Bruker Daltonics instrument model", @"Bruker Daltonics' instrument model.", false));
            TermData.Add(CVID.MS_IonSpec_instrument_model, new TermInfo(CVID.MS_IonSpec_instrument_model, @"MS", @"MS:1000123", @"IonSpec instrument model", @"IonSpec corporation instrument model.", false));
            TermData.Add(CVID.MS_Shimadzu_instrument_model, new TermInfo(CVID.MS_Shimadzu_instrument_model, @"MS", @"MS:1000124", @"Shimadzu instrument model", @"Shimadzu corporation instrument model.", false));
            TermData.Add(CVID.MS_Thermo_Finnigan_instrument_model, new TermInfo(CVID.MS_Thermo_Finnigan_instrument_model, @"MS", @"MS:1000125", @"Thermo Finnigan instrument model", @"ThermoFinnigan from Thermo Electron Corporation instrument model.", false));
            TermData.Add(CVID.MS_Waters_instrument_model, new TermInfo(CVID.MS_Waters_instrument_model, @"MS", @"MS:1000126", @"Waters instrument model", @"Waters Corporation instrument model.", false));
            TermData.Add(CVID.MS_centroid_spectrum, new TermInfo(CVID.MS_centroid_spectrum, @"MS", @"MS:1000127", @"centroid spectrum", @"Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset.", false));
            TermData.Add(CVID.MS_profile_spectrum, new TermInfo(CVID.MS_profile_spectrum, @"MS", @"MS:1000128", @"profile spectrum", @"A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.", false));
            TermData.Add(CVID.MS_negative_scan, new TermInfo(CVID.MS_negative_scan, @"MS", @"MS:1000129", @"negative scan", @"Polarity of the scan is negative.", false));
            TermData.Add(CVID.MS_positive_scan, new TermInfo(CVID.MS_positive_scan, @"MS", @"MS:1000130", @"positive scan", @"Polarity of the scan is positive.", false));
            TermData.Add(CVID.MS_number_of_detector_counts, new TermInfo(CVID.MS_number_of_detector_counts, @"MS", @"MS:1000131", @"number of detector counts", @"The number of counted events observed in one or a group of elements of a detector.", false));
            TermData.Add(CVID.MS_percent_of_base_peak, new TermInfo(CVID.MS_percent_of_base_peak, @"MS", @"MS:1000132", @"percent of base peak", @"The magnitude of a peak or measurement element expressed in terms of the percentage of the magnitude of the base peak intensity.", false));
            TermData.Add(CVID.MS_collision_induced_dissociation, new TermInfo(CVID.MS_collision_induced_dissociation, @"MS", @"MS:1000133", @"collision-induced dissociation", @"The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended.", false));
            TermData.Add(CVID.MS_plasma_desorption, new TermInfo(CVID.MS_plasma_desorption, @"MS", @"MS:1000134", @"plasma desorption", @"The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.", false));
            TermData.Add(CVID.MS_post_source_decay, new TermInfo(CVID.MS_post_source_decay, @"MS", @"MS:1000135", @"post-source decay", @"A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra.", false));
            TermData.Add(CVID.MS_surface_induced_dissociation, new TermInfo(CVID.MS_surface_induced_dissociation, @"MS", @"MS:1000136", @"surface-induced dissociation", @"Fragmentation that results from the collision of an ion with a surface.", false));
            TermData.Add(CVID.MS_electron_volt_OBSOLETE, new TermInfo(CVID.MS_electron_volt_OBSOLETE, @"MS", @"MS:1000137", @"electron volt", @"OBSOLETE A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J.", true));
            TermData.Add(CVID.MS_normalized_collision_energy, new TermInfo(CVID.MS_normalized_collision_energy, @"MS", @"MS:1000138", @"normalized collision energy", @"Instrument setting, expressed in percent, for adjusting collisional energies of ions in an effort to provide equivalent excitation of all ions.", false));
            TermData.Add(CVID.MS_4000_QTRAP, new TermInfo(CVID.MS_4000_QTRAP, @"MS", @"MS:1000139", @"4000 QTRAP", @"Applied Biosystems/MDS SCIEX Q 4000 TRAP MS.", false));
            TermData.Add(CVID.MS_4700_Proteomics_Analyzer, new TermInfo(CVID.MS_4700_Proteomics_Analyzer, @"MS", @"MS:1000140", @"4700 Proteomics Analyzer", @"Applied Biosystems/MDS SCIEX 4700 Proteomics Analyzer MS.", false));
            TermData.Add(CVID.MS_apex_IV, new TermInfo(CVID.MS_apex_IV, @"MS", @"MS:1000141", @"apex IV", @"Bruker Daltonics' apex IV: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.", false));
            TermData.Add(CVID.MS_apex_Q, new TermInfo(CVID.MS_apex_Q, @"MS", @"MS:1000142", @"apex Q", @"Bruker Daltonics' apex Q: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.", false));
            TermData.Add(CVID.MS_API_150EX, new TermInfo(CVID.MS_API_150EX, @"MS", @"MS:1000143", @"API 150EX", @"Applied Biosystems/MDS SCIEX API 150EX MS.", false));
            TermData.Add(CVID.MS_API_150EX_Prep, new TermInfo(CVID.MS_API_150EX_Prep, @"MS", @"MS:1000144", @"API 150EX Prep", @"Applied Biosystems/MDS SCIEX API 150EX Prep MS.", false));
            TermData.Add(CVID.MS_API_2000, new TermInfo(CVID.MS_API_2000, @"MS", @"MS:1000145", @"API 2000", @"Applied Biosystems/MDS SCIEX API 2000 MS.", false));
            TermData.Add(CVID.MS_API_3000, new TermInfo(CVID.MS_API_3000, @"MS", @"MS:1000146", @"API 3000", @"Applied Biosystems/MDS SCIEX API 3000 MS.", false));
            TermData.Add(CVID.MS_API_4000, new TermInfo(CVID.MS_API_4000, @"MS", @"MS:1000147", @"API 4000", @"Applied Biosystems/MDS SCIEX API 4000 MS.", false));
            TermData.Add(CVID.MS_autoflex_II, new TermInfo(CVID.MS_autoflex_II, @"MS", @"MS:1000148", @"autoflex II", @"Bruker Daltonics' autoflex II: MALDI TOF.", false));
            TermData.Add(CVID.MS_autoflex_TOF_TOF, new TermInfo(CVID.MS_autoflex_TOF_TOF, @"MS", @"MS:1000149", @"autoflex TOF/TOF", @"Bruker Daltonics' autoflex TOF/TOF MS: MALDI TOF.", false));
            TermData.Add(CVID.MS_Auto_Spec_Ultima_NT, new TermInfo(CVID.MS_Auto_Spec_Ultima_NT, @"MS", @"MS:1000150", @"Auto Spec Ultima NT", @"Waters magnetic sector based AutoSpec Ultima NT MS.", false));
            TermData.Add(CVID.MS_BioTOF_II, new TermInfo(CVID.MS_BioTOF_II, @"MS", @"MS:1000151", @"BioTOF II", @"Bruker Daltonics' BioTOF II: ESI TOF.", false));
            TermData.Add(CVID.MS_BioTOF_Q, new TermInfo(CVID.MS_BioTOF_Q, @"MS", @"MS:1000152", @"BioTOF-Q", @"Bruker Daltonics' BioTOF-Q: ESI Q-TOF.", false));
            TermData.Add(CVID.MS_DELTA_plusAdvantage, new TermInfo(CVID.MS_DELTA_plusAdvantage, @"MS", @"MS:1000153", @"DELTA plusAdvantage", @"ThermoFinnigan DELTA plusAdvantage MS.", false));
            TermData.Add(CVID.MS_DELTAplusXP, new TermInfo(CVID.MS_DELTAplusXP, @"MS", @"MS:1000154", @"DELTAplusXP", @"ThermoFinnigan DELTAplusXP MS.", false));
            TermData.Add(CVID.MS_ELEMENT2_OBSOLETE, new TermInfo(CVID.MS_ELEMENT2_OBSOLETE, @"MS", @"MS:1000155", @"ELEMENT2", @"OBSOLETE ThermoFinnigan ELEMENT2 MS.", true));
            TermData.Add(CVID.MS_esquire_4000, new TermInfo(CVID.MS_esquire_4000, @"MS", @"MS:1000156", @"esquire 4000", @"Bruker Daltonics' esquire 4000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_esquire_6000, new TermInfo(CVID.MS_esquire_6000, @"MS", @"MS:1000157", @"esquire 6000", @"Bruker Daltonics' esquire 6000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_explorer, new TermInfo(CVID.MS_explorer, @"MS", @"MS:1000158", @"explorer", @"IonSpec Explorer MS.", false));
            TermData.Add(CVID.MS_GCT, new TermInfo(CVID.MS_GCT, @"MS", @"MS:1000159", @"GCT", @"Waters oa-ToF based GCT.", false));
            TermData.Add(CVID.MS_HCT, new TermInfo(CVID.MS_HCT, @"MS", @"MS:1000160", @"HCT", @"Bruker Daltonics' HCT: ESI Q-TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_HCTplus, new TermInfo(CVID.MS_HCTplus, @"MS", @"MS:1000161", @"HCTplus", @"Bruker Daltonics' HCTplus: ESI Q-TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_HiRes_ESI, new TermInfo(CVID.MS_HiRes_ESI, @"MS", @"MS:1000162", @"HiRes ESI", @"IonSpec HiResESI MS.", false));
            TermData.Add(CVID.MS_HiRes_MALDI, new TermInfo(CVID.MS_HiRes_MALDI, @"MS", @"MS:1000163", @"HiRes MALDI", @"IonSpec HiResMALDI MS.", false));
            TermData.Add(CVID.MS_IsoPrime, new TermInfo(CVID.MS_IsoPrime, @"MS", @"MS:1000164", @"IsoPrime", @"Waters IsoPrime MS.", false));
            TermData.Add(CVID.MS_IsoProbe, new TermInfo(CVID.MS_IsoProbe, @"MS", @"MS:1000165", @"IsoProbe", @"Waters IsoProbe MS.", false));
            TermData.Add(CVID.MS_IsoProbe_T, new TermInfo(CVID.MS_IsoProbe_T, @"MS", @"MS:1000166", @"IsoProbe T", @"Waters IsoProbe T MS.", false));
            TermData.Add(CVID.MS_LCQ_Advantage, new TermInfo(CVID.MS_LCQ_Advantage, @"MS", @"MS:1000167", @"LCQ Advantage", @"ThermoFinnigan LCQ Advantage MS.", false));
            TermData.Add(CVID.MS_LCQ_Classic, new TermInfo(CVID.MS_LCQ_Classic, @"MS", @"MS:1000168", @"LCQ Classic", @"ThermoFinnigan LCQ Classic MS.", false));
            TermData.Add(CVID.MS_LCQ_Deca_XP_Plus, new TermInfo(CVID.MS_LCQ_Deca_XP_Plus, @"MS", @"MS:1000169", @"LCQ Deca XP Plus", @"ThermoFinnigan LCQ Deca XP Plus MS.", false));
            TermData.Add(CVID.MS_M_LDI_L, new TermInfo(CVID.MS_M_LDI_L, @"MS", @"MS:1000170", @"M@LDI L", @"Waters oa-ToF based MALDI L.", false));
            TermData.Add(CVID.MS_M_LDI_LR, new TermInfo(CVID.MS_M_LDI_LR, @"MS", @"MS:1000171", @"M@LDI LR", @"Waters oa-ToF based MALDI LR.", false));
            TermData.Add(CVID.MS_MAT253, new TermInfo(CVID.MS_MAT253, @"MS", @"MS:1000172", @"MAT253", @"ThermoFinnigan MAT253 MS.", false));
            TermData.Add(CVID.MS_MAT900XP, new TermInfo(CVID.MS_MAT900XP, @"MS", @"MS:1000173", @"MAT900XP", @"ThermoFinnigan MAT900XP MS.", false));
            TermData.Add(CVID.MS_MAT900XP_Trap, new TermInfo(CVID.MS_MAT900XP_Trap, @"MS", @"MS:1000174", @"MAT900XP Trap", @"ThermoFinnigan MAT900XP Trap MS.", false));
            TermData.Add(CVID.MS_MAT95XP, new TermInfo(CVID.MS_MAT95XP, @"MS", @"MS:1000175", @"MAT95XP", @"ThermoFinnigan MAT95XP MS.", false));
            TermData.Add(CVID.MS_MAT95XP_Trap, new TermInfo(CVID.MS_MAT95XP_Trap, @"MS", @"MS:1000176", @"MAT95XP Trap", @"ThermoFinnigan MAT95XP Trap MS.", false));
            TermData.Add(CVID.MS_microflex, new TermInfo(CVID.MS_microflex, @"MS", @"MS:1000177", @"microflex", @"Bruker Daltonics' microflex: MALDI TOF.", false));
            TermData.Add(CVID.MS_microTOF_LC, new TermInfo(CVID.MS_microTOF_LC, @"MS", @"MS:1000178", @"microTOF LC", @"Bruker Daltonics' microTOF LC: ESI TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_neptune, new TermInfo(CVID.MS_neptune, @"MS", @"MS:1000179", @"neptune", @"ThermoFinnigan NEPTUNE MS.", false));
            TermData.Add(CVID.MS_NG_5400, new TermInfo(CVID.MS_NG_5400, @"MS", @"MS:1000180", @"NG-5400", @"Waters NG-5400 MS.", false));
            TermData.Add(CVID.MS_OMEGA, new TermInfo(CVID.MS_OMEGA, @"MS", @"MS:1000181", @"OMEGA", @"IonSpec OMEGA MS.", false));
            TermData.Add(CVID.MS_OMEGA_2001, new TermInfo(CVID.MS_OMEGA_2001, @"MS", @"MS:1000182", @"OMEGA-2001", @"IonSpec OMEGA-2001 MS.", false));
            TermData.Add(CVID.MS_OmniFlex, new TermInfo(CVID.MS_OmniFlex, @"MS", @"MS:1000183", @"OmniFlex", @"Bruker Daltonics' OmniFlex: MALDI TOF.", false));
            TermData.Add(CVID.MS_Platform_ICP, new TermInfo(CVID.MS_Platform_ICP, @"MS", @"MS:1000184", @"Platform ICP", @"Waters Platform ICP MS.", false));
            TermData.Add(CVID.MS_PolarisQ, new TermInfo(CVID.MS_PolarisQ, @"MS", @"MS:1000185", @"PolarisQ", @"ThermoFinnigan PolarisQ MS.", false));
            TermData.Add(CVID.MS_proteomics_solution_1, new TermInfo(CVID.MS_proteomics_solution_1, @"MS", @"MS:1000186", @"proteomics solution 1", @"Applied Biosystems/MDS SCIEX Proteomics Solution 1 MS.", false));
            TermData.Add(CVID.MS_Q_TRAP, new TermInfo(CVID.MS_Q_TRAP, @"MS", @"MS:1000187", @"Q TRAP", @"Applied Biosystems/MDS SCIEX Q TRAP MS.", false));
            TermData.Add(CVID.MS_Q_Tof_micro, new TermInfo(CVID.MS_Q_Tof_micro, @"MS", @"MS:1000188", @"Q-Tof micro", @"Waters oa-ToF based Q-Tof micro.", false));
            TermData.Add(CVID.MS_Q_Tof_Ultima, new TermInfo(CVID.MS_Q_Tof_Ultima, @"MS", @"MS:1000189", @"Q-Tof Ultima", @"Waters oa-ToF based Q-Tof Ultima.", false));
            TermData.Add(CVID.MS_QSTAR, new TermInfo(CVID.MS_QSTAR, @"MS", @"MS:1000190", @"QSTAR", @"Applied Biosystems/MDS SCIEX QSTAR MS.", false));
            TermData.Add(CVID.MS_quattro_micro, new TermInfo(CVID.MS_quattro_micro, @"MS", @"MS:1000191", @"quattro micro", @"Waters (triple) quadrupole based micro.", false));
            TermData.Add(CVID.MS_Quattro_Ultima, new TermInfo(CVID.MS_Quattro_Ultima, @"MS", @"MS:1000192", @"Quattro Ultima", @"Waters (triple) quadrupole based Ultima.", false));
            TermData.Add(CVID.MS_Surveyor_MSQ, new TermInfo(CVID.MS_Surveyor_MSQ, @"MS", @"MS:1000193", @"Surveyor MSQ", @"ThermoFinnigan Surveyor MSQ MS.", false));
            TermData.Add(CVID.MS_SymBiot_I, new TermInfo(CVID.MS_SymBiot_I, @"MS", @"MS:1000194", @"SymBiot I", @"Applied Biosystems/MDS SCIEX SymBiot I MS.", false));
            TermData.Add(CVID.MS_SymBiot_XVI, new TermInfo(CVID.MS_SymBiot_XVI, @"MS", @"MS:1000195", @"SymBiot XVI", @"Applied Biosystems/MDS SCIEX SymBiot XVI MS.", false));
            TermData.Add(CVID.MS_TEMPUS_TOF, new TermInfo(CVID.MS_TEMPUS_TOF, @"MS", @"MS:1000196", @"TEMPUS TOF", @"ThermoFinnigan TEMPUS TOF MS.", false));
            TermData.Add(CVID.MS_TRACE_DSQ, new TermInfo(CVID.MS_TRACE_DSQ, @"MS", @"MS:1000197", @"TRACE DSQ", @"ThermoFinnigan TRACE DSQ MS.", false));
            TermData.Add(CVID.MS_TRITON, new TermInfo(CVID.MS_TRITON, @"MS", @"MS:1000198", @"TRITON", @"ThermoFinnigan TRITON MS.", false));
            TermData.Add(CVID.MS_TSQ_Quantum, new TermInfo(CVID.MS_TSQ_Quantum, @"MS", @"MS:1000199", @"TSQ Quantum", @"ThermoFinnigan TSQ Quantum MS.", false));
            TermData.Add(CVID.MS_ultima, new TermInfo(CVID.MS_ultima, @"MS", @"MS:1000200", @"ultima", @"IonSpec Ultima MS.", false));
            TermData.Add(CVID.MS_ultraflex, new TermInfo(CVID.MS_ultraflex, @"MS", @"MS:1000201", @"ultraflex", @"Bruker Daltonics' ultraflex: MALDI TOF.", false));
            TermData.Add(CVID.MS_ultraflex_TOF_TOF, new TermInfo(CVID.MS_ultraflex_TOF_TOF, @"MS", @"MS:1000202", @"ultraflex TOF/TOF", @"Bruker Daltonics' ultraflex TOF/TOF: MALDI TOF.", false));
            TermData.Add(CVID.MS_Voyager_DE_PRO, new TermInfo(CVID.MS_Voyager_DE_PRO, @"MS", @"MS:1000203", @"Voyager-DE PRO", @"Applied Biosystems/MDS SCIEX Voyager-DE PRO MS.", false));
            TermData.Add(CVID.MS_Voyager_DE_STR, new TermInfo(CVID.MS_Voyager_DE_STR, @"MS", @"MS:1000204", @"Voyager-DE STR", @"Applied Biosystems/MDS SCIEX Voyager-DE STR MS.", false));
            TermData.Add(CVID.MS_selected_ion_monitoring, new TermInfo(CVID.MS_selected_ion_monitoring, @"MS", @"MS:1000205", @"selected ion monitoring", @"The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.", false));
            TermData.Add(CVID.MS_selected_reaction_monitoring, new TermInfo(CVID.MS_selected_reaction_monitoring, @"MS", @"MS:1000206", @"selected reaction monitoring", @"Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space.", false));
            TermData.Add(CVID.MS_accurate_mass_OBSOLETE, new TermInfo(CVID.MS_accurate_mass_OBSOLETE, @"MS", @"MS:1000207", @"accurate mass", @"OBSOLETE An experimentally determined mass that is can be to determine a unique elemental formula. For ions less than 200 u, a measurement with 5 ppm accuracy is sufficient to determine the elemental composition.", true));
            TermData.Add(CVID.MS_average_mass_OBSOLETE, new TermInfo(CVID.MS_average_mass_OBSOLETE, @"MS", @"MS:1000208", @"average mass", @"OBSOLETE The mass of an ion or molecule calculated using the average mass of each element weighted for its natural isotopic abundance.", true));
            TermData.Add(CVID.MS_appearance_energy_OBSOLETE, new TermInfo(CVID.MS_appearance_energy_OBSOLETE, @"MS", @"MS:1000209", @"appearance energy", @"OBSOLETE The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended.", true));
            TermData.Add(CVID.MS_base_peak, new TermInfo(CVID.MS_base_peak, @"MS", @"MS:1000210", @"base peak", @"The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures.", false));
            TermData.Add(CVID.MS_OBSOLETE_charge_number_OBSOLETE, new TermInfo(CVID.MS_OBSOLETE_charge_number_OBSOLETE, @"MS", @"MS:1000211", @"OBSOLETE charge number", @"OBSOLETE The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state.", true));
            TermData.Add(CVID.MS_dalton_OBSOLETE, new TermInfo(CVID.MS_dalton_OBSOLETE, @"MS", @"MS:1000212", @"dalton", @"OBSOLETE A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg.", true));
            TermData.Add(CVID.MS_electron_affinity_OBSOLETE, new TermInfo(CVID.MS_electron_affinity_OBSOLETE, @"MS", @"MS:1000213", @"electron affinity", @"OBSOLETE The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy.", true));
            TermData.Add(CVID.MS_electron_energy_obsolete_OBSOLETE, new TermInfo(CVID.MS_electron_energy_obsolete_OBSOLETE, @"MS", @"MS:1000214", @"electron energy obsolete", @"OBSOLETE The potential difference through which electrons are accelerated before they are used to bring about electron ionization.", true));
            TermData.Add(CVID.MS_exact_mass_OBSOLETE, new TermInfo(CVID.MS_exact_mass_OBSOLETE, @"MS", @"MS:1000215", @"exact mass", @"OBSOLETE The calculated mass of an ion or molecule containing a single isotope of each atom.", true));
            TermData.Add(CVID.MS_field_free_region, new TermInfo(CVID.MS_field_free_region, @"MS", @"MS:1000216", @"field-free region", @"A section of a mass spectrometer in which there are no electric or magnetic fields.", false));
            TermData.Add(CVID.MS_ionization_cross_section_OBSOLETE, new TermInfo(CVID.MS_ionization_cross_section_OBSOLETE, @"MS", @"MS:1000217", @"ionization cross section", @"OBSOLETE A measure of the probability that a given ionization process will occur when an atom or molecule interacts with a photon, electron, atom or molecule.", true));
            TermData.Add(CVID.MS_ionization_efficiency_OBSOLETE, new TermInfo(CVID.MS_ionization_efficiency_OBSOLETE, @"MS", @"MS:1000218", @"ionization efficiency", @"OBSOLETE The ratio of the number of ions formed to the number of electrons, molecules or photons used.", true));
            TermData.Add(CVID.MS_ionization_energy_OBSOLETE, new TermInfo(CVID.MS_ionization_energy_OBSOLETE, @"MS", @"MS:1000219", @"ionization energy", @"OBSOLETE The minimum energy required to remove an electron from an atom or molecule to produce a positive ion.", true));
            TermData.Add(CVID.MS_isotope_dilution_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_isotope_dilution_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000220", @"isotope dilution mass spectrometry", @"OBSOLETE A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard.", true));
            TermData.Add(CVID.MS_magnetic_deflection, new TermInfo(CVID.MS_magnetic_deflection, @"MS", @"MS:1000221", @"magnetic deflection", @"The deflection of charged particles in a magnetic field due to a force equal to qvxB where q is the particle charge, v its velocity and B the magnetic field. Magnetic deflection of an ion beam is used for m/z separation in a magnetic sector mass spectrometer.", false));
            TermData.Add(CVID.MS_mass_defect_OBSOLETE, new TermInfo(CVID.MS_mass_defect_OBSOLETE, @"MS", @"MS:1000222", @"mass defect", @"OBSOLETE The difference between the monoisotopic and nominal mass of a molecule or atom.", true));
            TermData.Add(CVID.MS_mass_number_OBSOLETE, new TermInfo(CVID.MS_mass_number_OBSOLETE, @"MS", @"MS:1000223", @"mass number", @"OBSOLETE The sum of the protons and neutrons in an atom, molecule or ion.", true));
            TermData.Add(CVID.MS_molecular_mass, new TermInfo(CVID.MS_molecular_mass, @"MS", @"MS:1000224", @"molecular mass", @"Mass of a molecule measured in unified atomic mass units (u or Da).", false));
            TermData.Add(CVID.MS_monoisotopic_mass_OBSOLETE, new TermInfo(CVID.MS_monoisotopic_mass_OBSOLETE, @"MS", @"MS:1000225", @"monoisotopic mass", @"OBSOLETE The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element.", true));
            TermData.Add(CVID.MS_molecular_beam_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_molecular_beam_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000226", @"molecular beam mass spectrometry", @"OBSOLETE A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam.", true));
            TermData.Add(CVID.MS_multiphoton_ionization, new TermInfo(CVID.MS_multiphoton_ionization, @"MS", @"MS:1000227", @"multiphoton ionization", @"Photoionization of an atom or molecule in which in two or more photons are absorbed.", false));
            TermData.Add(CVID.MS_nitrogen_rule_OBSOLETE, new TermInfo(CVID.MS_nitrogen_rule_OBSOLETE, @"MS", @"MS:1000228", @"nitrogen rule", @"OBSOLETE An organic molecule containing the elements C, H, O, S, P, or halogen has an odd nominal mass if it contains an odd number of nitrogen atoms.", true));
            TermData.Add(CVID.MS_nominal_mass_OBSOLETE, new TermInfo(CVID.MS_nominal_mass_OBSOLETE, @"MS", @"MS:1000229", @"nominal mass", @"OBSOLETE The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element rounded to the nearest integer value.", true));
            TermData.Add(CVID.MS_odd_electron_rule_OBSOLETE, new TermInfo(CVID.MS_odd_electron_rule_OBSOLETE, @"MS", @"MS:1000230", @"odd-electron rule", @"OBSOLETE Odd-electron ions may dissociate to form either odd or even-electron ions, whereas even-electron ions generally form even-electron fragment ions.", true));
            TermData.Add(CVID.MS_peak, new TermInfo(CVID.MS_peak, @"MS", @"MS:1000231", @"peak", @"A localized region of relatively large ion signal in a mass spectrum. Although peaks are often associated with particular ions, the terms peak and ion should not be used interchangeably.", false));
            TermData.Add(CVID.MS_peak_intensity_OBSOLETE, new TermInfo(CVID.MS_peak_intensity_OBSOLETE, @"MS", @"MS:1000232", @"peak intensity", @"OBSOLETE The height or area of a peak in a mass spectrum.", true));
            TermData.Add(CVID.MS_proton_affinity_OBSOLETE, new TermInfo(CVID.MS_proton_affinity_OBSOLETE, @"MS", @"MS:1000233", @"proton affinity", @"OBSOLETE The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ ->", true));
            TermData.Add(CVID.MS_mass_resolving_power_OBSOLETE, new TermInfo(CVID.MS_mass_resolving_power_OBSOLETE, @"MS", @"MS:1000234", @"mass resolving power", @"OBSOLETE In a mass spectrum, the observed mass divided by the difference between two masses that can be separated. The method by which delta m was obtained and the mass at which the measurement was made should be reported.", true));
            TermData.Add(CVID.MS_total_ion_current_chromatogram, new TermInfo(CVID.MS_total_ion_current_chromatogram, @"MS", @"MS:1000235", @"total ion current chromatogram", @"Representation of the total ion current detected in each of a series of mass spectra versus time.", false));
            TermData.Add(CVID.MS_transmission, new TermInfo(CVID.MS_transmission, @"MS", @"MS:1000236", @"transmission", @"The ratio of the number of ions leaving a region of a mass spectrometer to the number entering that region.", false));
            TermData.Add(CVID.MS_unified_atomic_mass_unit_OBSOLETE, new TermInfo(CVID.MS_unified_atomic_mass_unit_OBSOLETE, @"MS", @"MS:1000237", @"unified atomic mass unit", @"OBSOLETE A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg.", true));
            TermData.Add(CVID.MS_accelerator_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_accelerator_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000238", @"accelerator mass spectrometry", @"OBSOLETE A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy.", true));
            TermData.Add(CVID.MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization, new TermInfo(CVID.MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization, @"MS", @"MS:1000239", @"atmospheric pressure matrix-assisted laser desorption ionization", @"Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer.", false));
            TermData.Add(CVID.MS_atmospheric_pressure_ionization, new TermInfo(CVID.MS_atmospheric_pressure_ionization, @"MS", @"MS:1000240", @"atmospheric pressure ionization", @"Any ionization process in which ions are formed in the gas phase at atmospheric pressure.", false));
            TermData.Add(CVID.MS_Atmostpheric_Pressure_Photoionization_OBSOLETE, new TermInfo(CVID.MS_Atmostpheric_Pressure_Photoionization_OBSOLETE, @"MS", @"MS:1000241", @"Atmostpheric Pressure Photoionization", @"OBSOLETE Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.", true));
            TermData.Add(CVID.MS_blackbody_infrared_radiative_dissociation, new TermInfo(CVID.MS_blackbody_infrared_radiative_dissociation, @"MS", @"MS:1000242", @"blackbody infrared radiative dissociation", @"A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation.", false));
            TermData.Add(CVID.MS_charge_remote_fragmentation_OBSOLETE, new TermInfo(CVID.MS_charge_remote_fragmentation_OBSOLETE, @"MS", @"MS:1000243", @"charge-remote fragmentation", @"OBSOLETE A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site.", true));
            TermData.Add(CVID.MS_consecutive_reaction_monitoring_OBSOLETE, new TermInfo(CVID.MS_consecutive_reaction_monitoring_OBSOLETE, @"MS", @"MS:1000244", @"consecutive reaction monitoring", @"OBSOLETE MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.", true));
            TermData.Add(CVID.MS_charge_stripping, new TermInfo(CVID.MS_charge_stripping, @"MS", @"MS:1000245", @"charge stripping", @"The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion.", false));
            TermData.Add(CVID.MS_delayed_extraction, new TermInfo(CVID.MS_delayed_extraction, @"MS", @"MS:1000246", @"delayed extraction", @"The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_desorption_ionization, new TermInfo(CVID.MS_desorption_ionization, @"MS", @"MS:1000247", @"desorption ionization", @"The formation of ions from a solid or liquid material after the rapid vaporization of that sample.", false));
            TermData.Add(CVID.MS_direct_insertion_probe, new TermInfo(CVID.MS_direct_insertion_probe, @"MS", @"MS:1000248", @"direct insertion probe", @"A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization.", false));
            TermData.Add(CVID.MS_direct_liquid_introduction, new TermInfo(CVID.MS_direct_liquid_introduction, @"MS", @"MS:1000249", @"direct liquid introduction", @"The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization.", false));
            TermData.Add(CVID.MS_electron_capture_dissociation, new TermInfo(CVID.MS_electron_capture_dissociation, @"MS", @"MS:1000250", @"electron capture dissociation", @"A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments.", false));
            TermData.Add(CVID.MS_even_electron_ion_OBSOLETE, new TermInfo(CVID.MS_even_electron_ion_OBSOLETE, @"MS", @"MS:1000251", @"even-electron ion", @"OBSOLETE An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state.", true));
            TermData.Add(CVID.MS_electron_induced_excitation_in_organics_OBSOLETE, new TermInfo(CVID.MS_electron_induced_excitation_in_organics_OBSOLETE, @"MS", @"MS:1000252", @"electron-induced excitation in organics", @"OBSOLETE The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion.", true));
            TermData.Add(CVID.MS_electron_multiplier, new TermInfo(CVID.MS_electron_multiplier, @"MS", @"MS:1000253", @"electron multiplier", @"A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons.", false));
            TermData.Add(CVID.MS_electrostatic_energy_analyzer, new TermInfo(CVID.MS_electrostatic_energy_analyzer, @"MS", @"MS:1000254", @"electrostatic energy analyzer", @"A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time.", false));
            TermData.Add(CVID.MS_flowing_afterglow, new TermInfo(CVID.MS_flowing_afterglow, @"MS", @"MS:1000255", @"flowing afterglow", @"An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa.", false));
            TermData.Add(CVID.MS_high_field_asymmetric_waveform_ion_mobility_spectrometry_OBSOLETE, new TermInfo(CVID.MS_high_field_asymmetric_waveform_ion_mobility_spectrometry_OBSOLETE, @"MS", @"MS:1000256", @"high-field asymmetric waveform ion mobility spectrometry", @"OBSOLETE The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion.", true));
            TermData.Add(CVID.MS_field_desorption, new TermInfo(CVID.MS_field_desorption, @"MS", @"MS:1000257", @"field desorption", @"The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization.", false));
            TermData.Add(CVID.MS_field_ionization, new TermInfo(CVID.MS_field_ionization, @"MS", @"MS:1000258", @"field ionization", @"The removal of electrons from any species by interaction with a high electric field.", false));
            TermData.Add(CVID.MS_glow_discharge_ionization, new TermInfo(CVID.MS_glow_discharge_ionization, @"MS", @"MS:1000259", @"glow discharge ionization", @"The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas.", false));
            TermData.Add(CVID.MS_ion_kinetic_energy_spectrometry_OBSOLETE, new TermInfo(CVID.MS_ion_kinetic_energy_spectrometry_OBSOLETE, @"MS", @"MS:1000260", @"ion kinetic energy spectrometry", @"OBSOLETE A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge.", true));
            TermData.Add(CVID.MS_ion_mobility_spectrometry_OBSOLETE, new TermInfo(CVID.MS_ion_mobility_spectrometry_OBSOLETE, @"MS", @"MS:1000261", @"ion mobility spectrometry", @"OBSOLETE The separation of ions according to their velocity through a buffer gas under the influence of an electric field.", true));
            TermData.Add(CVID.MS_infrared_multiphoton_dissociation, new TermInfo(CVID.MS_infrared_multiphoton_dissociation, @"MS", @"MS:1000262", @"infrared multiphoton dissociation", @"Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons.", false));
            TermData.Add(CVID.MS_isotope_ratio_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_isotope_ratio_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000263", @"isotope ratio mass spectrometry", @"OBSOLETE The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer.", true));
            TermData.Add(CVID.MS_ion_trap, new TermInfo(CVID.MS_ion_trap, @"MS", @"MS:1000264", @"ion trap", @"A device for spatially confining ions using electric and magnetic fields alone or in combination.", false));
            TermData.Add(CVID.MS_kinetic_energy_release_distribution_OBSOLETE, new TermInfo(CVID.MS_kinetic_energy_release_distribution_OBSOLETE, @"MS", @"MS:1000265", @"kinetic energy release distribution", @"OBSOLETE Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction.", true));
            TermData.Add(CVID.MS_Laser_Desorption_OBSOLETE, new TermInfo(CVID.MS_Laser_Desorption_OBSOLETE, @"MS", @"MS:1000266", @"Laser Desorption", @"OBSOLETE The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.", true));
            TermData.Add(CVID.MS_mass_analyzed_ion_kinetic_energy_spectrometry_OBSOLETE, new TermInfo(CVID.MS_mass_analyzed_ion_kinetic_energy_spectrometry_OBSOLETE, @"MS", @"MS:1000267", @"mass analyzed ion kinetic energy spectrometry", @"OBSOLETE Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process.", true));
            TermData.Add(CVID.MS_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000268", @"mass spectrometry", @"OBSOLETE The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments.", true));
            TermData.Add(CVID.MS_mass_spectrometry_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_mass_spectrometry_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000269", @"mass spectrometry/mass spectrometry", @"OBSOLETE The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions.", true));
            TermData.Add(CVID.MS_multiple_stage_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_multiple_stage_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000270", @"multiple stage mass spectrometry", @"OBSOLETE Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions.", true));
            TermData.Add(CVID.MS_Negative_Ion_chemical_ionization, new TermInfo(CVID.MS_Negative_Ion_chemical_ionization, @"MS", @"MS:1000271", @"Negative Ion chemical ionization", @"Chemical ionization that results in the formation of negative ions.", false));
            TermData.Add(CVID.MS_neutralization_reionization_mass_spectrometry, new TermInfo(CVID.MS_neutralization_reionization_mass_spectrometry, @"MS", @"MS:1000272", @"neutralization reionization mass spectrometry", @"With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species.", false));
            TermData.Add(CVID.MS_photoionization, new TermInfo(CVID.MS_photoionization, @"MS", @"MS:1000273", @"photoionization", @"The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended.", false));
            TermData.Add(CVID.MS_pyrolysis_mass_spectrometry, new TermInfo(CVID.MS_pyrolysis_mass_spectrometry, @"MS", @"MS:1000274", @"pyrolysis mass spectrometry", @"A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source.", false));
            TermData.Add(CVID.MS_collision_quadrupole, new TermInfo(CVID.MS_collision_quadrupole, @"MS", @"MS:1000275", @"collision quadrupole", @"A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation.", false));
            TermData.Add(CVID.MS_resonance_enhanced_multiphoton_ionization, new TermInfo(CVID.MS_resonance_enhanced_multiphoton_ionization, @"MS", @"MS:1000276", @"resonance enhanced multiphoton ionization", @"Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species.", false));
            TermData.Add(CVID.MS_residual_gas_analyzer_OBSOLETE, new TermInfo(CVID.MS_residual_gas_analyzer_OBSOLETE, @"MS", @"MS:1000277", @"residual gas analyzer", @"OBSOLETE A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber.", true));
            TermData.Add(CVID.MS_surface_enhanced_laser_desorption_ionization, new TermInfo(CVID.MS_surface_enhanced_laser_desorption_ionization, @"MS", @"MS:1000278", @"surface enhanced laser desorption ionization", @"The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization.", false));
            TermData.Add(CVID.MS_surface_enhanced_neat_desorption, new TermInfo(CVID.MS_surface_enhanced_neat_desorption, @"MS", @"MS:1000279", @"surface enhanced neat desorption", @"Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface.", false));
            TermData.Add(CVID.MS_suface_ionization_OBSOLETE, new TermInfo(CVID.MS_suface_ionization_OBSOLETE, @"MS", @"MS:1000280", @"suface ionization", @"OBSOLETE The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.", true));
            TermData.Add(CVID.MS_selected_ion_flow_tube, new TermInfo(CVID.MS_selected_ion_flow_tube, @"MS", @"MS:1000281", @"selected ion flow tube", @"A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions.", false));
            TermData.Add(CVID.MS_sustained_off_resonance_irradiation, new TermInfo(CVID.MS_sustained_off_resonance_irradiation, @"MS", @"MS:1000282", @"sustained off-resonance irradiation", @"A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time.", false));
            TermData.Add(CVID.MS_Spark_Source_Mass_Spectrometry_OBSOLETE, new TermInfo(CVID.MS_Spark_Source_Mass_Spectrometry_OBSOLETE, @"MS", @"MS:1000283", @"Spark Source Mass Spectrometry", @"OBSOLETE Mass spectrometry using spark ionization.", true));
            TermData.Add(CVID.MS_stored_waveform_inverse_fourier_transform, new TermInfo(CVID.MS_stored_waveform_inverse_fourier_transform, @"MS", @"MS:1000284", @"stored waveform inverse fourier transform", @"A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS2 experiments.", false));
            TermData.Add(CVID.MS_total_ion_current, new TermInfo(CVID.MS_total_ion_current, @"MS", @"MS:1000285", @"total ion current", @"The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum.", false));
            TermData.Add(CVID.MS_time_lag_focusing, new TermInfo(CVID.MS_time_lag_focusing, @"MS", @"MS:1000286", @"time lag focusing", @"Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse.", false));
            TermData.Add(CVID.MS_time_of_flight_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_time_of_flight_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000287", @"time-of-flight mass spectrometer", @"OBSOLETE An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy.", true));
            TermData.Add(CVID.MS_cyclotron, new TermInfo(CVID.MS_cyclotron, @"MS", @"MS:1000288", @"cyclotron", @"A device that uses an oscillating electric field and magnetic field to accelerate charged particles.", false));
            TermData.Add(CVID.MS_double_focusing_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_double_focusing_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000289", @"double-focusing mass spectrometer", @"OBSOLETE A mass spectrometer that uses a magnetic sector for m/z focusing and an electric sector for energy focusing of an ion beam.", true));
            TermData.Add(CVID.MS_hybrid_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_hybrid_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000290", @"hybrid mass spectrometer", @"OBSOLETE A mass spectrometer that combines m/z analyzers of different types to perform tandem mass spectrometry.", true));
            TermData.Add(CVID.MS_linear_ion_trap, new TermInfo(CVID.MS_linear_ion_trap, @"MS", @"MS:1000291", @"linear ion trap", @"A two dimensional Paul ion trap in which ions are confined in the axial dimension by means of an electric field at the ends of the trap.", false));
            TermData.Add(CVID.MS_mass_spectrograph_obsolete_OBSOLETE, new TermInfo(CVID.MS_mass_spectrograph_obsolete_OBSOLETE, @"MS", @"MS:1000292", @"mass spectrograph obsolete", @"OBSOLETE An instrument that separates a beam of ions according to their mass-to-charge ratio in which the ions are directed onto a focal plane detector such as a photographic plate.", true));
            TermData.Add(CVID.MS_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000293", @"mass spectrometer", @"OBSOLETE An instrument that measures the mass-to-charge ratio and relative abundances of ions.", true));
            TermData.Add(CVID.MS_mass_spectrum, new TermInfo(CVID.MS_mass_spectrum, @"MS", @"MS:1000294", @"mass spectrum", @"A plot of the relative abundance of a beam or other collection of ions as a function of the mass-to-charge ratio (m/z).", false));
            TermData.Add(CVID.MS_mattauch_herzog_geometry_OBSOLETE, new TermInfo(CVID.MS_mattauch_herzog_geometry_OBSOLETE, @"MS", @"MS:1000295", @"mattauch-herzog geometry", @"OBSOLETE An arrangement for a double-focusing mass spectrometer in which a deflection of ?/(4 ?(2)) radians in a radial electric field is followed by a magnetic deflection of ?/2 radians.", true));
            TermData.Add(CVID.MS_nier_johnson_geometry_OBSOLETE, new TermInfo(CVID.MS_nier_johnson_geometry_OBSOLETE, @"MS", @"MS:1000296", @"nier-johnson geometry", @"OBSOLETE An arrangement for a double-focusing mass spectrometer in which a deflection of ?/2 radians in a radial electric field analyzer is followed by a magnetic deflection of ?/3 radians.", true));
            TermData.Add(CVID.MS_paul_ion_trap_OBSOLETE, new TermInfo(CVID.MS_paul_ion_trap_OBSOLETE, @"MS", @"MS:1000297", @"paul ion trap", @"OBSOLETE A device that permits the trapping of ions by means of an alternating current voltage. The ejection of ions with a m/z less than a prescribed value and retention of those with higher mass depends on the application of radio frequency voltages between a ring electrode and two end-cap electrodes to confine the ions in a circular path. The choice of these voltages determines the m/z below which ions are ejected.", true));
            TermData.Add(CVID.MS_prolate_traochoidal_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_prolate_traochoidal_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000298", @"prolate traochoidal mass spectrometer", @"OBSOLETE A mass spectrometer in which the ions of different m/z are separated by means of crossed electric and magnetic fields in such a way that the selected ions follow a prolate trochoidal path.", true));
            TermData.Add(CVID.MS_quistor_OBSOLETE, new TermInfo(CVID.MS_quistor_OBSOLETE, @"MS", @"MS:1000299", @"quistor", @"OBSOLETE An abbreviation of quadrupole ion storage trap. This term is synonymous with Paul Ion Trap. If so then add a synonym to paul and obsolete this term.", true));
            TermData.Add(CVID.MS_reflectron, new TermInfo(CVID.MS_reflectron, @"MS", @"MS:1000300", @"reflectron", @"A time-of-flight mass spectrometer that uses a static electric field to reverse the direction of travel of the ions entering it. A reflectron improves mass resolution by assuring that ions of the same m/z but different kinetic energy arrive at the detector at the same time.", false));
            TermData.Add(CVID.MS_sector_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_sector_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000301", @"sector mass spectrometer", @"OBSOLETE A mass spectrometer consisting of one or more magnetic sectors for m/z selection in a beam of ions. Such instruments may also have one or more electric sectors for energy selection.", true));
            TermData.Add(CVID.MS_tandem_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_tandem_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000302", @"tandem mass spectrometer", @"OBSOLETE A mass spectrometer designed for mass spectrometry/mass spectrometry.", true));
            TermData.Add(CVID.MS_transmission_quadrupole_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_transmission_quadrupole_mass_spectrometer_OBSOLETE, @"MS", @"MS:1000303", @"transmission quadrupole mass spectrometer", @"OBSOLETE A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.", true));
            TermData.Add(CVID.MS_accelerating_voltage, new TermInfo(CVID.MS_accelerating_voltage, @"MS", @"MS:1000304", @"accelerating voltage", @"The electrical potential used to impart kinetic energy to ions in a mass spectrometer.", false));
            TermData.Add(CVID.MS_cyclotron_motion_OBSOLETE, new TermInfo(CVID.MS_cyclotron_motion_OBSOLETE, @"MS", @"MS:1000305", @"cyclotron motion", @"OBSOLETE The circular motion of a charged particle moving at velocity v in a magnetic field B that results from the force qvB.", true));
            TermData.Add(CVID.MS_dynamic_mass_spectrometry_OBSOLETE, new TermInfo(CVID.MS_dynamic_mass_spectrometry_OBSOLETE, @"MS", @"MS:1000306", @"dynamic mass spectrometry", @"OBSOLETE A mass spectrometer in which m/z separation using one or more electric fields that vary with time.", true));
            TermData.Add(CVID.MS_einzel_lens, new TermInfo(CVID.MS_einzel_lens, @"MS", @"MS:1000307", @"einzel lens", @"Three element charged particle lens in which the first and third elements are held at the same voltage. Such a lens produces focusing without changing the translational energy of the particle.", false));
            TermData.Add(CVID.MS_electric_field_strength, new TermInfo(CVID.MS_electric_field_strength, @"MS", @"MS:1000308", @"electric field strength", @"The magnitude of the force per unit charge at a given point in space.", false));
            TermData.Add(CVID.MS_first_stability_region, new TermInfo(CVID.MS_first_stability_region, @"MS", @"MS:1000309", @"first stability region", @"The region of a Mathieu stability diagram closest to the origin. Ions within this region can traverse the full length of a transmission quadrupole.", false));
            TermData.Add(CVID.MS_fringing_field, new TermInfo(CVID.MS_fringing_field, @"MS", @"MS:1000310", @"fringing field", @"The electric or magnetic field that extends from the edge of a sector, lens or other ion optics element.", false));
            TermData.Add(CVID.MS_kinetic_energy_analyzer, new TermInfo(CVID.MS_kinetic_energy_analyzer, @"MS", @"MS:1000311", @"kinetic energy analyzer", @"A device for measuring the kinetic energy of charged particles using a retarding field, time-of-flight, or the extent of deflection in an electric or magnetic field.", false));
            TermData.Add(CVID.MS_mass_limit_OBSOLETE, new TermInfo(CVID.MS_mass_limit_OBSOLETE, @"MS", @"MS:1000312", @"mass limit", @"OBSOLETE The m/z value above which ions cannot be detected in a mass spectrometer.", true));
            TermData.Add(CVID.MS_scan_m_z_range__OBSOLETE, new TermInfo(CVID.MS_scan_m_z_range__OBSOLETE, @"MS", @"MS:1000313", @"scan m/z range?", @"OBSOLETE The limit of m/z over which a mass spectrometer can detect ions.", true));
            TermData.Add(CVID.MS_mass_selective_axial_ejection_OBSOLETE, new TermInfo(CVID.MS_mass_selective_axial_ejection_OBSOLETE, @"MS", @"MS:1000314", @"mass selective axial ejection", @"OBSOLETE The use of mass selective instability to eject ions of selected m/z values from an ion trap.", true));
            TermData.Add(CVID.MS_mass_selective_instability_OBSOLETE, new TermInfo(CVID.MS_mass_selective_instability_OBSOLETE, @"MS", @"MS:1000315", @"mass selective instability", @"OBSOLETE A method for selective ejection of ions according to their m/z value in an ion trap.", true));
            TermData.Add(CVID.MS_mathieu_stability_diagram_OBSOLETE, new TermInfo(CVID.MS_mathieu_stability_diagram_OBSOLETE, @"MS", @"MS:1000316", @"mathieu stability diagram", @"OBSOLETE A graphical representation expressed in terms of reduced coordinates that describes charged particle motion in a quadrupole mass filter or quadrupole ion trap mass spectrometer.", true));
            TermData.Add(CVID.MS_orthogonal_extraction_OBSOLETE, new TermInfo(CVID.MS_orthogonal_extraction_OBSOLETE, @"MS", @"MS:1000317", @"orthogonal extraction", @"OBSOLETE The pulsed acceleration of ions perpendicular to their direction of travel into a time-of-flight mass spectrometer. Ions may be extracted from a directional ion source, drift tube or m/z separation stage.", true));
            TermData.Add(CVID.MS_resonance_ion_ejection_OBSOLETE, new TermInfo(CVID.MS_resonance_ion_ejection_OBSOLETE, @"MS", @"MS:1000318", @"resonance ion ejection", @"OBSOLETE A mode of ion ejection in a quadrupole ion trap that relies on a auxiliary radio frequency voltage that is applied to the end-cap electrodes. The voltage is tuned to the secular frequency of a particular ion to eject it.", true));
            TermData.Add(CVID.MS_space_charge_effect, new TermInfo(CVID.MS_space_charge_effect, @"MS", @"MS:1000319", @"space charge effect", @"The mutual repulsion of particles of like charge that limits the current in a charged-particle beam and causes beams or packets of charged particles to expand radially over time.", false));
            TermData.Add(CVID.MS_static_field, new TermInfo(CVID.MS_static_field, @"MS", @"MS:1000320", @"static field", @"An electric or magnetic field that does not change in time.", false));
            TermData.Add(CVID.MS_2E_Mass_Spectrum_OBSOLETE, new TermInfo(CVID.MS_2E_Mass_Spectrum_OBSOLETE, @"MS", @"MS:1000321", @"2E Mass Spectrum", @"OBSOLETE A mass spectrum obtained by setting the electric sector field E to twice the value required to transmit the main ion-beam thereby allowing ions with a kinetic energy-to-charge ratio twice that of the main ion-beam to be transmitted. Product ions resulting from partial charge transfer reactions such as m^2+ + N ? m^+ + N^+ that occur in a collision cell (containing a gas, N) located in a field-free region preceding a magnetic and electric sector combination are detected. When the magnetic sector field B is scanned, a mass spectrum of singly charged product ions of doubly charged precursor ions is obtained.", true));
            TermData.Add(CVID.MS_charge_inversion_mass_spectrum, new TermInfo(CVID.MS_charge_inversion_mass_spectrum, @"MS", @"MS:1000322", @"charge inversion mass spectrum", @"The measurement of the relative abundance of ions that result from a charge inversion reaction as a function of m/z.", false));
            TermData.Add(CVID.MS_constant_neutral_loss_scan_OBSOLETE, new TermInfo(CVID.MS_constant_neutral_loss_scan_OBSOLETE, @"MS", @"MS:1000323", @"constant neutral loss scan", @"OBSOLETE Spectrum of all precursor ions that undergo a selected m/z decrement.", true));
            TermData.Add(CVID.MS_constant_neutral_gain_scan_OBSOLETE, new TermInfo(CVID.MS_constant_neutral_gain_scan_OBSOLETE, @"MS", @"MS:1000324", @"constant neutral gain scan", @"OBSOLETE Spectrum of all precursor ions that undergo a selected m/z increment.", true));
            TermData.Add(CVID.MS_constant_neutral_gain_spectrum, new TermInfo(CVID.MS_constant_neutral_gain_spectrum, @"MS", @"MS:1000325", @"constant neutral gain spectrum", @"A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell.", false));
            TermData.Add(CVID.MS_constant_neutral_loss_spectrum, new TermInfo(CVID.MS_constant_neutral_loss_spectrum, @"MS", @"MS:1000326", @"constant neutral loss spectrum", @"A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.", false));
            TermData.Add(CVID.MS_consecutive_reaction_monitoring_OBSOLETE1, new TermInfo(CVID.MS_consecutive_reaction_monitoring_OBSOLETE1, @"MS", @"MS:1000327", @"consecutive reaction monitoring", @"OBSOLETE A type of MS2 experiments with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.", true));
            TermData.Add(CVID.MS_e_2_mass_spectrum, new TermInfo(CVID.MS_e_2_mass_spectrum, @"MS", @"MS:1000328", @"e/2 mass spectrum", @"A mass spectrum obtained using a sector mass spectrometer in which the electric sector field E is set to half the value required to transmit the main ion-beam. This spectrum records the signal from doubly charged product ions of charge-stripping reactions.", false));
            TermData.Add(CVID.MS_linked_scan_OBSOLETE, new TermInfo(CVID.MS_linked_scan_OBSOLETE, @"MS", @"MS:1000329", @"linked scan", @"OBSOLETE A scan in an instrument with two or more m/z analysers or in a sector mass spectrometer that incorporates at least one magnetic sector and one electric sector. Two or more of the analyzers are scanned simultaneously so as to preserve a predetermined relationship between scan parameters to produce a product ion, precursor ion or constant neutral loss spectrum.", true));
            TermData.Add(CVID.MS_linked_scan_at_constant_b_e_OBSOLETE, new TermInfo(CVID.MS_linked_scan_at_constant_b_e_OBSOLETE, @"MS", @"MS:1000330", @"linked scan at constant b/e", @"OBSOLETE A linked scan at constant B/E may be performed on a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector. The magnetic field B and the electric field E are scanned simultaneously while the accelerating voltage V is held constant, so as to maintain the ratio of the two fields constant. This linked scan may record a product ion spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors.", true));
            TermData.Add(CVID.MS_Linked_Scan_at_Constant_E2_V_OBSOLETE, new TermInfo(CVID.MS_Linked_Scan_at_Constant_E2_V_OBSOLETE, @"MS", @"MS:1000331", @"Linked Scan at Constant E2/V", @"OBSOLETE A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector. The electric sector field, E, and the accelerating voltage, V, are scanned simultaneously, so as to maintain the ratio E2/V at a constant value. This linked scan recordss a product ion spectrum of dissociation or other reactions occurring in a field free region (FFR) preceding the two sectors.", true));
            TermData.Add(CVID.MS_Linked_Scan_at_Constant_B2_E_OBSOLETE, new TermInfo(CVID.MS_Linked_Scan_at_Constant_B2_E_OBSOLETE, @"MS", @"MS:1000332", @"Linked Scan at Constant B2/E", @"OBSOLETE A linked scan performed on a sector mass spectrometer that incorporates at least one electric sector plus one magnetic sector in either order. The accelerating voltage is fixed and the magnetic field, B, and the electric field, E, are scanned simultaneously so as to maintain the ratio B2/E at a constant value. This linked scan records a precursor ion spectrum of dissociation or other reactions occurring in the field free region preceding the two sectors. The term B2/E linked scan is not recommended.", true));
            TermData.Add(CVID.MS_Linked_Scan_at_Constant_B_1__E_E0___1_2___E_OBSOLETE, new TermInfo(CVID.MS_Linked_Scan_at_Constant_B_1__E_E0___1_2___E_OBSOLETE, @"MS", @"MS:1000333", @"Linked Scan at Constant B[1-(E/E0)]^1/2 / E", @"OBSOLETE A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector placed in either order. The accelerating voltage is fixed while scanning the magnetic field, B, and electric field, E, simultaneously, so as to maintain the quantity B", true));
            TermData.Add(CVID.MS_MS_MS_in_Time_OBSOLETE, new TermInfo(CVID.MS_MS_MS_in_Time_OBSOLETE, @"MS", @"MS:1000334", @"MS/MS in Time", @"OBSOLETE A tandem mass spectrometry method in which product ion spectra are recorded in a single m/z analyzer (such as a Paul Ion Trap or FTMS) in discreet steps over time. Ions in a specific m/z range are selected, dissociated, and the product ions analyzed sequentially in time.", true));
            TermData.Add(CVID.MS_MS_MS_in_Space_OBSOLETE, new TermInfo(CVID.MS_MS_MS_in_Space_OBSOLETE, @"MS", @"MS:1000335", @"MS/MS in Space", @"OBSOLETE A tandem mass spectrometry method in which product ion spectra are recorded in m/z analyzers separated in space. Specific m/z separation functions are designed such that in one section of the instrument ions are selected, dissociated in an intermediate region, and the product ions are then transmitted to another analyser for m/z separation and data acquisition.", true));
            TermData.Add(CVID.MS_neutral_loss, new TermInfo(CVID.MS_neutral_loss, @"MS", @"MS:1000336", @"neutral loss", @"The loss of an uncharged species during a rearrangement process. The value slot holds the molecular formula in Hill notation of the neutral loss molecule, see PMID: 21182243. This term must be used in conjunction with a child of the term MS:1002307 (fragmentation ion type).", false));
            TermData.Add(CVID.MS_nth_generation_product_ion_OBSOLETE, new TermInfo(CVID.MS_nth_generation_product_ion_OBSOLETE, @"MS", @"MS:1000337", @"nth generation product ion", @"OBSOLETE Serial product ions from dissociation of selected precursor ions where n refers to the number of stages of dissociation. The term granddaughter ion is deprecated.", true));
            TermData.Add(CVID.MS_nth_generation_product_ion_scan_OBSOLETE, new TermInfo(CVID.MS_nth_generation_product_ion_scan_OBSOLETE, @"MS", @"MS:1000338", @"nth generation product ion scan", @"OBSOLETE The specific scan functions or processes that record the appropriate generation of product ion or ions of any m/z selected precursor ions.", true));
            TermData.Add(CVID.MS_nth_generation_product_ion_spectrum_OBSOLETE, new TermInfo(CVID.MS_nth_generation_product_ion_spectrum_OBSOLETE, @"MS", @"MS:1000339", @"nth generation product ion spectrum", @"OBSOLETE The mass spectrum recorded from any mass spectrometer in which the appropriate scan function can be set to record the appropriate generation product ion or ions of m/z selected precursor ions.", true));
            TermData.Add(CVID.MS_precursor_ion_OBSOLETE, new TermInfo(CVID.MS_precursor_ion_OBSOLETE, @"MS", @"MS:1000340", @"precursor ion", @"OBSOLETE An ion that reacts to form particular product ions. The reaction can be unimolecular dissociation, ion/molecule reaction, isomerization, or change in charge state. The term parent ion is deprecated.", true));
            TermData.Add(CVID.MS_precursor_ion_spectrum, new TermInfo(CVID.MS_precursor_ion_spectrum, @"MS", @"MS:1000341", @"precursor ion spectrum", @"Spectrum generated by scanning precursor m/z while monitoring a fixed product m/z.", false));
            TermData.Add(CVID.MS_product_ion_OBSOLETE, new TermInfo(CVID.MS_product_ion_OBSOLETE, @"MS", @"MS:1000342", @"product ion", @"OBSOLETE An ion formed as the product of a reaction involving a particular precursor ion. The reaction can be unimolecular dissociation to form fragment ions, an ion/molecule reaction, or simply involve a change in the number of charges. The term fragment ion is deprecated. The term daughter ion is deprecated.", true));
            TermData.Add(CVID.MS_product_ion_spectrum_OBSOLETE, new TermInfo(CVID.MS_product_ion_spectrum_OBSOLETE, @"MS", @"MS:1000343", @"product ion spectrum", @"OBSOLETE A mass spectrum recorded from any spectrometer in which the appropriate m/z separation scan function is set to record the product ion or ions of selected precursor ions.", true));
            TermData.Add(CVID.MS_progeny_ion_OBSOLETE, new TermInfo(CVID.MS_progeny_ion_OBSOLETE, @"MS", @"MS:1000344", @"progeny ion", @"OBSOLETE A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -> M2+ -> M3+ -> M4+ -> M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+.", true));
            TermData.Add(CVID.MS_array_detector, new TermInfo(CVID.MS_array_detector, @"MS", @"MS:1000345", @"array detector", @"Detector comprising several ion collection elements, arranged in a line or grid where each element is an individual detector.", false));
            TermData.Add(CVID.MS_conversion_dynode, new TermInfo(CVID.MS_conversion_dynode, @"MS", @"MS:1000346", @"conversion dynode", @"A surface that is held at high potential such that ions striking the surface produce electrons that are subsequently detected.", false));
            TermData.Add(CVID.MS_dynode, new TermInfo(CVID.MS_dynode, @"MS", @"MS:1000347", @"dynode", @"One of a series of electrodes in a photomultiplier tube. Such an arrangement is able to amplify the current emitted by the photocathode.", false));
            TermData.Add(CVID.MS_focal_plane_collector, new TermInfo(CVID.MS_focal_plane_collector, @"MS", @"MS:1000348", @"focal plane collector", @"A detector for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.", false));
            TermData.Add(CVID.MS_ion_to_photon_detector, new TermInfo(CVID.MS_ion_to_photon_detector, @"MS", @"MS:1000349", @"ion-to-photon detector", @"A detector in which ions strike a conversion dynode to produce electrons that in turn strike a phosphor and the resulting photons are detected by a photomultiplier.", false));
            TermData.Add(CVID.MS_point_collector, new TermInfo(CVID.MS_point_collector, @"MS", @"MS:1000350", @"point collector", @"A detector in which the ion beam is focused onto a point and the individual ions arrive sequentially.", false));
            TermData.Add(CVID.MS_postacceleration_detector, new TermInfo(CVID.MS_postacceleration_detector, @"MS", @"MS:1000351", @"postacceleration detector", @"A detector in which the charged particles are accelerated to a high velocity and impinge on a conversion dynode, emitting secondary electrons. The electrons are accelerated onto a phosphor screen, which emits photons that are in turn detected using a photomultiplier or other photon detector.", false));
            TermData.Add(CVID.MS_secondary_electron_OBSOLETE, new TermInfo(CVID.MS_secondary_electron_OBSOLETE, @"MS", @"MS:1000352", @"secondary electron", @"OBSOLETE Electrons that are ejected from a sample surface as a result of bombardment by a primary beam of atoms, ions or photons. WAS IN DETECTOR TYPE. Where should it go.", true));
            TermData.Add(CVID.MS_adduct_ion, new TermInfo(CVID.MS_adduct_ion, @"MS", @"MS:1000353", @"adduct ion", @"Ion formed by the interaction of an ion with one or more atoms or molecules to form an ion containing all the constituent atoms of the precursor ion as well as the additional atoms from the associated atoms or molecules.", false));
            TermData.Add(CVID.MS_aromatic_ion_OBSOLETE, new TermInfo(CVID.MS_aromatic_ion_OBSOLETE, @"MS", @"MS:1000354", @"aromatic ion", @"OBSOLETE A planar cyclic ion that obeys the Hueckel (4n + 2) rule where n is a positive integer representing the number of conjugated Pi electrons. Charge delocalization leads to greater stability compared to a hypothetical localized structure.", true));
            TermData.Add(CVID.MS_analog_ion_OBSOLETE, new TermInfo(CVID.MS_analog_ion_OBSOLETE, @"MS", @"MS:1000355", @"analog ion", @"OBSOLETE Ions that have similar chemical valence, for example the acetyl cation CH3-CO+ and the thioacetyl cation CH3-CS+.", true));
            TermData.Add(CVID.MS_anti_aromatic_ion_OBSOLETE, new TermInfo(CVID.MS_anti_aromatic_ion_OBSOLETE, @"MS", @"MS:1000356", @"anti-aromatic ion", @"OBSOLETE A planar cyclic ion with 4n ? electrons and is therefore not aromatic.", true));
            TermData.Add(CVID.MS_cationized_molecule_OBSOLETE, new TermInfo(CVID.MS_cationized_molecule_OBSOLETE, @"MS", @"MS:1000357", @"cationized molecule", @"OBSOLETE An ion formed by the association of a cation with a neutral molecule, M, for example", true));
            TermData.Add(CVID.MS_cluster_ion_OBSOLETE, new TermInfo(CVID.MS_cluster_ion_OBSOLETE, @"MS", @"MS:1000358", @"cluster ion", @"OBSOLETE An ion formed by a multi-component atomic or molecular assembly of one or more ions with atoms or molecules, such as", true));
            TermData.Add(CVID.MS_Conventional_ion_OBSOLETE, new TermInfo(CVID.MS_Conventional_ion_OBSOLETE, @"MS", @"MS:1000359", @"Conventional ion", @"OBSOLETE A radical cation or anion in which the charge site and the unpaired electron spin are both formally located in the same atom or group of atoms, as opposed to the spatially separate electronic configuration of distonic ions. The radical cation of methanol, CH3OH+, in which the charge and spin sites are formally located at the O atom is an example of a conventional ion, whereas .CH2-OH2+ is a distonic ion.", true));
            TermData.Add(CVID.MS_diagnostic_ion_OBSOLETE, new TermInfo(CVID.MS_diagnostic_ion_OBSOLETE, @"MS", @"MS:1000360", @"diagnostic ion", @"OBSOLETE A product ion whose formation reveals structural or compositional information of its precursor. For instance, the phenyl cation in an electron ionization mass spectrum is a diagnostic ion for benzene and derivatives.", true));
            TermData.Add(CVID.MS_dimeric_ion_OBSOLETE, new TermInfo(CVID.MS_dimeric_ion_OBSOLETE, @"MS", @"MS:1000361", @"dimeric ion", @"OBSOLETE An ion formed by ionization of a dimer or by the association of an ion with its neutral counterpart such as", true));
            TermData.Add(CVID.MS_distonic_ion_OBSOLETE, new TermInfo(CVID.MS_distonic_ion_OBSOLETE, @"MS", @"MS:1000362", @"distonic ion", @"OBSOLETE A radical cation or anion in which the charge site and the unpaired electron spin cannot be both formally located in the same atom or group of atoms as it can be with a conventional ion. For example, CH2-OH2+ is a distonic ion whereas the radical cation of methanol, CH3OH+ is a conventional ion.", true));
            TermData.Add(CVID.MS_enium_ion_OBSOLETE, new TermInfo(CVID.MS_enium_ion_OBSOLETE, @"MS", @"MS:1000363", @"enium ion", @"OBSOLETE A positively charged lower-valency ion of the nonmetallic elements. The methenium ion is CH3+. Other examples are the oxenium, sulfenium, nitrenium, phosphenium, and halenium ions.", true));
            TermData.Add(CVID.MS_fragment_ion_OBSOLETE, new TermInfo(CVID.MS_fragment_ion_OBSOLETE, @"MS", @"MS:1000364", @"fragment ion", @"OBSOLETE A product ion that results from the dissociation of a precursor ion.", true));
            TermData.Add(CVID.MS_ion__OBSOLETE, new TermInfo(CVID.MS_ion__OBSOLETE, @"MS", @"MS:1000365", @"ion?", @"OBSOLETE An atomic or molecular species having a net positive or negative electric charge.", true));
            TermData.Add(CVID.MS_Isotopologue_ion_OBSOLETE, new TermInfo(CVID.MS_Isotopologue_ion_OBSOLETE, @"MS", @"MS:1000366", @"Isotopologue ion", @"OBSOLETE An ion that differs only in the isotopic composition of one or more of its constituent atoms. For example CH4+ and CH3D+ or 10BF3 and 11BF3. The term isotopologue is a contraction of isotopic homologue.", true));
            TermData.Add(CVID.MS_Isotopomeric_ion_OBSOLETE, new TermInfo(CVID.MS_Isotopomeric_ion_OBSOLETE, @"MS", @"MS:1000367", @"Isotopomeric ion", @"OBSOLETE Isomeric ion having the same numbers of each isotopic atom but differing in their positions. Isotopomeric ions can be either configurational isomers in which two atomic isotopes exchange positions or isotopic stereoisomers. The term isotopomer is a shortening of isotopic isomer.", true));
            TermData.Add(CVID.MS_metastable_ion_OBSOLETE, new TermInfo(CVID.MS_metastable_ion_OBSOLETE, @"MS", @"MS:1000368", @"metastable ion", @"OBSOLETE An ion that is formed with internal energy higher than the threshold for dissociation but with a lifetime great enough to allow it to exit the ion source and enter the mass spectrometer where it dissociates before detection.", true));
            TermData.Add(CVID.MS_molecular_ion_OBSOLETE, new TermInfo(CVID.MS_molecular_ion_OBSOLETE, @"MS", @"MS:1000369", @"molecular ion", @"OBSOLETE An ion formed by the removal of one or more electrons to form a positive ion or the addition off one or more electrons to form a negative ion.", true));
            TermData.Add(CVID.MS_negative_ion_OBSOLETE, new TermInfo(CVID.MS_negative_ion_OBSOLETE, @"MS", @"MS:1000370", @"negative ion", @"OBSOLETE An atomic or molecular species having a net negative electric charge.", true));
            TermData.Add(CVID.MS_non_classical_ion_OBSOLETE, new TermInfo(CVID.MS_non_classical_ion_OBSOLETE, @"MS", @"MS:1000371", @"non-classical ion", @"OBSOLETE Hyper-coordinated carbonium ion such as the penta-coordinated norbornyl cation. Note: Tri-coordinated carbenium ions are termed classical ions.", true));
            TermData.Add(CVID.MS_onium_ion_OBSOLETE, new TermInfo(CVID.MS_onium_ion_OBSOLETE, @"MS", @"MS:1000372", @"onium ion", @"OBSOLETE A positively charged hypervalent ion of the nonmetallic elements. Examples are the methonium ion CH5+, the hydrogenonium ion H3+ and the hydronium ion H3O+. Other examples are the carbonium, oxonium, sulfonium, nitronium, diazonium, phosphonium, and halonium ions. Onium ions are not limited to monopositive ions; multiply-charged onium ions exist such as the gitonic (proximal) oxonium dication H4O2+ and the distonic oxonium dication H2O+-CH2-CH2-OH2+.", true));
            TermData.Add(CVID.MS_principal_ion_OBSOLETE, new TermInfo(CVID.MS_principal_ion_OBSOLETE, @"MS", @"MS:1000373", @"principal ion", @"OBSOLETE Most abundant ion of an isotope cluster, such as the 11B79Br2 81Br+ ion of m/z 250 of the cluster of isotopologue molecular ions of BBr3. The term principal ion has also been used to describe ions that have been artificially isotopically enriched in one or more positions such as CH3 13CH3+ or CH2D2 +, but those are best defined as isotopologue ions.", true));
            TermData.Add(CVID.MS_positive_ion_OBSOLETE, new TermInfo(CVID.MS_positive_ion_OBSOLETE, @"MS", @"MS:1000374", @"positive ion", @"OBSOLETE An atomic or molecular species having a net positive electric charge.", true));
            TermData.Add(CVID.MS_protonated_molecule_OBSOLETE, new TermInfo(CVID.MS_protonated_molecule_OBSOLETE, @"MS", @"MS:1000375", @"protonated molecule", @"OBSOLETE An ion formed by interaction of a neutral molecule with a proton and represented by the symbol", true));
            TermData.Add(CVID.MS_radical_ion_OBSOLETE, new TermInfo(CVID.MS_radical_ion_OBSOLETE, @"MS", @"MS:1000376", @"radical ion", @"OBSOLETE An ion, either a cation or anion, containing unpaired electrons in its ground state. The unpaired electron is denoted by a superscript dot alongside the superscript symbol for charge, such as for the molecular ion of a molecule M, that is, M+. Radical ions with more than one charge and/or more than one unpaired electron are denoted such as M(2+)(2). Unless the positions of the unpaired electron and charge can be associated with specific atoms, superscript charge designation should be placed before the superscript dot designation.", true));
            TermData.Add(CVID.MS_reference_ion_OBSOLETE, new TermInfo(CVID.MS_reference_ion_OBSOLETE, @"MS", @"MS:1000377", @"reference ion", @"OBSOLETE A stable ion whose structure is known with certainty. These ions are usually formed by direct ionization of a neutral molecule of known structure and are used to verify by comparison the structure of an unknown ion.", true));
            TermData.Add(CVID.MS_stable_ion_OBSOLETE, new TermInfo(CVID.MS_stable_ion_OBSOLETE, @"MS", @"MS:1000378", @"stable ion", @"OBSOLETE An ion with internal energy sufficiently low that it does not rearrange or dissociate prior to detection in a mass spectrometer.", true));
            TermData.Add(CVID.MS_unstable_ion_OBSOLETE, new TermInfo(CVID.MS_unstable_ion_OBSOLETE, @"MS", @"MS:1000379", @"unstable ion", @"OBSOLETE An ion with sufficient energy to dissociate within the ion source.", true));
            TermData.Add(CVID.MS_adiabatic_ionization, new TermInfo(CVID.MS_adiabatic_ionization, @"MS", @"MS:1000380", @"adiabatic ionization", @"A process whereby an electron is removed from an atom, ion, or molecule to produce an ion in its lowest energy state.", false));
            TermData.Add(CVID.MS_associative_ionization, new TermInfo(CVID.MS_associative_ionization, @"MS", @"MS:1000381", @"associative ionization", @"An ionization process in which two excited atoms or molecules react to form a single positive ion and an electron.", false));
            TermData.Add(CVID.MS_atmospheric_pressure_photoionization, new TermInfo(CVID.MS_atmospheric_pressure_photoionization, @"MS", @"MS:1000382", @"atmospheric pressure photoionization", @"Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.", false));
            TermData.Add(CVID.MS_autodetachment, new TermInfo(CVID.MS_autodetachment, @"MS", @"MS:1000383", @"autodetachment", @"The formation of a neutral when a negative ion in a discrete state with an energy greater than the detachment threshold loses an electron spontaneously without further interaction with an energy source.", false));
            TermData.Add(CVID.MS_autoionization, new TermInfo(CVID.MS_autoionization, @"MS", @"MS:1000384", @"autoionization", @"The formation of an ion when an atom or molecule in a discrete state with an energy greater than the ionization threshold loses an electron spontaneously without further interaction with an energy source.", false));
            TermData.Add(CVID.MS_charge_exchange_ionization, new TermInfo(CVID.MS_charge_exchange_ionization, @"MS", @"MS:1000385", @"charge exchange ionization", @"The interaction of an ion with an atom or molecule in which the charge on the ion is transferred to the neutral without the dissociation of either. Synonymous with charge transfer ionization.", false));
            TermData.Add(CVID.MS_chemi_ionization, new TermInfo(CVID.MS_chemi_ionization, @"MS", @"MS:1000386", @"chemi-ionization", @"The reaction of a neutral molecule with an internally excited molecule to form an ion. Note that this term is not synonymous with chemical ionization.", false));
            TermData.Add(CVID.MS_desorption_ionization_on_silicon, new TermInfo(CVID.MS_desorption_ionization_on_silicon, @"MS", @"MS:1000387", @"desorption/ionization on silicon", @"The formation of ions by laser desorption ionization of a sample deposited on a porous silicon surface.", false));
            TermData.Add(CVID.MS_dissociative_ionization, new TermInfo(CVID.MS_dissociative_ionization, @"MS", @"MS:1000388", @"dissociative ionization", @"The reaction of a gas-phase molecule that results in its decomposition to form products, one of which is an ion.", false));
            TermData.Add(CVID.MS_electron_ionization, new TermInfo(CVID.MS_electron_ionization, @"MS", @"MS:1000389", @"electron ionization", @"The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended.", false));
            TermData.Add(CVID.MS_ion_desolvation_OBSOLETE, new TermInfo(CVID.MS_ion_desolvation_OBSOLETE, @"MS", @"MS:1000390", @"ion desolvation", @"OBSOLETE The removal of solvent molecules clustered around a gas-phase ion by means of heating and/or collisions with gas molecules.", true));
            TermData.Add(CVID.MS_ion_pair_formation_OBSOLETE, new TermInfo(CVID.MS_ion_pair_formation_OBSOLETE, @"MS", @"MS:1000391", @"ion-pair formation", @"OBSOLETE The reaction of a molecule to form both a positive ion and negative ion fragment among the products.", true));
            TermData.Add(CVID.MS_ionization_efficiency, new TermInfo(CVID.MS_ionization_efficiency, @"MS", @"MS:1000392", @"ionization efficiency", @"The ratio of the number of ions formed to the number of electrons, molecules or photons used.", false));
            TermData.Add(CVID.MS_laser_desorption_ionization, new TermInfo(CVID.MS_laser_desorption_ionization, @"MS", @"MS:1000393", @"laser desorption ionization", @"The formation of gas-phase ions by the interaction of a pulsed laser with a solid or liquid material.", false));
            TermData.Add(CVID.MS_liquid_secondary_ionization, new TermInfo(CVID.MS_liquid_secondary_ionization, @"MS", @"MS:1000395", @"liquid secondary ionization", @"The ionization of any species by the interaction of a focused beam of ions with a sample that is dissolved in a solvent matrix. See also fast atom bombardment and secondary ionization.", false));
            TermData.Add(CVID.MS_membrane_inlet, new TermInfo(CVID.MS_membrane_inlet, @"MS", @"MS:1000396", @"membrane inlet", @"A semi-permeable membrane separator that permits the passage of gas sample directly to the mass spectrometer ion source.", false));
            TermData.Add(CVID.MS_microelectrospray, new TermInfo(CVID.MS_microelectrospray, @"MS", @"MS:1000397", @"microelectrospray", @"Electrospray ionization at a solvent flow rate of 300-800 nL/min where the flow is a result of a mechanical pump. See nanoelectrospray.", false));
            TermData.Add(CVID.MS_nanoelectrospray, new TermInfo(CVID.MS_nanoelectrospray, @"MS", @"MS:1000398", @"nanoelectrospray", @"Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray.", false));
            TermData.Add(CVID.MS_penning_ionization, new TermInfo(CVID.MS_penning_ionization, @"MS", @"MS:1000399", @"penning ionization", @"Ionization that occurs through the interaction of two or more neutral gaseous species, at least one of which is internally excited.", false));
            TermData.Add(CVID.MS_plasma_desorption_ionization, new TermInfo(CVID.MS_plasma_desorption_ionization, @"MS", @"MS:1000400", @"plasma desorption ionization", @"The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.", false));
            TermData.Add(CVID.MS_pre_ionization_state_OBSOLETE, new TermInfo(CVID.MS_pre_ionization_state_OBSOLETE, @"MS", @"MS:1000401", @"pre-ionization state", @"OBSOLETE An electronic state capable of undergoing auto-Ionization.", true));
            TermData.Add(CVID.MS_secondary_ionization, new TermInfo(CVID.MS_secondary_ionization, @"MS", @"MS:1000402", @"secondary ionization", @"The process in which ions are ejected from a sample surface as a result of bombardment by a primary beam of atoms or ions.", false));
            TermData.Add(CVID.MS_soft_ionization, new TermInfo(CVID.MS_soft_ionization, @"MS", @"MS:1000403", @"soft ionization", @"The formation of gas-phase ions without extensive fragmentation.", false));
            TermData.Add(CVID.MS_spark_ionization, new TermInfo(CVID.MS_spark_ionization, @"MS", @"MS:1000404", @"spark ionization", @"The formation of ions from a solid material by an intermittent electrical discharge.", false));
            TermData.Add(CVID.MS_surface_assisted_laser_desorption_ionization, new TermInfo(CVID.MS_surface_assisted_laser_desorption_ionization, @"MS", @"MS:1000405", @"surface-assisted laser desorption ionization", @"The formation of gas-phase ions from molecules that are deposited on a particular surface substrate that is irradiated with a pulsed laser. See also matrix-assisted laser desorption ionization.", false));
            TermData.Add(CVID.MS_surface_ionization, new TermInfo(CVID.MS_surface_ionization, @"MS", @"MS:1000406", @"surface ionization", @"The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.", false));
            TermData.Add(CVID.MS_thermal_ionization, new TermInfo(CVID.MS_thermal_ionization, @"MS", @"MS:1000407", @"thermal ionization", @"The ionization of a neutral species through contact with a high temperature surface.", false));
            TermData.Add(CVID.MS_vertical_ionization, new TermInfo(CVID.MS_vertical_ionization, @"MS", @"MS:1000408", @"vertical ionization", @"A process in which an electron is removed from or added to a molecule without a change in the positions of the atoms. The resulting ion is typically in an excited vibrational state.", false));
            TermData.Add(CVID.MS_association_reaction_OBSOLETE, new TermInfo(CVID.MS_association_reaction_OBSOLETE, @"MS", @"MS:1000409", @"association reaction", @"OBSOLETE The reaction of an ion with a neutral species in which the reactants combine to form a single ion.", true));
            TermData.Add(CVID.MS_alpha_cleavage_OBSOLETE, new TermInfo(CVID.MS_alpha_cleavage_OBSOLETE, @"MS", @"MS:1000410", @"alpha-cleavage", @"OBSOLETE A homolytic cleavage where the bond fission occurs between at the atom adjacent to the atom at the apparent charge site and an atom removed from the aparent charge site by two bonds.", true));
            TermData.Add(CVID.MS_beta_cleavage_OBSOLETE, new TermInfo(CVID.MS_beta_cleavage_OBSOLETE, @"MS", @"MS:1000411", @"beta-cleavage", @"OBSOLETE A homolytic cleavage where the bond fission occurs between at an atom removed from the apparent charge site atom by two bonds and an atom adjacent to that atom and removed from the aparent charge site by three bonds.", true));
            TermData.Add(CVID.MS_buffer_gas, new TermInfo(CVID.MS_buffer_gas, @"MS", @"MS:1000412", @"buffer gas", @"An inert gas used for collisional deactivation of internally excited ions.", false));
            TermData.Add(CVID.MS_charge_induced_fragmentation_OBSOLETE, new TermInfo(CVID.MS_charge_induced_fragmentation_OBSOLETE, @"MS", @"MS:1000413", @"charge-induced fragmentation", @"OBSOLETE Fragmentation of an odd electron ion in which the cleaved bond is adjacent to the apparent charge site. Synonymous with charge mediated fragmentation.", true));
            TermData.Add(CVID.MS_charge_inversion_reaction_OBSOLETE, new TermInfo(CVID.MS_charge_inversion_reaction_OBSOLETE, @"MS", @"MS:1000414", @"charge inversion reaction", @"OBSOLETE Reaction of an ion with a neutral species in which the charge on the product ion is reversed in sign with respect to the reactant ion.", true));
            TermData.Add(CVID.MS_charge_permutation_reaction_OBSOLETE, new TermInfo(CVID.MS_charge_permutation_reaction_OBSOLETE, @"MS", @"MS:1000415", @"charge permutation reaction", @"OBSOLETE The reaction of an ion with a neutral species with a resulting change in the magnitude or sign of the charge on the reactant ion.", true));
            TermData.Add(CVID.MS_charge_stripping_reaction_OBSOLETE, new TermInfo(CVID.MS_charge_stripping_reaction_OBSOLETE, @"MS", @"MS:1000416", @"charge stripping reaction", @"OBSOLETE Reaction of a positive ion with a neutral species in which the positive charge on the product ion is greater than that on the reactant ion.", true));
            TermData.Add(CVID.MS_charge_transfer_reaction_OBSOLETE, new TermInfo(CVID.MS_charge_transfer_reaction_OBSOLETE, @"MS", @"MS:1000417", @"charge transfer reaction", @"OBSOLETE The reaction of an ion with a neutral species in which some or all of the charge of the reactant ion is transferred to the neutral species.", true));
            TermData.Add(CVID.MS_collisional_excitation_OBSOLETE, new TermInfo(CVID.MS_collisional_excitation_OBSOLETE, @"MS", @"MS:1000418", @"collisional excitation", @"OBSOLETE The reaction of an ion with a neutral species in which the translational energy of the collision is converted into internal energy of the ion.", true));
            TermData.Add(CVID.MS_collision_gas, new TermInfo(CVID.MS_collision_gas, @"MS", @"MS:1000419", @"collision gas", @"An inert gas used for collisional excitation. The term target gas is not recommended.", false));
            TermData.Add(CVID.MS_heterolytic_cleavage_OBSOLETE, new TermInfo(CVID.MS_heterolytic_cleavage_OBSOLETE, @"MS", @"MS:1000420", @"heterolytic cleavage", @"OBSOLETE Fragmentation of a molecule or ion in which both electrons forming the single bond that is broken remain on one of the atoms that were originally bonded. This term is synonymous with heterolysis.", true));
            TermData.Add(CVID.MS_high_energy_collision_OBSOLETE, new TermInfo(CVID.MS_high_energy_collision_OBSOLETE, @"MS", @"MS:1000421", @"high energy collision", @"OBSOLETE Collision-induced dissociation process wherein the projectile ion has laboratory-frame translational energy higher than 1 keV.", true));
            TermData.Add(CVID.MS_beam_type_collision_induced_dissociation, new TermInfo(CVID.MS_beam_type_collision_induced_dissociation, @"MS", @"MS:1000422", @"beam-type collision-induced dissociation", @"A collision-induced dissociation process that occurs in a beam-type collision cell.", false));
            TermData.Add(CVID.MS_homolytic_cleavage_OBSOLETE, new TermInfo(CVID.MS_homolytic_cleavage_OBSOLETE, @"MS", @"MS:1000423", @"homolytic cleavage", @"OBSOLETE Fragmentation of an odd electron ion that results from one of a pair of electrons that form a bond between two atoms moving to form a pair with the odd electron on the atom at the apparent charge site. Fragmentation results in the formation of an even electron ion and a radical. This reaction involves the movement of a single electron and is symbolized by a single-barbed arrow. Synonymous with Homolysis.", true));
            TermData.Add(CVID.MS_hydrogen_deuterium_exchange_OBSOLETE, new TermInfo(CVID.MS_hydrogen_deuterium_exchange_OBSOLETE, @"MS", @"MS:1000424", @"hydrogen/deuterium exchange", @"OBSOLETE Exchange of hydrogen atoms with deuterium atoms in a molecule or pre-formed ion in solution prior to introduction into a mass spectrometer, or by reaction of an ion with a deuterated collision gas inside a mass spectrometer.", true));
            TermData.Add(CVID.MS_ion_energy_loss_spectrum_OBSOLETE, new TermInfo(CVID.MS_ion_energy_loss_spectrum_OBSOLETE, @"MS", @"MS:1000425", @"ion energy loss spectrum", @"OBSOLETE A plot of the relative abundance of a beam or other collection of ions as a function their loss of translational energy in reactions with neutral species.", true));
            TermData.Add(CVID.MS_ionizing_collision_OBSOLETE, new TermInfo(CVID.MS_ionizing_collision_OBSOLETE, @"MS", @"MS:1000426", @"ionizing collision", @"OBSOLETE The reaction of an ion with a neutral species in which one or more electrons are removed from either the ion or neutral.", true));
            TermData.Add(CVID.MS_ion_molecule_reaction_OBSOLETE, new TermInfo(CVID.MS_ion_molecule_reaction_OBSOLETE, @"MS", @"MS:1000427", @"ion/molecule reaction", @"OBSOLETE The reaction of an ion with a neutral molecule. The term ion-molecule reaction is not recommended because the hyphen suggests a single species that is that is both an ion and a molecule.", true));
            TermData.Add(CVID.MS_ion_neutral_complex_OBSOLETE, new TermInfo(CVID.MS_ion_neutral_complex_OBSOLETE, @"MS", @"MS:1000428", @"ion/neutral complex", @"OBSOLETE A particular type of transition state that lies between precursor and product ions on the reaction coordinate of some ion reactions.", true));
            TermData.Add(CVID.MS_ion_neutral_species_reaction_OBSOLETE, new TermInfo(CVID.MS_ion_neutral_species_reaction_OBSOLETE, @"MS", @"MS:1000429", @"ion/neutral species reaction", @"OBSOLETE A process wherein a charged species interacts with a neutral reactant to produce either chemically different species or changes in the internal energy of one or both of the reactants.", true));
            TermData.Add(CVID.MS_ion_neutral_species_exchange_reaction_OBSOLETE, new TermInfo(CVID.MS_ion_neutral_species_exchange_reaction_OBSOLETE, @"MS", @"MS:1000430", @"ion/neutral species exchange reaction", @"OBSOLETE In this reaction an association reaction is accompanied by the subsequent or simultaneous liberation of a different neutral species as a product.", true));
            TermData.Add(CVID.MS_kinetic_method_OBSOLETE, new TermInfo(CVID.MS_kinetic_method_OBSOLETE, @"MS", @"MS:1000431", @"kinetic method", @"OBSOLETE An approach to determination of ion thermodynamic quantities by a bracketing procedure in which the relative probabilities of competing ion fragmentations are measured via the relative abundances of the reaction products. The extended kinetic method takes the associated entropy changes into account.", true));
            TermData.Add(CVID.MS_low_energy_collisions_OBSOLETE, new TermInfo(CVID.MS_low_energy_collisions_OBSOLETE, @"MS", @"MS:1000432", @"low energy collisions", @"OBSOLETE A collision between an ion and neutral species with translational energy approximately 1000 eV or lower.", true));
            TermData.Add(CVID.MS_low_energy_collision_induced_dissociation, new TermInfo(CVID.MS_low_energy_collision_induced_dissociation, @"MS", @"MS:1000433", @"low-energy collision-induced dissociation", @"A collision-induced dissociation process wherein the precursor ion has the translational energy lower than approximately 1000 eV. This process typically requires multiple collisions and the collisional excitation is cumulative.", false));
            TermData.Add(CVID.MS_McLafferty_Rearrangement_OBSOLETE, new TermInfo(CVID.MS_McLafferty_Rearrangement_OBSOLETE, @"MS", @"MS:1000434", @"McLafferty Rearrangement", @"OBSOLETE A dissociation reaction triggered by transfer of a hydrogen atom via a 6-member transition state to the formal radical/charge site from a carbon atom four atoms removed from the charge/radical site (the gamma-carbon); subsequent rearrangement of electron density leads to expulsion of an olefin molecule. This term was originally applied to ketone ions where the charge/radical site is the carbonyl oxygen, but it is now more widely applied.", true));
            TermData.Add(CVID.MS_photodissociation, new TermInfo(CVID.MS_photodissociation, @"MS", @"MS:1000435", @"photodissociation", @"A process wherein the reactant ion is dissociated as a result of absorption of one or more photons.", false));
            TermData.Add(CVID.MS_partial_charge_transfer_reaction_OBSOLETE, new TermInfo(CVID.MS_partial_charge_transfer_reaction_OBSOLETE, @"MS", @"MS:1000436", @"partial charge transfer reaction", @"OBSOLETE Reaction of an ion with a neutral species in which some but not all of the ion charge is transferred to the neutral.", true));
            TermData.Add(CVID.MS_ion_reaction_OBSOLETE, new TermInfo(CVID.MS_ion_reaction_OBSOLETE, @"MS", @"MS:1000437", @"ion reaction", @"OBSOLETE Chemical transformation involving an ion.", true));
            TermData.Add(CVID.MS_superelastic_collision_OBSOLETE, new TermInfo(CVID.MS_superelastic_collision_OBSOLETE, @"MS", @"MS:1000438", @"superelastic collision", @"OBSOLETE Collision in which the translational energy of the fast-moving collision partner is increased at the expense of internal energy of one or both collision partners.", true));
            TermData.Add(CVID.MS_surface_induced_reaction_OBSOLETE, new TermInfo(CVID.MS_surface_induced_reaction_OBSOLETE, @"MS", @"MS:1000439", @"surface-induced reaction", @"OBSOLETE A process wherein a reactant ion interacts with a surface to produce either chemically different species or a change in the internal energy of the reactant ion.", true));
            TermData.Add(CVID.MS_unimolecular_dissociation_OBSOLETE, new TermInfo(CVID.MS_unimolecular_dissociation_OBSOLETE, @"MS", @"MS:1000440", @"unimolecular dissociation", @"OBSOLETE Fragmentation reaction in which the molecularity is treated as one, irrespective of whether the dissociative state is that of a metastable ion produced in the ion source or results from collisional excitation of a stable ion.", true));
            TermData.Add(CVID.MS_scan, new TermInfo(CVID.MS_scan, @"MS", @"MS:1000441", @"scan", @"Function or process of the mass spectrometer where it records a spectrum.", false));
            TermData.Add(CVID.MS_spectrum, new TermInfo(CVID.MS_spectrum, @"MS", @"MS:1000442", @"spectrum", @"Representation of intensity values corresponding to a range of measurement space.", false));
            TermData.Add(CVID.MS_mass_analyzer_type, new TermInfo(CVID.MS_mass_analyzer_type, @"MS", @"MS:1000443", @"mass analyzer type", @"Mass analyzer separates the ions according to their mass-to-charge ratio.", false));
            TermData.Add(CVID.MS_m_z_Separation_Method_OBSOLETE, new TermInfo(CVID.MS_m_z_Separation_Method_OBSOLETE, @"MS", @"MS:1000444", @"m/z Separation Method", @"OBSOLETE Mass/charge separation Method.", true));
            TermData.Add(CVID.MS_sequential_m_z_separation_method_OBSOLETE, new TermInfo(CVID.MS_sequential_m_z_separation_method_OBSOLETE, @"MS", @"MS:1000445", @"sequential m/z separation method", @"OBSOLETE Sequential m/z separation method.", true));
            TermData.Add(CVID.MS_fast_ion_bombardment, new TermInfo(CVID.MS_fast_ion_bombardment, @"MS", @"MS:1000446", @"fast ion bombardment", @"The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample.", false));
            TermData.Add(CVID.MS_LTQ, new TermInfo(CVID.MS_LTQ, @"MS", @"MS:1000447", @"LTQ", @"Finnigan LTQ MS.", false));
            TermData.Add(CVID.MS_LTQ_FT, new TermInfo(CVID.MS_LTQ_FT, @"MS", @"MS:1000448", @"LTQ FT", @"Finnigan LTQ FT MS.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap, new TermInfo(CVID.MS_LTQ_Orbitrap, @"MS", @"MS:1000449", @"LTQ Orbitrap", @"Finnigan LTQ Orbitrap MS.", false));
            TermData.Add(CVID.MS_LXQ, new TermInfo(CVID.MS_LXQ, @"MS", @"MS:1000450", @"LXQ", @"Finnigan LXQ MS.", false));
            TermData.Add(CVID.MS_mass_analyzer, new TermInfo(CVID.MS_mass_analyzer, @"MS", @"MS:1000451", @"mass analyzer", @"Terms used to describe the Analyzer.", false));
            TermData.Add(CVID.MS_data_transformation, new TermInfo(CVID.MS_data_transformation, @"MS", @"MS:1000452", @"data transformation", @"Terms used to describe types of data processing.", false));
            TermData.Add(CVID.MS_detector, new TermInfo(CVID.MS_detector, @"MS", @"MS:1000453", @"detector", @"The device that detects ions.", false));
            TermData.Add(CVID.MS_instrument_additional_description_OBSOLETE, new TermInfo(CVID.MS_instrument_additional_description_OBSOLETE, @"MS", @"MS:1000454", @"instrument additional description", @"OBSOLETE Additional terms to describe the instrument as outlined in the mass spec doc, Appendix 1, section 1.5.", true));
            TermData.Add(CVID.MS_ion_selection_attribute, new TermInfo(CVID.MS_ion_selection_attribute, @"MS", @"MS:1000455", @"ion selection attribute", @"Ion selection properties that are associated with a value.", false));
            TermData.Add(CVID.MS_precursor_activation, new TermInfo(CVID.MS_precursor_activation, @"MS", @"MS:1000456", @"precursor activation", @"Terms to describe the precursor activation.", false));
            TermData.Add(CVID.MS_sample, new TermInfo(CVID.MS_sample, @"MS", @"MS:1000457", @"sample", @"Terms to describe the sample.", false));
            TermData.Add(CVID.MS_source, new TermInfo(CVID.MS_source, @"MS", @"MS:1000458", @"source", @"Terms to describe the source.", false));
            TermData.Add(CVID.MS_spectrum_instrument_description_OBSOLETE, new TermInfo(CVID.MS_spectrum_instrument_description_OBSOLETE, @"MS", @"MS:1000459", @"spectrum instrument description", @"OBSOLETE Terms used to describe the spectrum.", true));
            TermData.Add(CVID.MS_unit_OBSOLETE, new TermInfo(CVID.MS_unit_OBSOLETE, @"MS", @"MS:1000460", @"unit", @"OBSOLETE Terms to describe units.", true));
            TermData.Add(CVID.MS_additional_description_OBSOLETE, new TermInfo(CVID.MS_additional_description_OBSOLETE, @"MS", @"MS:1000461", @"additional description", @"OBSOLETE Terms to describe Additional.", true));
            TermData.Add(CVID.MS_ion_optics, new TermInfo(CVID.MS_ion_optics, @"MS", @"MS:1000462", @"ion optics", @"Device used in the construction of a mass spectrometer to focus, contain or otherwise manipulate ions.", false));
            TermData.Add(CVID.MS_instrument, new TermInfo(CVID.MS_instrument, @"MS", @"MS:1000463", @"instrument", @"Description of the instrument or the mass spectrometer.", false));
            TermData.Add(CVID.MS_mass_unit_OBSOLETE, new TermInfo(CVID.MS_mass_unit_OBSOLETE, @"MS", @"MS:1000464", @"mass unit", @"OBSOLETE A unit of measurement for mass.", true));
            TermData.Add(CVID.MS_scan_polarity, new TermInfo(CVID.MS_scan_polarity, @"MS", @"MS:1000465", @"scan polarity", @"Relative orientation of the electromagnetic field during the selection and detection of ions in the mass spectrometer.", false));
            TermData.Add(CVID.MS_alternating_OBSOLETE, new TermInfo(CVID.MS_alternating_OBSOLETE, @"MS", @"MS:1000466", @"alternating", @"OBSOLETE Alternating.", true));
            TermData.Add(CVID.MS_1200_series_LC_MSD_SL, new TermInfo(CVID.MS_1200_series_LC_MSD_SL, @"MS", @"MS:1000467", @"1200 series LC/MSD SL", @"The 1200 Series LC/MSD SL ion trap belongs to the Agilent LC/MSD ion trap family. It provides fast polarity switching and multisignal data acquisition capabilities in a single run while also providing 5 stages of automated data dependent MS2 and 11 stages of manual MS2.", false));
            TermData.Add(CVID.MS_6110_Quadrupole_LC_MS, new TermInfo(CVID.MS_6110_Quadrupole_LC_MS, @"MS", @"MS:1000468", @"6110 Quadrupole LC/MS", @"The 6110 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with an entry level single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6110 Quadrupole mass spectrometer has m/z range of 10-1500 and 2500 u/s scan speed. It proves useful for wide range of SIM quantitative applications.", false));
            TermData.Add(CVID.MS_6120A_Quadrupole_LC_MS, new TermInfo(CVID.MS_6120A_Quadrupole_LC_MS, @"MS", @"MS:1000469", @"6120A Quadrupole LC/MS", @"The 6120A Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers. 6120 quadrupole mass spectrometer has m/z range of 10-1500, 2500 u/s scan speed and utilizes multiple signal acquisition.", false));
            TermData.Add(CVID.MS_6130_Quadrupole_LC_MS, new TermInfo(CVID.MS_6130_Quadrupole_LC_MS, @"MS", @"MS:1000470", @"6130 Quadrupole LC/MS", @"The 6130 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 series of Agilent mass spectrometers. The 6130 quadrupole mass spectrometer has m/z range of 2-3000, 2500 u/s scan speed in standard mode and 5250 u/s speed in fast-scan mode. It also uses multiple signal acquisition.", false));
            TermData.Add(CVID.MS_6140_Quadrupole_LC_MS, new TermInfo(CVID.MS_6140_Quadrupole_LC_MS, @"MS", @"MS:1000471", @"6140 Quadrupole LC/MS", @"The 6140 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6140 Quadrupole mass spectrometer has m/z range of 10-1350, 2500 u/s scan speed in standard mode and 10000 u/s speed in fast-scan mode. It also uses multiple signal acquisition.", false));
            TermData.Add(CVID.MS_6210_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6210_Time_of_Flight_LC_MS, @"MS", @"MS:1000472", @"6210 Time-of-Flight LC/MS", @"The 6210 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.", false));
            TermData.Add(CVID.MS_6310_Ion_Trap_LC_MS, new TermInfo(CVID.MS_6310_Ion_Trap_LC_MS, @"MS", @"MS:1000473", @"6310 Ion Trap LC/MS", @"The 6310 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.35 resolution and mass range of 200-4000 with resolution of 3-4. The scan speed varies from 1650-27000 for the respective mass ranges.", false));
            TermData.Add(CVID.MS_6320_Ion_Trap_LC_MS, new TermInfo(CVID.MS_6320_Ion_Trap_LC_MS, @"MS", @"MS:1000474", @"6320 Ion Trap LC/MS", @"The 6320 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.", false));
            TermData.Add(CVID.MS_6330_Ion_Trap_LC_MS, new TermInfo(CVID.MS_6330_Ion_Trap_LC_MS, @"MS", @"MS:1000475", @"6330 Ion Trap LC/MS", @"The 6330 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.", false));
            TermData.Add(CVID.MS_6340_Ion_Trap_LC_MS, new TermInfo(CVID.MS_6340_Ion_Trap_LC_MS, @"MS", @"MS:1000476", @"6340 Ion Trap LC/MS", @"The 6340 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.", false));
            TermData.Add(CVID.MS_6410_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6410_Triple_Quadrupole_LC_MS, @"MS", @"MS:1000477", @"6410 Triple Quadrupole LC/MS", @"The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration.", false));
            TermData.Add(CVID.MS_1200_series_LC_MSD_VL, new TermInfo(CVID.MS_1200_series_LC_MSD_VL, @"MS", @"MS:1000478", @"1200 series LC/MSD VL", @"The LC/MSD VL ion trap is part of the family of Agilent ion trap mass spectrometers. It has ESI, APCI and APPI ion sources and is a useful ion trap when the amount of sample is not the limiting factor.", false));
            TermData.Add(CVID.MS_purgatory_OBSOLETE, new TermInfo(CVID.MS_purgatory_OBSOLETE, @"MS", @"MS:1000479", @"purgatory", @"OBSOLETE Terms that will likely become obsolete unless there are wails of dissent.", true));
            TermData.Add(CVID.MS_mass_analyzer_attribute, new TermInfo(CVID.MS_mass_analyzer_attribute, @"MS", @"MS:1000480", @"mass analyzer attribute", @"Analyzer properties that are associated with a value.", false));
            TermData.Add(CVID.MS_detector_attribute, new TermInfo(CVID.MS_detector_attribute, @"MS", @"MS:1000481", @"detector attribute", @"Detector attribute recognized as a value.", false));
            TermData.Add(CVID.MS_source_attribute, new TermInfo(CVID.MS_source_attribute, @"MS", @"MS:1000482", @"source attribute", @"Property of a source device that need a value.", false));
            TermData.Add(CVID.MS_Thermo_Fisher_Scientific_instrument_model, new TermInfo(CVID.MS_Thermo_Fisher_Scientific_instrument_model, @"MS", @"MS:1000483", @"Thermo Fisher Scientific instrument model", @"Thermo Fisher Scientific instrument model. The company has gone through several names including Thermo Finnigan, Thermo Scientific.", false));
            TermData.Add(CVID.MS_orbitrap, new TermInfo(CVID.MS_orbitrap, @"MS", @"MS:1000484", @"orbitrap", @"An ion trapping device that consists of an outer barrel-like electrode and a coaxial inner spindle-like electrode that form an electrostatic field with quadro-logarithmic potential distribution. The frequency of harmonic oscillations of the orbitally trapped ions along the axis of the electrostatic field is independent of the ion velocity and is inversely proportional to the square root of m/z so that the trap can be used as a mass analyzer.", false));
            TermData.Add(CVID.MS_nanospray_inlet, new TermInfo(CVID.MS_nanospray_inlet, @"MS", @"MS:1000485", @"nanospray inlet", @"Nanospray Inlet.", false));
            TermData.Add(CVID.MS_source_potential, new TermInfo(CVID.MS_source_potential, @"MS", @"MS:1000486", @"source potential", @"Potential difference at the MS source in volts.", false));
            TermData.Add(CVID.MS_ion_optics_attribute, new TermInfo(CVID.MS_ion_optics_attribute, @"MS", @"MS:1000487", @"ion optics attribute", @"Ion optics involves components that help focus ion streams in mass spectrometry.", false));
            TermData.Add(CVID.MS_Hitachi_instrument_model, new TermInfo(CVID.MS_Hitachi_instrument_model, @"MS", @"MS:1000488", @"Hitachi instrument model", @"Hitachi instrument model.", false));
            TermData.Add(CVID.MS_Varian_instrument_model, new TermInfo(CVID.MS_Varian_instrument_model, @"MS", @"MS:1000489", @"Varian instrument model", @"Varian instrument model.", false));
            TermData.Add(CVID.MS_Agilent_instrument_model, new TermInfo(CVID.MS_Agilent_instrument_model, @"MS", @"MS:1000490", @"Agilent instrument model", @"Agilent instrument model.", false));
            TermData.Add(CVID.MS_Dionex_instrument_model, new TermInfo(CVID.MS_Dionex_instrument_model, @"MS", @"MS:1000491", @"Dionex instrument model", @"Dionex instrument model.", false));
            TermData.Add(CVID.MS_Thermo_Electron_instrument_model, new TermInfo(CVID.MS_Thermo_Electron_instrument_model, @"MS", @"MS:1000492", @"Thermo Electron instrument model", @"Thermo Electron Corporation instrument model.", false));
            TermData.Add(CVID.MS_Finnigan_MAT_instrument_model, new TermInfo(CVID.MS_Finnigan_MAT_instrument_model, @"MS", @"MS:1000493", @"Finnigan MAT instrument model", @"Finnigan MAT instrument model.", false));
            TermData.Add(CVID.MS_Thermo_Scientific_instrument_model, new TermInfo(CVID.MS_Thermo_Scientific_instrument_model, @"MS", @"MS:1000494", @"Thermo Scientific instrument model", @"Thermo Scientific instrument model.", false));
            TermData.Add(CVID.MS_Applied_Biosystems_instrument_model, new TermInfo(CVID.MS_Applied_Biosystems_instrument_model, @"MS", @"MS:1000495", @"Applied Biosystems instrument model", @"Applied Biosystems instrument model.", false));
            TermData.Add(CVID.MS_instrument_attribute, new TermInfo(CVID.MS_instrument_attribute, @"MS", @"MS:1000496", @"instrument attribute", @"Instrument properties that are associated with a value.", false));
            TermData.Add(CVID.MS_zoom_scan, new TermInfo(CVID.MS_zoom_scan, @"MS", @"MS:1000497", @"zoom scan", @"Special scan mode where data with improved resolution is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate.", false));
            TermData.Add(CVID.MS_full_scan_OBSOLETE, new TermInfo(CVID.MS_full_scan_OBSOLETE, @"MS", @"MS:1000498", @"full scan", @"OBSOLETE Feature of the ion trap mass spectrometer where MS data is acquired over a mass range.", true));
            TermData.Add(CVID.MS_spectrum_attribute, new TermInfo(CVID.MS_spectrum_attribute, @"MS", @"MS:1000499", @"spectrum attribute", @"Nonphysical characteristic attributed to a spectrum.", false));
            TermData.Add(CVID.MS_scan_window_upper_limit, new TermInfo(CVID.MS_scan_window_upper_limit, @"MS", @"MS:1000500", @"scan window upper limit", @"The lower m/z bound of a mass spectrometer scan window.", false));
            TermData.Add(CVID.MS_scan_window_lower_limit, new TermInfo(CVID.MS_scan_window_lower_limit, @"MS", @"MS:1000501", @"scan window lower limit", @"The upper m/z bound of a mass spectrometer scan window.", false));
            TermData.Add(CVID.MS_dwell_time, new TermInfo(CVID.MS_dwell_time, @"MS", @"MS:1000502", @"dwell time", @"The time spent gathering data across a peak.", false));
            TermData.Add(CVID.MS_scan_attribute, new TermInfo(CVID.MS_scan_attribute, @"MS", @"MS:1000503", @"scan attribute", @"Nonphysical characteristic attributed to a spectrum acquisition scan.", false));
            TermData.Add(CVID.MS_base_peak_m_z, new TermInfo(CVID.MS_base_peak_m_z, @"MS", @"MS:1000504", @"base peak m/z", @"M/z value of the signal of highest intensity in the mass spectrum.", false));
            TermData.Add(CVID.MS_base_peak_intensity, new TermInfo(CVID.MS_base_peak_intensity, @"MS", @"MS:1000505", @"base peak intensity", @"The intensity of the greatest peak in the mass spectrum.", false));
            TermData.Add(CVID.MS_ion_role_OBSOLETE, new TermInfo(CVID.MS_ion_role_OBSOLETE, @"MS", @"MS:1000506", @"ion role", @"OBSOLETE Ion Role.", true));
            TermData.Add(CVID.MS_ion_property, new TermInfo(CVID.MS_ion_property, @"MS", @"MS:1000507", @"ion property", @"Nonphysical characteristic attributed to an ion.", false));
            TermData.Add(CVID.MS_ion_chemical_type_OBSOLETE, new TermInfo(CVID.MS_ion_chemical_type_OBSOLETE, @"MS", @"MS:1000508", @"ion chemical type", @"OBSOLETE Ion Type.", true));
            TermData.Add(CVID.MS_activation_energy, new TermInfo(CVID.MS_activation_energy, @"MS", @"MS:1000509", @"activation energy", @"Activation Energy.", false));
            TermData.Add(CVID.MS_precursor_activation_attribute, new TermInfo(CVID.MS_precursor_activation_attribute, @"MS", @"MS:1000510", @"precursor activation attribute", @"Precursor Activation Attribute.", false));
            TermData.Add(CVID.MS_ms_level, new TermInfo(CVID.MS_ms_level, @"MS", @"MS:1000511", @"ms level", @"Stage number achieved in a multi stage mass spectrometry acquisition.", false));
            TermData.Add(CVID.MS_filter_string, new TermInfo(CVID.MS_filter_string, @"MS", @"MS:1000512", @"filter string", @"A string unique to Thermo instrument describing instrument settings for the scan.", false));
            TermData.Add(CVID.MS_binary_data_array, new TermInfo(CVID.MS_binary_data_array, @"MS", @"MS:1000513", @"binary data array", @"A data array of values.", false));
            TermData.Add(CVID.MS_m_z_array, new TermInfo(CVID.MS_m_z_array, @"MS", @"MS:1000514", @"m/z array", @"A data array of m/z values.", false));
            TermData.Add(CVID.MS_intensity_array, new TermInfo(CVID.MS_intensity_array, @"MS", @"MS:1000515", @"intensity array", @"A data array of intensity values.", false));
            TermData.Add(CVID.MS_charge_array, new TermInfo(CVID.MS_charge_array, @"MS", @"MS:1000516", @"charge array", @"A data array of charge values.", false));
            TermData.Add(CVID.MS_signal_to_noise_array, new TermInfo(CVID.MS_signal_to_noise_array, @"MS", @"MS:1000517", @"signal to noise array", @"A data array of signal-to-noise values.", false));
            TermData.Add(CVID.MS_binary_data_type, new TermInfo(CVID.MS_binary_data_type, @"MS", @"MS:1000518", @"binary data type", @"Encoding type of binary data specifying the binary representation and precision, e.g. 64-bit float.", false));
            TermData.Add(CVID.MS_32_bit_integer, new TermInfo(CVID.MS_32_bit_integer, @"MS", @"MS:1000519", @"32-bit integer", @"Signed 32-bit little-endian integer.", false));
            TermData.Add(CVID.MS_16_bit_float_OBSOLETE, new TermInfo(CVID.MS_16_bit_float_OBSOLETE, @"MS", @"MS:1000520", @"16-bit float", @"OBSOLETE Signed 16-bit float.", true));
            TermData.Add(CVID.MS_32_bit_float, new TermInfo(CVID.MS_32_bit_float, @"MS", @"MS:1000521", @"32-bit float", @"32-bit precision little-endian floating point conforming to IEEE-754.", false));
            TermData.Add(CVID.MS_64_bit_integer, new TermInfo(CVID.MS_64_bit_integer, @"MS", @"MS:1000522", @"64-bit integer", @"Signed 64-bit little-endian integer.", false));
            TermData.Add(CVID.MS_64_bit_float, new TermInfo(CVID.MS_64_bit_float, @"MS", @"MS:1000523", @"64-bit float", @"64-bit precision little-endian floating point conforming to IEEE-754.", false));
            TermData.Add(CVID.MS_data_file_content, new TermInfo(CVID.MS_data_file_content, @"MS", @"MS:1000524", @"data file content", @"Describes the data content on the file.", false));
            TermData.Add(CVID.MS_spectrum_representation, new TermInfo(CVID.MS_spectrum_representation, @"MS", @"MS:1000525", @"spectrum representation", @"Way in which the spectrum is represented, either with regularly spaced data points or with a list of centroided peaks.", false));
            TermData.Add(CVID.MS_Waters_raw_format, new TermInfo(CVID.MS_Waters_raw_format, @"MS", @"MS:1000526", @"Waters raw format", @"Waters data file format found in a Waters RAW directory, generated from an MS acquisition.", false));
            TermData.Add(CVID.MS_highest_observed_m_z, new TermInfo(CVID.MS_highest_observed_m_z, @"MS", @"MS:1000527", @"highest observed m/z", @"Highest m/z value observed in the m/z array.", false));
            TermData.Add(CVID.MS_lowest_observed_m_z, new TermInfo(CVID.MS_lowest_observed_m_z, @"MS", @"MS:1000528", @"lowest observed m/z", @"Lowest m/z value observed in the m/z array.", false));
            TermData.Add(CVID.MS_instrument_serial_number, new TermInfo(CVID.MS_instrument_serial_number, @"MS", @"MS:1000529", @"instrument serial number", @"Serial Number of the instrument.", false));
            TermData.Add(CVID.MS_file_format_conversion, new TermInfo(CVID.MS_file_format_conversion, @"MS", @"MS:1000530", @"file format conversion", @"Conversion of one file format to another.", false));
            TermData.Add(CVID.MS_software, new TermInfo(CVID.MS_software, @"MS", @"MS:1000531", @"software", @"Software related to the recording or transformation of spectra.", false));
            TermData.Add(CVID.MS_Xcalibur, new TermInfo(CVID.MS_Xcalibur, @"MS", @"MS:1000532", @"Xcalibur", @"Thermo Finnigan software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_Bioworks, new TermInfo(CVID.MS_Bioworks, @"MS", @"MS:1000533", @"Bioworks", @"Thermo Finnigan software for data analysis of peptides and proteins.", false));
            TermData.Add(CVID.MS_MassLynx, new TermInfo(CVID.MS_MassLynx, @"MS", @"MS:1000534", @"MassLynx", @"Micromass software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_FlexAnalysis, new TermInfo(CVID.MS_FlexAnalysis, @"MS", @"MS:1000535", @"FlexAnalysis", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_Data_Explorer, new TermInfo(CVID.MS_Data_Explorer, @"MS", @"MS:1000536", @"Data Explorer", @"Applied Biosystems software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_4700_Explorer, new TermInfo(CVID.MS_4700_Explorer, @"MS", @"MS:1000537", @"4700 Explorer", @"Applied Biosystems software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_massWolf, new TermInfo(CVID.MS_massWolf, @"MS", @"MS:1000538", @"massWolf", @"A software for converting Waters raw directory format to mzXML or mzML. MassWolf was originally developed at the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_Voyager_Biospectrometry_Workstation_System, new TermInfo(CVID.MS_Voyager_Biospectrometry_Workstation_System, @"MS", @"MS:1000539", @"Voyager Biospectrometry Workstation System", @"Applied Biosystems MALDI-TOF data acquisition and analysis system.", false));
            TermData.Add(CVID.MS_FlexControl, new TermInfo(CVID.MS_FlexControl, @"MS", @"MS:1000540", @"FlexControl", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_ReAdW, new TermInfo(CVID.MS_ReAdW, @"MS", @"MS:1000541", @"ReAdW", @"A software program for converting Thermo Finnigan RAW file format to mzXML or mzML. ReAdW was originally developed at the Institute for Systems Biology. Its whimsical interleaved spelling and capitalization is pronounced \ readraw\ .", false));
            TermData.Add(CVID.MS_MzStar, new TermInfo(CVID.MS_MzStar, @"MS", @"MS:1000542", @"MzStar", @"A software program for converting Applied Biosystems wiff file format to mzXML format. MzStar was originally developed at the Institute for Systems Biology. It is now obsoleted by the MzWiff program.", false));
            TermData.Add(CVID.MS_data_processing_action, new TermInfo(CVID.MS_data_processing_action, @"MS", @"MS:1000543", @"data processing action", @"Data processing attribute used to describe the type of data processing performed on the data file.", false));
            TermData.Add(CVID.MS_Conversion_to_mzML, new TermInfo(CVID.MS_Conversion_to_mzML, @"MS", @"MS:1000544", @"Conversion to mzML", @"Conversion of a file format to Proteomics Standards Initiative mzML file format.", false));
            TermData.Add(CVID.MS_Conversion_to_mzXML, new TermInfo(CVID.MS_Conversion_to_mzXML, @"MS", @"MS:1000545", @"Conversion to mzXML", @"Conversion of a file format to Institute of Systems Biology mzXML file format.", false));
            TermData.Add(CVID.MS_Conversion_to_mzData, new TermInfo(CVID.MS_Conversion_to_mzData, @"MS", @"MS:1000546", @"Conversion to mzData", @"Conversion of a file format to Proteomics Standards Initiative mzData file format.", false));
            TermData.Add(CVID.MS_object_attribute, new TermInfo(CVID.MS_object_attribute, @"MS", @"MS:1000547", @"object attribute", @"Object Attribute.", false));
            TermData.Add(CVID.MS_sample_attribute, new TermInfo(CVID.MS_sample_attribute, @"MS", @"MS:1000548", @"sample attribute", @"Sample properties that are associated with a value.", false));
            TermData.Add(CVID.MS_selection_window_attribute, new TermInfo(CVID.MS_selection_window_attribute, @"MS", @"MS:1000549", @"selection window attribute", @"Selection window properties that are associated with a value.", false));
            TermData.Add(CVID.MS_time_unit_OBSOLETE, new TermInfo(CVID.MS_time_unit_OBSOLETE, @"MS", @"MS:1000550", @"time unit", @"OBSOLETE Time Unit.", true));
            TermData.Add(CVID.MS_Analyst, new TermInfo(CVID.MS_Analyst, @"MS", @"MS:1000551", @"Analyst", @"SCIEX or Applied Biosystems|MDS SCIEX software for data acquisition.", false));
            TermData.Add(CVID.MS_maldi_spot_identifier_OBSOLETE, new TermInfo(CVID.MS_maldi_spot_identifier_OBSOLETE, @"MS", @"MS:1000552", @"maldi spot identifier", @"OBSOLETE Maldi Spot Identifier.", true));
            TermData.Add(CVID.MS_Trapper, new TermInfo(CVID.MS_Trapper, @"MS", @"MS:1000553", @"Trapper", @"A software program for converting Agilent MassHunter format to mzXML or mzML. Trapper was originally developed at the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_LCQ_Deca, new TermInfo(CVID.MS_LCQ_Deca, @"MS", @"MS:1000554", @"LCQ Deca", @"ThermoFinnigan LCQ Deca.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_Discovery, new TermInfo(CVID.MS_LTQ_Orbitrap_Discovery, @"MS", @"MS:1000555", @"LTQ Orbitrap Discovery", @"LTQ Orbitrap Discovery.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_XL, new TermInfo(CVID.MS_LTQ_Orbitrap_XL, @"MS", @"MS:1000556", @"LTQ Orbitrap XL", @"LTQ Orbitrap XL.", false));
            TermData.Add(CVID.MS_LTQ_FT_Ultra, new TermInfo(CVID.MS_LTQ_FT_Ultra, @"MS", @"MS:1000557", @"LTQ FT Ultra", @"LTQ FT Ultra.", false));
            TermData.Add(CVID.MS_GC_Quantum, new TermInfo(CVID.MS_GC_Quantum, @"MS", @"MS:1000558", @"GC Quantum", @"GC Quantum.", false));
            TermData.Add(CVID.MS_spectrum_type, new TermInfo(CVID.MS_spectrum_type, @"MS", @"MS:1000559", @"spectrum type", @"Spectrum type.", false));
            TermData.Add(CVID.MS_mass_spectrometer_file_format, new TermInfo(CVID.MS_mass_spectrometer_file_format, @"MS", @"MS:1000560", @"mass spectrometer file format", @"The format of the file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format.", false));
            TermData.Add(CVID.MS_data_file_checksum_type, new TermInfo(CVID.MS_data_file_checksum_type, @"MS", @"MS:1000561", @"data file checksum type", @"Checksum is a form of redundancy check, a simple way to protect the integrity of data by detecting errors in data.", false));
            TermData.Add(CVID.MS_ABI_WIFF_format, new TermInfo(CVID.MS_ABI_WIFF_format, @"MS", @"MS:1000562", @"ABI WIFF format", @"Applied Biosystems WIFF file format.", false));
            TermData.Add(CVID.MS_Thermo_RAW_format, new TermInfo(CVID.MS_Thermo_RAW_format, @"MS", @"MS:1000563", @"Thermo RAW format", @"Thermo Scientific RAW file format.", false));
            TermData.Add(CVID.MS_PSI_mzData_format, new TermInfo(CVID.MS_PSI_mzData_format, @"MS", @"MS:1000564", @"PSI mzData format", @"Proteomics Standards Inititative mzData file format.", false));
            TermData.Add(CVID.MS_Micromass_PKL_format, new TermInfo(CVID.MS_Micromass_PKL_format, @"MS", @"MS:1000565", @"Micromass PKL format", @"Micromass PKL file format.", false));
            TermData.Add(CVID.MS_ISB_mzXML_format, new TermInfo(CVID.MS_ISB_mzXML_format, @"MS", @"MS:1000566", @"ISB mzXML format", @"Institute of Systems Biology mzXML file format.", false));
            TermData.Add(CVID.MS_Bruker_Agilent_YEP_format, new TermInfo(CVID.MS_Bruker_Agilent_YEP_format, @"MS", @"MS:1000567", @"Bruker/Agilent YEP format", @"Bruker/Agilent YEP file format.", false));
            TermData.Add(CVID.MS_MD5, new TermInfo(CVID.MS_MD5, @"MS", @"MS:1000568", @"MD5", @"MD5 (Message-Digest algorithm 5) is a cryptographic hash function with a 128-bit hash value used to check the integrity of files.", false));
            TermData.Add(CVID.MS_SHA_1, new TermInfo(CVID.MS_SHA_1, @"MS", @"MS:1000569", @"SHA-1", @"SHA-1 (Secure Hash Algorithm-1) is a cryptographic hash function designed by the National Security Agency (NSA) and published by the NIST as a U. S. government standard. It is also used to verify file integrity.", false));
            TermData.Add(CVID.MS_spectra_combination, new TermInfo(CVID.MS_spectra_combination, @"MS", @"MS:1000570", @"spectra combination", @"Method used to combine the mass spectra.", false));
            TermData.Add(CVID.MS_sum_of_spectra, new TermInfo(CVID.MS_sum_of_spectra, @"MS", @"MS:1000571", @"sum of spectra", @"Spectra Sum.", false));
            TermData.Add(CVID.MS_binary_data_compression_type, new TermInfo(CVID.MS_binary_data_compression_type, @"MS", @"MS:1000572", @"binary data compression type", @"Compression Type.", false));
            TermData.Add(CVID.MS_median_of_spectra, new TermInfo(CVID.MS_median_of_spectra, @"MS", @"MS:1000573", @"median of spectra", @"Spectra is combined by calculating the median of the spectra.", false));
            TermData.Add(CVID.MS_zlib_compression, new TermInfo(CVID.MS_zlib_compression, @"MS", @"MS:1000574", @"zlib compression", @"Zlib.", false));
            TermData.Add(CVID.MS_mean_of_spectra, new TermInfo(CVID.MS_mean_of_spectra, @"MS", @"MS:1000575", @"mean of spectra", @"Spectra is combined by calculating the mean of the spectra.", false));
            TermData.Add(CVID.MS_no_compression, new TermInfo(CVID.MS_no_compression, @"MS", @"MS:1000576", @"no compression", @"No Compression.", false));
            TermData.Add(CVID.MS_source_data_file, new TermInfo(CVID.MS_source_data_file, @"MS", @"MS:1000577", @"source data file", @"Data file from which an entity is sourced.", false));
            TermData.Add(CVID.MS_LCQ_Fleet, new TermInfo(CVID.MS_LCQ_Fleet, @"MS", @"MS:1000578", @"LCQ Fleet", @"LCQ Fleet.", false));
            TermData.Add(CVID.MS_MS1_spectrum, new TermInfo(CVID.MS_MS1_spectrum, @"MS", @"MS:1000579", @"MS1 spectrum", @"Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.", false));
            TermData.Add(CVID.MS_MSn_spectrum, new TermInfo(CVID.MS_MSn_spectrum, @"MS", @"MS:1000580", @"MSn spectrum", @"MSn refers to multi-stage MS2 experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n > 2 whereas for a simple triple quadrupole system n=2. Use the term ms level (MS:1000511) for specifying n.", false));
            TermData.Add(CVID.MS_CRM_spectrum, new TermInfo(CVID.MS_CRM_spectrum, @"MS", @"MS:1000581", @"CRM spectrum", @"Spectrum generated from MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.", false));
            TermData.Add(CVID.MS_SIM_spectrum, new TermInfo(CVID.MS_SIM_spectrum, @"MS", @"MS:1000582", @"SIM spectrum", @"Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).", false));
            TermData.Add(CVID.MS_SRM_spectrum, new TermInfo(CVID.MS_SRM_spectrum, @"MS", @"MS:1000583", @"SRM spectrum", @"Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair. Data can be obtained for a single transition pair or multiple transition pairs. Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs. Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.", false));
            TermData.Add(CVID.MS_mzML_format, new TermInfo(CVID.MS_mzML_format, @"MS", @"MS:1000584", @"mzML format", @"Proteomics Standards Inititative mzML file format.", false));
            TermData.Add(CVID.MS_contact_attribute, new TermInfo(CVID.MS_contact_attribute, @"MS", @"MS:1000585", @"contact attribute", @"Details about a person or organization to contact in case of concern or discussion about the file.", false));
            TermData.Add(CVID.MS_contact_name, new TermInfo(CVID.MS_contact_name, @"MS", @"MS:1000586", @"contact name", @"Name of the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_address, new TermInfo(CVID.MS_contact_address, @"MS", @"MS:1000587", @"contact address", @"Postal address of the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_URL, new TermInfo(CVID.MS_contact_URL, @"MS", @"MS:1000588", @"contact URL", @"Uniform Resource Locator related to the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_email, new TermInfo(CVID.MS_contact_email, @"MS", @"MS:1000589", @"contact email", @"Email address of the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_affiliation, new TermInfo(CVID.MS_contact_affiliation, @"MS", @"MS:1000590", @"contact affiliation", @"Home institution of the contact person.", false));
            TermData.Add(CVID.MS_MzWiff, new TermInfo(CVID.MS_MzWiff, @"MS", @"MS:1000591", @"MzWiff", @"A software program for converting Applied Biosystems wiff file format to the mzXML or mzML format. MzWiff is currently maintained at the Institute for Systems Biology. It replaces the slower mzStar program.", false));
            TermData.Add(CVID.MS_smoothing, new TermInfo(CVID.MS_smoothing, @"MS", @"MS:1000592", @"smoothing", @"A process of reducing spikes of intensity in order to reduce noise while preserving real peak signal. Many algorithms can be applied for this process.", false));
            TermData.Add(CVID.MS_baseline_reduction, new TermInfo(CVID.MS_baseline_reduction, @"MS", @"MS:1000593", @"baseline reduction", @"A process of removal of varying intensities generated due to variable energy absorption before further processing can take place. Baseline reduction facilitates meaningful comparision between intensities of m/z values.", false));
            TermData.Add(CVID.MS_low_intensity_data_point_removal, new TermInfo(CVID.MS_low_intensity_data_point_removal, @"MS", @"MS:1000594", @"low intensity data point removal", @"The removal of very low intensity data points that are likely to be spurious noise rather than real signal.", false));
            TermData.Add(CVID.MS_time_array, new TermInfo(CVID.MS_time_array, @"MS", @"MS:1000595", @"time array", @"A data array of relative time offset values from a reference time.", false));
            TermData.Add(CVID.MS_measurement_method, new TermInfo(CVID.MS_measurement_method, @"MS", @"MS:1000596", @"measurement method", @"An attribute of resolution when recording the detector response in absence of the analyte.", false));
            TermData.Add(CVID.MS_ion_optics_type, new TermInfo(CVID.MS_ion_optics_type, @"MS", @"MS:1000597", @"ion optics type", @"The electrical potential used to impart kinetic energy to ions in a mass spectrometer.", false));
            TermData.Add(CVID.MS_electron_transfer_dissociation, new TermInfo(CVID.MS_electron_transfer_dissociation, @"MS", @"MS:1000598", @"electron transfer dissociation", @"A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them.", false));
            TermData.Add(CVID.MS_pulsed_q_dissociation, new TermInfo(CVID.MS_pulsed_q_dissociation, @"MS", @"MS:1000599", @"pulsed q dissociation", @"A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected.", false));
            TermData.Add(CVID.MS_Proteios, new TermInfo(CVID.MS_Proteios, @"MS", @"MS:1000600", @"Proteios", @"Database application and analysis platform for proteomics.", false));
            TermData.Add(CVID.MS_ProteinLynx_Global_Server, new TermInfo(CVID.MS_ProteinLynx_Global_Server, @"MS", @"MS:1000601", @"ProteinLynx Global Server", @"Waters software for data analysis.", false));
            TermData.Add(CVID.MS_Shimadzu_MALDI_TOF_instrument_model, new TermInfo(CVID.MS_Shimadzu_MALDI_TOF_instrument_model, @"MS", @"MS:1000602", @"Shimadzu MALDI-TOF instrument model", @"Shimadzu MALDI-TOF instrument model.", false));
            TermData.Add(CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, new TermInfo(CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, @"MS", @"MS:1000603", @"Shimadzu Scientific Instruments instrument model", @"Shimadzu Scientific Instruments instrument model.", false));
            TermData.Add(CVID.MS_LCMS_IT_TOF, new TermInfo(CVID.MS_LCMS_IT_TOF, @"MS", @"MS:1000604", @"LCMS-IT-TOF", @"Shimadzu Scientific Instruments LCMS-IT-TOF MS.", false));
            TermData.Add(CVID.MS_LCMS_2010EV, new TermInfo(CVID.MS_LCMS_2010EV, @"MS", @"MS:1000605", @"LCMS-2010EV", @"Shimadzu Scientific Instruments LCMS-2010EV MS.", false));
            TermData.Add(CVID.MS_LCMS_2010A, new TermInfo(CVID.MS_LCMS_2010A, @"MS", @"MS:1000606", @"LCMS-2010A", @"Shimadzu Scientific Instruments LCMS-2010A MS.", false));
            TermData.Add(CVID.MS_AXIMA_CFR_MALDI_TOF, new TermInfo(CVID.MS_AXIMA_CFR_MALDI_TOF, @"MS", @"MS:1000607", @"AXIMA CFR MALDI-TOF", @"Shimadzu Biotech AXIMA CFR MALDI-TOF MS.", false));
            TermData.Add(CVID.MS_AXIMA_QIT, new TermInfo(CVID.MS_AXIMA_QIT, @"MS", @"MS:1000608", @"AXIMA-QIT", @"Shimadzu Biotech AXIMA-QIT MS.", false));
            TermData.Add(CVID.MS_AXIMA_CFR_plus, new TermInfo(CVID.MS_AXIMA_CFR_plus, @"MS", @"MS:1000609", @"AXIMA-CFR plus", @"Shimadzu Biotech AXIMA-CFR plus MS.", false));
            TermData.Add(CVID.MS_AXIMA_Performance_MALDI_TOF_TOF, new TermInfo(CVID.MS_AXIMA_Performance_MALDI_TOF_TOF, @"MS", @"MS:1000610", @"AXIMA Performance MALDI-TOF/TOF", @"Shimadzu Biotech AXIMA Performance MALDI-TOF/TOF MS.", false));
            TermData.Add(CVID.MS_AXIMA_Confidence_MALDI_TOF, new TermInfo(CVID.MS_AXIMA_Confidence_MALDI_TOF, @"MS", @"MS:1000611", @"AXIMA Confidence MALDI-TOF", @"Shimadzu Biotech AXIMA Confidence MALDI-TOF (curved field reflectron) MS.", false));
            TermData.Add(CVID.MS_AXIMA_Assurance_Linear_MALDI_TOF, new TermInfo(CVID.MS_AXIMA_Assurance_Linear_MALDI_TOF, @"MS", @"MS:1000612", @"AXIMA Assurance Linear MALDI-TOF", @"Shimadzu Biotech AXIMA Assurance Linear MALDI-TOF MS.", false));
            TermData.Add(CVID.MS_DTA_format, new TermInfo(CVID.MS_DTA_format, @"MS", @"MS:1000613", @"DTA format", @"SEQUEST DTA file format.", false));
            TermData.Add(CVID.MS_ProteinLynx_Global_Server_mass_spectrum_XML_format, new TermInfo(CVID.MS_ProteinLynx_Global_Server_mass_spectrum_XML_format, @"MS", @"MS:1000614", @"ProteinLynx Global Server mass spectrum XML format", @"Peak list file format used by ProteinLynx Global Server.", false));
            TermData.Add(CVID.MS_ProteoWizard_software, new TermInfo(CVID.MS_ProteoWizard_software, @"MS", @"MS:1000615", @"ProteoWizard software", @"ProteoWizard software for data processing and analysis. Primarily developed by the labs of P. Malick and D. Tabb.", false));
            TermData.Add(CVID.MS_preset_scan_configuration, new TermInfo(CVID.MS_preset_scan_configuration, @"MS", @"MS:1000616", @"preset scan configuration", @"A user-defined scan configuration that specifies the instrumental settings in which a spectrum is acquired. An instrument may cycle through a list of preset scan configurations to acquire data. This is a more generic term for the Thermo \ scan event\ , which is defined in the Thermo Xcalibur glossary as: a mass spectrometer scan that is defined by choosing the necessary scan parameter settings. Multiple scan events can be defined for each segment of time.", false));
            TermData.Add(CVID.MS_wavelength_array, new TermInfo(CVID.MS_wavelength_array, @"MS", @"MS:1000617", @"wavelength array", @"A data array of electromagnetic radiation wavelength values.", false));
            TermData.Add(CVID.MS_highest_observed_wavelength, new TermInfo(CVID.MS_highest_observed_wavelength, @"MS", @"MS:1000618", @"highest observed wavelength", @"Highest wavelength observed in an EMR spectrum.", false));
            TermData.Add(CVID.MS_lowest_observed_wavelength, new TermInfo(CVID.MS_lowest_observed_wavelength, @"MS", @"MS:1000619", @"lowest observed wavelength", @"Lowest wavelength observed in an EMR spectrum.", false));
            TermData.Add(CVID.MS_PDA_spectrum_OBSOLETE, new TermInfo(CVID.MS_PDA_spectrum_OBSOLETE, @"MS", @"MS:1000620", @"PDA spectrum", @"OBSOLETE Spectrum generated from a photodiode array detector (ultraviolet/visible spectrum).", true));
            TermData.Add(CVID.MS_photodiode_array_detector, new TermInfo(CVID.MS_photodiode_array_detector, @"MS", @"MS:1000621", @"photodiode array detector", @"An array detector used to record spectra in the ultraviolet and visible region of light.", false));
            TermData.Add(CVID.MS_Surveyor_PDA, new TermInfo(CVID.MS_Surveyor_PDA, @"MS", @"MS:1000622", @"Surveyor PDA", @"Surveyor PDA.", false));
            TermData.Add(CVID.MS_Accela_PDA, new TermInfo(CVID.MS_Accela_PDA, @"MS", @"MS:1000623", @"Accela PDA", @"Accela PDA.", false));
            TermData.Add(CVID.MS_inductive_detector, new TermInfo(CVID.MS_inductive_detector, @"MS", @"MS:1000624", @"inductive detector", @"Inductive detector.", false));
            TermData.Add(CVID.MS_chromatogram, new TermInfo(CVID.MS_chromatogram, @"MS", @"MS:1000625", @"chromatogram", @"Representation of a chromatographic separation attribute measurement versus time.", false));
            TermData.Add(CVID.MS_chromatogram_type, new TermInfo(CVID.MS_chromatogram_type, @"MS", @"MS:1000626", @"chromatogram type", @"Type of chromatogram measurement being represented.", false));
            TermData.Add(CVID.MS_selected_ion_current_chromatogram, new TermInfo(CVID.MS_selected_ion_current_chromatogram, @"MS", @"MS:1000627", @"selected ion current chromatogram", @"Representation of an array of the measurements of a specific single ion current versus time.", false));
            TermData.Add(CVID.MS_basepeak_chromatogram, new TermInfo(CVID.MS_basepeak_chromatogram, @"MS", @"MS:1000628", @"basepeak chromatogram", @"Representation of an array of the most intense peaks versus time.", false));
            TermData.Add(CVID.MS_low_intensity_threshold, new TermInfo(CVID.MS_low_intensity_threshold, @"MS", @"MS:1000629", @"low intensity threshold", @"Threshold below which some action is taken.", false));
            TermData.Add(CVID.MS_data_processing_parameter, new TermInfo(CVID.MS_data_processing_parameter, @"MS", @"MS:1000630", @"data processing parameter", @"Data processing parameter used in the data processing performed on the data file.", false));
            TermData.Add(CVID.MS_high_intensity_threshold, new TermInfo(CVID.MS_high_intensity_threshold, @"MS", @"MS:1000631", @"high intensity threshold", @"Threshold above which some action is taken.", false));
            TermData.Add(CVID.MS_Q_Tof_Premier, new TermInfo(CVID.MS_Q_Tof_Premier, @"MS", @"MS:1000632", @"Q-Tof Premier", @"Waters oa-ToF based Q-Tof Premier.", false));
            TermData.Add(CVID.MS_possible_charge_state, new TermInfo(CVID.MS_possible_charge_state, @"MS", @"MS:1000633", @"possible charge state", @"A possible charge state of the ion in a situation where the charge of an ion is known to be one of several possible values rather than a completely unknown value or determined to be a specific charge with reasonable certainty.", false));
            TermData.Add(CVID.MS_DSQ, new TermInfo(CVID.MS_DSQ, @"MS", @"MS:1000634", @"DSQ", @"ThermoFinnigan DSQ GC-MS.", false));
            TermData.Add(CVID.MS_ITQ_700, new TermInfo(CVID.MS_ITQ_700, @"MS", @"MS:1000635", @"ITQ 700", @"Thermo Scientific ITQ 700 GC-MS.", false));
            TermData.Add(CVID.MS_ITQ_900, new TermInfo(CVID.MS_ITQ_900, @"MS", @"MS:1000636", @"ITQ 900", @"Thermo Scientific ITQ 900 GC-MS.", false));
            TermData.Add(CVID.MS_ITQ_1100, new TermInfo(CVID.MS_ITQ_1100, @"MS", @"MS:1000637", @"ITQ 1100", @"Thermo Scientific ITQ 1100 GC-MS.", false));
            TermData.Add(CVID.MS_LTQ_XL_ETD, new TermInfo(CVID.MS_LTQ_XL_ETD, @"MS", @"MS:1000638", @"LTQ XL ETD", @"Thermo Scientific LTQ XL MS with ETD.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_XL_ETD, new TermInfo(CVID.MS_LTQ_Orbitrap_XL_ETD, @"MS", @"MS:1000639", @"LTQ Orbitrap XL ETD", @"Thermo Scientific LTQ Orbitrap XL MS with ETD.", false));
            TermData.Add(CVID.MS_DFS, new TermInfo(CVID.MS_DFS, @"MS", @"MS:1000640", @"DFS", @"Thermo Scientific DFS HR GC-MS.", false));
            TermData.Add(CVID.MS_DSQ_II, new TermInfo(CVID.MS_DSQ_II, @"MS", @"MS:1000641", @"DSQ II", @"Thermo Scientific DSQ II GC-MS.", false));
            TermData.Add(CVID.MS_MALDI_LTQ_XL, new TermInfo(CVID.MS_MALDI_LTQ_XL, @"MS", @"MS:1000642", @"MALDI LTQ XL", @"Thermo Scientific MALDI LTQ XL MS.", false));
            TermData.Add(CVID.MS_MALDI_LTQ_Orbitrap, new TermInfo(CVID.MS_MALDI_LTQ_Orbitrap, @"MS", @"MS:1000643", @"MALDI LTQ Orbitrap", @"Thermo Scientific MALDI LTQ Orbitrap MS.", false));
            TermData.Add(CVID.MS_TSQ_Quantum_Access, new TermInfo(CVID.MS_TSQ_Quantum_Access, @"MS", @"MS:1000644", @"TSQ Quantum Access", @"Thermo Scientific TSQ Quantum Access MS.", false));
            TermData.Add(CVID.MS_Element_XR, new TermInfo(CVID.MS_Element_XR, @"MS", @"MS:1000645", @"Element XR", @"Thermo Scientific Element XR HR-ICP-MS.", false));
            TermData.Add(CVID.MS_Element_2, new TermInfo(CVID.MS_Element_2, @"MS", @"MS:1000646", @"Element 2", @"Thermo Scientific Element 2 HR-ICP-MS.", false));
            TermData.Add(CVID.MS_Element_GD, new TermInfo(CVID.MS_Element_GD, @"MS", @"MS:1000647", @"Element GD", @"Thermo Scientific Element GD Glow Discharge MS.", false));
            TermData.Add(CVID.MS_GC_IsoLink, new TermInfo(CVID.MS_GC_IsoLink, @"MS", @"MS:1000648", @"GC IsoLink", @"Thermo Scientific GC IsoLink Isotope Ratio MS.", false));
            TermData.Add(CVID.MS_Exactive, new TermInfo(CVID.MS_Exactive, @"MS", @"MS:1000649", @"Exactive", @"Thermo Scientific Exactive MS.", false));
            TermData.Add(CVID.MS_Proteome_Discoverer, new TermInfo(CVID.MS_Proteome_Discoverer, @"MS", @"MS:1000650", @"Proteome Discoverer", @"Thermo Scientific software for data analysis of peptides and proteins.", false));
            TermData.Add(CVID.MS_3200_QTRAP, new TermInfo(CVID.MS_3200_QTRAP, @"MS", @"MS:1000651", @"3200 QTRAP", @"SCIEX or Applied Biosystems|MDS SCIEX QTRAP 3200.", false));
            TermData.Add(CVID.MS_4800_Plus_MALDI_TOF_TOF, new TermInfo(CVID.MS_4800_Plus_MALDI_TOF_TOF, @"MS", @"MS:1000652", @"4800 Plus MALDI TOF/TOF", @"SCIEX or Applied Biosystems|MDS SCIEX 4800 Plus MALDI TOF-TOF Analyzer.", false));
            TermData.Add(CVID.MS_API_3200, new TermInfo(CVID.MS_API_3200, @"MS", @"MS:1000653", @"API 3200", @"SCIEX or Applied Biosystems|MDS SCIEX API 3200 MS.", false));
            TermData.Add(CVID.MS_API_5000, new TermInfo(CVID.MS_API_5000, @"MS", @"MS:1000654", @"API 5000", @"SCIEX or Applied Biosystems|MDS SCIEX API 5000 MS.", false));
            TermData.Add(CVID.MS_QSTAR_Elite, new TermInfo(CVID.MS_QSTAR_Elite, @"MS", @"MS:1000655", @"QSTAR Elite", @"SCIEX or Applied Biosystems|MDS SCIEX QSTAR Elite.", false));
            TermData.Add(CVID.MS_QSTAR_Pulsar, new TermInfo(CVID.MS_QSTAR_Pulsar, @"MS", @"MS:1000656", @"QSTAR Pulsar", @"Applied Biosystems|MDS SCIEX QSTAR Pulsar.", false));
            TermData.Add(CVID.MS_QSTAR_XL, new TermInfo(CVID.MS_QSTAR_XL, @"MS", @"MS:1000657", @"QSTAR XL", @"Applied Biosystems|MDS SCIEX QSTAR XL.", false));
            TermData.Add(CVID.MS_4800_Proteomics_Analyzer, new TermInfo(CVID.MS_4800_Proteomics_Analyzer, @"MS", @"MS:1000658", @"4800 Proteomics Analyzer", @"Applied Biosystems|MDS SCIEX 4800 Proteomics Analyzer.", false));
            TermData.Add(CVID.MS_4000_Series_Explorer_Software, new TermInfo(CVID.MS_4000_Series_Explorer_Software, @"MS", @"MS:1000659", @"4000 Series Explorer Software", @"SCIEX or Applied Biosystems software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_GPS_Explorer, new TermInfo(CVID.MS_GPS_Explorer, @"MS", @"MS:1000661", @"GPS Explorer", @"SCIEX or Applied Biosystems software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_LightSight_Software, new TermInfo(CVID.MS_LightSight_Software, @"MS", @"MS:1000662", @"LightSight Software", @"SCIEX or Applied Biosystems|MDS SCIEX software metabolite identification.", false));
            TermData.Add(CVID.MS_ProteinPilot_Software, new TermInfo(CVID.MS_ProteinPilot_Software, @"MS", @"MS:1000663", @"ProteinPilot Software", @"SCIEX or Applied Biosystems|MDS SCIEX software for protein ID and quant.", false));
            TermData.Add(CVID.MS_TissueView_Software, new TermInfo(CVID.MS_TissueView_Software, @"MS", @"MS:1000664", @"TissueView Software", @"Applied Biosystems|MDS SCIEX software for tissue imaging.", false));
            TermData.Add(CVID.MS_MarkerView_Software, new TermInfo(CVID.MS_MarkerView_Software, @"MS", @"MS:1000665", @"MarkerView Software", @"Applied Biosystems|MDS SCIEX software for metabolomics and biomarker profiling.", false));
            TermData.Add(CVID.MS_MRMPilot_Software, new TermInfo(CVID.MS_MRMPilot_Software, @"MS", @"MS:1000666", @"MRMPilot Software", @"Applied Biosystems|MDS SCIEX software for MRM assay development.", false));
            TermData.Add(CVID.MS_BioAnalyst, new TermInfo(CVID.MS_BioAnalyst, @"MS", @"MS:1000667", @"BioAnalyst", @"Applied Biosystems|MDS SCIEX software for bio-related data exploration.", false));
            TermData.Add(CVID.MS_Pro_ID, new TermInfo(CVID.MS_Pro_ID, @"MS", @"MS:1000668", @"Pro ID", @"Applied Biosystems|MDS SCIEX software for protein identification.", false));
            TermData.Add(CVID.MS_Pro_ICAT, new TermInfo(CVID.MS_Pro_ICAT, @"MS", @"MS:1000669", @"Pro ICAT", @"Applied Biosystems|MDS SCIEX software for protein ID and quant by ICAT.", false));
            TermData.Add(CVID.MS_Pro_Quant, new TermInfo(CVID.MS_Pro_Quant, @"MS", @"MS:1000670", @"Pro Quant", @"Applied Biosystems|MDS SCIEX software for protein ID and quant by iTRAQ.", false));
            TermData.Add(CVID.MS_Pro_BLAST, new TermInfo(CVID.MS_Pro_BLAST, @"MS", @"MS:1000671", @"Pro BLAST", @"Applied Biosystems|MDS SCIEX software for MS-BLAST identification.", false));
            TermData.Add(CVID.MS_Cliquid, new TermInfo(CVID.MS_Cliquid, @"MS", @"MS:1000672", @"Cliquid", @"SCIEX Cliquid software for data analysis and quantitation.", false));
            TermData.Add(CVID.MS_MIDAS_Workflow_Designer, new TermInfo(CVID.MS_MIDAS_Workflow_Designer, @"MS", @"MS:1000673", @"MIDAS Workflow Designer", @"Applied Biosystems|MDS SCIEX software for MRM assay development.", false));
            TermData.Add(CVID.MS_MultiQuant, new TermInfo(CVID.MS_MultiQuant, @"MS", @"MS:1000674", @"MultiQuant", @"Applied Biosystems|MDS SCIEX software for MRM-based quantitation.", false));
            TermData.Add(CVID.MS_6220_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6220_Time_of_Flight_LC_MS, @"MS", @"MS:1000675", @"6220 Time-of-Flight LC/MS", @"The 6220 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.", false));
            TermData.Add(CVID.MS_6510_Quadrupole_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6510_Quadrupole_Time_of_Flight_LC_MS, @"MS", @"MS:1000676", @"6510 Quadrupole Time-of-Flight LC/MS", @"The 6510 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.", false));
            TermData.Add(CVID.MS_6520A_Quadrupole_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6520A_Quadrupole_Time_of_Flight_LC_MS, @"MS", @"MS:1000677", @"6520A Quadrupole Time-of-Flight LC/MS", @"The 6520A Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 26,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.", false));
            TermData.Add(CVID.MS_MassHunter_Data_Acquisition, new TermInfo(CVID.MS_MassHunter_Data_Acquisition, @"MS", @"MS:1000678", @"MassHunter Data Acquisition", @"Software for data acquisition of 6000 series instruments.", false));
            TermData.Add(CVID.MS_MassHunter_Easy_Access, new TermInfo(CVID.MS_MassHunter_Easy_Access, @"MS", @"MS:1000679", @"MassHunter Easy Access", @"Software for open access data acquisition.", false));
            TermData.Add(CVID.MS_MassHunter_Qualitative_Analysis, new TermInfo(CVID.MS_MassHunter_Qualitative_Analysis, @"MS", @"MS:1000680", @"MassHunter Qualitative Analysis", @"Software for data analysis of data from 6000 series instruments.", false));
            TermData.Add(CVID.MS_MassHunter_Quantitative_Analysis, new TermInfo(CVID.MS_MassHunter_Quantitative_Analysis, @"MS", @"MS:1000681", @"MassHunter Quantitative Analysis", @"Software for quantitation of Triple Quadrupole and Quadrupole Time-of-Flight data.", false));
            TermData.Add(CVID.MS_MassHunter_Metabolite_ID, new TermInfo(CVID.MS_MassHunter_Metabolite_ID, @"MS", @"MS:1000682", @"MassHunter Metabolite ID", @"Software for identification of metabolites.", false));
            TermData.Add(CVID.MS_MassHunter_BioConfirm, new TermInfo(CVID.MS_MassHunter_BioConfirm, @"MS", @"MS:1000683", @"MassHunter BioConfirm", @"Software for protein characterization.", false));
            TermData.Add(CVID.MS_Genespring_MS, new TermInfo(CVID.MS_Genespring_MS, @"MS", @"MS:1000684", @"Genespring MS", @"Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.", false));
            TermData.Add(CVID.MS_MassHunter_Mass_Profiler, new TermInfo(CVID.MS_MassHunter_Mass_Profiler, @"MS", @"MS:1000685", @"MassHunter Mass Profiler", @"Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.", false));
            TermData.Add(CVID.MS_METLIN, new TermInfo(CVID.MS_METLIN, @"MS", @"MS:1000686", @"METLIN", @"Personal Metabolite Database for MassHunter Workstation. Software for identification of human metabolites.", false));
            TermData.Add(CVID.MS_Spectrum_Mill_for_MassHunter_Workstation, new TermInfo(CVID.MS_Spectrum_Mill_for_MassHunter_Workstation, @"MS", @"MS:1000687", @"Spectrum Mill for MassHunter Workstation", @"Software for protein identification and characterization of complex protein digest mixtures.", false));
            TermData.Add(CVID.MS_6300_Series_Ion_Trap_Data_Analysis_Software, new TermInfo(CVID.MS_6300_Series_Ion_Trap_Data_Analysis_Software, @"MS", @"MS:1000688", @"6300 Series Ion Trap Data Analysis Software", @"Software for data analysis of 6300 series ion trap mass spectrometers.", false));
            TermData.Add(CVID.MS_Agilent_software, new TermInfo(CVID.MS_Agilent_software, @"MS", @"MS:1000689", @"Agilent software", @"Agilent software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_SCIEX_software, new TermInfo(CVID.MS_SCIEX_software, @"MS", @"MS:1000690", @"SCIEX software", @"SCIEX or Applied Biosystems software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_Applied_Biosystems_software, new TermInfo(CVID.MS_Applied_Biosystems_software, @"MS", @"MS:1000691", @"Applied Biosystems software", @"Applied Biosystems|MDS SCIEX software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_Bruker_software, new TermInfo(CVID.MS_Bruker_software, @"MS", @"MS:1000692", @"Bruker software", @"Bruker software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_Thermo_Finnigan_software, new TermInfo(CVID.MS_Thermo_Finnigan_software, @"MS", @"MS:1000693", @"Thermo Finnigan software", @"Thermo Finnigan software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_Waters_software, new TermInfo(CVID.MS_Waters_software, @"MS", @"MS:1000694", @"Waters software", @"Waters software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_apex_ultra, new TermInfo(CVID.MS_apex_ultra, @"MS", @"MS:1000695", @"apex ultra", @"Bruker Daltonics' apex ultra: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.", false));
            TermData.Add(CVID.MS_autoflex_III_smartbeam, new TermInfo(CVID.MS_autoflex_III_smartbeam, @"MS", @"MS:1000696", @"autoflex III smartbeam", @"Bruker Daltonics' autoflex III smartbeam: MALDI TOF.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_HCT_Series, new TermInfo(CVID.MS_Bruker_Daltonics_HCT_Series, @"MS", @"MS:1000697", @"Bruker Daltonics HCT Series", @"Bruker Daltonics' HCT Series.", false));
            TermData.Add(CVID.MS_HCTultra, new TermInfo(CVID.MS_HCTultra, @"MS", @"MS:1000698", @"HCTultra", @"Bruker Daltonics' HCTultra: ESI TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_HCTultra_PTM, new TermInfo(CVID.MS_HCTultra_PTM, @"MS", @"MS:1000699", @"HCTultra PTM", @"Bruker Daltonics' HCTultra PTM: ESI TOF, Nanospray, APCI, APPI, PTR.", false));
            TermData.Add(CVID.MS_HCTultra_ETD_II, new TermInfo(CVID.MS_HCTultra_ETD_II, @"MS", @"MS:1000700", @"HCTultra ETD II", @"Bruker Daltonics' HCTultra ETD II: ESI Q-TOF, Nanospray, APCI, APPI, ETD.", false));
            TermData.Add(CVID.MS_microflex_LT, new TermInfo(CVID.MS_microflex_LT, @"MS", @"MS:1000701", @"microflex LT", @"Bruker Daltonics' microflex LT: MALDI TOF.", false));
            TermData.Add(CVID.MS_micrOTOF, new TermInfo(CVID.MS_micrOTOF, @"MS", @"MS:1000702", @"micrOTOF", @"Bruker Daltonics' micrOTOF: ESI TOF, APCI, APPI.", false));
            TermData.Add(CVID.MS_micrOTOF_Q, new TermInfo(CVID.MS_micrOTOF_Q, @"MS", @"MS:1000703", @"micrOTOF-Q", @"Bruker Daltonics' micrOTOF-Q: ESI Q-TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_micrOTOF_Q_II, new TermInfo(CVID.MS_micrOTOF_Q_II, @"MS", @"MS:1000704", @"micrOTOF-Q II", @"Bruker Daltonics' micrOTOF-Q II: ESI Q-TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_ultraflex_III_TOF_TOF, new TermInfo(CVID.MS_ultraflex_III_TOF_TOF, @"MS", @"MS:1000705", @"ultraflex III TOF/TOF", @"Bruker Daltonics' ultraflex III TOF/TOF: MALDI TOF.", false));
            TermData.Add(CVID.MS_apexControl, new TermInfo(CVID.MS_apexControl, @"MS", @"MS:1000706", @"apexControl", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_BioTools, new TermInfo(CVID.MS_BioTools, @"MS", @"MS:1000707", @"BioTools", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_CLINPROT, new TermInfo(CVID.MS_CLINPROT, @"MS", @"MS:1000708", @"CLINPROT", @"Bruker CLINPROT software.", false));
            TermData.Add(CVID.MS_CLINPROT_micro, new TermInfo(CVID.MS_CLINPROT_micro, @"MS", @"MS:1000709", @"CLINPROT micro", @"Bruker CLINPROT micro software.", false));
            TermData.Add(CVID.MS_CLINPROT_robot, new TermInfo(CVID.MS_CLINPROT_robot, @"MS", @"MS:1000710", @"CLINPROT robot", @"Bruker CLINPROT robot software.", false));
            TermData.Add(CVID.MS_ClinProTools, new TermInfo(CVID.MS_ClinProTools, @"MS", @"MS:1000711", @"ClinProTools", @"Bruker ClinProTools software.", false));
            TermData.Add(CVID.MS_Compass, new TermInfo(CVID.MS_Compass, @"MS", @"MS:1000712", @"Compass", @"Bruker Compass software.", false));
            TermData.Add(CVID.MS_Compass_for_HCT_esquire, new TermInfo(CVID.MS_Compass_for_HCT_esquire, @"MS", @"MS:1000713", @"Compass for HCT/esquire", @"Bruker Compass for HCT/esquire software.", false));
            TermData.Add(CVID.MS_Compass_for_micrOTOF, new TermInfo(CVID.MS_Compass_for_micrOTOF, @"MS", @"MS:1000714", @"Compass for micrOTOF", @"Bruker Compass for micrOTOF software.", false));
            TermData.Add(CVID.MS_Compass_OpenAccess, new TermInfo(CVID.MS_Compass_OpenAccess, @"MS", @"MS:1000715", @"Compass OpenAccess", @"Bruker compass OpenAccess software.", false));
            TermData.Add(CVID.MS_Compass_Security_Pack, new TermInfo(CVID.MS_Compass_Security_Pack, @"MS", @"MS:1000716", @"Compass Security Pack", @"Bruker compass Security Pack software.", false));
            TermData.Add(CVID.MS_CompassXport, new TermInfo(CVID.MS_CompassXport, @"MS", @"MS:1000717", @"CompassXport", @"Bruker stand-alone software for data conversion.", false));
            TermData.Add(CVID.MS_CompassXtract, new TermInfo(CVID.MS_CompassXtract, @"MS", @"MS:1000718", @"CompassXtract", @"Bruker software library for data access.", false));
            TermData.Add(CVID.MS_DataAnalysis, new TermInfo(CVID.MS_DataAnalysis, @"MS", @"MS:1000719", @"DataAnalysis", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_dpControl, new TermInfo(CVID.MS_dpControl, @"MS", @"MS:1000720", @"dpControl", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_esquireControl, new TermInfo(CVID.MS_esquireControl, @"MS", @"MS:1000721", @"esquireControl", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_flexImaging, new TermInfo(CVID.MS_flexImaging, @"MS", @"MS:1000722", @"flexImaging", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_GENOLINK, new TermInfo(CVID.MS_GENOLINK, @"MS", @"MS:1000723", @"GENOLINK", @"Bruker GENOLINK software.", false));
            TermData.Add(CVID.MS_GenoTools, new TermInfo(CVID.MS_GenoTools, @"MS", @"MS:1000724", @"GenoTools", @"Bruker GenoTools software.", false));
            TermData.Add(CVID.MS_HCTcontrol, new TermInfo(CVID.MS_HCTcontrol, @"MS", @"MS:1000725", @"HCTcontrol", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_micrOTOFcontrol, new TermInfo(CVID.MS_micrOTOFcontrol, @"MS", @"MS:1000726", @"micrOTOFcontrol", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_PolyTools, new TermInfo(CVID.MS_PolyTools, @"MS", @"MS:1000727", @"PolyTools", @"Bruker PolyTools software.", false));
            TermData.Add(CVID.MS_ProfileAnalysis, new TermInfo(CVID.MS_ProfileAnalysis, @"MS", @"MS:1000728", @"ProfileAnalysis", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_PROTEINEER, new TermInfo(CVID.MS_PROTEINEER, @"MS", @"MS:1000729", @"PROTEINEER", @"Bruker PROTEINEER software.", false));
            TermData.Add(CVID.MS_PROTEINEER_dp, new TermInfo(CVID.MS_PROTEINEER_dp, @"MS", @"MS:1000730", @"PROTEINEER dp", @"Bruker PROTEINEER dp software.", false));
            TermData.Add(CVID.MS_PROTEINEER_fc, new TermInfo(CVID.MS_PROTEINEER_fc, @"MS", @"MS:1000731", @"PROTEINEER fc", @"Bruker PROTEINEER fc software.", false));
            TermData.Add(CVID.MS_PROTEINEER_spII, new TermInfo(CVID.MS_PROTEINEER_spII, @"MS", @"MS:1000732", @"PROTEINEER spII", @"Bruker PROTEINEER spII software.", false));
            TermData.Add(CVID.MS_PROTEINEER_LC, new TermInfo(CVID.MS_PROTEINEER_LC, @"MS", @"MS:1000733", @"PROTEINEER-LC", @"Bruker PROTEINEER-LC software.", false));
            TermData.Add(CVID.MS_ProteinScape, new TermInfo(CVID.MS_ProteinScape, @"MS", @"MS:1000734", @"ProteinScape", @"Bruker ProteinScape software.", false));
            TermData.Add(CVID.MS_PureDisk, new TermInfo(CVID.MS_PureDisk, @"MS", @"MS:1000735", @"PureDisk", @"BrukerPureDisk software.", false));
            TermData.Add(CVID.MS_QuantAnalysis, new TermInfo(CVID.MS_QuantAnalysis, @"MS", @"MS:1000736", @"QuantAnalysis", @"Bruker software for data analysis.", false));
            TermData.Add(CVID.MS_spControl, new TermInfo(CVID.MS_spControl, @"MS", @"MS:1000737", @"spControl", @"Bruker software for data acquisition.", false));
            TermData.Add(CVID.MS_TargetAnalysis, new TermInfo(CVID.MS_TargetAnalysis, @"MS", @"MS:1000738", @"TargetAnalysis", @"Bruker TargetAnalysis software.", false));
            TermData.Add(CVID.MS_WARP_LC, new TermInfo(CVID.MS_WARP_LC, @"MS", @"MS:1000739", @"WARP-LC", @"Bruker WARP-LC software.", false));
            TermData.Add(CVID.MS_parameter_file, new TermInfo(CVID.MS_parameter_file, @"MS", @"MS:1000740", @"parameter file", @"Parameter file used to configure the acquisition of raw data on the instrument.", false));
            TermData.Add(CVID.MS_Conversion_to_dta, new TermInfo(CVID.MS_Conversion_to_dta, @"MS", @"MS:1000741", @"Conversion to dta", @"Conversion to dta format.", false));
            TermData.Add(CVID.MS_Bioworks_SRF_format, new TermInfo(CVID.MS_Bioworks_SRF_format, @"MS", @"MS:1000742", @"Bioworks SRF format", @"Thermo Finnigan SRF file format.", false));
            TermData.Add(CVID.MS_TSQ_Quantum_Ultra_AM, new TermInfo(CVID.MS_TSQ_Quantum_Ultra_AM, @"MS", @"MS:1000743", @"TSQ Quantum Ultra AM", @"Thermo Scientific TSQ Quantum Ultra AM.", false));
            TermData.Add(CVID.MS_selected_ion_m_z, new TermInfo(CVID.MS_selected_ion_m_z, @"MS", @"MS:1000744", @"selected ion m/z", @"Mass-to-charge ratio of an selected ion.", false));
            TermData.Add(CVID.MS_retention_time_alignment, new TermInfo(CVID.MS_retention_time_alignment, @"MS", @"MS:1000745", @"retention time alignment", @"The correction of the spectrum scan times, as used e.g. in label-free proteomics.", false));
            TermData.Add(CVID.MS_high_intensity_data_point_removal, new TermInfo(CVID.MS_high_intensity_data_point_removal, @"MS", @"MS:1000746", @"high intensity data point removal", @"The removal of very high intensity data points.", false));
            TermData.Add(CVID.MS_completion_time, new TermInfo(CVID.MS_completion_time, @"MS", @"MS:1000747", @"completion time", @"The time that a data processing action was finished.", false));
            TermData.Add(CVID.MS_SSQ_7000, new TermInfo(CVID.MS_SSQ_7000, @"MS", @"MS:1000748", @"SSQ 7000", @"ThermoFinnigan SSQ 7000 MS.", false));
            TermData.Add(CVID.MS_TSQ_7000, new TermInfo(CVID.MS_TSQ_7000, @"MS", @"MS:1000749", @"TSQ 7000", @"ThermoFinnigan TSQ 7000 MS.", false));
            TermData.Add(CVID.MS_TSQ, new TermInfo(CVID.MS_TSQ, @"MS", @"MS:1000750", @"TSQ", @"ThermoFinnigan TSQ MS.", false));
            TermData.Add(CVID.MS_TSQ_Quantum_Ultra, new TermInfo(CVID.MS_TSQ_Quantum_Ultra, @"MS", @"MS:1000751", @"TSQ Quantum Ultra", @"Thermo Scientific TSQ Quantum Ultra.", false));
            TermData.Add(CVID.MS_TOPP_software, new TermInfo(CVID.MS_TOPP_software, @"MS", @"MS:1000752", @"TOPP software", @"TOPP (The OpenMS proteomics pipeline) software.", false));
            TermData.Add(CVID.MS_BaselineFilter, new TermInfo(CVID.MS_BaselineFilter, @"MS", @"MS:1000753", @"BaselineFilter", @"Removes the baseline from profile spectra using a top-hat filter.", false));
            TermData.Add(CVID.MS_DBExporter, new TermInfo(CVID.MS_DBExporter, @"MS", @"MS:1000754", @"DBExporter", @"Exports data from an OpenMS database to a file.", false));
            TermData.Add(CVID.MS_DBImporter, new TermInfo(CVID.MS_DBImporter, @"MS", @"MS:1000755", @"DBImporter", @"Imports data to an OpenMS database.", false));
            TermData.Add(CVID.MS_FileConverter, new TermInfo(CVID.MS_FileConverter, @"MS", @"MS:1000756", @"FileConverter", @"Converts between different MS file formats.", false));
            TermData.Add(CVID.MS_FileFilter, new TermInfo(CVID.MS_FileFilter, @"MS", @"MS:1000757", @"FileFilter", @"Extracts or manipulates portions of data from peak, feature or consensus feature files.", false));
            TermData.Add(CVID.MS_FileMerger, new TermInfo(CVID.MS_FileMerger, @"MS", @"MS:1000758", @"FileMerger", @"Merges several MS files into one file.", false));
            TermData.Add(CVID.MS_InternalCalibration, new TermInfo(CVID.MS_InternalCalibration, @"MS", @"MS:1000759", @"InternalCalibration", @"Applies an internal calibration.", false));
            TermData.Add(CVID.MS_MapAligner_OBSOLETE, new TermInfo(CVID.MS_MapAligner_OBSOLETE, @"MS", @"MS:1000760", @"MapAligner", @"OBSOLETE Corrects retention time distortions between maps.", true));
            TermData.Add(CVID.MS_MapNormalizer, new TermInfo(CVID.MS_MapNormalizer, @"MS", @"MS:1000761", @"MapNormalizer", @"Normalizes peak intensities in an MS run.", false));
            TermData.Add(CVID.MS_NoiseFilter_OBSOLETE, new TermInfo(CVID.MS_NoiseFilter_OBSOLETE, @"MS", @"MS:1000762", @"NoiseFilter", @"OBSOLETE Removes noise from profile spectra by using different smoothing techniques.", true));
            TermData.Add(CVID.MS_PeakPicker_OBSOLETE, new TermInfo(CVID.MS_PeakPicker_OBSOLETE, @"MS", @"MS:1000763", @"PeakPicker", @"OBSOLETE Finds mass spectrometric peaks in profile mass spectra.", true));
            TermData.Add(CVID.MS_Resampler, new TermInfo(CVID.MS_Resampler, @"MS", @"MS:1000764", @"Resampler", @"Transforms an LC/MS map into a resampled map or a png image.", false));
            TermData.Add(CVID.MS_SpectraFilter_OBSOLETE, new TermInfo(CVID.MS_SpectraFilter_OBSOLETE, @"MS", @"MS:1000765", @"SpectraFilter", @"OBSOLETE Applies a filter to peak spectra.", true));
            TermData.Add(CVID.MS_TOFCalibration, new TermInfo(CVID.MS_TOFCalibration, @"MS", @"MS:1000766", @"TOFCalibration", @"Applies time of flight calibration.", false));
            TermData.Add(CVID.MS_native_spectrum_identifier_format, new TermInfo(CVID.MS_native_spectrum_identifier_format, @"MS", @"MS:1000767", @"native spectrum identifier format", @"Describes how the native spectrum identifiers are formated.", false));
            TermData.Add(CVID.MS_Thermo_nativeID_format, new TermInfo(CVID.MS_Thermo_nativeID_format, @"MS", @"MS:1000768", @"Thermo nativeID format", @"Native format defined by controllerType=xsd:nonNegativeInteger controllerNumber=xsd:positiveInteger scan=xsd:positiveInteger.", false));
            TermData.Add(CVID.MS_Waters_nativeID_format, new TermInfo(CVID.MS_Waters_nativeID_format, @"MS", @"MS:1000769", @"Waters nativeID format", @"Native format defined by function=xsd:positiveInteger process=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_WIFF_nativeID_format, new TermInfo(CVID.MS_WIFF_nativeID_format, @"MS", @"MS:1000770", @"WIFF nativeID format", @"Native format defined by sample=xsd:nonNegativeInteger period=xsd:nonNegativeInteger cycle=xsd:nonNegativeInteger experiment=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Bruker_Agilent_YEP_nativeID_format, new TermInfo(CVID.MS_Bruker_Agilent_YEP_nativeID_format, @"MS", @"MS:1000771", @"Bruker/Agilent YEP nativeID format", @"Native format defined by scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Bruker_BAF_nativeID_format, new TermInfo(CVID.MS_Bruker_BAF_nativeID_format, @"MS", @"MS:1000772", @"Bruker BAF nativeID format", @"Native format defined by scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Bruker_FID_nativeID_format, new TermInfo(CVID.MS_Bruker_FID_nativeID_format, @"MS", @"MS:1000773", @"Bruker FID nativeID format", @"Native format defined by file=xsd:IDREF.", false));
            TermData.Add(CVID.MS_multiple_peak_list_nativeID_format, new TermInfo(CVID.MS_multiple_peak_list_nativeID_format, @"MS", @"MS:1000774", @"multiple peak list nativeID format", @"Native format defined by index=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_single_peak_list_nativeID_format, new TermInfo(CVID.MS_single_peak_list_nativeID_format, @"MS", @"MS:1000775", @"single peak list nativeID format", @"Native format defined by file=xsd:IDREF.", false));
            TermData.Add(CVID.MS_scan_number_only_nativeID_format, new TermInfo(CVID.MS_scan_number_only_nativeID_format, @"MS", @"MS:1000776", @"scan number only nativeID format", @"Native format defined by scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_spectrum_identifier_nativeID_format, new TermInfo(CVID.MS_spectrum_identifier_nativeID_format, @"MS", @"MS:1000777", @"spectrum identifier nativeID format", @"Native format defined by spectrum=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_charge_state_calculation, new TermInfo(CVID.MS_charge_state_calculation, @"MS", @"MS:1000778", @"charge state calculation", @"A process that infers the charge state of an MSn spectrum's precursor(s) by the application of some algorithm.", false));
            TermData.Add(CVID.MS_below_precursor_intensity_dominance_charge_state_calculation, new TermInfo(CVID.MS_below_precursor_intensity_dominance_charge_state_calculation, @"MS", @"MS:1000779", @"below precursor intensity dominance charge state calculation", @"Infers charge state as single or ambiguously multiple by determining the fraction of intensity below the precursor m/z.", false));
            TermData.Add(CVID.MS_precursor_recalculation, new TermInfo(CVID.MS_precursor_recalculation, @"MS", @"MS:1000780", @"precursor recalculation", @"A process that recalculates existing precursor selected ions with one or more algorithmically determined precursor selected ions.", false));
            TermData.Add(CVID.MS_msPrefix_precursor_recalculation, new TermInfo(CVID.MS_msPrefix_precursor_recalculation, @"MS", @"MS:1000781", @"msPrefix precursor recalculation", @"Recalculates one or more precursor selected ions by peak detection in the isolation windows of high accuracy MS precursor scans.", false));
            TermData.Add(CVID.MS_Savitzky_Golay_smoothing, new TermInfo(CVID.MS_Savitzky_Golay_smoothing, @"MS", @"MS:1000782", @"Savitzky-Golay smoothing", @"Reduces intensity spikes by applying local polynomial regression (of degree k) on a distribution (of at least k+1 equally spaced points) to determine the smoothed value for each point. It tends to preserve features of the distribution such as relative maxima, minima and width, which are usually 'flattened' by other adjacent averaging techniques.", false));
            TermData.Add(CVID.MS_LOWESS_smoothing, new TermInfo(CVID.MS_LOWESS_smoothing, @"MS", @"MS:1000783", @"LOWESS smoothing", @"Reduces intensity spikes by applying a modelling method known as locally weighted polynomial regression. At each point in the data set a low-degree polynomial is fit to a subset of the data, with explanatory variable values near the point whose response is being estimated. The polynomial is fit using weighted least squares, giving more weight to points near the point whose response is being estimated and less weight to points further away. The value of the regression function for the point is then obtained by evaluating the local polynomial using the explanatory variable values for that data point. The LOESS fit is complete after regression function values have been computed for each of the n data points. Many of the details of this method, such as the degree of the polynomial model and the weights, are flexible.", false));
            TermData.Add(CVID.MS_Gaussian_smoothing, new TermInfo(CVID.MS_Gaussian_smoothing, @"MS", @"MS:1000784", @"Gaussian smoothing", @"Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.", false));
            TermData.Add(CVID.MS_moving_average_smoothing, new TermInfo(CVID.MS_moving_average_smoothing, @"MS", @"MS:1000785", @"moving average smoothing", @"Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.", false));
            TermData.Add(CVID.MS_non_standard_data_array, new TermInfo(CVID.MS_non_standard_data_array, @"MS", @"MS:1000786", @"non-standard data array", @"A data array that contains data not covered by any other term in this group. Please do not use this term, if the binary data array type might be commonly used - contact the PSI-MS working group in order to have another CV term added.", false));
            TermData.Add(CVID.MS_inclusive_low_intensity_threshold, new TermInfo(CVID.MS_inclusive_low_intensity_threshold, @"MS", @"MS:1000787", @"inclusive low intensity threshold", @"Threshold at or below which some action is taken.", false));
            TermData.Add(CVID.MS_inclusive_high_intensity_threshold, new TermInfo(CVID.MS_inclusive_high_intensity_threshold, @"MS", @"MS:1000788", @"inclusive high intensity threshold", @"Threshold at or above which some action is taken.", false));
            TermData.Add(CVID.MS_enhanced_multiply_charged_spectrum, new TermInfo(CVID.MS_enhanced_multiply_charged_spectrum, @"MS", @"MS:1000789", @"enhanced multiply charged spectrum", @"MS1 spectrum that is enriched in multiply-charged ions compared to singly-charged ions.", false));
            TermData.Add(CVID.MS_time_delayed_fragmentation_spectrum, new TermInfo(CVID.MS_time_delayed_fragmentation_spectrum, @"MS", @"MS:1000790", @"time-delayed fragmentation spectrum", @"MSn spectrum in which the product ions are collected after a time delay, which allows the observation of lower energy fragmentation processes after precursor ion activation.", false));
            TermData.Add(CVID.MS_enhanced_resolution_scan_OBSOLETE, new TermInfo(CVID.MS_enhanced_resolution_scan_OBSOLETE, @"MS", @"MS:1000791", @"enhanced resolution scan", @"OBSOLETE Scan with enhanced resolution.", true));
            TermData.Add(CVID.MS_isolation_window_attribute, new TermInfo(CVID.MS_isolation_window_attribute, @"MS", @"MS:1000792", @"isolation window attribute", @"Isolation window parameter.", false));
            TermData.Add(CVID.MS_isolation_window_upper_limit_OBSOLETE, new TermInfo(CVID.MS_isolation_window_upper_limit_OBSOLETE, @"MS", @"MS:1000793", @"isolation window upper limit", @"OBSOLETE The highest m/z being isolated in an isolation window.", true));
            TermData.Add(CVID.MS_isolation_window_lower_limit_OBSOLETE, new TermInfo(CVID.MS_isolation_window_lower_limit_OBSOLETE, @"MS", @"MS:1000794", @"isolation window lower limit", @"OBSOLETE The lowest m/z being isolated in an isolation window.", true));
            TermData.Add(CVID.MS_no_combination, new TermInfo(CVID.MS_no_combination, @"MS", @"MS:1000795", @"no combination", @"Use this term if only one scan was recorded or there is no information about scans available.", false));
            TermData.Add(CVID.MS_spectrum_title, new TermInfo(CVID.MS_spectrum_title, @"MS", @"MS:1000796", @"spectrum title", @"Free-form text title describing a spectrum, usually a series of key value pairs as used in an MGF file.", false));
            TermData.Add(CVID.MS_peak_list_scans, new TermInfo(CVID.MS_peak_list_scans, @"MS", @"MS:1000797", @"peak list scans", @"A list of scan numbers and or scan ranges associated with a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.", false));
            TermData.Add(CVID.MS_peak_list_raw_scans, new TermInfo(CVID.MS_peak_list_raw_scans, @"MS", @"MS:1000798", @"peak list raw scans", @"A list of raw scans and or scan ranges used to generate a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.", false));
            TermData.Add(CVID.MS_custom_unreleased_software_tool, new TermInfo(CVID.MS_custom_unreleased_software_tool, @"MS", @"MS:1000799", @"custom unreleased software tool", @"A software tool that has not yet been released. The value should describe the software. Please do not use this term for publicly available software - contact the PSI-MS working group in order to have another CV term added.", false));
            TermData.Add(CVID.MS_mass_resolving_power, new TermInfo(CVID.MS_mass_resolving_power, @"MS", @"MS:1000800", @"mass resolving power", @"The observed mass divided by the difference between two masses that can be separated: m/dm. The procedure by which dm was obtained and the mass at which the measurement was made should be reported.", false));
            TermData.Add(CVID.MS_area_peak_picking, new TermInfo(CVID.MS_area_peak_picking, @"MS", @"MS:1000801", @"area peak picking", @"Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported.", false));
            TermData.Add(CVID.MS_height_peak_picking, new TermInfo(CVID.MS_height_peak_picking, @"MS", @"MS:1000802", @"height peak picking", @"Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported.", false));
            TermData.Add(CVID.MS_analyzer_scan_offset, new TermInfo(CVID.MS_analyzer_scan_offset, @"MS", @"MS:1000803", @"analyzer scan offset", @"Offset between two analyzers in a constant neutral loss or neutral gain scan. The value corresponds to the neutral loss or neutral gain value.", false));
            TermData.Add(CVID.MS_electromagnetic_radiation_spectrum, new TermInfo(CVID.MS_electromagnetic_radiation_spectrum, @"MS", @"MS:1000804", @"electromagnetic radiation spectrum", @"A plot of the relative intensity of electromagnetic radiation as a function of the wavelength.", false));
            TermData.Add(CVID.MS_emission_spectrum, new TermInfo(CVID.MS_emission_spectrum, @"MS", @"MS:1000805", @"emission spectrum", @"A plot of the relative intensity of electromagnetic radiation emitted by atoms or molecules when excited.", false));
            TermData.Add(CVID.MS_absorption_spectrum, new TermInfo(CVID.MS_absorption_spectrum, @"MS", @"MS:1000806", @"absorption spectrum", @"A plot of the relative intensity of electromagnetic radiation absorbed by atoms or molecules when excited.", false));
            TermData.Add(CVID.MS_Th_s, new TermInfo(CVID.MS_Th_s, @"MS", @"MS:1000807", @"Th/s", @"Unit describing the scan rate of a spectrum in Thomson per second.", false));
            TermData.Add(CVID.MS_chromatogram_attribute, new TermInfo(CVID.MS_chromatogram_attribute, @"MS", @"MS:1000808", @"chromatogram attribute", @"Chromatogram properties that are associated with a value.", false));
            TermData.Add(CVID.MS_chromatogram_title, new TermInfo(CVID.MS_chromatogram_title, @"MS", @"MS:1000809", @"chromatogram title", @"A free-form text title describing a chromatogram.", false));
            TermData.Add(CVID.MS_ion_current_chromatogram, new TermInfo(CVID.MS_ion_current_chromatogram, @"MS", @"MS:1000810", @"ion current chromatogram", @"Representation of the current of ions versus time.", false));
            TermData.Add(CVID.MS_electromagnetic_radiation_chromatogram, new TermInfo(CVID.MS_electromagnetic_radiation_chromatogram, @"MS", @"MS:1000811", @"electromagnetic radiation chromatogram", @"Representation of electromagnetic properties versus time.", false));
            TermData.Add(CVID.MS_absorption_chromatogram, new TermInfo(CVID.MS_absorption_chromatogram, @"MS", @"MS:1000812", @"absorption chromatogram", @"Representation of light absorbed by the sample versus time.", false));
            TermData.Add(CVID.MS_emission_chromatogram, new TermInfo(CVID.MS_emission_chromatogram, @"MS", @"MS:1000813", @"emission chromatogram", @"Representation of light emitted by the sample versus time.", false));
            TermData.Add(CVID.MS_counts_per_second, new TermInfo(CVID.MS_counts_per_second, @"MS", @"MS:1000814", @"counts per second", @"The number of counted events observed per second in one or a group of elements of a detector.", false));
            TermData.Add(CVID.MS_Bruker_BAF_format, new TermInfo(CVID.MS_Bruker_BAF_format, @"MS", @"MS:1000815", @"Bruker BAF format", @"Bruker BAF raw file format.", false));
            TermData.Add(CVID.MS_Bruker_U2_format, new TermInfo(CVID.MS_Bruker_U2_format, @"MS", @"MS:1000816", @"Bruker U2 format", @"Bruker HyStar U2 file format.", false));
            TermData.Add(CVID.MS_HyStar, new TermInfo(CVID.MS_HyStar, @"MS", @"MS:1000817", @"HyStar", @"Bruker software for hyphenated experiments.", false));
            TermData.Add(CVID.MS_Acquity_UPLC_PDA, new TermInfo(CVID.MS_Acquity_UPLC_PDA, @"MS", @"MS:1000818", @"Acquity UPLC PDA", @"Acquity UPLC Photodiode Array Detector.", false));
            TermData.Add(CVID.MS_Acquity_UPLC_FLR, new TermInfo(CVID.MS_Acquity_UPLC_FLR, @"MS", @"MS:1000819", @"Acquity UPLC FLR", @"Acquity UPLC Fluorescence Detector.", false));
            TermData.Add(CVID.MS_flow_rate_array, new TermInfo(CVID.MS_flow_rate_array, @"MS", @"MS:1000820", @"flow rate array", @"A data array of flow rate measurements.", false));
            TermData.Add(CVID.MS_pressure_array, new TermInfo(CVID.MS_pressure_array, @"MS", @"MS:1000821", @"pressure array", @"A data array of pressure measurements.", false));
            TermData.Add(CVID.MS_temperature_array, new TermInfo(CVID.MS_temperature_array, @"MS", @"MS:1000822", @"temperature array", @"A data array of temperature measurements.", false));
            TermData.Add(CVID.MS_Bruker_U2_nativeID_format, new TermInfo(CVID.MS_Bruker_U2_nativeID_format, @"MS", @"MS:1000823", @"Bruker U2 nativeID format", @"Native format defined by declaration=xsd:nonNegativeInteger collection=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_no_nativeID_format, new TermInfo(CVID.MS_no_nativeID_format, @"MS", @"MS:1000824", @"no nativeID format", @"No nativeID format indicates that the file tagged with this term does not contain spectra that can have a nativeID format.", false));
            TermData.Add(CVID.MS_Bruker_FID_format, new TermInfo(CVID.MS_Bruker_FID_format, @"MS", @"MS:1000825", @"Bruker FID format", @"Bruker FID file format.", false));
            TermData.Add(CVID.MS_elution_time, new TermInfo(CVID.MS_elution_time, @"MS", @"MS:1000826", @"elution time", @"The time of elution from all used chromatographic columns (one or more) in the chromatographic separation step, relative to the start of the chromatography.", false));
            TermData.Add(CVID.MS_isolation_window_target_m_z, new TermInfo(CVID.MS_isolation_window_target_m_z, @"MS", @"MS:1000827", @"isolation window target m/z", @"The primary or reference m/z about which the isolation window is defined.", false));
            TermData.Add(CVID.MS_isolation_window_lower_offset, new TermInfo(CVID.MS_isolation_window_lower_offset, @"MS", @"MS:1000828", @"isolation window lower offset", @"The extent of the isolation window in m/z below the isolation window target m/z. The lower and upper offsets may be asymmetric about the target m/z.", false));
            TermData.Add(CVID.MS_isolation_window_upper_offset, new TermInfo(CVID.MS_isolation_window_upper_offset, @"MS", @"MS:1000829", @"isolation window upper offset", @"The extent of the isolation window in m/z above the isolation window target m/z. The lower and upper offsets may be asymmetric about the target m/z.", false));
            TermData.Add(CVID.MS_sample_preparation, new TermInfo(CVID.MS_sample_preparation, @"MS", @"MS:1000831", @"sample preparation", @"Properties of the preparation steps which took place before the measurement was performed.", false));
            TermData.Add(CVID.MS_MALDI_matrix_application, new TermInfo(CVID.MS_MALDI_matrix_application, @"MS", @"MS:1000832", @"MALDI matrix application", @"Attributes to describe the technique how the sample is prepared with the matrix solution.", false));
            TermData.Add(CVID.MS_matrix_application_type, new TermInfo(CVID.MS_matrix_application_type, @"MS", @"MS:1000833", @"matrix application type", @"Describes the technique how the matrix is put on the sample target.", false));
            TermData.Add(CVID.MS_matrix_solution, new TermInfo(CVID.MS_matrix_solution, @"MS", @"MS:1000834", @"matrix solution", @"Describes the chemical solution used as matrix.", false));
            TermData.Add(CVID.MS_matrix_solution_concentration, new TermInfo(CVID.MS_matrix_solution_concentration, @"MS", @"MS:1000835", @"matrix solution concentration", @"Concentration of the chemical solution used as matrix.", false));
            TermData.Add(CVID.MS_dried_droplet_MALDI_matrix_preparation, new TermInfo(CVID.MS_dried_droplet_MALDI_matrix_preparation, @"MS", @"MS:1000836", @"dried droplet MALDI matrix preparation", @"Dried droplet in MALDI matrix preparation.", false));
            TermData.Add(CVID.MS_printed_MALDI_matrix_preparation, new TermInfo(CVID.MS_printed_MALDI_matrix_preparation, @"MS", @"MS:1000837", @"printed MALDI matrix preparation", @"Printed MALDI matrix preparation.", false));
            TermData.Add(CVID.MS_sprayed_MALDI_matrix_preparation, new TermInfo(CVID.MS_sprayed_MALDI_matrix_preparation, @"MS", @"MS:1000838", @"sprayed MALDI matrix preparation", @"Sprayed MALDI matrix preparation.", false));
            TermData.Add(CVID.MS_precoated_MALDI_sample_plate, new TermInfo(CVID.MS_precoated_MALDI_sample_plate, @"MS", @"MS:1000839", @"precoated MALDI sample plate", @"Precoated MALDI sample plate.", false));
            TermData.Add(CVID.MS_laser, new TermInfo(CVID.MS_laser, @"MS", @"MS:1000840", @"laser", @"Device that emits light (electromagnetic radiation) through a process called stimulated emission. The term is an acronym for Light Amplification by Stimulated Emission of Radiation.", false));
            TermData.Add(CVID.MS_laser_attribute, new TermInfo(CVID.MS_laser_attribute, @"MS", @"MS:1000841", @"laser attribute", @"Laser properties that are associated with a value.", false));
            TermData.Add(CVID.MS_laser_type, new TermInfo(CVID.MS_laser_type, @"MS", @"MS:1000842", @"laser type", @"Type of laser used for desorption purpose.", false));
            TermData.Add(CVID.MS_wavelength_OBSOLETE, new TermInfo(CVID.MS_wavelength_OBSOLETE, @"MS", @"MS:1000843", @"wavelength", @"OBSOLETE The distance between two peaks of the emitted laser beam.", true));
            TermData.Add(CVID.MS_focus_diameter_x, new TermInfo(CVID.MS_focus_diameter_x, @"MS", @"MS:1000844", @"focus diameter x", @"Describes the diameter of the laser beam in x direction.", false));
            TermData.Add(CVID.MS_focus_diameter_y, new TermInfo(CVID.MS_focus_diameter_y, @"MS", @"MS:1000845", @"focus diameter y", @"Describes the diameter of the laser beam in y direction.", false));
            TermData.Add(CVID.MS_pulse_energy, new TermInfo(CVID.MS_pulse_energy, @"MS", @"MS:1000846", @"pulse energy", @"Describes output energy of the laser system. May be attenuated by filters or other means.", false));
            TermData.Add(CVID.MS_pulse_duration, new TermInfo(CVID.MS_pulse_duration, @"MS", @"MS:1000847", @"pulse duration", @"Describes how long the laser beam was emitted from the laser device.", false));
            TermData.Add(CVID.MS_attenuation, new TermInfo(CVID.MS_attenuation, @"MS", @"MS:1000848", @"attenuation", @"Describes the reduction of the intensity of the laser beam energy.", false));
            TermData.Add(CVID.MS_impact_angle, new TermInfo(CVID.MS_impact_angle, @"MS", @"MS:1000849", @"impact angle", @"Describes the angle between the laser beam and the sample target.", false));
            TermData.Add(CVID.MS_gas_laser, new TermInfo(CVID.MS_gas_laser, @"MS", @"MS:1000850", @"gas laser", @"Laser which is powered by a gaseous medium.", false));
            TermData.Add(CVID.MS_solid_state_laser, new TermInfo(CVID.MS_solid_state_laser, @"MS", @"MS:1000851", @"solid-state laser", @"Solid state laser materials are commonly made by doping a crystalline solid host with ions that provide the required energy states.", false));
            TermData.Add(CVID.MS_dye_laser, new TermInfo(CVID.MS_dye_laser, @"MS", @"MS:1000852", @"dye-laser", @"Dye lasers use an organic dye as the gain medium.", false));
            TermData.Add(CVID.MS_free_electron_laser, new TermInfo(CVID.MS_free_electron_laser, @"MS", @"MS:1000853", @"free electron laser", @"Free electron laser uses a relativistic electron beam as the lasing medium which move freely through a magnetic structure, hence the term.", false));
            TermData.Add(CVID.MS_LTQ_XL, new TermInfo(CVID.MS_LTQ_XL, @"MS", @"MS:1000854", @"LTQ XL", @"Thermo Scientific LTQ XL MS.", false));
            TermData.Add(CVID.MS_LTQ_Velos, new TermInfo(CVID.MS_LTQ_Velos, @"MS", @"MS:1000855", @"LTQ Velos", @"Thermo Scientific LTQ Velos MS.", false));
            TermData.Add(CVID.MS_LTQ_Velos_ETD, new TermInfo(CVID.MS_LTQ_Velos_ETD, @"MS", @"MS:1000856", @"LTQ Velos ETD", @"Thermo Scientific LTQ Velos MS with ETD.", false));
            TermData.Add(CVID.MS_run_attribute, new TermInfo(CVID.MS_run_attribute, @"MS", @"MS:1000857", @"run attribute", @"Properties of the described run.", false));
            TermData.Add(CVID.MS_fraction_identifier, new TermInfo(CVID.MS_fraction_identifier, @"MS", @"MS:1000858", @"fraction identifier", @"Identier string that describes the sample fraction. This identifier should contain the fraction number(s) or similar information.", false));
            TermData.Add(CVID.MS_molecule, new TermInfo(CVID.MS_molecule, @"MS", @"MS:1000859", @"molecule", @"Group of two or more atoms held together by chemical bonds.", false));
            TermData.Add(CVID.MS_peptide, new TermInfo(CVID.MS_peptide, @"MS", @"MS:1000860", @"peptide", @"A molecule of low molecular weight that is composed of two or more amino acid residues.", false));
            TermData.Add(CVID.MS_molecular_entity_property, new TermInfo(CVID.MS_molecular_entity_property, @"MS", @"MS:1000861", @"molecular entity property", @"A physical characteristic of a molecular entity.", false));
            TermData.Add(CVID.MS_isoelectric_point, new TermInfo(CVID.MS_isoelectric_point, @"MS", @"MS:1000862", @"isoelectric point", @"The pH of a solution at which a charged molecule does not migrate in an electric field.", false));
            TermData.Add(CVID.MS_predicted_isoelectric_point, new TermInfo(CVID.MS_predicted_isoelectric_point, @"MS", @"MS:1000863", @"predicted isoelectric point", @"The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm.", false));
            TermData.Add(CVID.MS_chemical_formula, new TermInfo(CVID.MS_chemical_formula, @"MS", @"MS:1000864", @"chemical formula", @"A combination of symbols used to express the chemical composition of a molecule.", false));
            TermData.Add(CVID.MS_empirical_formula, new TermInfo(CVID.MS_empirical_formula, @"MS", @"MS:1000865", @"empirical formula", @"A chemical formula which expresses the proportions of the elements present in a substance.", false));
            TermData.Add(CVID.MS_molecular_formula, new TermInfo(CVID.MS_molecular_formula, @"MS", @"MS:1000866", @"molecular formula", @"A chemical compound formula expressing the number of atoms of each element present in a compound, without indicating how they are linked.", false));
            TermData.Add(CVID.MS_structural_formula, new TermInfo(CVID.MS_structural_formula, @"MS", @"MS:1000867", @"structural formula", @"A chemical formula showing the number of atoms of each element in a molecule, their spatial arrangement, and their linkage to each other.", false));
            TermData.Add(CVID.MS_SMILES_formula, new TermInfo(CVID.MS_SMILES_formula, @"MS", @"MS:1000868", @"SMILES formula", @"The simplified molecular input line entry specification or SMILES is a specification for unambiguously describing the structure of a chemical compound using a short ASCII string.", false));
            TermData.Add(CVID.MS_collision_gas_pressure, new TermInfo(CVID.MS_collision_gas_pressure, @"MS", @"MS:1000869", @"collision gas pressure", @"The gas pressure of the collision gas used for collisional excitation.", false));
            TermData.Add(CVID.MS_4000_QTRAP_OBSOLETE, new TermInfo(CVID.MS_4000_QTRAP_OBSOLETE, @"MS", @"MS:1000870", @"4000 QTRAP", @"OBSOLETE SCIEX or Applied Biosystems|MDS SCIEX QTRAP 4000.", true));
            TermData.Add(CVID.MS_SRM_software, new TermInfo(CVID.MS_SRM_software, @"MS", @"MS:1000871", @"SRM software", @"Software used to predict, select, or optimize transitions or analyze the results of selected reaction monitoring runs.", false));
            TermData.Add(CVID.MS_MaRiMba, new TermInfo(CVID.MS_MaRiMba, @"MS", @"MS:1000872", @"MaRiMba", @"Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_peptide_attribute_calculation_software, new TermInfo(CVID.MS_peptide_attribute_calculation_software, @"MS", @"MS:1000873", @"peptide attribute calculation software", @"Software used to predict or calculate numerical attributes of peptides.", false));
            TermData.Add(CVID.MS_SSRCalc, new TermInfo(CVID.MS_SSRCalc, @"MS", @"MS:1000874", @"SSRCalc", @"Sequence Specific Retention Calculator estimates the retention time of peptides based on their sequence.", false));
            TermData.Add(CVID.MS_declustering_potential, new TermInfo(CVID.MS_declustering_potential, @"MS", @"MS:1000875", @"declustering potential", @"Potential difference between the orifice and the skimmer in volts.", false));
            TermData.Add(CVID.MS_cone_voltage, new TermInfo(CVID.MS_cone_voltage, @"MS", @"MS:1000876", @"cone voltage", @"Potential difference between the sampling cone/orifice in volts.", false));
            TermData.Add(CVID.MS_tube_lens_voltage, new TermInfo(CVID.MS_tube_lens_voltage, @"MS", @"MS:1000877", @"tube lens voltage", @"Potential difference setting of the tube lens in volts.", false));
            TermData.Add(CVID.MS_external_reference_identifier, new TermInfo(CVID.MS_external_reference_identifier, @"MS", @"MS:1000878", @"external reference identifier", @"An identifier/accession number to an external reference database.", false));
            TermData.Add(CVID.MS_PubMed_identifier, new TermInfo(CVID.MS_PubMed_identifier, @"MS", @"MS:1000879", @"PubMed identifier", @"A unique identifier for a publication in the PubMed database (MIR:00000015).", false));
            TermData.Add(CVID.MS_interchannel_delay, new TermInfo(CVID.MS_interchannel_delay, @"MS", @"MS:1000880", @"interchannel delay", @"The duration of intervals between scanning, during which the instrument configuration is switched.", false));
            TermData.Add(CVID.MS_molecular_entity, new TermInfo(CVID.MS_molecular_entity, @"MS", @"MS:1000881", @"molecular entity", @"Constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer, etc., identifiable as a separately distinguishable entity.", false));
            TermData.Add(CVID.MS_protein, new TermInfo(CVID.MS_protein, @"MS", @"MS:1000882", @"protein", @"A compound composed of one or more chains of amino acids in a specific order determined by the base sequence of nucleotides in the DNA of a gene.", false));
            TermData.Add(CVID.MS_protein_short_name, new TermInfo(CVID.MS_protein_short_name, @"MS", @"MS:1000883", @"protein short name", @"A short name or symbol of a protein (e.g., HSF 1 or HSF1_HUMAN).", false));
            TermData.Add(CVID.MS_protein_attribute, new TermInfo(CVID.MS_protein_attribute, @"MS", @"MS:1000884", @"protein attribute", @"An nonphysical characterstic attributed to a specific protein.", false));
            TermData.Add(CVID.MS_protein_accession, new TermInfo(CVID.MS_protein_accession, @"MS", @"MS:1000885", @"protein accession", @"Identifier for a specific protein in a database.", false));
            TermData.Add(CVID.MS_protein_name, new TermInfo(CVID.MS_protein_name, @"MS", @"MS:1000886", @"protein name", @"A long name describing the function of the protein.", false));
            TermData.Add(CVID.MS_peptide_attribute, new TermInfo(CVID.MS_peptide_attribute, @"MS", @"MS:1000887", @"peptide attribute", @"Nonphysical characteristic attributed to a peptide.", false));
            TermData.Add(CVID.MS_stripped_peptide_sequence, new TermInfo(CVID.MS_stripped_peptide_sequence, @"MS", @"MS:1000888", @"stripped peptide sequence", @"Sequence of letter symbols denoting the order of amino acids that compose the peptide, with any amino acid mass modifications that might be present having been stripped away.", false));
            TermData.Add(CVID.MS_peptidoform_sequence, new TermInfo(CVID.MS_peptidoform_sequence, @"MS", @"MS:1000889", @"peptidoform sequence", @"Sequence of letter symbols denoting the order of amino acid residues that compose the peptidoform including the encoding of any residue modifications that are present.", false));
            TermData.Add(CVID.MS_peptidoform_labeling_state, new TermInfo(CVID.MS_peptidoform_labeling_state, @"MS", @"MS:1000890", @"peptidoform labeling state", @"A state description of how a peptide might be isotopically or isobarically labelled.", false));
            TermData.Add(CVID.MS_heavy_labeled_peptidoform, new TermInfo(CVID.MS_heavy_labeled_peptidoform, @"MS", @"MS:1000891", @"heavy labeled peptidoform", @"A peptide that has been created or labelled with some heavier-than-usual isotopes.", false));
            TermData.Add(CVID.MS_unlabeled_peptidoform, new TermInfo(CVID.MS_unlabeled_peptidoform, @"MS", @"MS:1000892", @"unlabeled peptidoform", @"A peptide that has not been labelled with heavier-than-usual isotopes. This is often referred to as \ light\  to distinguish from \ heavy\ .", false));
            TermData.Add(CVID.MS_peptidoform_group_label, new TermInfo(CVID.MS_peptidoform_group_label, @"MS", @"MS:1000893", @"peptidoform group label", @"An arbitrary string label used to mark a set of peptides that belong together in a set, whereby the members are differentiated by different isotopic labels. For example, the heavy and light forms of the same peptide will both be assigned the same peptide group label.", false));
            TermData.Add(CVID.MS_retention_time, new TermInfo(CVID.MS_retention_time, @"MS", @"MS:1000894", @"retention time", @"A time interval from the start of chromatography when an analyte exits a chromatographic column.", false));
            TermData.Add(CVID.MS_local_retention_time, new TermInfo(CVID.MS_local_retention_time, @"MS", @"MS:1000895", @"local retention time", @"A time interval from the start of chromatography when an analyte exits an unspecified local chromatographic column and instrumental setup.", false));
            TermData.Add(CVID.MS_normalized_retention_time, new TermInfo(CVID.MS_normalized_retention_time, @"MS", @"MS:1000896", @"normalized retention time", @"A time interval from the start of chromatography when an analyte exits a standardized reference chromatographic column and instrumental setup.", false));
            TermData.Add(CVID.MS_predicted_retention_time, new TermInfo(CVID.MS_predicted_retention_time, @"MS", @"MS:1000897", @"predicted retention time", @"A time interval from the start of chromatography when an analyte exits a chromatographic column as predicted by a referenced software application.", false));
            TermData.Add(CVID.MS_standard, new TermInfo(CVID.MS_standard, @"MS", @"MS:1000898", @"standard", @"Something, such as a practice or a product, that is widely recognized or employed, especially because of its excellence.", false));
            TermData.Add(CVID.MS_de_facto_standard, new TermInfo(CVID.MS_de_facto_standard, @"MS", @"MS:1000899", @"de facto standard", @"A practice or product that has become a standard not because it has been approved by a standards organization but because it is widely used and recognized by the industry as being standard.", false));
            TermData.Add(CVID.MS_minimum_information_standard, new TermInfo(CVID.MS_minimum_information_standard, @"MS", @"MS:1000900", @"minimum information standard", @"A specification of a minimum amount of information needed to reproduce or fully interpret a scientific result.", false));
            TermData.Add(CVID.MS_retention_time_normalization_standard, new TermInfo(CVID.MS_retention_time_normalization_standard, @"MS", @"MS:1000901", @"retention time normalization standard", @"A standard providing the retention times at which a set of reference compounds exit the reference chromatographic column.", false));
            TermData.Add(CVID.MS_H_PINS_retention_time_normalization_standard, new TermInfo(CVID.MS_H_PINS_retention_time_normalization_standard, @"MS", @"MS:1000902", @"H-PINS retention time normalization standard", @"The de facto standard providing the retention times at which a set of halogenated reference peptides exit the reference chromatographic column.", false));
            TermData.Add(CVID.MS_product_ion_series_ordinal, new TermInfo(CVID.MS_product_ion_series_ordinal, @"MS", @"MS:1000903", @"product ion series ordinal", @"The ordinal of the fragment within a specified ion series. (e.g. 8 for a y8 ion).", false));
            TermData.Add(CVID.MS_product_ion_m_z_delta, new TermInfo(CVID.MS_product_ion_m_z_delta, @"MS", @"MS:1000904", @"product ion m/z delta", @"The difference in m/z of the predicted m/z based on the assigned product ion minus the actual observed peak m/z.", false));
            TermData.Add(CVID.MS_percent_of_base_peak_times_100, new TermInfo(CVID.MS_percent_of_base_peak_times_100, @"MS", @"MS:1000905", @"percent of base peak times 100", @"The magnitude of a peak expressed in terms of the percentage of the magnitude of the base peak intensity multiplied by 100. The base peak is therefore 10000. This unit is common in normalized spectrum libraries.", false));
            TermData.Add(CVID.MS_peak_intensity_rank, new TermInfo(CVID.MS_peak_intensity_rank, @"MS", @"MS:1000906", @"peak intensity rank", @"Ordinal specifying the rank in intensity of a peak in a spectrum. Base peak is 1. The next most intense peak is 2, etc.", false));
            TermData.Add(CVID.MS_peak_targeting_suitability_rank, new TermInfo(CVID.MS_peak_targeting_suitability_rank, @"MS", @"MS:1000907", @"peak targeting suitability rank", @"Ordinal specifying the rank of a peak in a spectrum in terms of suitability for targeting. The most suitable peak is 1. The next most suitability peak is 2, etc. Suitability is algorithm and context dependant.", false));
            TermData.Add(CVID.MS_transition, new TermInfo(CVID.MS_transition, @"MS", @"MS:1000908", @"transition", @"A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely.", false));
            TermData.Add(CVID.MS_transition_validation_method, new TermInfo(CVID.MS_transition_validation_method, @"MS", @"MS:1000909", @"transition validation method", @"The strategy used to validate that a transition is effective.", false));
            TermData.Add(CVID.MS_transition_optimized_on_specified_instrument, new TermInfo(CVID.MS_transition_optimized_on_specified_instrument, @"MS", @"MS:1000910", @"transition optimized on specified instrument", @"The transition has been optimized by direct injection of the peptide into an instrument specified in a separate term, and the optimum voltages and fragmentation energies have been determined.", false));
            TermData.Add(CVID.MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument, new TermInfo(CVID.MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument, @"MS", @"MS:1000911", @"transition validated with an MS/MS spectrum on specified instrument", @"The transition has been validated by obtaining an MS2 spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term.", false));
            TermData.Add(CVID.MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument, new TermInfo(CVID.MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument, @"MS", @"MS:1000912", @"transition purported from an MS/MS spectrum on a different, specified instrument", @"The transition has been purported by obtaining an MS2 spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term. However, the detecting instrument is of a different type (e.g. ion trap) than the instrument that the transition will eventually be used on (e.g. triple quad).", false));
            TermData.Add(CVID.MS_transition_predicted_by_informatic_analysis, new TermInfo(CVID.MS_transition_predicted_by_informatic_analysis, @"MS", @"MS:1000913", @"transition predicted by informatic analysis", @"The transition has been predicted by informatics software without any direct spectral evidence.", false));
            TermData.Add(CVID.MS_tab_delimited_text_format, new TermInfo(CVID.MS_tab_delimited_text_format, @"MS", @"MS:1000914", @"tab delimited text format", @"A file format that has two or more columns of tabular data where each column is separated by a TAB character.", false));
            TermData.Add(CVID.MS_retention_time_window_attribute, new TermInfo(CVID.MS_retention_time_window_attribute, @"MS", @"MS:1000915", @"retention time window attribute", @"An attribute of a window in time about which a peptide might elute from the column.", false));
            TermData.Add(CVID.MS_retention_time_window_lower_offset, new TermInfo(CVID.MS_retention_time_window_lower_offset, @"MS", @"MS:1000916", @"retention time window lower offset", @"The extent of the retention time window in time units below the target retention time. The lower and upper offsets may be asymmetric about the target time.", false));
            TermData.Add(CVID.MS_retention_time_window_upper_offset, new TermInfo(CVID.MS_retention_time_window_upper_offset, @"MS", @"MS:1000917", @"retention time window upper offset", @"The extent of the retention time window in time units above the target retention time. The lower and upper offsets may be asymmetric about the target time.", false));
            TermData.Add(CVID.MS_target_list, new TermInfo(CVID.MS_target_list, @"MS", @"MS:1000918", @"target list", @"A list of peptides or compounds and their expected m/z coordinates that can be used to cause a mass spectrometry to obtain spectra of those molecules specifically.", false));
            TermData.Add(CVID.MS_target_inclusion_exclusion_priority, new TermInfo(CVID.MS_target_inclusion_exclusion_priority, @"MS", @"MS:1000919", @"target inclusion exclusion priority", @"A priority setting specifying whether included or excluded targets have priority over the other.", false));
            TermData.Add(CVID.MS_includes_supersede_excludes, new TermInfo(CVID.MS_includes_supersede_excludes, @"MS", @"MS:1000920", @"includes supersede excludes", @"A priority setting specifying that included targets have priority over the excluded targets if there is a conflict.", false));
            TermData.Add(CVID.MS_excludes_supersede_includes, new TermInfo(CVID.MS_excludes_supersede_includes, @"MS", @"MS:1000921", @"excludes supersede includes", @"A priority setting specifying that excluded targets have priority over the included targets if there is a conflict.", false));
            TermData.Add(CVID.MS_Skyline, new TermInfo(CVID.MS_Skyline, @"MS", @"MS:1000922", @"Skyline", @"Software used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the MacCoss lab at the University of Washington.", false));
            TermData.Add(CVID.MS_TIQAM, new TermInfo(CVID.MS_TIQAM, @"MS", @"MS:1000923", @"TIQAM", @"Software used to predict, select, and optimize transitions for selected reaction monitoring experiments developed and distributed by the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_MaRiMba_OBSOLETE, new TermInfo(CVID.MS_MaRiMba_OBSOLETE, @"MS", @"MS:1000924", @"MaRiMba", @"OBSOLETE Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology.", true));
            TermData.Add(CVID.MS_ATAQS, new TermInfo(CVID.MS_ATAQS, @"MS", @"MS:1000925", @"ATAQS", @"Software suite used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_product_interpretation_rank, new TermInfo(CVID.MS_product_interpretation_rank, @"MS", @"MS:1000926", @"product interpretation rank", @"The integer rank given an interpretation of an observed product ion. For example, if y8 is selected as the most likely interpretation of a peak, then it is assigned a rank of 1.", false));
            TermData.Add(CVID.MS_ion_injection_time, new TermInfo(CVID.MS_ion_injection_time, @"MS", @"MS:1000927", @"ion injection time", @"The length of time spent filling an ion trapping device.", false));
            TermData.Add(CVID.MS_calibration_spectrum, new TermInfo(CVID.MS_calibration_spectrum, @"MS", @"MS:1000928", @"calibration spectrum", @"A spectrum derived from a special calibration source, rather than from the primary injected sample. A calibration spectrum is typically derived from a substance that can be used to correct systematic shift in m/z for spectra of the primary inject sample.", false));
            TermData.Add(CVID.MS_Shimadzu_Biotech_nativeID_format, new TermInfo(CVID.MS_Shimadzu_Biotech_nativeID_format, @"MS", @"MS:1000929", @"Shimadzu Biotech nativeID format", @"Native format defined by source=xsd:string start=xsd:nonNegativeInteger end=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Shimadzu_Biotech_database_entity, new TermInfo(CVID.MS_Shimadzu_Biotech_database_entity, @"MS", @"MS:1000930", @"Shimadzu Biotech database entity", @"Shimadzu Biotech format.", false));
            TermData.Add(CVID.MS_QTRAP_5500, new TermInfo(CVID.MS_QTRAP_5500, @"MS", @"MS:1000931", @"QTRAP 5500", @"Applied Biosystems|MDS SCIEX QTRAP 5500.", false));
            TermData.Add(CVID.MS_TripleTOF_5600, new TermInfo(CVID.MS_TripleTOF_5600, @"MS", @"MS:1000932", @"TripleTOF 5600", @"SCIEX TripleTOF 5600, a quadrupole - quadrupole - time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_protein_modifications, new TermInfo(CVID.MS_protein_modifications, @"MS", @"MS:1000933", @"protein modifications", @"Encoding of modifications of the protein sequence from the specified accession, written in PEFF notation.", false));
            TermData.Add(CVID.MS_gene_name, new TermInfo(CVID.MS_gene_name, @"MS", @"MS:1000934", @"gene name", @"Name of the gene from which the protein is translated.", false));
            TermData.Add(CVID.MS_spectrum_interpretation, new TermInfo(CVID.MS_spectrum_interpretation, @"MS", @"MS:1001000", @"spectrum interpretation", @"Collection of terms from the PSI Proteome Informatics standards describing the interpretation of spectra.", false));
            TermData.Add(CVID.MS_SEQUEST_CleavesAt, new TermInfo(CVID.MS_SEQUEST_CleavesAt, @"MS", @"MS:1001005", @"SEQUEST:CleavesAt", @"", false));
            TermData.Add(CVID.MS_SEQUEST_ViewCV, new TermInfo(CVID.MS_SEQUEST_ViewCV, @"MS", @"MS:1001006", @"SEQUEST:ViewCV", @"SEQUEST View Input Parameters.", false));
            TermData.Add(CVID.MS_SEQUEST_OutputLines, new TermInfo(CVID.MS_SEQUEST_OutputLines, @"MS", @"MS:1001007", @"SEQUEST:OutputLines", @"Number of peptide results to show.", false));
            TermData.Add(CVID.MS_SEQUEST_DescriptionLines, new TermInfo(CVID.MS_SEQUEST_DescriptionLines, @"MS", @"MS:1001009", @"SEQUEST:DescriptionLines", @"Number of full protein descriptions to show for top N peptides.", false));
            TermData.Add(CVID.MS_de_novo_search, new TermInfo(CVID.MS_de_novo_search, @"MS", @"MS:1001010", @"de novo search", @"A de novo sequencing search (without database).", false));
            TermData.Add(CVID.MS_search_database_details, new TermInfo(CVID.MS_search_database_details, @"MS", @"MS:1001011", @"search database details", @"Details about the database searched.", false));
            TermData.Add(CVID.MS_database_source, new TermInfo(CVID.MS_database_source, @"MS", @"MS:1001012", @"database source", @"The organisation, project or laboratory from where the database is obtained (UniProt, NCBI, EBI, other).", false));
            TermData.Add(CVID.MS_database_name, new TermInfo(CVID.MS_database_name, @"MS", @"MS:1001013", @"database name", @"The name of the search database (nr, SwissProt or est_human).", false));
            TermData.Add(CVID.MS_database_local_file_path_OBSOLETE, new TermInfo(CVID.MS_database_local_file_path_OBSOLETE, @"MS", @"MS:1001014", @"database local file path", @"OBSOLETE: Use attribute in mzIdentML instead. Local file path of the search database from the search engine's point of view.", true));
            TermData.Add(CVID.MS_database_original_uri, new TermInfo(CVID.MS_database_original_uri, @"MS", @"MS:1001015", @"database original uri", @"URI, from where the search database was originally downloaded.", false));
            TermData.Add(CVID.MS_database_version, new TermInfo(CVID.MS_database_version, @"MS", @"MS:1001016", @"database version", @"Version of the search database. In mzIdentML use the attribute instead.", false));
            TermData.Add(CVID.MS_database_release_date_OBSOLETE, new TermInfo(CVID.MS_database_release_date_OBSOLETE, @"MS", @"MS:1001017", @"database release date", @"OBSOLETE: Use attribute in mzIdentML instead. Release date of the search database.", true));
            TermData.Add(CVID.MS_database_type, new TermInfo(CVID.MS_database_type, @"MS", @"MS:1001018", @"database type", @"Database containing amino acid or nucleic acid sequences.", false));
            TermData.Add(CVID.MS_database_filtering, new TermInfo(CVID.MS_database_filtering, @"MS", @"MS:1001019", @"database filtering", @"Was there filtering used on the database.", false));
            TermData.Add(CVID.MS_DB_filter_taxonomy, new TermInfo(CVID.MS_DB_filter_taxonomy, @"MS", @"MS:1001020", @"DB filter taxonomy", @"A taxonomy filter was to the database search.", false));
            TermData.Add(CVID.MS_DB_filter_on_accession_numbers, new TermInfo(CVID.MS_DB_filter_on_accession_numbers, @"MS", @"MS:1001021", @"DB filter on accession numbers", @"Filtering applied specifically by accession number pattern.", false));
            TermData.Add(CVID.MS_DB_MW_filter, new TermInfo(CVID.MS_DB_MW_filter, @"MS", @"MS:1001022", @"DB MW filter", @"Filtering applied specifically by protein molecular weight, specified as either a range or above/below a threshold value.", false));
            TermData.Add(CVID.MS_DB_PI_filter, new TermInfo(CVID.MS_DB_PI_filter, @"MS", @"MS:1001023", @"DB PI filter", @"Filtering applied specifically by predicted protein isoelectric focussing point (pI), specified as either a range or above/below a threshold value.", false));
            TermData.Add(CVID.MS_translation_frame, new TermInfo(CVID.MS_translation_frame, @"MS", @"MS:1001024", @"translation frame", @"The translated open reading frames from a nucleotide database considered in the search (range: 1-6).", false));
            TermData.Add(CVID.MS_translation_table, new TermInfo(CVID.MS_translation_table, @"MS", @"MS:1001025", @"translation table", @"The translation table used to translate the nucleotides to amino acids.", false));
            TermData.Add(CVID.MS_SEQUEST_NormalizeXCorrValues, new TermInfo(CVID.MS_SEQUEST_NormalizeXCorrValues, @"MS", @"MS:1001026", @"SEQUEST:NormalizeXCorrValues", @"", false));
            TermData.Add(CVID.MS_DB_filter_on_sequence_pattern, new TermInfo(CVID.MS_DB_filter_on_sequence_pattern, @"MS", @"MS:1001027", @"DB filter on sequence pattern", @"Filtering applied specifically by amino acid sequence pattern.", false));
            TermData.Add(CVID.MS_SEQUEST_SequenceHeaderFilter, new TermInfo(CVID.MS_SEQUEST_SequenceHeaderFilter, @"MS", @"MS:1001028", @"SEQUEST:SequenceHeaderFilter", @"String in the header of a sequence entry for that entry to be searched.", false));
            TermData.Add(CVID.MS_number_of_sequences_searched, new TermInfo(CVID.MS_number_of_sequences_searched, @"MS", @"MS:1001029", @"number of sequences searched", @"The number of sequences (proteins / nucleotides) from the database search after filtering.", false));
            TermData.Add(CVID.MS_number_of_peptide_seqs_compared_to_each_spectrum, new TermInfo(CVID.MS_number_of_peptide_seqs_compared_to_each_spectrum, @"MS", @"MS:1001030", @"number of peptide seqs compared to each spectrum", @"Number of peptide seqs compared to each spectrum.", false));
            TermData.Add(CVID.MS_spectral_library_search, new TermInfo(CVID.MS_spectral_library_search, @"MS", @"MS:1001031", @"spectral library search", @"A search using a library of spectra.", false));
            TermData.Add(CVID.MS_SEQUEST_SequencePartialFilter, new TermInfo(CVID.MS_SEQUEST_SequencePartialFilter, @"MS", @"MS:1001032", @"SEQUEST:SequencePartialFilter", @"", false));
            TermData.Add(CVID.MS_date___time_search_performed_OBSOLETE, new TermInfo(CVID.MS_date___time_search_performed_OBSOLETE, @"MS", @"MS:1001035", @"date / time search performed", @"OBSOLETE: use attribute in mzIdentML instead. Date and time of the actual search run.", true));
            TermData.Add(CVID.MS_search_time_taken, new TermInfo(CVID.MS_search_time_taken, @"MS", @"MS:1001036", @"search time taken", @"The time taken to complete the search in seconds.", false));
            TermData.Add(CVID.MS_SEQUEST_ShowFragmentIons, new TermInfo(CVID.MS_SEQUEST_ShowFragmentIons, @"MS", @"MS:1001037", @"SEQUEST:ShowFragmentIons", @"Flag indicating that fragment ions should be shown.", false));
            TermData.Add(CVID.MS_SEQUEST_Consensus, new TermInfo(CVID.MS_SEQUEST_Consensus, @"MS", @"MS:1001038", @"SEQUEST:Consensus", @"Specify depth as value of the CVParam.", false));
            TermData.Add(CVID.MS_intermediate_analysis_format, new TermInfo(CVID.MS_intermediate_analysis_format, @"MS", @"MS:1001040", @"intermediate analysis format", @"Type of the source file, the mzIdentML was created from.", false));
            TermData.Add(CVID.MS_SEQUEST_sortCV, new TermInfo(CVID.MS_SEQUEST_sortCV, @"MS", @"MS:1001041", @"SEQUEST:sortCV", @"SEQUEST View / Sort Input Parameters.", false));
            TermData.Add(CVID.MS_SEQUEST_LimitTo, new TermInfo(CVID.MS_SEQUEST_LimitTo, @"MS", @"MS:1001042", @"SEQUEST:LimitTo", @"Specify \ number of dtas shown\  as value of the CVParam.", false));
            TermData.Add(CVID.MS_cleavage_agent_details, new TermInfo(CVID.MS_cleavage_agent_details, @"MS", @"MS:1001044", @"cleavage agent details", @"Details of cleavage agent (enzyme).", false));
            TermData.Add(CVID.MS_cleavage_agent_name, new TermInfo(CVID.MS_cleavage_agent_name, @"MS", @"MS:1001045", @"cleavage agent name", @"The name of the cleavage agent.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_dCn, new TermInfo(CVID.MS_SEQUEST_sort_by_dCn, @"MS", @"MS:1001046", @"SEQUEST:sort by dCn", @"Sort order of SEQUEST search results by the delta of the normalized correlation score.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_dM, new TermInfo(CVID.MS_SEQUEST_sort_by_dM, @"MS", @"MS:1001047", @"SEQUEST:sort by dM", @"Sort order of SEQUEST search results by the difference between a theoretically calculated and the corresponding experimentally measured molecular mass M.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Ions, new TermInfo(CVID.MS_SEQUEST_sort_by_Ions, @"MS", @"MS:1001048", @"SEQUEST:sort by Ions", @"Sort order of SEQUEST search results given by the ions.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_MH_, new TermInfo(CVID.MS_SEQUEST_sort_by_MH_, @"MS", @"MS:1001049", @"SEQUEST:sort by MH+", @"Sort order of SEQUEST search results given by the mass of the protonated ion.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_P, new TermInfo(CVID.MS_SEQUEST_sort_by_P, @"MS", @"MS:1001050", @"SEQUEST:sort by P", @"Sort order of SEQUEST search results given by the probability.", false));
            TermData.Add(CVID.MS_multiple_enzyme_combination_rules_OBSOLETE, new TermInfo(CVID.MS_multiple_enzyme_combination_rules_OBSOLETE, @"MS", @"MS:1001051", @"multiple enzyme combination rules", @"OBSOLETE: use attribute independent in mzIdentML instead. Description of multiple enzyme digestion protocol, if any.", true));
            TermData.Add(CVID.MS_SEQUEST_sort_by_PreviousAminoAcid, new TermInfo(CVID.MS_SEQUEST_sort_by_PreviousAminoAcid, @"MS", @"MS:1001052", @"SEQUEST:sort by PreviousAminoAcid", @"Sort order of SEQUEST search results given by the previous amino acid.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Ref, new TermInfo(CVID.MS_SEQUEST_sort_by_Ref, @"MS", @"MS:1001053", @"SEQUEST:sort by Ref", @"Sort order of SEQUEST search results given by the reference.", false));
            TermData.Add(CVID.MS_modification_parameters, new TermInfo(CVID.MS_modification_parameters, @"MS", @"MS:1001055", @"modification parameters", @"Modification parameters for the search engine run.", false));
            TermData.Add(CVID.MS_modification_specificity_rule, new TermInfo(CVID.MS_modification_specificity_rule, @"MS", @"MS:1001056", @"modification specificity rule", @"The specificity rules for the modifications applied by the search engine.", false));
            TermData.Add(CVID.MS_tolerance_on_types_OBSOLETE, new TermInfo(CVID.MS_tolerance_on_types_OBSOLETE, @"MS", @"MS:1001057", @"tolerance on types", @"OBSOLETE: Tolerance on types.", true));
            TermData.Add(CVID.MS_quality_estimation_by_manual_validation, new TermInfo(CVID.MS_quality_estimation_by_manual_validation, @"MS", @"MS:1001058", @"quality estimation by manual validation", @"The quality estimation was done manually.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_RSp, new TermInfo(CVID.MS_SEQUEST_sort_by_RSp, @"MS", @"MS:1001059", @"SEQUEST:sort by RSp", @"Sort order of SEQUEST search results given by the result 'Sp' of 'Rank/Sp' in the out file (peptide).", false));
            TermData.Add(CVID.MS_quality_estimation_method_details, new TermInfo(CVID.MS_quality_estimation_method_details, @"MS", @"MS:1001060", @"quality estimation method details", @"Method for quality estimation (manually or with decoy database).", false));
            TermData.Add(CVID.MS_neutral_loss_OBSOLETE, new TermInfo(CVID.MS_neutral_loss_OBSOLETE, @"MS", @"MS:1001061", @"neutral loss", @"OBSOLETE: replaced by MS:1000336 (neutral loss): Leave this to PSI-MOD.", true));
            TermData.Add(CVID.MS_Mascot_MGF_format, new TermInfo(CVID.MS_Mascot_MGF_format, @"MS", @"MS:1001062", @"Mascot MGF format", @"Mascot MGF file format.", false));
            TermData.Add(CVID.MS_TODOscoring_model_OBSOLETE, new TermInfo(CVID.MS_TODOscoring_model_OBSOLETE, @"MS", @"MS:1001065", @"TODOscoring model", @"OBSOLETE: There is Phenyx:ScoringModel for Phenyx! Scoring model (more detailed granularity). TODO: add some child terms.", true));
            TermData.Add(CVID.MS_ions_series_considered_in_search, new TermInfo(CVID.MS_ions_series_considered_in_search, @"MS", @"MS:1001066", @"ions series considered in search", @"The description of the DEPRECATED ion fragment series (including charges and neutral losses) that are considered by the search engine.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Sp, new TermInfo(CVID.MS_SEQUEST_sort_by_Sp, @"MS", @"MS:1001068", @"SEQUEST:sort by Sp", @"Sort order of SEQUEST search results by the Sp score.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_TIC, new TermInfo(CVID.MS_SEQUEST_sort_by_TIC, @"MS", @"MS:1001069", @"SEQUEST:sort by TIC", @"Sort order of SEQUEST search results given by the total ion current.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Scan, new TermInfo(CVID.MS_SEQUEST_sort_by_Scan, @"MS", @"MS:1001070", @"SEQUEST:sort by Scan", @"Sort order of SEQUEST search results given by the scan number.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Sequence, new TermInfo(CVID.MS_SEQUEST_sort_by_Sequence, @"MS", @"MS:1001071", @"SEQUEST:sort by Sequence", @"Sort order of SEQUEST search results given by the sequence.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_Sf, new TermInfo(CVID.MS_SEQUEST_sort_by_Sf, @"MS", @"MS:1001072", @"SEQUEST:sort by Sf", @"Sort order of SEQUEST search results given by the SEQUEST result 'Sf'.", false));
            TermData.Add(CVID.MS_database_type_amino_acid, new TermInfo(CVID.MS_database_type_amino_acid, @"MS", @"MS:1001073", @"database type amino acid", @"Database contains amino acid sequences.", false));
            TermData.Add(CVID.MS_database_type_nucleotide, new TermInfo(CVID.MS_database_type_nucleotide, @"MS", @"MS:1001079", @"database type nucleotide", @"Database contains nucleic acid sequences.", false));
            TermData.Add(CVID.MS_search_type, new TermInfo(CVID.MS_search_type, @"MS", @"MS:1001080", @"search type", @"Enumeration of type of search value (i.e. from PMF, sequence tag, MS2).", false));
            TermData.Add(CVID.MS_pmf_search, new TermInfo(CVID.MS_pmf_search, @"MS", @"MS:1001081", @"pmf search", @"A peptide mass fingerprint search.", false));
            TermData.Add(CVID.MS_tag_search, new TermInfo(CVID.MS_tag_search, @"MS", @"MS:1001082", @"tag search", @"A sequence tag search.", false));
            TermData.Add(CVID.MS_ms_ms_search, new TermInfo(CVID.MS_ms_ms_search, @"MS", @"MS:1001083", @"ms-ms search", @"An MS2 search (with fragment ions).", false));
            TermData.Add(CVID.MS_database_nr, new TermInfo(CVID.MS_database_nr, @"MS", @"MS:1001084", @"database nr", @"Non-redundant GenBank sequence database.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 2</summary>
        private static void PopulateTermData_MS_Part2()
        {
            TermData.Add(CVID.MS_protein_level_identification_attribute, new TermInfo(CVID.MS_protein_level_identification_attribute, @"MS", @"MS:1001085", @"protein-level identification attribute", @"Protein level information.", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_XCorr, new TermInfo(CVID.MS_SEQUEST_sort_by_XCorr, @"MS", @"MS:1001086", @"SEQUEST:sort by XCorr", @"Sort order of SEQUEST search results by the correlation score.", false));
            TermData.Add(CVID.MS_SEQUEST_ProcessCV, new TermInfo(CVID.MS_SEQUEST_ProcessCV, @"MS", @"MS:1001087", @"SEQUEST:ProcessCV", @"SEQUEST View / Process Input Parameters.", false));
            TermData.Add(CVID.MS_protein_description, new TermInfo(CVID.MS_protein_description, @"MS", @"MS:1001088", @"protein description", @"The protein description line from the sequence entry in the source database FASTA file.", false));
            TermData.Add(CVID.MS_molecule_taxonomy, new TermInfo(CVID.MS_molecule_taxonomy, @"MS", @"MS:1001089", @"molecule taxonomy", @"The taxonomy of the resultant molecule from the search.", false));
            TermData.Add(CVID.MS_taxonomy_nomenclature_OBSOLETE, new TermInfo(CVID.MS_taxonomy_nomenclature_OBSOLETE, @"MS", @"MS:1001090", @"taxonomy nomenclature", @"OBSOLETE: The system used to indicate taxonomy. There should be an enumerated list of options: latin name, NCBI TaxID, common name, Swiss-Prot species ID (ex. RABIT from the full protein ID ALBU_RABIT).", true));
            TermData.Add(CVID.MS_NoEnzyme_OBSOLETE, new TermInfo(CVID.MS_NoEnzyme_OBSOLETE, @"MS", @"MS:1001091", @"NoEnzyme", @"", true));
            TermData.Add(CVID.MS_peptide_sequence_level_identification_statistic, new TermInfo(CVID.MS_peptide_sequence_level_identification_statistic, @"MS", @"MS:1001092", @"peptide sequence-level identification statistic", @"Identification confidence metric for a peptide.", false));
            TermData.Add(CVID.MS_sequence_coverage, new TermInfo(CVID.MS_sequence_coverage, @"MS", @"MS:1001093", @"sequence coverage", @"The percent coverage for the protein based upon the matched peptide sequences (can be calculated).", false));
            TermData.Add(CVID.MS_SEQUEST_sort_by_z, new TermInfo(CVID.MS_SEQUEST_sort_by_z, @"MS", @"MS:1001094", @"SEQUEST:sort by z", @"Sort order of SEQUEST search results given by the charge.", false));
            TermData.Add(CVID.MS_SEQUEST_ProcessAll, new TermInfo(CVID.MS_SEQUEST_ProcessAll, @"MS", @"MS:1001095", @"SEQUEST:ProcessAll", @"", false));
            TermData.Add(CVID.MS_SEQUEST_TopPercentMostIntense, new TermInfo(CVID.MS_SEQUEST_TopPercentMostIntense, @"MS", @"MS:1001096", @"SEQUEST:TopPercentMostIntense", @"Specify \ percentage\  as value of the CVParam.", false));
            TermData.Add(CVID.MS_distinct_peptide_sequences, new TermInfo(CVID.MS_distinct_peptide_sequences, @"MS", @"MS:1001097", @"distinct peptide sequences", @"This counts distinct sequences hitting the protein without regard to a minimal confidence threshold.", false));
            TermData.Add(CVID.MS_confident_distinct_peptide_sequences, new TermInfo(CVID.MS_confident_distinct_peptide_sequences, @"MS", @"MS:1001098", @"confident distinct peptide sequences", @"This counts the number of distinct peptide sequences. Multiple charge states and multiple modification states do NOT count as multiple sequences. The definition of 'confident' must be qualified elsewhere.", false));
            TermData.Add(CVID.MS_confident_peptide_qualification, new TermInfo(CVID.MS_confident_peptide_qualification, @"MS", @"MS:1001099", @"confident peptide qualification", @"The point of this entry is to define what is meant by confident for the term Confident distinct peptide sequence and/or Confident peptides. Example 1 - metric=Paragon:Confidence value=95 sense=greater than Example 2 - metric=Mascot:Eval value=0.05 sense=less than.", false));
            TermData.Add(CVID.MS_confident_peptide_sequence_number, new TermInfo(CVID.MS_confident_peptide_sequence_number, @"MS", @"MS:1001100", @"confident peptide sequence number", @"This counts the number of peptide sequences without regard to whether they are distinct. Multiple charges states and multiple modification states DO count as multiple peptides. The definition of 'confident' must be qualified elsewhere.", false));
            TermData.Add(CVID.MS_protein_group_or_subset_relationship, new TermInfo(CVID.MS_protein_group_or_subset_relationship, @"MS", @"MS:1001101", @"protein group or subset relationship", @"Protein group or subset relationships.", false));
            TermData.Add(CVID.MS_SEQUEST_Chromatogram, new TermInfo(CVID.MS_SEQUEST_Chromatogram, @"MS", @"MS:1001102", @"SEQUEST:Chromatogram", @"", false));
            TermData.Add(CVID.MS_SEQUEST_InfoAndLog, new TermInfo(CVID.MS_SEQUEST_InfoAndLog, @"MS", @"MS:1001103", @"SEQUEST:InfoAndLog", @"", false));
            TermData.Add(CVID.MS_database_UniProtKB_Swiss_Prot, new TermInfo(CVID.MS_database_UniProtKB_Swiss_Prot, @"MS", @"MS:1001104", @"database UniProtKB/Swiss-Prot", @"The name of the UniProtKB/Swiss-Prot knowledgebase.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_identification_attribute, new TermInfo(CVID.MS_peptide_sequence_level_identification_attribute, @"MS", @"MS:1001105", @"peptide sequence-level identification attribute", @"Peptide level information.", false));
            TermData.Add(CVID.MS_SEQUEST_TopNumber, new TermInfo(CVID.MS_SEQUEST_TopNumber, @"MS", @"MS:1001106", @"SEQUEST:TopNumber", @"Specify \ number\  as value of the CVParam.", false));
            TermData.Add(CVID.MS_data_stored_in_database, new TermInfo(CVID.MS_data_stored_in_database, @"MS", @"MS:1001107", @"data stored in database", @"Source file for this mzIdentML was a data set in a database.", false));
            TermData.Add(CVID.MS_param__a_ion, new TermInfo(CVID.MS_param__a_ion, @"MS", @"MS:1001108", @"param: a ion", @"Parameter information, type of product: a ion with charge on the N-terminal side.", false));
            TermData.Add(CVID.MS_SEQUEST_CullTo, new TermInfo(CVID.MS_SEQUEST_CullTo, @"MS", @"MS:1001109", @"SEQUEST:CullTo", @"Specify cull string as value of the CVParam.", false));
            TermData.Add(CVID.MS_SEQUEST_modeCV, new TermInfo(CVID.MS_SEQUEST_modeCV, @"MS", @"MS:1001110", @"SEQUEST:modeCV", @"SEQUEST Mode Input Parameters.", false));
            TermData.Add(CVID.MS_SEQUEST_Full, new TermInfo(CVID.MS_SEQUEST_Full, @"MS", @"MS:1001111", @"SEQUEST:Full", @"", false));
            TermData.Add(CVID.MS_n_terminal_flanking_residue, new TermInfo(CVID.MS_n_terminal_flanking_residue, @"MS", @"MS:1001112", @"n-terminal flanking residue", @"Residue preceding the first amino acid in the peptide sequence as it occurs in the protein. Use 'N-term' to denote if the peptide starts at the N terminus of the protein.", false));
            TermData.Add(CVID.MS_c_terminal_flanking_residue, new TermInfo(CVID.MS_c_terminal_flanking_residue, @"MS", @"MS:1001113", @"c-terminal flanking residue", @"Residue following the last amino acid in the peptide sequence as it occurs in the protein. Use 'C-term' to denote if the peptide ends at the C terminus of the protein.", false));
            TermData.Add(CVID.MS_retention_time_s__OBSOLETE, new TermInfo(CVID.MS_retention_time_s__OBSOLETE, @"MS", @"MS:1001114", @"retention time(s)", @"OBSOLETE Retention time of the spectrum from the source file.", true));
            TermData.Add(CVID.MS_scan_number_s__OBSOLETE, new TermInfo(CVID.MS_scan_number_s__OBSOLETE, @"MS", @"MS:1001115", @"scan number(s)", @"OBSOLETE: use spectrumID attribute of SpectrumIdentificationResult. Take from mzData.", true));
            TermData.Add(CVID.MS_single_protein_identification_statistic, new TermInfo(CVID.MS_single_protein_identification_statistic, @"MS", @"MS:1001116", @"single protein identification statistic", @"Results specific for one protein as part of a protein ambiguity group (a result not valid for all the other proteins in the protein ambiguity group).", false));
            TermData.Add(CVID.MS_theoretical_mass, new TermInfo(CVID.MS_theoretical_mass, @"MS", @"MS:1001117", @"theoretical mass", @"The theoretical mass of the molecule (e.g. the peptide sequence and its modifications).", false));
            TermData.Add(CVID.MS_param__b_ion, new TermInfo(CVID.MS_param__b_ion, @"MS", @"MS:1001118", @"param: b ion", @"Parameter information, type of product: b ion with charge on the N-terminal side.", false));
            TermData.Add(CVID.MS_param__c_ion, new TermInfo(CVID.MS_param__c_ion, @"MS", @"MS:1001119", @"param: c ion", @"Parameter information, type of product: c ion with charge on the N-terminal side.", false));
            TermData.Add(CVID.MS_SEQUEST_FormatAndLinks, new TermInfo(CVID.MS_SEQUEST_FormatAndLinks, @"MS", @"MS:1001120", @"SEQUEST:FormatAndLinks", @"", false));
            TermData.Add(CVID.MS_number_of_matched_peaks, new TermInfo(CVID.MS_number_of_matched_peaks, @"MS", @"MS:1001121", @"number of matched peaks", @"The number of peaks that were matched as qualified by the ion series considered field. If a peak matches multiple ions then only 1 would be added the count.", false));
            TermData.Add(CVID.MS_ions_series_considered, new TermInfo(CVID.MS_ions_series_considered, @"MS", @"MS:1001122", @"ions series considered", @"The ion series that were used during the calculation of the count (e.g. a, b, c, d, v, w, x, y, z, a-H2O, a-NH3, b-H2O, b-NH3, y-H2O, y-NH3, b-H20, b+, z-, z+1, z+2, b-H3PO4, y-H3PO4, immonium, internal ya, internal yb).", false));
            TermData.Add(CVID.MS_number_of_peaks_used, new TermInfo(CVID.MS_number_of_peaks_used, @"MS", @"MS:1001123", @"number of peaks used", @"The number of peaks from the original peak list that are used to calculate the scores for a particular search engine. All ions that have the opportunity to match or be counted even if they don't.", false));
            TermData.Add(CVID.MS_number_of_peaks_submitted, new TermInfo(CVID.MS_number_of_peaks_submitted, @"MS", @"MS:1001124", @"number of peaks submitted", @"The number of peaks from the original peaks listed that were submitted to the search engine.", false));
            TermData.Add(CVID.MS_manual_validation, new TermInfo(CVID.MS_manual_validation, @"MS", @"MS:1001125", @"manual validation", @"Result of quality estimation: decision of a manual validation.", false));
            TermData.Add(CVID.MS_SEQUEST_Fast, new TermInfo(CVID.MS_SEQUEST_Fast, @"MS", @"MS:1001126", @"SEQUEST:Fast", @"", false));
            TermData.Add(CVID.MS_peptide_sharing_details, new TermInfo(CVID.MS_peptide_sharing_details, @"MS", @"MS:1001127", @"peptide sharing details", @"Accessions Containing Sequence - Accessions for each protein containing this peptide.", false));
            TermData.Add(CVID.MS_SEQUEST_selectCV, new TermInfo(CVID.MS_SEQUEST_selectCV, @"MS", @"MS:1001128", @"SEQUEST:selectCV", @"SEQUEST Select Input Parameters.", false));
            TermData.Add(CVID.MS_quantification_information, new TermInfo(CVID.MS_quantification_information, @"MS", @"MS:1001129", @"quantification information", @"Quantification information.", false));
            TermData.Add(CVID.MS_peptide_raw_area_OBSOLETE, new TermInfo(CVID.MS_peptide_raw_area_OBSOLETE, @"MS", @"MS:1001130", @"peptide raw area", @"OBSOLETE Peptide raw area.", true));
            TermData.Add(CVID.MS_error_on_peptide_area, new TermInfo(CVID.MS_error_on_peptide_area, @"MS", @"MS:1001131", @"error on peptide area", @"Error on peptide area.", false));
            TermData.Add(CVID.MS_peptide_ratio, new TermInfo(CVID.MS_peptide_ratio, @"MS", @"MS:1001132", @"peptide ratio", @"Peptide ratio.", false));
            TermData.Add(CVID.MS_error_on_peptide_ratio, new TermInfo(CVID.MS_error_on_peptide_ratio, @"MS", @"MS:1001133", @"error on peptide ratio", @"Error on peptide ratio.", false));
            TermData.Add(CVID.MS_protein_ratio, new TermInfo(CVID.MS_protein_ratio, @"MS", @"MS:1001134", @"protein ratio", @"Protein ratio.", false));
            TermData.Add(CVID.MS_error_on_protein_ratio, new TermInfo(CVID.MS_error_on_protein_ratio, @"MS", @"MS:1001135", @"error on protein ratio", @"Error on protein ratio.", false));
            TermData.Add(CVID.MS_p_value__protein_diff_from_1_randomly__OBSOLETE, new TermInfo(CVID.MS_p_value__protein_diff_from_1_randomly__OBSOLETE, @"MS", @"MS:1001136", @"p-value (protein diff from 1 randomly)", @"OBSOLETE P-value (protein diff from 1 randomly).", true));
            TermData.Add(CVID.MS_absolute_quantity, new TermInfo(CVID.MS_absolute_quantity, @"MS", @"MS:1001137", @"absolute quantity", @"Absolute quantity in terms of real concentration or molecule copy number in sample.", false));
            TermData.Add(CVID.MS_error_on_absolute_quantity, new TermInfo(CVID.MS_error_on_absolute_quantity, @"MS", @"MS:1001138", @"error on absolute quantity", @"Error on absolute quantity.", false));
            TermData.Add(CVID.MS_quantitation_software_name, new TermInfo(CVID.MS_quantitation_software_name, @"MS", @"MS:1001139", @"quantitation software name", @"Quantitation software name.", false));
            TermData.Add(CVID.MS_quantitation_software_version_OBSOLETE, new TermInfo(CVID.MS_quantitation_software_version_OBSOLETE, @"MS", @"MS:1001140", @"quantitation software version", @"OBSOLETE Quantitation software version.", true));
            TermData.Add(CVID.MS_intensity_of_precursor_ion, new TermInfo(CVID.MS_intensity_of_precursor_ion, @"MS", @"MS:1001141", @"intensity of precursor ion", @"The intensity of the precursor ion.", false));
            TermData.Add(CVID.MS_database_IPI_human, new TermInfo(CVID.MS_database_IPI_human, @"MS", @"MS:1001142", @"database IPI_human", @"International Protein Index database for Homo sapiens sequences.", false));
            TermData.Add(CVID.MS_PSM_level_search_engine_specific_statistic, new TermInfo(CVID.MS_PSM_level_search_engine_specific_statistic, @"MS", @"MS:1001143", @"PSM-level search engine specific statistic", @"Search engine specific peptide spectrum match scores.", false));
            TermData.Add(CVID.MS_SEQUEST_SelectDefault, new TermInfo(CVID.MS_SEQUEST_SelectDefault, @"MS", @"MS:1001144", @"SEQUEST:SelectDefault", @"", false));
            TermData.Add(CVID.MS_SEQUEST_SelectAdvancedCV, new TermInfo(CVID.MS_SEQUEST_SelectAdvancedCV, @"MS", @"MS:1001145", @"SEQUEST:SelectAdvancedCV", @"SEQUEST Select Advanced Input Parameters.", false));
            TermData.Add(CVID.MS_param__a_ion_NH3_DEPRECATED, new TermInfo(CVID.MS_param__a_ion_NH3_DEPRECATED, @"MS", @"MS:1001146", @"param: a ion-NH3 DEPRECATED", @"Ion a-NH3 parameter information, type of product: a ion with lost ammonia.", false));
            TermData.Add(CVID.MS_protein_ambiguity_group_result_details, new TermInfo(CVID.MS_protein_ambiguity_group_result_details, @"MS", @"MS:1001147", @"protein ambiguity group result details", @"", false));
            TermData.Add(CVID.MS_param__a_ion_H2O_DEPRECATED, new TermInfo(CVID.MS_param__a_ion_H2O_DEPRECATED, @"MS", @"MS:1001148", @"param: a ion-H2O DEPRECATED", @"Ion a-H2O if a significant and fragment includes STED.", false));
            TermData.Add(CVID.MS_param__b_ion_NH3_DEPRECATED, new TermInfo(CVID.MS_param__b_ion_NH3_DEPRECATED, @"MS", @"MS:1001149", @"param: b ion-NH3 DEPRECATED", @"Ion b-NH3 parameter information, type of product: b ion with lost ammonia.", false));
            TermData.Add(CVID.MS_param__b_ion_H2O_DEPRECATED, new TermInfo(CVID.MS_param__b_ion_H2O_DEPRECATED, @"MS", @"MS:1001150", @"param: b ion-H2O DEPRECATED", @"Ion b-H2O if b significant and fragment includes STED.", false));
            TermData.Add(CVID.MS_param__y_ion_NH3_DEPRECATED, new TermInfo(CVID.MS_param__y_ion_NH3_DEPRECATED, @"MS", @"MS:1001151", @"param: y ion-NH3 DEPRECATED", @"Ion y-NH3 parameter information, type of product: y ion with lost ammonia.", false));
            TermData.Add(CVID.MS_param__y_ion_H2O_DEPRECATED, new TermInfo(CVID.MS_param__y_ion_H2O_DEPRECATED, @"MS", @"MS:1001152", @"param: y ion-H2O DEPRECATED", @"", false));
            TermData.Add(CVID.MS_search_engine_specific_score, new TermInfo(CVID.MS_search_engine_specific_score, @"MS", @"MS:1001153", @"search engine specific score", @"Search engine specific scores.", false));
            TermData.Add(CVID.MS_SEQUEST_probability, new TermInfo(CVID.MS_SEQUEST_probability, @"MS", @"MS:1001154", @"SEQUEST:probability", @"The SEQUEST result 'Probability'.", false));
            TermData.Add(CVID.MS_SEQUEST_xcorr, new TermInfo(CVID.MS_SEQUEST_xcorr, @"MS", @"MS:1001155", @"SEQUEST:xcorr", @"The SEQUEST result 'XCorr'.", false));
            TermData.Add(CVID.MS_SEQUEST_deltacn, new TermInfo(CVID.MS_SEQUEST_deltacn, @"MS", @"MS:1001156", @"SEQUEST:deltacn", @"The SEQUEST result 'DeltaCn'.", false));
            TermData.Add(CVID.MS_SEQUEST_sp, new TermInfo(CVID.MS_SEQUEST_sp, @"MS", @"MS:1001157", @"SEQUEST:sp", @"The SEQUEST result 'Sp' (protein).", false));
            TermData.Add(CVID.MS_SEQUEST_Uniq, new TermInfo(CVID.MS_SEQUEST_Uniq, @"MS", @"MS:1001158", @"SEQUEST:Uniq", @"", false));
            TermData.Add(CVID.MS_SEQUEST_expectation_value, new TermInfo(CVID.MS_SEQUEST_expectation_value, @"MS", @"MS:1001159", @"SEQUEST:expectation value", @"The SEQUEST result 'Expectation value'.", false));
            TermData.Add(CVID.MS_SEQUEST_sf, new TermInfo(CVID.MS_SEQUEST_sf, @"MS", @"MS:1001160", @"SEQUEST:sf", @"The SEQUEST result 'Sf'.", false));
            TermData.Add(CVID.MS_SEQUEST_matched_ions, new TermInfo(CVID.MS_SEQUEST_matched_ions, @"MS", @"MS:1001161", @"SEQUEST:matched ions", @"The SEQUEST result 'Matched Ions'.", false));
            TermData.Add(CVID.MS_SEQUEST_total_ions, new TermInfo(CVID.MS_SEQUEST_total_ions, @"MS", @"MS:1001162", @"SEQUEST:total ions", @"The SEQUEST result 'Total Ions'.", false));
            TermData.Add(CVID.MS_SEQUEST_consensus_score, new TermInfo(CVID.MS_SEQUEST_consensus_score, @"MS", @"MS:1001163", @"SEQUEST:consensus score", @"The SEQUEST result 'Consensus Score'.", false));
            TermData.Add(CVID.MS_Paragon_unused_protscore, new TermInfo(CVID.MS_Paragon_unused_protscore, @"MS", @"MS:1001164", @"Paragon:unused protscore", @"The Paragon result 'Unused ProtScore'.", false));
            TermData.Add(CVID.MS_Paragon_total_protscore, new TermInfo(CVID.MS_Paragon_total_protscore, @"MS", @"MS:1001165", @"Paragon:total protscore", @"The Paragon result 'Total ProtScore'.", false));
            TermData.Add(CVID.MS_Paragon_score, new TermInfo(CVID.MS_Paragon_score, @"MS", @"MS:1001166", @"Paragon:score", @"The Paragon result 'Score'.", false));
            TermData.Add(CVID.MS_Paragon_confidence, new TermInfo(CVID.MS_Paragon_confidence, @"MS", @"MS:1001167", @"Paragon:confidence", @"The Paragon result 'Confidence'.", false));
            TermData.Add(CVID.MS_Paragon_expression_error_factor, new TermInfo(CVID.MS_Paragon_expression_error_factor, @"MS", @"MS:1001168", @"Paragon:expression error factor", @"The Paragon result 'Expression Error Factor'.", false));
            TermData.Add(CVID.MS_Paragon_expression_change_p_value, new TermInfo(CVID.MS_Paragon_expression_change_p_value, @"MS", @"MS:1001169", @"Paragon:expression change p-value", @"The Paragon result 'Expression change P-value'.", false));
            TermData.Add(CVID.MS_Paragon_contrib, new TermInfo(CVID.MS_Paragon_contrib, @"MS", @"MS:1001170", @"Paragon:contrib", @"The Paragon result 'Contrib'.", false));
            TermData.Add(CVID.MS_Mascot_score, new TermInfo(CVID.MS_Mascot_score, @"MS", @"MS:1001171", @"Mascot:score", @"The Mascot result 'Score'.", false));
            TermData.Add(CVID.MS_Mascot_expectation_value, new TermInfo(CVID.MS_Mascot_expectation_value, @"MS", @"MS:1001172", @"Mascot:expectation value", @"The Mascot result 'expectation value'.", false));
            TermData.Add(CVID.MS_Mascot_matched_ions, new TermInfo(CVID.MS_Mascot_matched_ions, @"MS", @"MS:1001173", @"Mascot:matched ions", @"The Mascot result 'Matched ions'.", false));
            TermData.Add(CVID.MS_Mascot_total_ions, new TermInfo(CVID.MS_Mascot_total_ions, @"MS", @"MS:1001174", @"Mascot:total ions", @"The Mascot result 'Total ions'.", false));
            TermData.Add(CVID.MS_peptide_shared_in_multiple_proteins, new TermInfo(CVID.MS_peptide_shared_in_multiple_proteins, @"MS", @"MS:1001175", @"peptide shared in multiple proteins", @"A peptide matching multiple proteins.", false));
            TermData.Add(CVID.MS______KR______P_, new TermInfo(CVID.MS______KR______P_, @"MS", @"MS:1001176", @"(?<=[KR])(?\!P)", @"Regular expression for Trypsin.", false));
            TermData.Add(CVID.MS_number_of_molecular_hypothesis_considered, new TermInfo(CVID.MS_number_of_molecular_hypothesis_considered, @"MS", @"MS:1001177", @"number of molecular hypothesis considered", @"Number of Molecular Hypothesis Considered - This is the number of molecules (e.g. peptides for proteomics) considered for a particular search.", false));
            TermData.Add(CVID.MS_database_EST, new TermInfo(CVID.MS_database_EST, @"MS", @"MS:1001178", @"database EST", @"Expressed sequence tag nucleotide sequence database.", false));
            TermData.Add(CVID.MS_Cleavage_agent_regular_expression, new TermInfo(CVID.MS_Cleavage_agent_regular_expression, @"MS", @"MS:1001180", @"Cleavage agent regular expression", @"Regular expressions for cleavage enzymes.", false));
            TermData.Add(CVID.MS_search_statistics, new TermInfo(CVID.MS_search_statistics, @"MS", @"MS:1001184", @"search statistics", @"The details of the actual run of the search.", false));
            TermData.Add(CVID.MS_modification_specificity_peptide_N_term, new TermInfo(CVID.MS_modification_specificity_peptide_N_term, @"MS", @"MS:1001189", @"modification specificity peptide N-term", @"As parameter for search engine: apply the modification only at the N-terminus of a peptide.", false));
            TermData.Add(CVID.MS_modification_specificity_peptide_C_term, new TermInfo(CVID.MS_modification_specificity_peptide_C_term, @"MS", @"MS:1001190", @"modification specificity peptide C-term", @"As parameter for search engine: apply the modification only at the C-terminus of a peptide.", false));
            TermData.Add(CVID.MS_p_value_OBSOLETE, new TermInfo(CVID.MS_p_value_OBSOLETE, @"MS", @"MS:1001191", @"p-value", @"OBSOLETE Quality estimation by p-value.", true));
            TermData.Add(CVID.MS_Expect_value, new TermInfo(CVID.MS_Expect_value, @"MS", @"MS:1001192", @"Expect value", @"Result of quality estimation: Expect value.", false));
            TermData.Add(CVID.MS_confidence_score, new TermInfo(CVID.MS_confidence_score, @"MS", @"MS:1001193", @"confidence score", @"Result of quality estimation: confidence score.", false));
            TermData.Add(CVID.MS_quality_estimation_with_decoy_database, new TermInfo(CVID.MS_quality_estimation_with_decoy_database, @"MS", @"MS:1001194", @"quality estimation with decoy database", @"Quality estimation by decoy database.", false));
            TermData.Add(CVID.MS_decoy_DB_type_reverse, new TermInfo(CVID.MS_decoy_DB_type_reverse, @"MS", @"MS:1001195", @"decoy DB type reverse", @"Decoy type: Amino acids of protein sequences are used in reverse order.", false));
            TermData.Add(CVID.MS_decoy_DB_type_randomized, new TermInfo(CVID.MS_decoy_DB_type_randomized, @"MS", @"MS:1001196", @"decoy DB type randomized", @"Decoy type: Amino acids of protein sequences are randomized (keeping the original protein mass).", false));
            TermData.Add(CVID.MS_DB_composition_target_decoy, new TermInfo(CVID.MS_DB_composition_target_decoy, @"MS", @"MS:1001197", @"DB composition target+decoy", @"Decoy database composition: database contains original (target) and decoy entries.", false));
            TermData.Add(CVID.MS_protein_identification_confidence_metric, new TermInfo(CVID.MS_protein_identification_confidence_metric, @"MS", @"MS:1001198", @"protein identification confidence metric", @"Identification confidence metric for a protein.", false));
            TermData.Add(CVID.MS_Mascot_DAT_format, new TermInfo(CVID.MS_Mascot_DAT_format, @"MS", @"MS:1001199", @"Mascot DAT format", @"Source file for this mzIdentML was in Mascot DAT file format.", false));
            TermData.Add(CVID.MS_SEQUEST_out_file_format, new TermInfo(CVID.MS_SEQUEST_out_file_format, @"MS", @"MS:1001200", @"SEQUEST out file format", @"Source file for this mzIdentML was in SEQUEST out file format.", false));
            TermData.Add(CVID.MS_DB_MW_filter_maximum, new TermInfo(CVID.MS_DB_MW_filter_maximum, @"MS", @"MS:1001201", @"DB MW filter maximum", @"Maximum value of molecular weight filter.", false));
            TermData.Add(CVID.MS_DB_MW_filter_minimum, new TermInfo(CVID.MS_DB_MW_filter_minimum, @"MS", @"MS:1001202", @"DB MW filter minimum", @"Minimum value of molecular weight filter.", false));
            TermData.Add(CVID.MS_DB_PI_filter_maximum, new TermInfo(CVID.MS_DB_PI_filter_maximum, @"MS", @"MS:1001203", @"DB PI filter maximum", @"Maximum value of isoelectric point filter.", false));
            TermData.Add(CVID.MS_DB_PI_filter_minimum, new TermInfo(CVID.MS_DB_PI_filter_minimum, @"MS", @"MS:1001204", @"DB PI filter minimum", @"Minimum value of isoelectric point filter.", false));
            TermData.Add(CVID.MS_Mascot, new TermInfo(CVID.MS_Mascot, @"MS", @"MS:1001207", @"Mascot", @"The name of the Mascot search engine.", false));
            TermData.Add(CVID.MS_SEQUEST, new TermInfo(CVID.MS_SEQUEST, @"MS", @"MS:1001208", @"SEQUEST", @"The name of the SEQUEST search engine.", false));
            TermData.Add(CVID.MS_Phenyx, new TermInfo(CVID.MS_Phenyx, @"MS", @"MS:1001209", @"Phenyx", @"The name of the Phenyx search engine.", false));
            TermData.Add(CVID.MS_mass_type_settings, new TermInfo(CVID.MS_mass_type_settings, @"MS", @"MS:1001210", @"mass type settings", @"The type of mass difference value to be considered by the search engine (monoisotopic or average).", false));
            TermData.Add(CVID.MS_parent_mass_type_mono, new TermInfo(CVID.MS_parent_mass_type_mono, @"MS", @"MS:1001211", @"parent mass type mono", @"Mass type setting for parent mass was monoisotopic.", false));
            TermData.Add(CVID.MS_parent_mass_type_average, new TermInfo(CVID.MS_parent_mass_type_average, @"MS", @"MS:1001212", @"parent mass type average", @"Mass type setting for parent mass was average isotopic.", false));
            TermData.Add(CVID.MS_search_result_details_OBSOLETE, new TermInfo(CVID.MS_search_result_details_OBSOLETE, @"MS", @"MS:1001213", @"search result details", @"OBSOLETE: Scores and global result characteristics.", true));
            TermData.Add(CVID.MS_protein_level_global_FDR, new TermInfo(CVID.MS_protein_level_global_FDR, @"MS", @"MS:1001214", @"protein-level global FDR", @"Estimation of the global false discovery rate of proteins.", false));
            TermData.Add(CVID.MS_SEQUEST_PeptideSp, new TermInfo(CVID.MS_SEQUEST_PeptideSp, @"MS", @"MS:1001215", @"SEQUEST:PeptideSp", @"The SEQUEST result 'Sp' in out file (peptide).", false));
            TermData.Add(CVID.MS_SEQUEST_PeptideRankSp, new TermInfo(CVID.MS_SEQUEST_PeptideRankSp, @"MS", @"MS:1001217", @"SEQUEST:PeptideRankSp", @"The SEQUEST result 'Sp' of 'Rank/Sp' in out file (peptide). Also called 'rsp'.", false));
            TermData.Add(CVID.MS_SEQUEST_PeptideNumber, new TermInfo(CVID.MS_SEQUEST_PeptideNumber, @"MS", @"MS:1001218", @"SEQUEST:PeptideNumber", @"The SEQUEST result '#' in out file (peptide).", false));
            TermData.Add(CVID.MS_SEQUEST_PeptideIdnumber, new TermInfo(CVID.MS_SEQUEST_PeptideIdnumber, @"MS", @"MS:1001219", @"SEQUEST:PeptideIdnumber", @"The SEQUEST result 'Id#' in out file (peptide).", false));
            TermData.Add(CVID.MS_frag__y_ion, new TermInfo(CVID.MS_frag__y_ion, @"MS", @"MS:1001220", @"frag: y ion", @"Fragmentation information, type of product: y ion.", false));
            TermData.Add(CVID.MS_product_ion_attribute, new TermInfo(CVID.MS_product_ion_attribute, @"MS", @"MS:1001221", @"product ion attribute", @"Fragmentation information like ion types.", false));
            TermData.Add(CVID.MS_frag__b_ion___H2O, new TermInfo(CVID.MS_frag__b_ion___H2O, @"MS", @"MS:1001222", @"frag: b ion - H2O", @"Fragmentation information, type of product: b ion without water.", false));
            TermData.Add(CVID.MS_frag__y_ion___H2O, new TermInfo(CVID.MS_frag__y_ion___H2O, @"MS", @"MS:1001223", @"frag: y ion - H2O", @"Fragmentation information, type of product: y ion without water.", false));
            TermData.Add(CVID.MS_frag__b_ion, new TermInfo(CVID.MS_frag__b_ion, @"MS", @"MS:1001224", @"frag: b ion", @"Fragmentation information, type of product: b ion.", false));
            TermData.Add(CVID.MS_product_ion_m_z, new TermInfo(CVID.MS_product_ion_m_z, @"MS", @"MS:1001225", @"product ion m/z", @"The m/z of the product ion.", false));
            TermData.Add(CVID.MS_product_ion_intensity, new TermInfo(CVID.MS_product_ion_intensity, @"MS", @"MS:1001226", @"product ion intensity", @"The intensity of a single product ion.", false));
            TermData.Add(CVID.MS_product_ion_m_z_error, new TermInfo(CVID.MS_product_ion_m_z_error, @"MS", @"MS:1001227", @"product ion m/z error", @"The product ion m/z error.", false));
            TermData.Add(CVID.MS_frag__x_ion, new TermInfo(CVID.MS_frag__x_ion, @"MS", @"MS:1001228", @"frag: x ion", @"Fragmentation information, type of product: x ion.", false));
            TermData.Add(CVID.MS_frag__a_ion, new TermInfo(CVID.MS_frag__a_ion, @"MS", @"MS:1001229", @"frag: a ion", @"Fragmentation information, type of product: a ion.", false));
            TermData.Add(CVID.MS_frag__z_ion, new TermInfo(CVID.MS_frag__z_ion, @"MS", @"MS:1001230", @"frag: z ion", @"Fragmentation information, type of product: z ion.", false));
            TermData.Add(CVID.MS_frag__c_ion, new TermInfo(CVID.MS_frag__c_ion, @"MS", @"MS:1001231", @"frag: c ion", @"Fragmentation information, type of product: c ion.", false));
            TermData.Add(CVID.MS_frag__b_ion___NH3, new TermInfo(CVID.MS_frag__b_ion___NH3, @"MS", @"MS:1001232", @"frag: b ion - NH3", @"Ion b-NH3 fragmentation information, type of product: b ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__y_ion___NH3, new TermInfo(CVID.MS_frag__y_ion___NH3, @"MS", @"MS:1001233", @"frag: y ion - NH3", @"Ion y-NH3 fragmentation information, type of product: y ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__a_ion___H2O, new TermInfo(CVID.MS_frag__a_ion___H2O, @"MS", @"MS:1001234", @"frag: a ion - H2O", @"Fragmentation information, type of product: a ion without water.", false));
            TermData.Add(CVID.MS_frag__a_ion___NH3, new TermInfo(CVID.MS_frag__a_ion___NH3, @"MS", @"MS:1001235", @"frag: a ion - NH3", @"Ion a-NH3 fragmentation information, type of product: a ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__d_ion, new TermInfo(CVID.MS_frag__d_ion, @"MS", @"MS:1001236", @"frag: d ion", @"Fragmentation information, type of product: d ion.", false));
            TermData.Add(CVID.MS_frag__v_ion, new TermInfo(CVID.MS_frag__v_ion, @"MS", @"MS:1001237", @"frag: v ion", @"Fragmentation information, type of product: v ion.", false));
            TermData.Add(CVID.MS_frag__w_ion, new TermInfo(CVID.MS_frag__w_ion, @"MS", @"MS:1001238", @"frag: w ion", @"Fragmentation information, type of product: w ion.", false));
            TermData.Add(CVID.MS_frag__immonium_ion, new TermInfo(CVID.MS_frag__immonium_ion, @"MS", @"MS:1001239", @"frag: immonium ion", @"Fragmentation information, type of product: immonium ion.", false));
            TermData.Add(CVID.MS_non_identified_ion, new TermInfo(CVID.MS_non_identified_ion, @"MS", @"MS:1001240", @"non-identified ion", @"Non-identified ion.", false));
            TermData.Add(CVID.MS_co_eluting_ion, new TermInfo(CVID.MS_co_eluting_ion, @"MS", @"MS:1001241", @"co-eluting ion", @"Co-eluting ion.", false));
            TermData.Add(CVID.MS_SEQUEST_out_folder, new TermInfo(CVID.MS_SEQUEST_out_folder, @"MS", @"MS:1001242", @"SEQUEST out folder", @"Source file for this mzIdentML was a SEQUEST folder with its out files.", false));
            TermData.Add(CVID.MS_SEQUEST_summary, new TermInfo(CVID.MS_SEQUEST_summary, @"MS", @"MS:1001243", @"SEQUEST summary", @"Source file for this mzIdentML was a SEQUEST summary page (proteins).", false));
            TermData.Add(CVID.MS_PerSeptive_PKS_format, new TermInfo(CVID.MS_PerSeptive_PKS_format, @"MS", @"MS:1001245", @"PerSeptive PKS format", @"PerSeptive peak list file format.", false));
            TermData.Add(CVID.MS_SCIEX_API_III_format, new TermInfo(CVID.MS_SCIEX_API_III_format, @"MS", @"MS:1001246", @"SCIEX API III format", @"PE SCIEX peak list file format.", false));
            TermData.Add(CVID.MS_Bruker_XML_format, new TermInfo(CVID.MS_Bruker_XML_format, @"MS", @"MS:1001247", @"Bruker XML format", @"Bruker data exchange XML format.", false));
            TermData.Add(CVID.MS_search_input_details, new TermInfo(CVID.MS_search_input_details, @"MS", @"MS:1001249", @"search input details", @"Details describing the search input.", false));
            TermData.Add(CVID.MS_local_FDR, new TermInfo(CVID.MS_local_FDR, @"MS", @"MS:1001250", @"local FDR", @"Result of quality estimation: the local FDR at the current position of a sorted list.", false));
            TermData.Add(CVID.MS_Trypsin, new TermInfo(CVID.MS_Trypsin, @"MS", @"MS:1001251", @"Trypsin", @"Enzyme trypsin.", false));
            TermData.Add(CVID.MS_DB_source_EBI, new TermInfo(CVID.MS_DB_source_EBI, @"MS", @"MS:1001252", @"DB source EBI", @"Database source EBI.", false));
            TermData.Add(CVID.MS_DB_source_NCBI, new TermInfo(CVID.MS_DB_source_NCBI, @"MS", @"MS:1001253", @"DB source NCBI", @"Database source NCBI.", false));
            TermData.Add(CVID.MS_DB_source_UniProt, new TermInfo(CVID.MS_DB_source_UniProt, @"MS", @"MS:1001254", @"DB source UniProt", @"Database source UniProt.", false));
            TermData.Add(CVID.MS_fragment_mass_type_average, new TermInfo(CVID.MS_fragment_mass_type_average, @"MS", @"MS:1001255", @"fragment mass type average", @"Mass type setting for fragment mass was average isotopic.", false));
            TermData.Add(CVID.MS_fragment_mass_type_mono, new TermInfo(CVID.MS_fragment_mass_type_mono, @"MS", @"MS:1001256", @"fragment mass type mono", @"Mass type setting for fragment mass was monoisotopic.", false));
            TermData.Add(CVID.MS_param__v_ion, new TermInfo(CVID.MS_param__v_ion, @"MS", @"MS:1001257", @"param: v ion", @"Parameter information, type of product: side chain loss v ion.", false));
            TermData.Add(CVID.MS_param__d_ion, new TermInfo(CVID.MS_param__d_ion, @"MS", @"MS:1001258", @"param: d ion", @"Parameter information, type of product: side chain loss d ion.", false));
            TermData.Add(CVID.MS_param__immonium_ion, new TermInfo(CVID.MS_param__immonium_ion, @"MS", @"MS:1001259", @"param: immonium ion", @"Parameter information, type of product: immonium ion.", false));
            TermData.Add(CVID.MS_param__w_ion, new TermInfo(CVID.MS_param__w_ion, @"MS", @"MS:1001260", @"param: w ion", @"Parameter information, type of product: side chain loss w ion.", false));
            TermData.Add(CVID.MS_param__x_ion, new TermInfo(CVID.MS_param__x_ion, @"MS", @"MS:1001261", @"param: x ion", @"Parameter information, type of product: x ion with charge on the C-terminal side.", false));
            TermData.Add(CVID.MS_param__y_ion, new TermInfo(CVID.MS_param__y_ion, @"MS", @"MS:1001262", @"param: y ion", @"Parameter information, type of product: y ion with charge on the C-terminal side.", false));
            TermData.Add(CVID.MS_param__z_ion, new TermInfo(CVID.MS_param__z_ion, @"MS", @"MS:1001263", @"param: z ion", @"Parameter information, type of product: z ion with charge on the C-terminal side.", false));
            TermData.Add(CVID.MS_role_type, new TermInfo(CVID.MS_role_type, @"MS", @"MS:1001266", @"role type", @"Role of a Person or Organization.", false));
            TermData.Add(CVID.MS_software_vendor, new TermInfo(CVID.MS_software_vendor, @"MS", @"MS:1001267", @"software vendor", @"Software vendor role.", false));
            TermData.Add(CVID.MS_programmer, new TermInfo(CVID.MS_programmer, @"MS", @"MS:1001268", @"programmer", @"Programmer role.", false));
            TermData.Add(CVID.MS_instrument_vendor, new TermInfo(CVID.MS_instrument_vendor, @"MS", @"MS:1001269", @"instrument vendor", @"Instrument vendor role.", false));
            TermData.Add(CVID.MS_lab_personnel, new TermInfo(CVID.MS_lab_personnel, @"MS", @"MS:1001270", @"lab personnel", @"Lab personnel role.", false));
            TermData.Add(CVID.MS_researcher, new TermInfo(CVID.MS_researcher, @"MS", @"MS:1001271", @"researcher", @"Researcher role.", false));
            TermData.Add(CVID.MS_____R_____P_, new TermInfo(CVID.MS_____R_____P_, @"MS", @"MS:1001272", @"(?<=R)(?\!P)", @"Regular expression for Arg-C.", false));
            TermData.Add(CVID.MS_____BD__, new TermInfo(CVID.MS_____BD__, @"MS", @"MS:1001273", @"(?=[BD])", @"Regular expression for Asp-N.", false));
            TermData.Add(CVID.MS_____DE__, new TermInfo(CVID.MS_____DE__, @"MS", @"MS:1001274", @"(?=[DE])", @"Regular expression for Asp-N-ambic.", false));
            TermData.Add(CVID.MS_ProteinScape_SearchEvent, new TermInfo(CVID.MS_ProteinScape_SearchEvent, @"MS", @"MS:1001275", @"ProteinScape SearchEvent", @"Source data for this mzIdentML was a ProteinScape SearchEvent.", false));
            TermData.Add(CVID.MS_ProteinScape_Gel, new TermInfo(CVID.MS_ProteinScape_Gel, @"MS", @"MS:1001276", @"ProteinScape Gel", @"Source data for this mzIdentML was a ProteinScape Gel.", false));
            TermData.Add(CVID.MS_decoy_DB_accession_regexp, new TermInfo(CVID.MS_decoy_DB_accession_regexp, @"MS", @"MS:1001283", @"decoy DB accession regexp", @"Specify the regular expression for decoy accession numbers.", false));
            TermData.Add(CVID.MS_decoy_DB_derived_from_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_derived_from_OBSOLETE, @"MS", @"MS:1001284", @"decoy DB derived from", @"OBSOLETE The name of the database, the search database was derived from.", true));
            TermData.Add(CVID.MS_database_IPI_mouse, new TermInfo(CVID.MS_database_IPI_mouse, @"MS", @"MS:1001285", @"database IPI_mouse", @"International Protein Index database for Mus musculus sequences.", false));
            TermData.Add(CVID.MS_database_IPI_rat, new TermInfo(CVID.MS_database_IPI_rat, @"MS", @"MS:1001286", @"database IPI_rat", @"International Protein Index database for Rattus norvegicus sequences.", false));
            TermData.Add(CVID.MS_database_IPI_zebrafish, new TermInfo(CVID.MS_database_IPI_zebrafish, @"MS", @"MS:1001287", @"database IPI_zebrafish", @"International Protein Index database for Danio rerio sequences.", false));
            TermData.Add(CVID.MS_database_IPI_chicken, new TermInfo(CVID.MS_database_IPI_chicken, @"MS", @"MS:1001288", @"database IPI_chicken", @"International Protein Index database for Gallus gallus sequences.", false));
            TermData.Add(CVID.MS_database_IPI_cow, new TermInfo(CVID.MS_database_IPI_cow, @"MS", @"MS:1001289", @"database IPI_cow", @"International Protein Index database for Bos taurus sequences.", false));
            TermData.Add(CVID.MS_database_IPI_arabidopsis, new TermInfo(CVID.MS_database_IPI_arabidopsis, @"MS", @"MS:1001290", @"database IPI_arabidopsis", @"International Protein Index database for Arabidopsis thaliana sequences.", false));
            TermData.Add(CVID.MS_decoy_DB_from_nr_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_nr_OBSOLETE, @"MS", @"MS:1001291", @"decoy DB from nr", @"OBSOLETE Decoy database from a non-redundant GenBank sequence database.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_rat_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_rat_OBSOLETE, @"MS", @"MS:1001292", @"decoy DB from IPI_rat", @"OBSOLETE Decoy database from a International Protein Index database for Rattus norvegicus.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_mouse_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_mouse_OBSOLETE, @"MS", @"MS:1001293", @"decoy DB from IPI_mouse", @"OBSOLETE Decoy database from a International Protein Index database for Mus musculus.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_arabidopsis_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_arabidopsis_OBSOLETE, @"MS", @"MS:1001294", @"decoy DB from IPI_arabidopsis", @"OBSOLETE Decoy database from a International Protein Index database for Arabidopsis thaliana.", true));
            TermData.Add(CVID.MS_decoy_DB_from_EST_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_EST_OBSOLETE, @"MS", @"MS:1001295", @"decoy DB from EST", @"OBSOLETE Decoy database from an expressed sequence tag nucleotide sequence database.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_zebrafish_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_zebrafish_OBSOLETE, @"MS", @"MS:1001296", @"decoy DB from IPI_zebrafish", @"OBSOLETE Decoy database from a International Protein Index database for Danio rerio.", true));
            TermData.Add(CVID.MS_decoy_DB_from_UniProtKB_Swiss_Prot_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_UniProtKB_Swiss_Prot_OBSOLETE, @"MS", @"MS:1001297", @"decoy DB from UniProtKB/Swiss-Prot", @"OBSOLETE Decoy database from a Swiss-Prot protein sequence database.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_chicken_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_chicken_OBSOLETE, @"MS", @"MS:1001298", @"decoy DB from IPI_chicken", @"OBSOLETE Decoy database from a International Protein Index database for Gallus gallus.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_cow_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_cow_OBSOLETE, @"MS", @"MS:1001299", @"decoy DB from IPI_cow", @"OBSOLETE Decoy database from a International Protein Index database for Bos taurus.", true));
            TermData.Add(CVID.MS_decoy_DB_from_IPI_human_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_IPI_human_OBSOLETE, @"MS", @"MS:1001300", @"decoy DB from IPI_human", @"OBSOLETE Decoy database from a International Protein Index database for Homo sapiens.", true));
            TermData.Add(CVID.MS_protein_rank, new TermInfo(CVID.MS_protein_rank, @"MS", @"MS:1001301", @"protein rank", @"The rank of the protein in a list sorted by the search engine.", false));
            TermData.Add(CVID.MS_search_engine_specific_input_parameter, new TermInfo(CVID.MS_search_engine_specific_input_parameter, @"MS", @"MS:1001302", @"search engine specific input parameter", @"Search engine specific input parameters.", false));
            TermData.Add(CVID.MS_Arg_C, new TermInfo(CVID.MS_Arg_C, @"MS", @"MS:1001303", @"Arg-C", @"Endoproteinase Arg-C.", false));
            TermData.Add(CVID.MS_Asp_N, new TermInfo(CVID.MS_Asp_N, @"MS", @"MS:1001304", @"Asp-N", @"Endoproteinase Asp-N.", false));
            TermData.Add(CVID.MS_Asp_N_ambic, new TermInfo(CVID.MS_Asp_N_ambic, @"MS", @"MS:1001305", @"Asp-N_ambic", @"Enzyme Asp-N, Ammonium Bicarbonate (AmBic).", false));
            TermData.Add(CVID.MS_Chymotrypsin, new TermInfo(CVID.MS_Chymotrypsin, @"MS", @"MS:1001306", @"Chymotrypsin", @"Enzyme chymotrypsin.", false));
            TermData.Add(CVID.MS_CNBr, new TermInfo(CVID.MS_CNBr, @"MS", @"MS:1001307", @"CNBr", @"Cyanogen bromide.", false));
            TermData.Add(CVID.MS_Formic_acid, new TermInfo(CVID.MS_Formic_acid, @"MS", @"MS:1001308", @"Formic_acid", @"Formic acid.", false));
            TermData.Add(CVID.MS_Lys_C, new TermInfo(CVID.MS_Lys_C, @"MS", @"MS:1001309", @"Lys-C", @"Endoproteinase Lys-C.", false));
            TermData.Add(CVID.MS_Lys_C_P, new TermInfo(CVID.MS_Lys_C_P, @"MS", @"MS:1001310", @"Lys-C/P", @"Proteinase Lys-C/P.", false));
            TermData.Add(CVID.MS_PepsinA, new TermInfo(CVID.MS_PepsinA, @"MS", @"MS:1001311", @"PepsinA", @"PepsinA proteinase.", false));
            TermData.Add(CVID.MS_TrypChymo, new TermInfo(CVID.MS_TrypChymo, @"MS", @"MS:1001312", @"TrypChymo", @"Cleavage agent TrypChymo.", false));
            TermData.Add(CVID.MS_Trypsin_P, new TermInfo(CVID.MS_Trypsin_P, @"MS", @"MS:1001313", @"Trypsin/P", @"Cleavage agent Trypsin/P.", false));
            TermData.Add(CVID.MS_V8_DE, new TermInfo(CVID.MS_V8_DE, @"MS", @"MS:1001314", @"V8-DE", @"Cleavage agent V8-DE.", false));
            TermData.Add(CVID.MS_V8_E, new TermInfo(CVID.MS_V8_E, @"MS", @"MS:1001315", @"V8-E", @"Cleavage agent V8-E.", false));
            TermData.Add(CVID.MS_Mascot_SigThreshold, new TermInfo(CVID.MS_Mascot_SigThreshold, @"MS", @"MS:1001316", @"Mascot:SigThreshold", @"Significance threshold below which the p-value of a peptide match must lie to be considered statistically significant (default 0.05).", false));
            TermData.Add(CVID.MS_Mascot_MaxProteinHits, new TermInfo(CVID.MS_Mascot_MaxProteinHits, @"MS", @"MS:1001317", @"Mascot:MaxProteinHits", @"The number of protein hits to display in the report. If 'Auto', all protein hits that have a protein score exceeding the average peptide identity threshold are reported. Otherwise an integer at least 1.", false));
            TermData.Add(CVID.MS_Mascot_ProteinScoringMethod, new TermInfo(CVID.MS_Mascot_ProteinScoringMethod, @"MS", @"MS:1001318", @"Mascot:ProteinScoringMethod", @"Mascot protein scoring method; either 'Standard' or 'MudPIT'.", false));
            TermData.Add(CVID.MS_Mascot_MinMSMSThreshold, new TermInfo(CVID.MS_Mascot_MinMSMSThreshold, @"MS", @"MS:1001319", @"Mascot:MinMSMSThreshold", @"Mascot peptide match ion score threshold. If between 0 and 1, then peptide matches whose expect value exceeds the thresholds are suppressed; if at least 1, then peptide matches whose ion score is below the threshold are suppressed.", false));
            TermData.Add(CVID.MS_Mascot_ShowHomologousProteinsWithSamePeptides, new TermInfo(CVID.MS_Mascot_ShowHomologousProteinsWithSamePeptides, @"MS", @"MS:1001320", @"Mascot:ShowHomologousProteinsWithSamePeptides", @"If true, show (sequence or spectrum) same-set proteins. Otherwise they are suppressed.", false));
            TermData.Add(CVID.MS_Mascot_ShowHomologousProteinsWithSubsetOfPeptides, new TermInfo(CVID.MS_Mascot_ShowHomologousProteinsWithSubsetOfPeptides, @"MS", @"MS:1001321", @"Mascot:ShowHomologousProteinsWithSubsetOfPeptides", @"If true, show (sequence or spectrum) sub-set and subsumable proteins. Otherwise they are suppressed.", false));
            TermData.Add(CVID.MS_Mascot_RequireBoldRed, new TermInfo(CVID.MS_Mascot_RequireBoldRed, @"MS", @"MS:1001322", @"Mascot:RequireBoldRed", @"Only used in Peptide Summary and Select Summary reports. If true, a peptide match must be 'bold red' to be included in the report; bold red means the peptide is a top ranking match in a query and appears for the first time (in linear order) in the list of protein hits.", false));
            TermData.Add(CVID.MS_Mascot_UseUnigeneClustering, new TermInfo(CVID.MS_Mascot_UseUnigeneClustering, @"MS", @"MS:1001323", @"Mascot:UseUnigeneClustering", @"If true, then the search results are against a nucleic acid database and Unigene clustering is enabled. Otherwise UniGene clustering is not in use.", false));
            TermData.Add(CVID.MS_Mascot_IncludeErrorTolerantMatches, new TermInfo(CVID.MS_Mascot_IncludeErrorTolerantMatches, @"MS", @"MS:1001324", @"Mascot:IncludeErrorTolerantMatches", @"If true, then the search results are error tolerant and peptide matches from the second pass are included in search results. Otherwise no error tolerant peptide matches are included.", false));
            TermData.Add(CVID.MS_Mascot_ShowDecoyMatches, new TermInfo(CVID.MS_Mascot_ShowDecoyMatches, @"MS", @"MS:1001325", @"Mascot:ShowDecoyMatches", @"If true, then the search results are against an automatically generated decoy database and the reported peptide matches and protein hits come from the decoy database. Otherwise peptide matches and protein hits come from the original database.", false));
            TermData.Add(CVID.MS_add_others_OBSOLETE, new TermInfo(CVID.MS_add_others_OBSOLETE, @"MS", @"MS:1001326", @"add_others", @"OBSOLETE.", true));
            TermData.Add(CVID.MS_OMSSA_evalue, new TermInfo(CVID.MS_OMSSA_evalue, @"MS", @"MS:1001328", @"OMSSA:evalue", @"OMSSA E-value.", false));
            TermData.Add(CVID.MS_OMSSA_pvalue, new TermInfo(CVID.MS_OMSSA_pvalue, @"MS", @"MS:1001329", @"OMSSA:pvalue", @"OMSSA p-value.", false));
            TermData.Add(CVID.MS_X__Tandem_expect, new TermInfo(CVID.MS_X__Tandem_expect, @"MS", @"MS:1001330", @"X\!Tandem:expect", @"The X!Tandem expectation value.", false));
            TermData.Add(CVID.MS_X__Tandem_hyperscore, new TermInfo(CVID.MS_X__Tandem_hyperscore, @"MS", @"MS:1001331", @"X\!Tandem:hyperscore", @"The X!Tandem hyperscore.", false));
            TermData.Add(CVID.MS______FYWL______P_, new TermInfo(CVID.MS______FYWL______P_, @"MS", @"MS:1001332", @"(?<=[FYWL])(?\!P)", @"Regular expression for Chymotrypsin.", false));
            TermData.Add(CVID.MS_____M_, new TermInfo(CVID.MS_____M_, @"MS", @"MS:1001333", @"(?<=M)", @"Regular expression for CNBr.", false));
            TermData.Add(CVID.MS______D_______D__, new TermInfo(CVID.MS______D_______D__, @"MS", @"MS:1001334", @"((?<=D))|((?=D))", @"Regular expression for formic acid.", false));
            TermData.Add(CVID.MS_____K_____P_, new TermInfo(CVID.MS_____K_____P_, @"MS", @"MS:1001335", @"(?<=K)(?\!P)", @"Regular expression for Lys-C.", false));
            TermData.Add(CVID.MS_____K_, new TermInfo(CVID.MS_____K_, @"MS", @"MS:1001336", @"(?<=K)", @"Regular expression for Lys-C/P.", false));
            TermData.Add(CVID.MS______FL__, new TermInfo(CVID.MS______FL__, @"MS", @"MS:1001337", @"(?<=[FL])", @"Regular expression for PepsinA.", false));
            TermData.Add(CVID.MS______FYWLKR______P_, new TermInfo(CVID.MS______FYWLKR______P_, @"MS", @"MS:1001338", @"(?<=[FYWLKR])(?\!P)", @"Regular expression for TrypChymo.", false));
            TermData.Add(CVID.MS______KR__, new TermInfo(CVID.MS______KR__, @"MS", @"MS:1001339", @"(?<=[KR])", @"Regular expression for Trypsin/P.", false));
            TermData.Add(CVID.MS______BDEZ______P_, new TermInfo(CVID.MS______BDEZ______P_, @"MS", @"MS:1001340", @"(?<=[BDEZ])(?\!P)", @"Regular expression for V8-DE.", false));
            TermData.Add(CVID.MS______EZ______P_, new TermInfo(CVID.MS______EZ______P_, @"MS", @"MS:1001341", @"(?<=[EZ])(?\!P)", @"Regular expression for V8-E.", false));
            TermData.Add(CVID.MS_database_sequence_details, new TermInfo(CVID.MS_database_sequence_details, @"MS", @"MS:1001342", @"database sequence details", @"Details about a single database sequence.", false));
            TermData.Add(CVID.MS_NA_sequence, new TermInfo(CVID.MS_NA_sequence, @"MS", @"MS:1001343", @"NA sequence", @"The sequence is a nucleic acid sequence.", false));
            TermData.Add(CVID.MS_AA_sequence, new TermInfo(CVID.MS_AA_sequence, @"MS", @"MS:1001344", @"AA sequence", @"The sequence is a amino acid sequence.", false));
            TermData.Add(CVID.MS_mass_table_source, new TermInfo(CVID.MS_mass_table_source, @"MS", @"MS:1001345", @"mass table source", @"Children of this term specify the source of the mass table used.", false));
            TermData.Add(CVID.MS_AAIndex_mass_table, new TermInfo(CVID.MS_AAIndex_mass_table, @"MS", @"MS:1001346", @"AAIndex mass table", @"The masses used in the mass table are taken from AAIndex.", false));
            TermData.Add(CVID.MS_database_file_formats, new TermInfo(CVID.MS_database_file_formats, @"MS", @"MS:1001347", @"database file formats", @"The children of this term define file formats of the sequence database used.", false));
            TermData.Add(CVID.MS_FASTA_format, new TermInfo(CVID.MS_FASTA_format, @"MS", @"MS:1001348", @"FASTA format", @"The sequence database was stored in the FASTA format.", false));
            TermData.Add(CVID.MS_ASN_1, new TermInfo(CVID.MS_ASN_1, @"MS", @"MS:1001349", @"ASN.1", @"The sequence database was stored in the Abstract Syntax Notation 1 format.", false));
            TermData.Add(CVID.MS_NCBI___p_, new TermInfo(CVID.MS_NCBI___p_, @"MS", @"MS:1001350", @"NCBI *.p*", @"The sequence database was stored in the NCBI formatdb (*.p*) format.", false));
            TermData.Add(CVID.MS_clustal_aln, new TermInfo(CVID.MS_clustal_aln, @"MS", @"MS:1001351", @"clustal aln", @"ClustalW ALN (multiple alignment) format.", false));
            TermData.Add(CVID.MS_embl_em, new TermInfo(CVID.MS_embl_em, @"MS", @"MS:1001352", @"embl em", @"EMBL entry format.", false));
            TermData.Add(CVID.MS_NBRF_PIR, new TermInfo(CVID.MS_NBRF_PIR, @"MS", @"MS:1001353", @"NBRF PIR", @"The NBRF PIR was used as format.", false));
            TermData.Add(CVID.MS_mass_table_options, new TermInfo(CVID.MS_mass_table_options, @"MS", @"MS:1001354", @"mass table options", @"Root node for options for the mass table used.", false));
            TermData.Add(CVID.MS_peptide_descriptions, new TermInfo(CVID.MS_peptide_descriptions, @"MS", @"MS:1001355", @"peptide descriptions", @"Descriptions of peptides.", false));
            TermData.Add(CVID.MS_spectrum_descriptions, new TermInfo(CVID.MS_spectrum_descriptions, @"MS", @"MS:1001356", @"spectrum descriptions", @"Descriptions of the input spectra.", false));
            TermData.Add(CVID.MS_spectrum_quality_descriptions, new TermInfo(CVID.MS_spectrum_quality_descriptions, @"MS", @"MS:1001357", @"spectrum quality descriptions", @"Description of the quality of the input spectrum.", false));
            TermData.Add(CVID.MS_msmsEval_quality, new TermInfo(CVID.MS_msmsEval_quality, @"MS", @"MS:1001358", @"msmsEval quality", @"This term reports the quality of the spectrum assigned by msmsEval.", false));
            TermData.Add(CVID.MS_ambiguous_residues, new TermInfo(CVID.MS_ambiguous_residues, @"MS", @"MS:1001359", @"ambiguous residues", @"Children of this term describe ambiguous residues.", false));
            TermData.Add(CVID.MS_alternate_single_letter_codes, new TermInfo(CVID.MS_alternate_single_letter_codes, @"MS", @"MS:1001360", @"alternate single letter codes", @"List of standard residue one letter codes which are used to replace a non-standard.", false));
            TermData.Add(CVID.MS_alternate_mass, new TermInfo(CVID.MS_alternate_mass, @"MS", @"MS:1001361", @"alternate mass", @"List of masses a non-standard letter code is replaced with.", false));
            TermData.Add(CVID.MS_number_of_unmatched_peaks, new TermInfo(CVID.MS_number_of_unmatched_peaks, @"MS", @"MS:1001362", @"number of unmatched peaks", @"The number of unmatched peaks.", false));
            TermData.Add(CVID.MS_peptide_unique_to_one_protein, new TermInfo(CVID.MS_peptide_unique_to_one_protein, @"MS", @"MS:1001363", @"peptide unique to one protein", @"A peptide matching only one.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_global_FDR, new TermInfo(CVID.MS_peptide_sequence_level_global_FDR, @"MS", @"MS:1001364", @"peptide sequence-level global FDR", @"Estimation of the global false discovery rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_frag__internal_yb_ion, new TermInfo(CVID.MS_frag__internal_yb_ion, @"MS", @"MS:1001365", @"frag: internal yb ion", @"Fragmentation information, type of product: internal yb ion.", false));
            TermData.Add(CVID.MS_frag__internal_ya_ion, new TermInfo(CVID.MS_frag__internal_ya_ion, @"MS", @"MS:1001366", @"frag: internal ya ion", @"Fragmentation information, type of product: internal ya ion.", false));
            TermData.Add(CVID.MS_frag__z_1_ion, new TermInfo(CVID.MS_frag__z_1_ion, @"MS", @"MS:1001367", @"frag: z+1 ion", @"Fragmentation information, type of product: z+1 ion.", false));
            TermData.Add(CVID.MS_frag__z_2_ion, new TermInfo(CVID.MS_frag__z_2_ion, @"MS", @"MS:1001368", @"frag: z+2 ion", @"Fragmentation information, type of product: z+2 ion.", false));
            TermData.Add(CVID.MS_text_format, new TermInfo(CVID.MS_text_format, @"MS", @"MS:1001369", @"text format", @"Simple text file format of \ m/z", false));
            TermData.Add(CVID.MS_Mascot_homology_threshold, new TermInfo(CVID.MS_Mascot_homology_threshold, @"MS", @"MS:1001370", @"Mascot:homology threshold", @"The Mascot result 'homology threshold'.", false));
            TermData.Add(CVID.MS_Mascot_identity_threshold, new TermInfo(CVID.MS_Mascot_identity_threshold, @"MS", @"MS:1001371", @"Mascot:identity threshold", @"The Mascot result 'identity threshold'.", false));
            TermData.Add(CVID.MS_SEQUEST_Sequences, new TermInfo(CVID.MS_SEQUEST_Sequences, @"MS", @"MS:1001372", @"SEQUEST:Sequences", @"", false));
            TermData.Add(CVID.MS_SEQUEST_TIC, new TermInfo(CVID.MS_SEQUEST_TIC, @"MS", @"MS:1001373", @"SEQUEST:TIC", @"SEQUEST total ion current.", false));
            TermData.Add(CVID.MS_SEQUEST_Sum, new TermInfo(CVID.MS_SEQUEST_Sum, @"MS", @"MS:1001374", @"SEQUEST:Sum", @"", false));
            TermData.Add(CVID.MS_Phenyx_Instrument_Type, new TermInfo(CVID.MS_Phenyx_Instrument_Type, @"MS", @"MS:1001375", @"Phenyx:Instrument Type", @"The instrument type parameter value in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Scoring_Model, new TermInfo(CVID.MS_Phenyx_Scoring_Model, @"MS", @"MS:1001376", @"Phenyx:Scoring Model", @"The selected scoring model in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Default_Parent_Charge, new TermInfo(CVID.MS_Phenyx_Default_Parent_Charge, @"MS", @"MS:1001377", @"Phenyx:Default Parent Charge", @"The default parent charge value in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Trust_Parent_Charge, new TermInfo(CVID.MS_Phenyx_Trust_Parent_Charge, @"MS", @"MS:1001378", @"Phenyx:Trust Parent Charge", @"The parameter in Phenyx that specifies if the experimental charge state is to be considered as correct.", false));
            TermData.Add(CVID.MS_Phenyx_Turbo, new TermInfo(CVID.MS_Phenyx_Turbo, @"MS", @"MS:1001379", @"Phenyx:Turbo", @"The turbo mode parameter in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Turbo_ErrorTol, new TermInfo(CVID.MS_Phenyx_Turbo_ErrorTol, @"MS", @"MS:1001380", @"Phenyx:Turbo:ErrorTol", @"The maximal allowed fragment m/z error filter considered in the turbo mode of Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Turbo_Coverage, new TermInfo(CVID.MS_Phenyx_Turbo_Coverage, @"MS", @"MS:1001381", @"Phenyx:Turbo:Coverage", @"The minimal peptide sequence coverage value, expressed in percent, considered in the turbo mode of Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Turbo_Series, new TermInfo(CVID.MS_Phenyx_Turbo_Series, @"MS", @"MS:1001382", @"Phenyx:Turbo:Series", @"The list of ion series considered in the turbo mode of Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_MinPepLength, new TermInfo(CVID.MS_Phenyx_MinPepLength, @"MS", @"MS:1001383", @"Phenyx:MinPepLength", @"The minimal number of residues for a peptide to be considered for a valid identification in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_MinPepzscore, new TermInfo(CVID.MS_Phenyx_MinPepzscore, @"MS", @"MS:1001384", @"Phenyx:MinPepzscore", @"The minimal peptide z-score for a peptide to be considered for a valid identification in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_MaxPepPvalue, new TermInfo(CVID.MS_Phenyx_MaxPepPvalue, @"MS", @"MS:1001385", @"Phenyx:MaxPepPvalue", @"The maximal peptide p-value for a peptide to be considered for a valid identification in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_AC_Score, new TermInfo(CVID.MS_Phenyx_AC_Score, @"MS", @"MS:1001386", @"Phenyx:AC Score", @"The minimal protein score required for a protein database entry to be displayed in the list of identified proteins in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Conflict_Resolution, new TermInfo(CVID.MS_Phenyx_Conflict_Resolution, @"MS", @"MS:1001387", @"Phenyx:Conflict Resolution", @"The parameter in Phenyx that specifies if the conflict resolution algorithm is to be used.", false));
            TermData.Add(CVID.MS_Phenyx_AC, new TermInfo(CVID.MS_Phenyx_AC, @"MS", @"MS:1001388", @"Phenyx:AC", @"The primary sequence database identifier of a protein in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_ID, new TermInfo(CVID.MS_Phenyx_ID, @"MS", @"MS:1001389", @"Phenyx:ID", @"A secondary sequence database identifier of a protein in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Score, new TermInfo(CVID.MS_Phenyx_Score, @"MS", @"MS:1001390", @"Phenyx:Score", @"The protein score of a protein match in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Peptides1, new TermInfo(CVID.MS_Phenyx_Peptides1, @"MS", @"MS:1001391", @"Phenyx:Peptides1", @"First number of phenyx result \ #Peptides\ .", false));
            TermData.Add(CVID.MS_Phenyx_Peptides2, new TermInfo(CVID.MS_Phenyx_Peptides2, @"MS", @"MS:1001392", @"Phenyx:Peptides2", @"Second number of phenyx result \ #Peptides\ .", false));
            TermData.Add(CVID.MS_Phenyx_Auto, new TermInfo(CVID.MS_Phenyx_Auto, @"MS", @"MS:1001393", @"Phenyx:Auto", @"The value of the automatic peptide acceptance filter in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_User, new TermInfo(CVID.MS_Phenyx_User, @"MS", @"MS:1001394", @"Phenyx:User", @"The value of the user-defined peptide acceptance filter in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Pepzscore, new TermInfo(CVID.MS_Phenyx_Pepzscore, @"MS", @"MS:1001395", @"Phenyx:Pepzscore", @"The z-score value of a peptide sequence match in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_PepPvalue, new TermInfo(CVID.MS_Phenyx_PepPvalue, @"MS", @"MS:1001396", @"Phenyx:PepPvalue", @"The p-value of a peptide sequence match in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_NumberOfMC, new TermInfo(CVID.MS_Phenyx_NumberOfMC, @"MS", @"MS:1001397", @"Phenyx:NumberOfMC", @"The number of missed cleavages of a peptide sequence in Phenyx.", false));
            TermData.Add(CVID.MS_Phenyx_Modif, new TermInfo(CVID.MS_Phenyx_Modif, @"MS", @"MS:1001398", @"Phenyx:Modif", @"The expression of the nature and position(s) of modified residue(s) on a matched peptide sequence in Phenyx.", false));
            TermData.Add(CVID.MS_OMSSA_csv_format, new TermInfo(CVID.MS_OMSSA_csv_format, @"MS", @"MS:1001399", @"OMSSA csv format", @"Source file for this mzIdentML was in OMSSA csv file format.", false));
            TermData.Add(CVID.MS_OMSSA_xml_format, new TermInfo(CVID.MS_OMSSA_xml_format, @"MS", @"MS:1001400", @"OMSSA xml format", @"Source file for this mzIdentML was in OMSSA xml file format.", false));
            TermData.Add(CVID.MS_X__Tandem_xml_format, new TermInfo(CVID.MS_X__Tandem_xml_format, @"MS", @"MS:1001401", @"X\!Tandem xml format", @"Source file for this mzIdentML was in X!Tandem xml file format.", false));
            TermData.Add(CVID.MS_spectrum_identification_result_details, new TermInfo(CVID.MS_spectrum_identification_result_details, @"MS", @"MS:1001405", @"spectrum identification result details", @"This subsection describes terms which can describe details of spectrum identification results.", false));
            TermData.Add(CVID.MS_param__internal_yb_ion, new TermInfo(CVID.MS_param__internal_yb_ion, @"MS", @"MS:1001406", @"param: internal yb ion", @"Parameter information, type of product: internal yb ion.", false));
            TermData.Add(CVID.MS_param__internal_ya_ion, new TermInfo(CVID.MS_param__internal_ya_ion, @"MS", @"MS:1001407", @"param: internal ya ion", @"Parameter information, type of product: internal ya ion.", false));
            TermData.Add(CVID.MS_param__z_1_ion, new TermInfo(CVID.MS_param__z_1_ion, @"MS", @"MS:1001408", @"param: z+1 ion", @"Parameter information, type of product: z+1 ion.", false));
            TermData.Add(CVID.MS_param__z_2_ion, new TermInfo(CVID.MS_param__z_2_ion, @"MS", @"MS:1001409", @"param: z+2 ion", @"Parameter information, type of product: z+2 ion.", false));
            TermData.Add(CVID.MS_translation_start_codons, new TermInfo(CVID.MS_translation_start_codons, @"MS", @"MS:1001410", @"translation start codons", @"The translation start codons used to translate the nucleotides to amino acids.", false));
            TermData.Add(CVID.MS_search_tolerance_specification, new TermInfo(CVID.MS_search_tolerance_specification, @"MS", @"MS:1001411", @"search tolerance specification", @"Specification of the search tolerance.", false));
            TermData.Add(CVID.MS_search_tolerance_plus_value, new TermInfo(CVID.MS_search_tolerance_plus_value, @"MS", @"MS:1001412", @"search tolerance plus value", @"", false));
            TermData.Add(CVID.MS_search_tolerance_minus_value, new TermInfo(CVID.MS_search_tolerance_minus_value, @"MS", @"MS:1001413", @"search tolerance minus value", @"", false));
            TermData.Add(CVID.MS_MGF_scans_OBSOLETE, new TermInfo(CVID.MS_MGF_scans_OBSOLETE, @"MS", @"MS:1001414", @"MGF scans", @"OBSOLETE: replaced by MS:1000797 (peak list scans): This term can hold the scans attribute from an MGF input file.", true));
            TermData.Add(CVID.MS_MGF_raw_scans_OBSOLETE, new TermInfo(CVID.MS_MGF_raw_scans_OBSOLETE, @"MS", @"MS:1001415", @"MGF raw scans", @"OBSOLETE: replaced by MS:1000798 (peak list raw scans): This term can hold the raw scans attribute from an MGF input file.", true));
            TermData.Add(CVID.MS_spectrum_title_OBSOLETE, new TermInfo(CVID.MS_spectrum_title_OBSOLETE, @"MS", @"MS:1001416", @"spectrum title", @"OBSOLETE: replaced by MS:1000796 (spectrum title): Holds the spectrum title from different input file formats, e.g. MGF TITLE.", true));
            TermData.Add(CVID.MS_SpectraST_dot, new TermInfo(CVID.MS_SpectraST_dot, @"MS", @"MS:1001417", @"SpectraST:dot", @"SpectraST dot product of two spectra, measuring spectral similarity.", false));
            TermData.Add(CVID.MS_SpectraST_dot_bias, new TermInfo(CVID.MS_SpectraST_dot_bias, @"MS", @"MS:1001418", @"SpectraST:dot_bias", @"SpectraST measure of how much of the dot product is dominated by a few peaks.", false));
            TermData.Add(CVID.MS_SpectraST_discriminant_score_F, new TermInfo(CVID.MS_SpectraST_discriminant_score_F, @"MS", @"MS:1001419", @"SpectraST:discriminant score F", @"SpectraST spectrum score.", false));
            TermData.Add(CVID.MS_SpectraST_delta, new TermInfo(CVID.MS_SpectraST_delta, @"MS", @"MS:1001420", @"SpectraST:delta", @"SpectraST normalised difference between dot product of top hit and runner-up.", false));
            TermData.Add(CVID.MS_pepXML_format, new TermInfo(CVID.MS_pepXML_format, @"MS", @"MS:1001421", @"pepXML format", @"The XML-based pepXML file format for encoding PSM information, created and maintained by the Trans-Proteomic Pipeline developers.", false));
            TermData.Add(CVID.MS_protXML_format, new TermInfo(CVID.MS_protXML_format, @"MS", @"MS:1001422", @"protXML format", @"The XML-based protXML file format for encoding protein identifications, created and maintained by the Trans-Proteomic Pipeline developers.", false));
            TermData.Add(CVID.MS_translation_table_description, new TermInfo(CVID.MS_translation_table_description, @"MS", @"MS:1001423", @"translation table description", @"A URL that describes the translation table used to translate the nucleotides to amino acids.", false));
            TermData.Add(CVID.MS_ProteinExtractor_Methodname, new TermInfo(CVID.MS_ProteinExtractor_Methodname, @"MS", @"MS:1001424", @"ProteinExtractor:Methodname", @"Name of the used method in the ProteinExtractor algorithm.", false));
            TermData.Add(CVID.MS_ProteinExtractor_GenerateNonRedundant, new TermInfo(CVID.MS_ProteinExtractor_GenerateNonRedundant, @"MS", @"MS:1001425", @"ProteinExtractor:GenerateNonRedundant", @"Flag indicating if a non redundant scoring should be generated.", false));
            TermData.Add(CVID.MS_ProteinExtractor_IncludeIdentified, new TermInfo(CVID.MS_ProteinExtractor_IncludeIdentified, @"MS", @"MS:1001426", @"ProteinExtractor:IncludeIdentified", @"Flag indicating if identified proteins should be included.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MaxNumberOfProteins, new TermInfo(CVID.MS_ProteinExtractor_MaxNumberOfProteins, @"MS", @"MS:1001427", @"ProteinExtractor:MaxNumberOfProteins", @"The maximum number of proteins to consider.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MaxProteinMass, new TermInfo(CVID.MS_ProteinExtractor_MaxProteinMass, @"MS", @"MS:1001428", @"ProteinExtractor:MaxProteinMass", @"The maximum considered mass for a protein.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MinNumberOfPeptides, new TermInfo(CVID.MS_ProteinExtractor_MinNumberOfPeptides, @"MS", @"MS:1001429", @"ProteinExtractor:MinNumberOfPeptides", @"The minimum number of proteins to consider.", false));
            TermData.Add(CVID.MS_ProteinExtractor_UseMascot, new TermInfo(CVID.MS_ProteinExtractor_UseMascot, @"MS", @"MS:1001430", @"ProteinExtractor:UseMascot", @"Flag indicating to include Mascot scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MascotPeptideScoreThreshold, new TermInfo(CVID.MS_ProteinExtractor_MascotPeptideScoreThreshold, @"MS", @"MS:1001431", @"ProteinExtractor:MascotPeptideScoreThreshold", @"Only peptides with scores higher than that threshold are taken into account in Mascot scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MascotUniqueScore, new TermInfo(CVID.MS_ProteinExtractor_MascotUniqueScore, @"MS", @"MS:1001432", @"ProteinExtractor:MascotUniqueScore", @"In the final result each protein must have at least one peptide above this Mascot score threshold in ProteinExtractor meta score calculation.", false));
            TermData.Add(CVID.MS_ProteinExtractor_MascotUseIdentityScore, new TermInfo(CVID.MS_ProteinExtractor_MascotUseIdentityScore, @"MS", @"MS:1001433", @"ProteinExtractor:MascotUseIdentityScore", @"", false));
            TermData.Add(CVID.MS_ProteinExtractor_MascotWeighting, new TermInfo(CVID.MS_ProteinExtractor_MascotWeighting, @"MS", @"MS:1001434", @"ProteinExtractor:MascotWeighting", @"Influence of Mascot search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor.", false));
            TermData.Add(CVID.MS_ProteinExtractor_UseSequest, new TermInfo(CVID.MS_ProteinExtractor_UseSequest, @"MS", @"MS:1001435", @"ProteinExtractor:UseSequest", @"Flag indicating to include SEQUEST scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_SequestPeptideScoreThreshold, new TermInfo(CVID.MS_ProteinExtractor_SequestPeptideScoreThreshold, @"MS", @"MS:1001436", @"ProteinExtractor:SequestPeptideScoreThreshold", @"Only peptides with scores higher than that threshold are taken into account in SEQUEST scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_SequestUniqueScore, new TermInfo(CVID.MS_ProteinExtractor_SequestUniqueScore, @"MS", @"MS:1001437", @"ProteinExtractor:SequestUniqueScore", @"In the final result each protein must have at least one peptide above this SEQUEST score threshold in ProteinExtractor meta score calculation.", false));
            TermData.Add(CVID.MS_ProteinExtractor_SequestWeighting, new TermInfo(CVID.MS_ProteinExtractor_SequestWeighting, @"MS", @"MS:1001438", @"ProteinExtractor:SequestWeighting", @"Influence of SEQUEST search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor.", false));
            TermData.Add(CVID.MS_ProteinExtractor_UseProteinSolver, new TermInfo(CVID.MS_ProteinExtractor_UseProteinSolver, @"MS", @"MS:1001439", @"ProteinExtractor:UseProteinSolver", @"Flag indicating to include ProteinSolver scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold, new TermInfo(CVID.MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold, @"MS", @"MS:1001440", @"ProteinExtractor:ProteinSolverPeptideScoreThreshold", @"Only peptides with scores higher than that threshold are taken into account in ProteinSolver scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_ProteinSolverUniqueScore, new TermInfo(CVID.MS_ProteinExtractor_ProteinSolverUniqueScore, @"MS", @"MS:1001441", @"ProteinExtractor:ProteinSolverUniqueScore", @"In the final result each protein must have at least one peptide above this ProteinSolver score threshold in ProteinExtractor meta score calculation.", false));
            TermData.Add(CVID.MS_ProteinExtractor_ProteinSolverWeighting, new TermInfo(CVID.MS_ProteinExtractor_ProteinSolverWeighting, @"MS", @"MS:1001442", @"ProteinExtractor:ProteinSolverWeighting", @"Influence of ProteinSolver search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor.", false));
            TermData.Add(CVID.MS_ProteinExtractor_UsePhenyx, new TermInfo(CVID.MS_ProteinExtractor_UsePhenyx, @"MS", @"MS:1001443", @"ProteinExtractor:UsePhenyx", @"Flag indicating to include Phenyx scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_PhenyxPeptideScoreThreshold, new TermInfo(CVID.MS_ProteinExtractor_PhenyxPeptideScoreThreshold, @"MS", @"MS:1001444", @"ProteinExtractor:PhenyxPeptideScoreThreshold", @"Only peptides with scores higher than that threshold are taken into account in Phenyx scoring for calculation of the ProteinExtractor meta score.", false));
            TermData.Add(CVID.MS_ProteinExtractor_PhenyxUniqueScore, new TermInfo(CVID.MS_ProteinExtractor_PhenyxUniqueScore, @"MS", @"MS:1001445", @"ProteinExtractor:PhenyxUniqueScore", @"In the final result each protein must have at least one peptide above this Phenyx score threshold in ProteinExtractor meta score calculation.", false));
            TermData.Add(CVID.MS_ProteinExtractor_PhenyxWeighting, new TermInfo(CVID.MS_ProteinExtractor_PhenyxWeighting, @"MS", @"MS:1001446", @"ProteinExtractor:PhenyxWeighting", @"Influence of Phenyx search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor.", false));
            TermData.Add(CVID.MS_prot_FDR_threshold, new TermInfo(CVID.MS_prot_FDR_threshold, @"MS", @"MS:1001447", @"prot:FDR threshold", @"False-discovery rate threshold for proteins.", false));
            TermData.Add(CVID.MS_pep_FDR_threshold, new TermInfo(CVID.MS_pep_FDR_threshold, @"MS", @"MS:1001448", @"pep:FDR threshold", @"False-discovery rate threshold for peptides.", false));
            TermData.Add(CVID.MS_OMSSA_e_value_threshold, new TermInfo(CVID.MS_OMSSA_e_value_threshold, @"MS", @"MS:1001449", @"OMSSA e-value threshold", @"Threshold for OMSSA e-value for quality estimation.", false));
            TermData.Add(CVID.MS_decoy_DB_details, new TermInfo(CVID.MS_decoy_DB_details, @"MS", @"MS:1001450", @"decoy DB details", @"Details of decoy generation and database structure.", false));
            TermData.Add(CVID.MS_decoy_DB_generation_algorithm, new TermInfo(CVID.MS_decoy_DB_generation_algorithm, @"MS", @"MS:1001451", @"decoy DB generation algorithm", @"Name of algorithm used for decoy generation.", false));
            TermData.Add(CVID.MS_decoy_DB_type_shuffle, new TermInfo(CVID.MS_decoy_DB_type_shuffle, @"MS", @"MS:1001452", @"decoy DB type shuffle", @"Decoy type: Amino acids of protein sequences are used in a random order.", false));
            TermData.Add(CVID.MS_DB_composition_only_decoy, new TermInfo(CVID.MS_DB_composition_only_decoy, @"MS", @"MS:1001453", @"DB composition only decoy", @"Decoy database composition: database contains only decoy entries.", false));
            TermData.Add(CVID.MS_quality_estimation_with_implicite_decoy_sequences, new TermInfo(CVID.MS_quality_estimation_with_implicite_decoy_sequences, @"MS", @"MS:1001454", @"quality estimation with implicite decoy sequences", @"Decoy entries are generated during the search, not explicitly stored in a database (like Mascot Decoy).", false));
            TermData.Add(CVID.MS_acquisition_software, new TermInfo(CVID.MS_acquisition_software, @"MS", @"MS:1001455", @"acquisition software", @"Acquisition software.", false));
            TermData.Add(CVID.MS_analysis_software, new TermInfo(CVID.MS_analysis_software, @"MS", @"MS:1001456", @"analysis software", @"Analysis software.", false));
            TermData.Add(CVID.MS_data_processing_software, new TermInfo(CVID.MS_data_processing_software, @"MS", @"MS:1001457", @"data processing software", @"Data processing software.", false));
            TermData.Add(CVID.MS_spectrum_generation_information, new TermInfo(CVID.MS_spectrum_generation_information, @"MS", @"MS:1001458", @"spectrum generation information", @"Vocabularies describing the spectrum generation information.", false));
            TermData.Add(CVID.MS_file_format, new TermInfo(CVID.MS_file_format, @"MS", @"MS:1001459", @"file format", @"Format of data files.", false));
            TermData.Add(CVID.MS_unknown_modification, new TermInfo(CVID.MS_unknown_modification, @"MS", @"MS:1001460", @"unknown modification", @"This term should be given if the modification was unknown.", false));
            TermData.Add(CVID.MS_greylag, new TermInfo(CVID.MS_greylag, @"MS", @"MS:1001461", @"greylag", @"Greylag identification software.", false));
            TermData.Add(CVID.MS_PEFF_format, new TermInfo(CVID.MS_PEFF_format, @"MS", @"MS:1001462", @"PEFF format", @"The sequence database was stored in the PEFF (PSI enhanced FastA file) format.", false));
            TermData.Add(CVID.MS_Phenyx_XML_format, new TermInfo(CVID.MS_Phenyx_XML_format, @"MS", @"MS:1001463", @"Phenyx XML format", @"Phenyx open XML file format.", false));
            TermData.Add(CVID.MS_DTASelect_format, new TermInfo(CVID.MS_DTASelect_format, @"MS", @"MS:1001464", @"DTASelect format", @"DTASelect file format.", false));
            TermData.Add(CVID.MS_MS2_format, new TermInfo(CVID.MS_MS2_format, @"MS", @"MS:1001466", @"MS2 format", @"MS2 file format for MS2 spectral data.", false));
            TermData.Add(CVID.MS_taxonomy__NCBI_TaxID, new TermInfo(CVID.MS_taxonomy__NCBI_TaxID, @"MS", @"MS:1001467", @"taxonomy: NCBI TaxID", @"This term is used if a NCBI TaxID is specified, e.g. 9606 for Homo sapiens.", false));
            TermData.Add(CVID.MS_taxonomy__common_name, new TermInfo(CVID.MS_taxonomy__common_name, @"MS", @"MS:1001468", @"taxonomy: common name", @"This term is used if a common name is specified, e.g. human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.", false));
            TermData.Add(CVID.MS_taxonomy__scientific_name, new TermInfo(CVID.MS_taxonomy__scientific_name, @"MS", @"MS:1001469", @"taxonomy: scientific name", @"This term is used if a scientific name is specified, e.g. Homo sapiens. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.", false));
            TermData.Add(CVID.MS_taxonomy__Swiss_Prot_ID, new TermInfo(CVID.MS_taxonomy__Swiss_Prot_ID, @"MS", @"MS:1001470", @"taxonomy: Swiss-Prot ID", @"This term is used if a swiss prot taxonomy id is specified, e.g. Human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.", false));
            TermData.Add(CVID.MS_peptide_modification_details, new TermInfo(CVID.MS_peptide_modification_details, @"MS", @"MS:1001471", @"peptide modification details", @"The children of this term can be used to describe modifications.", false));
            TermData.Add(CVID.MS_selected_ion_monitoring_chromatogram, new TermInfo(CVID.MS_selected_ion_monitoring_chromatogram, @"MS", @"MS:1001472", @"selected ion monitoring chromatogram", @"Representation of an array of the measurements of a selectively monitored ion versus time.", false));
            TermData.Add(CVID.MS_selected_reaction_monitoring_chromatogram, new TermInfo(CVID.MS_selected_reaction_monitoring_chromatogram, @"MS", @"MS:1001473", @"selected reaction monitoring chromatogram", @"Representation of an array of the measurements of a selectively monitored reaction versus time.", false));
            TermData.Add(CVID.MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE, new TermInfo(CVID.MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE, @"MS", @"MS:1001474", @"consecutive reaction monitoring chromatogram", @"OBSOLETE Representation of an array of the measurements of a series of monitored reactions versus time.", true));
            TermData.Add(CVID.MS_OMSSA, new TermInfo(CVID.MS_OMSSA, @"MS", @"MS:1001475", @"OMSSA", @"Open Mass Spectrometry Search Algorithm was used to analyze the spectra.", false));
            TermData.Add(CVID.MS_X__Tandem, new TermInfo(CVID.MS_X__Tandem, @"MS", @"MS:1001476", @"X\!Tandem", @"X!Tandem was used to analyze the spectra.", false));
            TermData.Add(CVID.MS_SpectraST, new TermInfo(CVID.MS_SpectraST, @"MS", @"MS:1001477", @"SpectraST", @"SpectraST was used to analyze the spectra.", false));
            TermData.Add(CVID.MS_Mascot_Parser, new TermInfo(CVID.MS_Mascot_Parser, @"MS", @"MS:1001478", @"Mascot Parser", @"Mascot Parser was used to analyze the spectra.", false));
            TermData.Add(CVID.MS_null_terminated_ASCII_string, new TermInfo(CVID.MS_null_terminated_ASCII_string, @"MS", @"MS:1001479", @"null-terminated ASCII string", @"Sequence of zero or more non-zero ASCII characters terminated by a single null (0) byte.", false));
            TermData.Add(CVID.MS_SCIEX_TOF_TOF_nativeID_format, new TermInfo(CVID.MS_SCIEX_TOF_TOF_nativeID_format, @"MS", @"MS:1001480", @"SCIEX TOF/TOF nativeID format", @"Native format defined by jobRun=xsd:nonNegativeInteger spotLabel=xsd:string spectrum=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_SCIEX_TOF_TOF_database, new TermInfo(CVID.MS_SCIEX_TOF_TOF_database, @"MS", @"MS:1001481", @"SCIEX TOF/TOF database", @"Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument database.", false));
            TermData.Add(CVID.MS_5800_TOF_TOF, new TermInfo(CVID.MS_5800_TOF_TOF, @"MS", @"MS:1001482", @"5800 TOF/TOF", @"SCIEX 5800 TOF-TOF Analyzer.", false));
            TermData.Add(CVID.MS_SCIEX_TOF_TOF_Series_Explorer_Software, new TermInfo(CVID.MS_SCIEX_TOF_TOF_Series_Explorer_Software, @"MS", @"MS:1001483", @"SCIEX TOF/TOF Series Explorer Software", @"SCIEX or Applied Biosystems software for TOF/TOF data acquisition and analysis.", false));
            TermData.Add(CVID.MS_intensity_normalization, new TermInfo(CVID.MS_intensity_normalization, @"MS", @"MS:1001484", @"intensity normalization", @"Normalization of data point intensities.", false));
            TermData.Add(CVID.MS_m_z_calibration, new TermInfo(CVID.MS_m_z_calibration, @"MS", @"MS:1001485", @"m/z calibration", @"Calibration of data point m/z positions.", false));
            TermData.Add(CVID.MS_data_filtering, new TermInfo(CVID.MS_data_filtering, @"MS", @"MS:1001486", @"data filtering", @"Filtering out part of the data.", false));
            TermData.Add(CVID.MS_ProteinExtractor, new TermInfo(CVID.MS_ProteinExtractor, @"MS", @"MS:1001487", @"ProteinExtractor", @"An algorithm for protein determination/assembly integrated into Bruker's ProteinScape.", false));
            TermData.Add(CVID.MS_Mascot_Distiller, new TermInfo(CVID.MS_Mascot_Distiller, @"MS", @"MS:1001488", @"Mascot Distiller", @"Mascot Distiller.", false));
            TermData.Add(CVID.MS_Mascot_Integra, new TermInfo(CVID.MS_Mascot_Integra, @"MS", @"MS:1001489", @"Mascot Integra", @"Mascot Integra.", false));
            TermData.Add(CVID.MS_Percolator, new TermInfo(CVID.MS_Percolator, @"MS", @"MS:1001490", @"Percolator", @"Percolator.", false));
            TermData.Add(CVID.MS_percolator_Q_value, new TermInfo(CVID.MS_percolator_Q_value, @"MS", @"MS:1001491", @"percolator:Q value", @"Percolator:Q value.", false));
            TermData.Add(CVID.MS_percolator_score, new TermInfo(CVID.MS_percolator_score, @"MS", @"MS:1001492", @"percolator:score", @"Percolator:score.", false));
            TermData.Add(CVID.MS_percolator_PEP, new TermInfo(CVID.MS_percolator_PEP, @"MS", @"MS:1001493", @"percolator:PEP", @"Posterior error probability.", false));
            TermData.Add(CVID.MS_no_threshold, new TermInfo(CVID.MS_no_threshold, @"MS", @"MS:1001494", @"no threshold", @"In case no threshold was used.", false));
            TermData.Add(CVID.MS_ProteinScape_SearchResultId, new TermInfo(CVID.MS_ProteinScape_SearchResultId, @"MS", @"MS:1001495", @"ProteinScape:SearchResultId", @"The SearchResultId of this peptide as SearchResult in the ProteinScape database.", false));
            TermData.Add(CVID.MS_ProteinScape_SearchEventId, new TermInfo(CVID.MS_ProteinScape_SearchEventId, @"MS", @"MS:1001496", @"ProteinScape:SearchEventId", @"The SearchEventId of the SearchEvent in the ProteinScape database.", false));
            TermData.Add(CVID.MS_ProteinScape_ProfoundProbability, new TermInfo(CVID.MS_ProteinScape_ProfoundProbability, @"MS", @"MS:1001497", @"ProteinScape:ProfoundProbability", @"The Profound probability score stored by ProteinScape.", false));
            TermData.Add(CVID.MS_Profound_z_value, new TermInfo(CVID.MS_Profound_z_value, @"MS", @"MS:1001498", @"Profound:z value", @"The Profound z value.", false));
            TermData.Add(CVID.MS_Profound_Cluster, new TermInfo(CVID.MS_Profound_Cluster, @"MS", @"MS:1001499", @"Profound:Cluster", @"The Profound cluster score.", false));
            TermData.Add(CVID.MS_Profound_ClusterRank, new TermInfo(CVID.MS_Profound_ClusterRank, @"MS", @"MS:1001500", @"Profound:ClusterRank", @"The Profound cluster rank.", false));
            TermData.Add(CVID.MS_MSFit_Mowse_score, new TermInfo(CVID.MS_MSFit_Mowse_score, @"MS", @"MS:1001501", @"MSFit:Mowse score", @"The MSFit Mowse score.", false));
            TermData.Add(CVID.MS_Sonar_Score, new TermInfo(CVID.MS_Sonar_Score, @"MS", @"MS:1001502", @"Sonar:Score", @"The Sonar score.", false));
            TermData.Add(CVID.MS_ProteinScape_PFFSolverExp, new TermInfo(CVID.MS_ProteinScape_PFFSolverExp, @"MS", @"MS:1001503", @"ProteinScape:PFFSolverExp", @"The ProteinSolver exp value stored by ProteinScape.", false));
            TermData.Add(CVID.MS_ProteinScape_PFFSolverScore, new TermInfo(CVID.MS_ProteinScape_PFFSolverScore, @"MS", @"MS:1001504", @"ProteinScape:PFFSolverScore", @"The ProteinSolver score stored by ProteinScape.", false));
            TermData.Add(CVID.MS_ProteinScape_IntensityCoverage, new TermInfo(CVID.MS_ProteinScape_IntensityCoverage, @"MS", @"MS:1001505", @"ProteinScape:IntensityCoverage", @"The intensity coverage of the identified peaks in the spectrum calculated by ProteinScape.", false));
            TermData.Add(CVID.MS_ProteinScape_SequestMetaScore, new TermInfo(CVID.MS_ProteinScape_SequestMetaScore, @"MS", @"MS:1001506", @"ProteinScape:SequestMetaScore", @"The SEQUEST meta score calculated by ProteinScape from the original SEQUEST scores.", false));
            TermData.Add(CVID.MS_ProteinExtractor_Score, new TermInfo(CVID.MS_ProteinExtractor_Score, @"MS", @"MS:1001507", @"ProteinExtractor:Score", @"The score calculated by ProteinExtractor.", false));
            TermData.Add(CVID.MS_Agilent_MassHunter_nativeID_format, new TermInfo(CVID.MS_Agilent_MassHunter_nativeID_format, @"MS", @"MS:1001508", @"Agilent MassHunter nativeID format", @"Native format defined by scanId=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Agilent_MassHunter_format, new TermInfo(CVID.MS_Agilent_MassHunter_format, @"MS", @"MS:1001509", @"Agilent MassHunter format", @"A data file format found in an Agilent MassHunter directory which contains raw data acquired by an Agilent mass spectrometer.", false));
            TermData.Add(CVID.MS_TSQ_Vantage, new TermInfo(CVID.MS_TSQ_Vantage, @"MS", @"MS:1001510", @"TSQ Vantage", @"TSQ Vantage.", false));
            TermData.Add(CVID.MS_Sequence_database_filter_types, new TermInfo(CVID.MS_Sequence_database_filter_types, @"MS", @"MS:1001511", @"Sequence database filter types", @"Filter types which are used to filter a sequence database.", false));
            TermData.Add(CVID.MS_Sequence_database_filters, new TermInfo(CVID.MS_Sequence_database_filters, @"MS", @"MS:1001512", @"Sequence database filters", @"Sequence database filters which actually can contains values, e.g. to limit PI value of the sequences used to search.", false));
            TermData.Add(CVID.MS_DB_sequence_filter_pattern, new TermInfo(CVID.MS_DB_sequence_filter_pattern, @"MS", @"MS:1001513", @"DB sequence filter pattern", @"DB sequence filter pattern.", false));
            TermData.Add(CVID.MS_DB_accession_filter_string, new TermInfo(CVID.MS_DB_accession_filter_string, @"MS", @"MS:1001514", @"DB accession filter string", @"DB accession filter string.", false));
            TermData.Add(CVID.MS_frag__c_ion___H2O, new TermInfo(CVID.MS_frag__c_ion___H2O, @"MS", @"MS:1001515", @"frag: c ion - H2O", @"Fragmentation information, type of product: c ion without water.", false));
            TermData.Add(CVID.MS_frag__c_ion___NH3, new TermInfo(CVID.MS_frag__c_ion___NH3, @"MS", @"MS:1001516", @"frag: c ion - NH3", @"Fragmentation information, type of product: c ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__z_ion___H2O, new TermInfo(CVID.MS_frag__z_ion___H2O, @"MS", @"MS:1001517", @"frag: z ion - H2O", @"Fragmentation information, type of product: z ion without water.", false));
            TermData.Add(CVID.MS_frag__z_ion___NH3, new TermInfo(CVID.MS_frag__z_ion___NH3, @"MS", @"MS:1001518", @"frag: z ion - NH3", @"Fragmentation information, type of product: z ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__x_ion___H2O, new TermInfo(CVID.MS_frag__x_ion___H2O, @"MS", @"MS:1001519", @"frag: x ion - H2O", @"Fragmentation information, type of product: x ion without water.", false));
            TermData.Add(CVID.MS_frag__x_ion___NH3, new TermInfo(CVID.MS_frag__x_ion___NH3, @"MS", @"MS:1001520", @"frag: x ion - NH3", @"Fragmentation information, type of product: x ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__precursor_ion___H2O, new TermInfo(CVID.MS_frag__precursor_ion___H2O, @"MS", @"MS:1001521", @"frag: precursor ion - H2O", @"Fragmentation information, type of product: precursor ion without water.", false));
            TermData.Add(CVID.MS_frag__precursor_ion___NH3, new TermInfo(CVID.MS_frag__precursor_ion___NH3, @"MS", @"MS:1001522", @"frag: precursor ion - NH3", @"Fragmentation information, type of product: precursor ion without ammonia.", false));
            TermData.Add(CVID.MS_frag__precursor_ion, new TermInfo(CVID.MS_frag__precursor_ion, @"MS", @"MS:1001523", @"frag: precursor ion", @"Fragmentation information, type of product: precursor ion.", false));
            TermData.Add(CVID.MS_fragment_neutral_loss, new TermInfo(CVID.MS_fragment_neutral_loss, @"MS", @"MS:1001524", @"fragment neutral loss", @"This term can describe a neutral loss m/z value that is lost from an ion.", false));
            TermData.Add(CVID.MS_precursor_neutral_loss, new TermInfo(CVID.MS_precursor_neutral_loss, @"MS", @"MS:1001525", @"precursor neutral loss", @"This term can describe a neutral loss m/z value that is lost from an ion.", false));
            TermData.Add(CVID.MS_spectrum_from_database_integer_nativeID_format, new TermInfo(CVID.MS_spectrum_from_database_integer_nativeID_format, @"MS", @"MS:1001526", @"spectrum from database integer nativeID format", @"Native format defined by databasekey=xsd:long.", false));
            TermData.Add(CVID.MS_Proteinscape_spectra, new TermInfo(CVID.MS_Proteinscape_spectra, @"MS", @"MS:1001527", @"Proteinscape spectra", @"Spectra from Bruker/Protagen Proteinscape database.", false));
            TermData.Add(CVID.MS_Mascot_query_number, new TermInfo(CVID.MS_Mascot_query_number, @"MS", @"MS:1001528", @"Mascot query number", @"Native format defined by query=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_spectra_data_details, new TermInfo(CVID.MS_spectra_data_details, @"MS", @"MS:1001529", @"spectra data details", @"Child-terms contain information to map the results back to spectra.", false));
            TermData.Add(CVID.MS_mzML_unique_identifier, new TermInfo(CVID.MS_mzML_unique_identifier, @"MS", @"MS:1001530", @"mzML unique identifier", @"Native format defined by mzMLid=xsd:IDREF.", false));
            TermData.Add(CVID.MS_spectrum_from_ProteinScape_database_nativeID_format, new TermInfo(CVID.MS_spectrum_from_ProteinScape_database_nativeID_format, @"MS", @"MS:1001531", @"spectrum from ProteinScape database nativeID format", @"Native format defined by databasekey=xsd:long.", false));
            TermData.Add(CVID.MS_spectrum_from_database_string_nativeID_format, new TermInfo(CVID.MS_spectrum_from_database_string_nativeID_format, @"MS", @"MS:1001532", @"spectrum from database string nativeID format", @"Native format defined by databasekey=xsd:string.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_esquire_series, new TermInfo(CVID.MS_Bruker_Daltonics_esquire_series, @"MS", @"MS:1001533", @"Bruker Daltonics esquire series", @"Bruker Daltonics' esquire series.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_flex_series, new TermInfo(CVID.MS_Bruker_Daltonics_flex_series, @"MS", @"MS:1001534", @"Bruker Daltonics flex series", @"Bruker Daltonics' flex series.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_BioTOF_series, new TermInfo(CVID.MS_Bruker_Daltonics_BioTOF_series, @"MS", @"MS:1001535", @"Bruker Daltonics BioTOF series", @"Bruker Daltonics' BioTOF series.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_micrOTOF_series, new TermInfo(CVID.MS_Bruker_Daltonics_micrOTOF_series, @"MS", @"MS:1001536", @"Bruker Daltonics micrOTOF series", @"Bruker Daltonics' micrOTOF series.", false));
            TermData.Add(CVID.MS_BioTOF, new TermInfo(CVID.MS_BioTOF, @"MS", @"MS:1001537", @"BioTOF", @"Bruker Daltonics' BioTOF: ESI TOF.", false));
            TermData.Add(CVID.MS_BioTOF_III, new TermInfo(CVID.MS_BioTOF_III, @"MS", @"MS:1001538", @"BioTOF III", @"Bruker Daltonics' BioTOF III: ESI TOF.", false));
            TermData.Add(CVID.MS_UltroTOF_Q, new TermInfo(CVID.MS_UltroTOF_Q, @"MS", @"MS:1001539", @"UltroTOF-Q", @"Bruker Daltonics' UltroTOF-Q: ESI Q-TOF (MALDI optional).", false));
            TermData.Add(CVID.MS_micrOTOF_II, new TermInfo(CVID.MS_micrOTOF_II, @"MS", @"MS:1001540", @"micrOTOF II", @"Bruker Daltonics' micrOTOF II: ESI TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_maXis, new TermInfo(CVID.MS_maXis, @"MS", @"MS:1001541", @"maXis", @"Bruker Daltonics' maXis: ESI Q-TOF, Nanospray, APCI, APPI.", false));
            TermData.Add(CVID.MS_amaZon_ETD, new TermInfo(CVID.MS_amaZon_ETD, @"MS", @"MS:1001542", @"amaZon ETD", @"Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR.", false));
            TermData.Add(CVID.MS_microflex_LRF, new TermInfo(CVID.MS_microflex_LRF, @"MS", @"MS:1001543", @"microflex LRF", @"Bruker Daltonics' microflex LRF: MALDI TOF.", false));
            TermData.Add(CVID.MS_ultrafleXtreme, new TermInfo(CVID.MS_ultrafleXtreme, @"MS", @"MS:1001544", @"ultrafleXtreme", @"Bruker Daltonics' ultrafleXtreme: MALDI TOF.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_amaZon_series, new TermInfo(CVID.MS_Bruker_Daltonics_amaZon_series, @"MS", @"MS:1001545", @"Bruker Daltonics amaZon series", @"Bruker Daltonics' amaZon series.", false));
            TermData.Add(CVID.MS_amaZon_X, new TermInfo(CVID.MS_amaZon_X, @"MS", @"MS:1001546", @"amaZon X", @"Bruker Daltonics' amaZon X: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_maXis_series, new TermInfo(CVID.MS_Bruker_Daltonics_maXis_series, @"MS", @"MS:1001547", @"Bruker Daltonics maXis series", @"Bruker Daltonics' maXis series.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_solarix_series, new TermInfo(CVID.MS_Bruker_Daltonics_solarix_series, @"MS", @"MS:1001548", @"Bruker Daltonics solarix series", @"Bruker Daltonics' solarix: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.", false));
            TermData.Add(CVID.MS_solariX, new TermInfo(CVID.MS_solariX, @"MS", @"MS:1001549", @"solariX", @"Bruker Daltonics' solariX: ESI, MALDI, Qh-FT_ICR.", false));
            TermData.Add(CVID.MS_microflex_II, new TermInfo(CVID.MS_microflex_II, @"MS", @"MS:1001550", @"microflex II", @"Bruker Daltonics' microflex II: MALDI TOF.", false));
            TermData.Add(CVID.MS_autoflex_II_TOF_TOF, new TermInfo(CVID.MS_autoflex_II_TOF_TOF, @"MS", @"MS:1001553", @"autoflex II TOF/TOF", @"Bruker Daltonics' autoflex II TOF/TOF: MALDI TOF.", false));
            TermData.Add(CVID.MS_autoflex_III_TOF_TOF_smartbeam, new TermInfo(CVID.MS_autoflex_III_TOF_TOF_smartbeam, @"MS", @"MS:1001554", @"autoflex III TOF/TOF smartbeam", @"Bruker Daltonics' autoflex III TOF/TOF smartbeam: MALDI TOF.", false));
            TermData.Add(CVID.MS_autoflex, new TermInfo(CVID.MS_autoflex, @"MS", @"MS:1001555", @"autoflex", @"Bruker Daltonics' autoflex: MALDI TOF.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_apex_series, new TermInfo(CVID.MS_Bruker_Daltonics_apex_series, @"MS", @"MS:1001556", @"Bruker Daltonics apex series", @"Bruker Daltonics' apex series.", false));
            TermData.Add(CVID.MS_Shimadzu_Corporation_software, new TermInfo(CVID.MS_Shimadzu_Corporation_software, @"MS", @"MS:1001557", @"Shimadzu Corporation software", @"Shimadzu Corporation software.", false));
            TermData.Add(CVID.MS_MALDI_Solutions, new TermInfo(CVID.MS_MALDI_Solutions, @"MS", @"MS:1001558", @"MALDI Solutions", @"Shimadzu Biotech software for data acquisition, processing, and analysis.", false));
            TermData.Add(CVID.MS_SCIEX_TOF_TOF_T2D_nativeID_format, new TermInfo(CVID.MS_SCIEX_TOF_TOF_T2D_nativeID_format, @"MS", @"MS:1001559", @"SCIEX TOF/TOF T2D nativeID format", @"Native format defined by file=xsd:IDREF.", false));
            TermData.Add(CVID.MS_SCIEX_TOF_TOF_T2D_format, new TermInfo(CVID.MS_SCIEX_TOF_TOF_T2D_format, @"MS", @"MS:1001560", @"SCIEX TOF/TOF T2D format", @"Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument export format.", false));
            TermData.Add(CVID.MS_Scaffold, new TermInfo(CVID.MS_Scaffold, @"MS", @"MS:1001561", @"Scaffold", @"Scaffold analysis software.", false));
            TermData.Add(CVID.MS_Scaffold_nativeID_format, new TermInfo(CVID.MS_Scaffold_nativeID_format, @"MS", @"MS:1001562", @"Scaffold nativeID format", @"Scaffold native ID format.", false));
            TermData.Add(CVID.MS_SEQUEST_SQT_format, new TermInfo(CVID.MS_SEQUEST_SQT_format, @"MS", @"MS:1001563", @"SEQUEST SQT format", @"Source file for this mzIdentML was in SEQUEST SQT format.", false));
            TermData.Add(CVID.MS_Discoverer_MSF_format, new TermInfo(CVID.MS_Discoverer_MSF_format, @"MS", @"MS:1001564", @"Discoverer MSF format", @"Source file for this mzIdentML was in Thermo Scientific Discoverer MSF format.", false));
            TermData.Add(CVID.MS_IdentityE_XML_format, new TermInfo(CVID.MS_IdentityE_XML_format, @"MS", @"MS:1001565", @"IdentityE XML format", @"Source file for this mzIdentML was in Waters IdentityE XML format.", false));
            TermData.Add(CVID.MS_ProteinLynx_XML_format, new TermInfo(CVID.MS_ProteinLynx_XML_format, @"MS", @"MS:1001566", @"ProteinLynx XML format", @"Source file for this mzIdentML was in Waters ProteinLynx XML format.", false));
            TermData.Add(CVID.MS_SpectrumMill_directories, new TermInfo(CVID.MS_SpectrumMill_directories, @"MS", @"MS:1001567", @"SpectrumMill directories", @"Source file for this mzIdentML was in Agilent SpectrumMill directory format.", false));
            TermData.Add(CVID.MS_Scaffold_Peptide_Probability, new TermInfo(CVID.MS_Scaffold_Peptide_Probability, @"MS", @"MS:1001568", @"Scaffold:Peptide Probability", @"Scaffold peptide probability score.", false));
            TermData.Add(CVID.MS_IdentityE_Score, new TermInfo(CVID.MS_IdentityE_Score, @"MS", @"MS:1001569", @"IdentityE Score", @"Waters IdentityE peptide score.", false));
            TermData.Add(CVID.MS_ProteinLynx_Log_Likelihood, new TermInfo(CVID.MS_ProteinLynx_Log_Likelihood, @"MS", @"MS:1001570", @"ProteinLynx:Log Likelihood", @"ProteinLynx log likelihood score.", false));
            TermData.Add(CVID.MS_ProteinLynx_Ladder_Score, new TermInfo(CVID.MS_ProteinLynx_Ladder_Score, @"MS", @"MS:1001571", @"ProteinLynx:Ladder Score", @"Waters ProteinLynx Ladder score.", false));
            TermData.Add(CVID.MS_SpectrumMill_Score, new TermInfo(CVID.MS_SpectrumMill_Score, @"MS", @"MS:1001572", @"SpectrumMill:Score", @"Spectrum mill peptide score.", false));
            TermData.Add(CVID.MS_SpectrumMill_SPI, new TermInfo(CVID.MS_SpectrumMill_SPI, @"MS", @"MS:1001573", @"SpectrumMill:SPI", @"SpectrumMill SPI score (%).", false));
            TermData.Add(CVID.MS_report_only_spectra_assigned_to_identified_proteins, new TermInfo(CVID.MS_report_only_spectra_assigned_to_identified_proteins, @"MS", @"MS:1001574", @"report only spectra assigned to identified proteins", @"Flag indicating to report only the spectra assigned to identified proteins.", false));
            TermData.Add(CVID.MS_Scaffold__Minimum_Peptide_Count, new TermInfo(CVID.MS_Scaffold__Minimum_Peptide_Count, @"MS", @"MS:1001575", @"Scaffold: Minimum Peptide Count", @"Minimum number of peptides a protein must have to be accepted.", false));
            TermData.Add(CVID.MS_Scaffold__Minimum_Protein_Probability, new TermInfo(CVID.MS_Scaffold__Minimum_Protein_Probability, @"MS", @"MS:1001576", @"Scaffold: Minimum Protein Probability", @"Minimum protein probability a protein must have to be accepted.", false));
            TermData.Add(CVID.MS_Scaffold__Minimum_Peptide_Probability, new TermInfo(CVID.MS_Scaffold__Minimum_Peptide_Probability, @"MS", @"MS:1001577", @"Scaffold: Minimum Peptide Probability", @"Minimum probability a peptide must have to be accepted for protein scoring.", false));
            TermData.Add(CVID.MS_minimum_number_of_enzymatic_termini, new TermInfo(CVID.MS_minimum_number_of_enzymatic_termini, @"MS", @"MS:1001578", @"minimum number of enzymatic termini", @"Minimum number of enzymatic termini a peptide must have to be accepted.", false));
            TermData.Add(CVID.MS_Scaffold_Protein_Probability, new TermInfo(CVID.MS_Scaffold_Protein_Probability, @"MS", @"MS:1001579", @"Scaffold:Protein Probability", @"Scaffold protein probability score.", false));
            TermData.Add(CVID.MS_SpectrumMill_Discriminant_Score, new TermInfo(CVID.MS_SpectrumMill_Discriminant_Score, @"MS", @"MS:1001580", @"SpectrumMill:Discriminant Score", @"Discriminant score from Agilent SpectrumMill software.", false));
            TermData.Add(CVID.MS_FAIMS_compensation_voltage, new TermInfo(CVID.MS_FAIMS_compensation_voltage, @"MS", @"MS:1001581", @"FAIMS compensation voltage", @"The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion.", false));
            TermData.Add(CVID.MS_XCMS, new TermInfo(CVID.MS_XCMS, @"MS", @"MS:1001582", @"XCMS", @"Bioconductor package XCMS for preprocessing high-throughput, untargeted analyte profiling data.", false));
            TermData.Add(CVID.MS_MaxQuant, new TermInfo(CVID.MS_MaxQuant, @"MS", @"MS:1001583", @"MaxQuant", @"MaxQuant is a quantitative proteomics software package designed for analyzing large mass spectrometric data sets. It is specifically aimed at high resolution MS data.", false));
            TermData.Add(CVID.MS_combined_pmf___ms_ms_search, new TermInfo(CVID.MS_combined_pmf___ms_ms_search, @"MS", @"MS:1001584", @"combined pmf + ms-ms search", @"Search that includes data from Peptide Mass Fingerprint (PMF) and MS2 (aka Peptide Fragment Fingerprint - PFF).", false));
            TermData.Add(CVID.MS_MyriMatch, new TermInfo(CVID.MS_MyriMatch, @"MS", @"MS:1001585", @"MyriMatch", @"Tabb Lab software for directly comparing peptides in a database to tandem mass spectra.", false));
            TermData.Add(CVID.MS_DirecTag, new TermInfo(CVID.MS_DirecTag, @"MS", @"MS:1001586", @"DirecTag", @"Tabb Lab software for generating sequence tags from tandem mass spectra.", false));
            TermData.Add(CVID.MS_TagRecon, new TermInfo(CVID.MS_TagRecon, @"MS", @"MS:1001587", @"TagRecon", @"Tabb Lab software for reconciling sequence tags to a protein database.", false));
            TermData.Add(CVID.MS_Pepitome, new TermInfo(CVID.MS_Pepitome, @"MS", @"MS:1001588", @"Pepitome", @"Tabb Lab software for spectral library searches on tandem mass spectra.", false));
            TermData.Add(CVID.MS_MyriMatch_MVH, new TermInfo(CVID.MS_MyriMatch_MVH, @"MS", @"MS:1001589", @"MyriMatch:MVH", @"Using the multivariate hypergeometric distribution and a peak list divided into several intensity classes, this score is the negative natural log probability that the predicted peaks matched to experimental peaks by random chance.", false));
            TermData.Add(CVID.MS_MyriMatch_mzFidelity, new TermInfo(CVID.MS_MyriMatch_mzFidelity, @"MS", @"MS:1001590", @"MyriMatch:mzFidelity", @"The negative natural log probability that predicted peaks match to experimental peaks by random chance by scoring the m/z delta of the matches in a multinomial distribution.", false));
            TermData.Add(CVID.MS_anchor_protein, new TermInfo(CVID.MS_anchor_protein, @"MS", @"MS:1001591", @"anchor protein", @"A representative protein selected from a set of sequence same-set or spectrum same-set proteins.", false));
            TermData.Add(CVID.MS_family_member_protein, new TermInfo(CVID.MS_family_member_protein, @"MS", @"MS:1001592", @"family member protein", @"A protein with significant homology to another protein, but some distinguishing peptide matches.", false));
            TermData.Add(CVID.MS_group_member_with_undefined_relationship_OR_ortholog_protein, new TermInfo(CVID.MS_group_member_with_undefined_relationship_OR_ortholog_protein, @"MS", @"MS:1001593", @"group member with undefined relationship OR ortholog protein", @"TO ENDETAIL: a really generic relationship OR ortholog protein.", false));
            TermData.Add(CVID.MS_sequence_same_set_protein, new TermInfo(CVID.MS_sequence_same_set_protein, @"MS", @"MS:1001594", @"sequence same-set protein", @"A protein which is indistinguishable or equivalent to another protein, having matches to an identical set of peptide sequences.", false));
            TermData.Add(CVID.MS_spectrum_same_set_protein, new TermInfo(CVID.MS_spectrum_same_set_protein, @"MS", @"MS:1001595", @"spectrum same-set protein", @"A protein which is indistinguishable or equivalent to another protein, having matches to a set of peptide sequences that cannot be distinguished using the evidence in the mass spectra.", false));
            TermData.Add(CVID.MS_sequence_sub_set_protein, new TermInfo(CVID.MS_sequence_sub_set_protein, @"MS", @"MS:1001596", @"sequence sub-set protein", @"A protein with a sub-set of the peptide sequence matches for another protein, and no distinguishing peptide matches.", false));
            TermData.Add(CVID.MS_spectrum_sub_set_protein, new TermInfo(CVID.MS_spectrum_sub_set_protein, @"MS", @"MS:1001597", @"spectrum sub-set protein", @"A protein with a sub-set of the matched spectra for another protein, where the matches cannot be distinguished using the evidence in the mass spectra, and no distinguishing peptide matches.", false));
            TermData.Add(CVID.MS_sequence_subsumable_protein, new TermInfo(CVID.MS_sequence_subsumable_protein, @"MS", @"MS:1001598", @"sequence subsumable protein", @"A sequence same-set or sequence sub-set protein where the matches are distributed across two or more proteins.", false));
            TermData.Add(CVID.MS_spectrum_subsumable_protein, new TermInfo(CVID.MS_spectrum_subsumable_protein, @"MS", @"MS:1001599", @"spectrum subsumable protein", @"A spectrum same-set or spectrum sub-set protein where the matches are distributed across two or more proteins.", false));
            TermData.Add(CVID.MS_protein_inference_confidence_category, new TermInfo(CVID.MS_protein_inference_confidence_category, @"MS", @"MS:1001600", @"protein inference confidence category", @"Confidence category of inferred protein (conclusive, non conclusive, ambiguous group or indistinguishable).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Files_Raw_File_names_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Files_Raw_File_names_OBSOLETE, @"MS", @"MS:1001601", @"ProteomeDiscoverer:Spectrum Files:Raw File names", @"OBSOLETE Name and location of the .raw file or files.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SRF_File_Selector_SRF_File_Path_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_SRF_File_Selector_SRF_File_Path_OBSOLETE, @"MS", @"MS:1001602", @"ProteomeDiscoverer:SRF File Selector:SRF File Path", @"OBSOLETE Path and name of the .srf (SEQUEST Result Format) file.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Ionization_Source_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Ionization_Source_OBSOLETE, @"MS", @"MS:1001603", @"ProteomeDiscoverer:Spectrum Selector:Ionization Source", @"OBSOLETE Ionization source (electro-, nano-, thermospray, electron impact, APCI, MALDI, FAB etc).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Activation_Type_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Activation_Type_OBSOLETE, @"MS", @"MS:1001604", @"ProteomeDiscoverer:Activation Type", @"OBSOLETE Fragmentation method used (CID, MPD, ECD, PQD, ETD, HCD, Any).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Lower_RT_Limit, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Lower_RT_Limit, @"MS", @"MS:1001605", @"ProteomeDiscoverer:Spectrum Selector:Lower RT Limit", @"Lower retention-time limit.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mass_Analyzer_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Mass_Analyzer_OBSOLETE, @"MS", @"MS:1001606", @"ProteomeDiscoverer:Mass Analyzer", @"OBSOLETE Type of mass spectrometer used (ITMS, FTMS, TOFMS, SQMS, TQMS, SectorMS).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Max_Precursor_Mass, new TermInfo(CVID.MS_ProteomeDiscoverer_Max_Precursor_Mass, @"MS", @"MS:1001607", @"ProteomeDiscoverer:Max Precursor Mass", @"Maximum mass limit of a singly charged precursor ion.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Min_Precursor_Mass, new TermInfo(CVID.MS_ProteomeDiscoverer_Min_Precursor_Mass, @"MS", @"MS:1001608", @"ProteomeDiscoverer:Min Precursor Mass", @"Minimum mass limit of a singly charged precursor ion.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Minimum_Peak_Count, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Minimum_Peak_Count, @"MS", @"MS:1001609", @"ProteomeDiscoverer:Spectrum Selector:Minimum Peak Count", @"Minimum number of peaks in a tandem mass spectrum that is allowed to pass the filter and to be subjected to further processing in the workflow.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_MS_Order_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_MS_Order_OBSOLETE, @"MS", @"MS:1001610", @"ProteomeDiscoverer:MS Order", @"OBSOLETE Level of the mass spectrum (MS2 ... MS10).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Polarity_Mode_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Polarity_Mode_OBSOLETE, @"MS", @"MS:1001611", @"ProteomeDiscoverer:Polarity Mode", @"OBSOLETE Polarity mode (positive or negative).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Selection, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Selection, @"MS", @"MS:1001612", @"ProteomeDiscoverer:Spectrum Selector:Precursor Selection", @"Determines which precursor mass to use for a given MSn scan. This option applies only to higher-order MSn scans (n >= 3).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SN_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_SN_Threshold, @"MS", @"MS:1001613", @"ProteomeDiscoverer:SN Threshold", @"Signal-to-Noise ratio below which peaks are removed.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Scan_Type_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Scan_Type_OBSOLETE, @"MS", @"MS:1001614", @"ProteomeDiscoverer:Scan Type", @"OBSOLETE Scan type for the precursor ion (full, Single Ion Monitoring (SIM), Single Reaction Monitoring (SRM)).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Total_Intensity_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Total_Intensity_Threshold, @"MS", @"MS:1001615", @"ProteomeDiscoverer:Spectrum Selector:Total Intensity Threshold", @"Used to filter out tandem mass spectra that have a total intensity current(sum of the intensities of all peaks in a spectrum) below the specified value.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Activation_Type_Replacements, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Activation_Type_Replacements, @"MS", @"MS:1001616", @"ProteomeDiscoverer:Spectrum Selector:Unrecognized Activation Type Replacements", @"Specifies the fragmentation method to use in the search algorithm if it is not included in the scan header.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Charge_Replacements, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Charge_Replacements, @"MS", @"MS:1001617", @"ProteomeDiscoverer:Spectrum Selector:Unrecognized Charge Replacements", @"Specifies the charge state of the precursor ions, if it is not defined in the scan header.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Mass_Analyzer_Replacements, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Mass_Analyzer_Replacements, @"MS", @"MS:1001618", @"ProteomeDiscoverer:Spectrum Selector:Unrecognized Mass Analyzer Replacements", @"Specifies the mass spectrometer to use to produce the spectra, if it is not included in the scan header.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_MS_Order_Replacements, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_MS_Order_Replacements, @"MS", @"MS:1001619", @"ProteomeDiscoverer:Spectrum Selector:Unrecognized MS Order Replacements", @"Specifies the MS scan order used to produce the product spectra, if it is not included in the scan header.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Polarity_Replacements, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Polarity_Replacements, @"MS", @"MS:1001620", @"ProteomeDiscoverer:Spectrum Selector:Unrecognized Polarity Replacements", @"Specifies the polarity of the ions monitored if it is not included in the scan header.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Upper_RT_Limit, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Upper_RT_Limit, @"MS", @"MS:1001621", @"ProteomeDiscoverer:Spectrum Selector:Upper RT Limit", @"Upper retention-time limit.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Mass_Window_Offset, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Mass_Window_Offset, @"MS", @"MS:1001622", @"ProteomeDiscoverer:Non-Fragment Filter:Mass Window Offset", @"Specifies the size of the mass-to-charge ratio (m/z) window in daltons used to remove precursors.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Maximum_Neutral_Loss_Mass, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Maximum_Neutral_Loss_Mass, @"MS", @"MS:1001623", @"ProteomeDiscoverer:Non-Fragment Filter:Maximum Neutral Loss Mass", @"Maximum allowed mass of a neutral loss.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Charge_Reduced_Precursor, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Charge_Reduced_Precursor, @"MS", @"MS:1001624", @"ProteomeDiscoverer:Non-Fragment Filter:Remove Charge Reduced Precursor", @"Determines whether the charge-reduced precursor peaks found in an ETD or ECD spectrum are removed.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Neutral_Loss_Peaks, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Neutral_Loss_Peaks, @"MS", @"MS:1001625", @"ProteomeDiscoverer:Non-Fragment Filter:Remove Neutral Loss Peaks", @"Determines whether neutral loss peaks are removed from ETD and ECD spectra.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Only_Known_Masses, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Only_Known_Masses, @"MS", @"MS:1001626", @"ProteomeDiscoverer:Non-Fragment Filter:Remove Only Known Masses", @"Determines whether overtone peaks are removed from LTQ FT or LTQ FT Ultra ECD spectra.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Overtones, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Overtones, @"MS", @"MS:1001627", @"ProteomeDiscoverer:Non-Fragment Filter:Remove Precursor Overtones", @"Determines whether precursor overtone peaks in the spectrum are removed from the input spectrum.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Peak, new TermInfo(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Peak, @"MS", @"MS:1001628", @"ProteomeDiscoverer:Non-Fragment Filter:Remove Precursor Peak", @"Determines whether precursor artifact peaks from the MS2 input spectra are removed.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_Mass_Analyzer_Mismatch, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_Mass_Analyzer_Mismatch, @"MS", @"MS:1001629", @"ProteomeDiscoverer:Spectrum Grouper:Allow Mass Analyzer Mismatch", @"Determines whether the fragment spectrum for scans with the same precursor mass is grouped, regardless of mass analyzer and activation type.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_MS_Order_Mismatch, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_MS_Order_Mismatch, @"MS", @"MS:1001630", @"ProteomeDiscoverer:Spectrum Grouper:Allow MS Order Mismatch", @"Determines whether spectra from different MS order scans can be grouped together.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Max_RT_Difference_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Max_RT_Difference_OBSOLETE, @"MS", @"MS:1001631", @"ProteomeDiscoverer:Spectrum Grouper:Max RT Difference", @"OBSOLETE Chromatographic window where precursors to be grouped must reside to be considered the same species.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Precursor_Mass_Criterion, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Precursor_Mass_Criterion, @"MS", @"MS:1001632", @"ProteomeDiscoverer:Spectrum Grouper:Precursor Mass Criterion", @"Groups spectra measured within the given mass and retention-time tolerances into a single spectrum for analysis.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Highest_Charge, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Highest_Charge, @"MS", @"MS:1001633", @"ProteomeDiscoverer:Xtract:Highest Charge", @"Highest charge state that is allowed for the deconvolution of multiply charged data.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Highest_MZ_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Highest_MZ_OBSOLETE, @"MS", @"MS:1001634", @"ProteomeDiscoverer:Xtract:Highest MZ", @"OBSOLETE Highest mass-to-charge (mz) value for spectral peaks in the measured spectrum that are considered for Xtract.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_Charge, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_Charge, @"MS", @"MS:1001635", @"ProteomeDiscoverer:Xtract:Lowest Charge", @"Lowest charge state that is allowed for the deconvolution of multiply charged data.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_MZ_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_MZ_OBSOLETE, @"MS", @"MS:1001636", @"ProteomeDiscoverer:Xtract:Lowest MZ", @"OBSOLETE Lowest mass-to-charge (mz) value for spectral peaks in the measured spectrum that are considered for Xtract.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Monoisotopic_Mass_Only, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Monoisotopic_Mass_Only, @"MS", @"MS:1001637", @"ProteomeDiscoverer:Xtract:Monoisotopic Mass Only", @"Determines whether the isotopic pattern, i.e. all isotopes of a mass are removed from the spectrum.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Overlapping_Remainder, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Overlapping_Remainder, @"MS", @"MS:1001638", @"ProteomeDiscoverer:Xtract:Overlapping Remainder", @"Fraction of the more abundant peak that an overlapping multiplet must exceed in order to be processed (deconvoluted).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Required_Fitting_Accuracy, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Required_Fitting_Accuracy, @"MS", @"MS:1001639", @"ProteomeDiscoverer:Xtract:Required Fitting Accuracy", @"Accuracy required for a pattern fit to be considered valid.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Xtract_Resolution_At_400, new TermInfo(CVID.MS_ProteomeDiscoverer_Xtract_Resolution_At_400, @"MS", @"MS:1001640", @"ProteomeDiscoverer:Xtract:Resolution At 400", @"Resolution at mass 400.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Lowest_Charge_State, new TermInfo(CVID.MS_ProteomeDiscoverer_Lowest_Charge_State, @"MS", @"MS:1001641", @"ProteomeDiscoverer:Lowest Charge State", @"Minimum charge state below which peptides are filtered out.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Highest_Charge_State, new TermInfo(CVID.MS_ProteomeDiscoverer_Highest_Charge_State, @"MS", @"MS:1001642", @"ProteomeDiscoverer:Highest Charge State", @"Maximum charge above which peptides are filtered out.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Score_Filter_Let_Pass_Above_Scores, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Score_Filter_Let_Pass_Above_Scores, @"MS", @"MS:1001643", @"ProteomeDiscoverer:Spectrum Score Filter:Let Pass Above Scores", @"Determines whether spectra with scores above the threshold score are retained rather than filtered out.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Dynamic_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_Dynamic_Modification, @"MS", @"MS:1001644", @"ProteomeDiscoverer:Dynamic Modification", @"Determine dynamic post-translational modifications (PTMs).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Static_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_Static_Modification, @"MS", @"MS:1001645", @"ProteomeDiscoverer:Static Modification", @"Static Modification to all occurrences of a named amino acid.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Decoy_Search_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Decoy_Search_OBSOLETE, @"MS", @"MS:1001646", @"ProteomeDiscoverer:Mascot:Decoy Search", @"OBSOLETE Determines whether the Proteome Discoverer application searches an additional decoy database.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Error_tolerant_Search, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Error_tolerant_Search, @"MS", @"MS:1001647", @"ProteomeDiscoverer:Mascot:Error tolerant Search", @"Determines whether to search error-tolerant.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Max_MGF_File_Size, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Max_MGF_File_Size, @"MS", @"MS:1001648", @"ProteomeDiscoverer:Mascot:Max MGF File Size", @"Maximum size of the .mgf (Mascot Generic Format) file in MByte.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Mascot_Server_URL, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Mascot_Server_URL, @"MS", @"MS:1001649", @"ProteomeDiscoverer:Mascot:Mascot Server URL", @"URL (Uniform resource Locator) of the Mascot server.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Number_of_attempts_to_submit_the_search, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Number_of_attempts_to_submit_the_search, @"MS", @"MS:1001650", @"ProteomeDiscoverer:Mascot:Number of attempts to submit the search", @"Number of attempts to submit the Mascot search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_X_Static_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_X_Static_Modification, @"MS", @"MS:1001651", @"ProteomeDiscoverer:Mascot:X Static Modification", @"Number of attempts to submit the Mascot search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_User_Name_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_User_Name_OBSOLETE, @"MS", @"MS:1001652", @"ProteomeDiscoverer:Mascot:User Name", @"OBSOLETE Name of the user submitting the Mascot search.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Time_interval_between_attempts_to_submit_a_search, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Time_interval_between_attempts_to_submit_a_search, @"MS", @"MS:1001653", @"ProteomeDiscoverer:Mascot:Time interval between attempts to submit a search", @"Time interval between attempts to submit a search in seconds.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Enzyme_Name_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Enzyme_Name_OBSOLETE, @"MS", @"MS:1001654", @"ProteomeDiscoverer:Enzyme Name", @"OBSOLETE Specifies the enzyme reagent used for protein digestion.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Fragment_Mass_Tolerance_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Fragment_Mass_Tolerance_OBSOLETE, @"MS", @"MS:1001655", @"ProteomeDiscoverer:Fragment Mass Tolerance", @"OBSOLETE Mass tolerance used for matching fragment peaks in Da or mmu.", true));
            TermData.Add(CVID.MS_Mascot_Instrument, new TermInfo(CVID.MS_Mascot_Instrument, @"MS", @"MS:1001656", @"Mascot:Instrument", @"Type of instrument used to acquire the data in the raw file.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Maximum_Missed_Cleavage_Sites, new TermInfo(CVID.MS_ProteomeDiscoverer_Maximum_Missed_Cleavage_Sites, @"MS", @"MS:1001657", @"ProteomeDiscoverer:Maximum Missed Cleavage Sites", @"Maximum number of missed cleavage sites to consider during the digest.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Peptide_CutOff_Score, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Peptide_CutOff_Score, @"MS", @"MS:1001658", @"ProteomeDiscoverer:Mascot:Peptide CutOff Score", @"Minimum score in the IonScore column that each peptide must exceed in order to be reported.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Precursor_Mass_Tolerance_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Precursor_Mass_Tolerance_OBSOLETE, @"MS", @"MS:1001659", @"ProteomeDiscoverer:Precursor Mass Tolerance", @"OBSOLETE Mass window for which precursor ions are considered to be the same species.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Protein_CutOff_Score, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Protein_CutOff_Score, @"MS", @"MS:1001660", @"ProteomeDiscoverer:Mascot:Protein CutOff Score", @"Minimum protein score in the IonScore column that each protein must exceed in order to be reported.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Protein_Database_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Protein_Database_OBSOLETE, @"MS", @"MS:1001661", @"ProteomeDiscoverer:Protein Database", @"OBSOLETE Database to use in the search (configured on the Mascot server).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Protein_Relevance_Factor, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Protein_Relevance_Factor, @"MS", @"MS:1001662", @"ProteomeDiscoverer:Mascot:Protein Relevance Factor", @"Specifies a factor that is used in calculating a threshold that determines whether a protein appears in the results report.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Target_FDR_Relaxed, new TermInfo(CVID.MS_ProteomeDiscoverer_Target_FDR_Relaxed, @"MS", @"MS:1001663", @"ProteomeDiscoverer:Target FDR Relaxed", @"Specifies the relaxed target false discovery rate (FDR, 0.0 - 1.0) for peptide hits with moderate confidence.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Target_FDR_Strict, new TermInfo(CVID.MS_ProteomeDiscoverer_Target_FDR_Strict, @"MS", @"MS:1001664", @"ProteomeDiscoverer:Target FDR Strict", @"Specifies the strict target false discovery rate (FDR, 0.0 - 1.0) for peptide hits with high confidence.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Taxonomy_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Taxonomy_OBSOLETE, @"MS", @"MS:1001665", @"ProteomeDiscoverer:Mascot:Taxonomy", @"OBSOLETE Limits searches to entries from a particular species or group of species.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Use_Average_Precursor_Mass_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Use_Average_Precursor_Mass_OBSOLETE, @"MS", @"MS:1001666", @"ProteomeDiscoverer:Use Average Precursor Mass", @"OBSOLETE Use average mass for the precursor.", true));
            TermData.Add(CVID.MS_Mascot_use_MudPIT_scoring_OBSOLETE, new TermInfo(CVID.MS_Mascot_use_MudPIT_scoring_OBSOLETE, @"MS", @"MS:1001667", @"Mascot:use MudPIT scoring", @"OBSOLETE Determines whether to use MudPIT or normal scoring.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Absolute_XCorr_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Absolute_XCorr_Threshold, @"MS", @"MS:1001668", @"ProteomeDiscoverer:Absolute XCorr Threshold", @"Minimum cross-correlation threshold that determines whether peptides in an .srf file are imported.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Calculate_Probability_Score, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Calculate_Probability_Score, @"MS", @"MS:1001669", @"ProteomeDiscoverer:SEQUEST:Calculate Probability Score", @"Determines whether to calculate a probability score for every peptide match.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_CTerminal_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_CTerminal_Modification, @"MS", @"MS:1001670", @"ProteomeDiscoverer:SEQUEST:CTerminal Modification", @"Dynamic C-terminal modification that is used during the search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Fragment_Ion_Cutoff_Percentage, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Fragment_Ion_Cutoff_Percentage, @"MS", @"MS:1001671", @"ProteomeDiscoverer:SEQUEST:Fragment Ion Cutoff Percentage", @"Percentage of the theoretical ions that must be found in order for a peptide to be scored and retained.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Max_Identical_Modifications_Per_Peptide, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Max_Identical_Modifications_Per_Peptide, @"MS", @"MS:1001672", @"ProteomeDiscoverer:SEQUEST:Max Identical Modifications Per Peptide", @"Maximum number of identical modifications that a single peptide can have.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Max_Modifications_Per_Peptide, new TermInfo(CVID.MS_ProteomeDiscoverer_Max_Modifications_Per_Peptide, @"MS", @"MS:1001673", @"ProteomeDiscoverer:Max Modifications Per Peptide", @"Maximum number of different modifications that a peptide can have, e.g. because of steric hindrance.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Maximum_Peptides_Considered, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Maximum_Peptides_Considered, @"MS", @"MS:1001674", @"ProteomeDiscoverer:SEQUEST:Maximum Peptides Considered", @"Maximum number of peptides that are searched and scored per spectrum.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Maximum_Peptides_Output, new TermInfo(CVID.MS_ProteomeDiscoverer_Maximum_Peptides_Output, @"MS", @"MS:1001675", @"ProteomeDiscoverer:Maximum Peptides Output", @"Maximum number of peptide matches reported per spectrum.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Maximum_Protein_References_Per_Peptide, new TermInfo(CVID.MS_ProteomeDiscoverer_Maximum_Protein_References_Per_Peptide, @"MS", @"MS:1001676", @"ProteomeDiscoverer:Maximum Protein References Per Peptide", @"Maximum number of proteins that a single identified peptide can be associated with during protein assembly.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_NTerminal_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_NTerminal_Modification, @"MS", @"MS:1001677", @"ProteomeDiscoverer:SEQUEST:NTerminal Modification", @"Dynamic N-terminal modification that is used during the search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Peptide_CTerminus, new TermInfo(CVID.MS_ProteomeDiscoverer_Peptide_CTerminus, @"MS", @"MS:1001678", @"ProteomeDiscoverer:Peptide CTerminus", @"Static modification for the C terminal of the peptide used during the search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Peptide_NTerminus, new TermInfo(CVID.MS_ProteomeDiscoverer_Peptide_NTerminus, @"MS", @"MS:1001679", @"ProteomeDiscoverer:Peptide NTerminus", @"Static modification for the N terminal of the peptide used during the search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Peptide_Relevance_Factor, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Peptide_Relevance_Factor, @"MS", @"MS:1001680", @"ProteomeDiscoverer:SEQUEST:Peptide Relevance Factor", @"Specifies a factor to apply to the protein score.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Protein_Relevance_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Protein_Relevance_Threshold, @"MS", @"MS:1001681", @"ProteomeDiscoverer:Protein Relevance Threshold", @"Specifies a peptide threshold that determines whether the protein that it is a part of is scored and retained in the report.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Search_Against_Decoy_Database_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Search_Against_Decoy_Database_OBSOLETE, @"MS", @"MS:1001682", @"ProteomeDiscoverer:Search Against Decoy Database", @"OBSOLETE Determines whether the Proteome Discoverer application searches against a decoy database.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Use_Average_Fragment_Masses, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Use_Average_Fragment_Masses, @"MS", @"MS:1001683", @"ProteomeDiscoverer:SEQUEST:Use Average Fragment Masses", @"Use average masses for the fragments.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_a_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_a_Ions, @"MS", @"MS:1001684", @"ProteomeDiscoverer:Use Neutral Loss a Ions", @"Determines whether a ions with neutral loss are used for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_b_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_b_Ions, @"MS", @"MS:1001685", @"ProteomeDiscoverer:Use Neutral Loss b Ions", @"Determines whether b ions with neutral loss are used for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_y_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_y_Ions, @"MS", @"MS:1001686", @"ProteomeDiscoverer:Use Neutral Loss y Ions", @"Determines whether y ions with neutral loss are used for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_z_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_z_Ions, @"MS", @"MS:1001687", @"ProteomeDiscoverer:Use Neutral Loss z Ions", @"Determines whether z ions with neutral loss are used for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_a_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_a_Ions, @"MS", @"MS:1001688", @"ProteomeDiscoverer:SEQUEST:Weight of a Ions", @"Uses a ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_b_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_b_Ions, @"MS", @"MS:1001689", @"ProteomeDiscoverer:SEQUEST:Weight of b Ions", @"Uses b ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_c_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_c_Ions, @"MS", @"MS:1001690", @"ProteomeDiscoverer:SEQUEST:Weight of c Ions", @"Uses c ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_d_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_d_Ions, @"MS", @"MS:1001691", @"ProteomeDiscoverer:SEQUEST:Weight of d Ions", @"Uses c ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_v_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_v_Ions, @"MS", @"MS:1001692", @"ProteomeDiscoverer:SEQUEST:Weight of v Ions", @"Uses c ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_w_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_w_Ions, @"MS", @"MS:1001693", @"ProteomeDiscoverer:SEQUEST:Weight of w Ions", @"Uses c ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_x_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_x_Ions, @"MS", @"MS:1001694", @"ProteomeDiscoverer:SEQUEST:Weight of x Ions", @"Uses x ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_y_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_y_Ions, @"MS", @"MS:1001695", @"ProteomeDiscoverer:SEQUEST:Weight of y Ions", @"Uses y ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_z_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_z_Ions, @"MS", @"MS:1001696", @"ProteomeDiscoverer:SEQUEST:Weight of z Ions", @"Uses z ions for spectrum matching with this relative factor.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_ZCore_Protein_Score_Cutoff, new TermInfo(CVID.MS_ProteomeDiscoverer_ZCore_Protein_Score_Cutoff, @"MS", @"MS:1001697", @"ProteomeDiscoverer:ZCore:Protein Score Cutoff", @"Sets a minimum protein score that each protein must exceed in order to be reported.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Method, new TermInfo(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Method, @"MS", @"MS:1001698", @"ProteomeDiscoverer:Reporter Ions Quantizer:Integration Method", @"Specifies which peak to select if more than one peak is found inside the integration window.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Window_Tolerance, new TermInfo(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Window_Tolerance, @"MS", @"MS:1001699", @"ProteomeDiscoverer:Reporter Ions Quantizer:Integration Window Tolerance", @"Specifies the mass-to-charge window that enables one to look for the reporter peaks.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Quantitation_Method, new TermInfo(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Quantitation_Method, @"MS", @"MS:1001700", @"ProteomeDiscoverer:Reporter Ions Quantizer:Quantitation Method", @"Quantitation method for isobarically labeled quantitation.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_Export_Format_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_Export_Format_OBSOLETE, @"MS", @"MS:1001701", @"ProteomeDiscoverer:Spectrum Exporter:Export Format", @"OBSOLETE Format of the exported spectra (dta, mgf or mzData).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_File_name, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_File_name, @"MS", @"MS:1001702", @"ProteomeDiscoverer:Spectrum Exporter:File name", @"Name of the output file that contains the exported data.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Search_Modifications_Only_For_Identified_Proteins, new TermInfo(CVID.MS_ProteomeDiscoverer_Search_Modifications_Only_For_Identified_Proteins, @"MS", @"MS:1001703", @"ProteomeDiscoverer:Search Modifications Only For Identified Proteins", @"Influences the modifications search.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge1, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge1, @"MS", @"MS:1001704", @"ProteomeDiscoverer:SEQUEST:Std High Confidence XCorr Charge1", @"Standard high confidence XCorr parameter for charge = 1.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge2, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge2, @"MS", @"MS:1001705", @"ProteomeDiscoverer:SEQUEST:Std High Confidence XCorr Charge2", @"Standard high confidence XCorr parameter for charge = 2.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge3, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge3, @"MS", @"MS:1001706", @"ProteomeDiscoverer:SEQUEST:Std High Confidence XCorr Charge3", @"Standard high confidence XCorr parameter for charge = 3.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge4, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge4, @"MS", @"MS:1001707", @"ProteomeDiscoverer:SEQUEST:Std High Confidence XCorr Charge4", @"Standard high confidence XCorr parameter for charge >= 4.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge1, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge1, @"MS", @"MS:1001708", @"ProteomeDiscoverer:SEQUEST:Std Medium Confidence XCorr Charge1", @"Standard medium confidence XCorr parameter for charge = 1.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge2, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge2, @"MS", @"MS:1001709", @"ProteomeDiscoverer:SEQUEST:Std Medium Confidence XCorr Charge2", @"Standard medium confidence XCorr parameter for charge = 2.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge3, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge3, @"MS", @"MS:1001710", @"ProteomeDiscoverer:SEQUEST:Std Medium Confidence XCorr Charge3", @"Standard medium confidence XCorr parameter for charge = 3.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge4, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge4, @"MS", @"MS:1001711", @"ProteomeDiscoverer:SEQUEST:Std Medium Confidence XCorr Charge4", @"Standard medium confidence XCorr parameter for charge >= 4.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge1, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge1, @"MS", @"MS:1001712", @"ProteomeDiscoverer:SEQUEST:FT High Confidence XCorr Charge1", @"FT high confidence XCorr parameter for charge = 1.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge2, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge2, @"MS", @"MS:1001713", @"ProteomeDiscoverer:SEQUEST:FT High Confidence XCorr Charge2", @"FT high confidence XCorr parameter for charge = 2.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge3, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge3, @"MS", @"MS:1001714", @"ProteomeDiscoverer:SEQUEST:FT High Confidence XCorr Charge3", @"FT high confidence XCorr parameter for charge = 3.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge4, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge4, @"MS", @"MS:1001715", @"ProteomeDiscoverer:SEQUEST:FT High Confidence XCorr Charge4", @"FT high confidence XCorr parameter for charge >= 4.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge1, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge1, @"MS", @"MS:1001716", @"ProteomeDiscoverer:SEQUEST:FT Medium Confidence XCorr Charge1", @"FT medium confidence XCorr parameter for charge = 1.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge2, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge2, @"MS", @"MS:1001717", @"ProteomeDiscoverer:SEQUEST:FT Medium Confidence XCorr Charge2", @"FT medium confidence XCorr parameter for charge = 2.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge3, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge3, @"MS", @"MS:1001718", @"ProteomeDiscoverer:SEQUEST:FT Medium Confidence XCorr Charge3", @"FT medium confidence XCorr parameter for charge = 3.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge4, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge4, @"MS", @"MS:1001719", @"ProteomeDiscoverer:SEQUEST:FT Medium Confidence XCorr Charge4", @"FT medium confidence XCorr parameter for charge >= 4.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_1__Dynamic_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_1__Dynamic_Modification_OBSOLETE, @"MS", @"MS:1001720", @"ProteomeDiscoverer:1. Dynamic Modification", @"OBSOLETE ProteomeDiscoverer's 1st dynamic post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_2__Dynamic_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_2__Dynamic_Modification_OBSOLETE, @"MS", @"MS:1001721", @"ProteomeDiscoverer:2. Dynamic Modification", @"OBSOLETE ProteomeDiscoverer's 2nd dynamic post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_3__Dynamic_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_3__Dynamic_Modification_OBSOLETE, @"MS", @"MS:1001722", @"ProteomeDiscoverer:3. Dynamic Modification", @"OBSOLETE ProteomeDiscoverer's 3rd dynamic post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_4__Dynamic_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_4__Dynamic_Modification_OBSOLETE, @"MS", @"MS:1001723", @"ProteomeDiscoverer:4. Dynamic Modification", @"OBSOLETE ProteomeDiscoverer's 4th dynamic post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Static_Modification_for_X, new TermInfo(CVID.MS_ProteomeDiscoverer_Static_Modification_for_X, @"MS", @"MS:1001724", @"ProteomeDiscoverer:Static Modification for X", @"Static Modification for X.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Initial_minimal_peptide_probability, new TermInfo(CVID.MS_ProteomeDiscoverer_Initial_minimal_peptide_probability, @"MS", @"MS:1001725", @"ProteomeDiscoverer:Initial minimal peptide probability", @"Minimal initial peptide probability to contribute to analysis.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Minimal_peptide_probability, new TermInfo(CVID.MS_ProteomeDiscoverer_Minimal_peptide_probability, @"MS", @"MS:1001726", @"ProteomeDiscoverer:Minimal peptide probability", @"Minimum adjusted peptide probability contributing to protein probability.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Minimal_peptide_weight, new TermInfo(CVID.MS_ProteomeDiscoverer_Minimal_peptide_weight, @"MS", @"MS:1001727", @"ProteomeDiscoverer:Minimal peptide weight", @"Minimum peptide weight contributing to protein probability.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_input1_spectra, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_input1_spectra, @"MS", @"MS:1001728", @"ProteomeDiscoverer:Number of input1 spectra", @"Number of spectra from 1+ precursor ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_input2_spectra, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_input2_spectra, @"MS", @"MS:1001729", @"ProteomeDiscoverer:Number of input2 spectra", @"Number of spectra from 2+ precursor ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_input3_spectra, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_input3_spectra, @"MS", @"MS:1001730", @"ProteomeDiscoverer:Number of input3 spectra", @"Number of spectra from 3+ precursor ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_input4_spectra, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_input4_spectra, @"MS", @"MS:1001731", @"ProteomeDiscoverer:Number of input4 spectra", @"Number of spectra from 4+ precursor ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_input5_spectra, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_input5_spectra, @"MS", @"MS:1001732", @"ProteomeDiscoverer:Number of input5 spectra", @"Number of spectra from 5+ precursor ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_predicted_correct_proteins, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_predicted_correct_proteins, @"MS", @"MS:1001733", @"ProteomeDiscoverer:Number of predicted correct proteins", @"Total number of predicted correct protein ids (sum of probabilities).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Organism_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Organism_OBSOLETE, @"MS", @"MS:1001734", @"ProteomeDiscoverer:Organism", @"OBSOLETE Sample organism (used for annotation purposes).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Reference_Database_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Reference_Database_OBSOLETE, @"MS", @"MS:1001735", @"ProteomeDiscoverer:Reference Database", @"OBSOLETE Full path database name.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Residue_substitution_list, new TermInfo(CVID.MS_ProteomeDiscoverer_Residue_substitution_list, @"MS", @"MS:1001736", @"ProteomeDiscoverer:Residue substitution list", @"Residues considered equivalent when comparing peptides.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Source_file_extension_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Source_file_extension_OBSOLETE, @"MS", @"MS:1001737", @"ProteomeDiscoverer:Source file extension", @"OBSOLETE File type (if not pepXML).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Source_Files_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Source_Files_OBSOLETE, @"MS", @"MS:1001738", @"ProteomeDiscoverer:Source Files", @"OBSOLETE Input pepXML files.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Source_Files_old_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_Source_Files_old_OBSOLETE, @"MS", @"MS:1001739", @"ProteomeDiscoverer:Source Files old", @"OBSOLETE Input pepXML files (old).", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_WinCyg_reference_database, new TermInfo(CVID.MS_ProteomeDiscoverer_WinCyg_reference_database, @"MS", @"MS:1001740", @"ProteomeDiscoverer:WinCyg reference database", @"Windows full path for database.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_WinCyg_source_files, new TermInfo(CVID.MS_ProteomeDiscoverer_WinCyg_source_files, @"MS", @"MS:1001741", @"ProteomeDiscoverer:WinCyg source files", @"Windows pepXML file names.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_Velos, new TermInfo(CVID.MS_LTQ_Orbitrap_Velos, @"MS", @"MS:1001742", @"LTQ Orbitrap Velos", @"Finnigan LTQ Orbitrap Velos MS.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_A_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_A_Ions, @"MS", @"MS:1001743", @"ProteomeDiscoverer:Mascot:Weight of A Ions", @"Determines if to use A ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_B_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_B_Ions, @"MS", @"MS:1001744", @"ProteomeDiscoverer:Mascot:Weight of B Ions", @"Determines if to use B ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_C_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_C_Ions, @"MS", @"MS:1001745", @"ProteomeDiscoverer:Mascot:Weight of C Ions", @"Determines if to use C ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_D_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_D_Ions, @"MS", @"MS:1001746", @"ProteomeDiscoverer:Mascot:Weight of D Ions", @"Determines if to use D ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_V_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_V_Ions, @"MS", @"MS:1001747", @"ProteomeDiscoverer:Mascot:Weight of V Ions", @"Determines if to use V ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_W_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_W_Ions, @"MS", @"MS:1001748", @"ProteomeDiscoverer:Mascot:Weight of W Ions", @"Determines if to use W ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_X_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_X_Ions, @"MS", @"MS:1001749", @"ProteomeDiscoverer:Mascot:Weight of X Ions", @"Determines if to use X ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Y_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Y_Ions, @"MS", @"MS:1001750", @"ProteomeDiscoverer:Mascot:Weight of Y Ions", @"Determines if to use Y ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Z_Ions, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Z_Ions, @"MS", @"MS:1001751", @"ProteomeDiscoverer:Mascot:Weight of Z Ions", @"Determines if to use z ions for spectrum matching.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Use_New_Precursor_Reevaluation, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Use_New_Precursor_Reevaluation, @"MS", @"MS:1001752", @"ProteomeDiscoverer:Spectrum Selector:Use New Precursor Reevaluation", @"Determines if to use precursor reevaluation.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_SN_Threshold_FTonly, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_SN_Threshold_FTonly, @"MS", @"MS:1001753", @"ProteomeDiscoverer:Spectrum Selector:SN Threshold FTonly", @"Signal-to-Noise ratio below which peaks are removed (in FT mode only).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Please_Do_not_Touch_this, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Please_Do_not_Touch_this, @"MS", @"MS:1001754", @"ProteomeDiscoverer:Mascot:Please Do not Touch this", @"Unknown Mascot parameter which ProteomeDiscoverer uses for mascot searches.", false));
            TermData.Add(CVID.MS_contact_phone_number, new TermInfo(CVID.MS_contact_phone_number, @"MS", @"MS:1001755", @"contact phone number", @"Phone number of the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_fax_number, new TermInfo(CVID.MS_contact_fax_number, @"MS", @"MS:1001756", @"contact fax number", @"Fax number for the contact person or organization.", false));
            TermData.Add(CVID.MS_contact_toll_free_phone_number, new TermInfo(CVID.MS_contact_toll_free_phone_number, @"MS", @"MS:1001757", @"contact toll-free phone number", @"Toll-free phone number of the contact person or organization.", false));
            TermData.Add(CVID.MS_Mascot_SigThresholdType, new TermInfo(CVID.MS_Mascot_SigThresholdType, @"MS", @"MS:1001758", @"Mascot:SigThresholdType", @"Significance threshold type used in Mascot reporting (either 'identity' or 'homology').", false));
            TermData.Add(CVID.MS_Mascot_ProteinGrouping, new TermInfo(CVID.MS_Mascot_ProteinGrouping, @"MS", @"MS:1001759", @"Mascot:ProteinGrouping", @"Strategy used by Mascot to group proteins with same peptide matches (one of 'none', 'Occam's razor' or 'family clustering').", false));
            TermData.Add(CVID.MS_Percolator_features, new TermInfo(CVID.MS_Percolator_features, @"MS", @"MS:1001760", @"Percolator:features", @"List of Percolator features that were used in processing the peptide matches. Typical Percolator features are 'retentionTime', 'dM', 'mScore', 'lgDScore', 'mrCalc', 'charge' and 'dMppm'.", false));
            TermData.Add(CVID.MS_ACQUITY_UPLC, new TermInfo(CVID.MS_ACQUITY_UPLC, @"MS", @"MS:1001761", @"ACQUITY UPLC", @"Waters LC-system ACQUITY UPLC.", false));
            TermData.Add(CVID.MS_ACQUITY_UPLC_H_Class, new TermInfo(CVID.MS_ACQUITY_UPLC_H_Class, @"MS", @"MS:1001762", @"ACQUITY UPLC H-Class", @"Waters LC-system ACQUITY UPLC H-Class.", false));
            TermData.Add(CVID.MS_ACQUITY_UPLC_H_Class_Bio, new TermInfo(CVID.MS_ACQUITY_UPLC_H_Class_Bio, @"MS", @"MS:1001763", @"ACQUITY UPLC H-Class Bio", @"Waters LC-system ACQUITY UPLC H-Class Bio.", false));
            TermData.Add(CVID.MS_ACQUITY_UPLC_I_Class, new TermInfo(CVID.MS_ACQUITY_UPLC_I_Class, @"MS", @"MS:1001764", @"ACQUITY UPLC I-Class", @"Waters LC-system ACQUITY UPLC I-Class.", false));
            TermData.Add(CVID.MS_ACQUITY_UPLC_Systems_with_2D_Technology, new TermInfo(CVID.MS_ACQUITY_UPLC_Systems_with_2D_Technology, @"MS", @"MS:1001765", @"ACQUITY UPLC Systems with 2D Technology", @"Waters LC-system ACQUITY UPLC Systems with 2D Technology.", false));
            TermData.Add(CVID.MS_nanoACQUITY_UPLC, new TermInfo(CVID.MS_nanoACQUITY_UPLC, @"MS", @"MS:1001766", @"nanoACQUITY UPLC", @"Waters LC-system nanoACQUITY UPLC.", false));
            TermData.Add(CVID.MS_nanoACQUITY_UPLC_System_with_1D_Technology, new TermInfo(CVID.MS_nanoACQUITY_UPLC_System_with_1D_Technology, @"MS", @"MS:1001767", @"nanoACQUITY UPLC System with 1D Technology", @"Waters LC-system nanoACQUITY UPLC System with 1D Technology.", false));
            TermData.Add(CVID.MS_nanoACQUITY_UPLC_with_HDX_Technology, new TermInfo(CVID.MS_nanoACQUITY_UPLC_with_HDX_Technology, @"MS", @"MS:1001768", @"nanoACQUITY UPLC with HDX Technology", @"Waters LC-system nanoACQUITY UPLC with HDX Technology.", false));
            TermData.Add(CVID.MS_TRIZAIC_UPLC_nanoTile, new TermInfo(CVID.MS_TRIZAIC_UPLC_nanoTile, @"MS", @"MS:1001769", @"TRIZAIC UPLC nanoTile", @"Waters LC-system TRIZAIC UPLC nanoTile.", false));
            TermData.Add(CVID.MS_GCT_Premier, new TermInfo(CVID.MS_GCT_Premier, @"MS", @"MS:1001770", @"GCT Premier", @"Waters oa-ToF based GCT Premier.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_G2_HDMS, new TermInfo(CVID.MS_MALDI_Synapt_G2_HDMS, @"MS", @"MS:1001771", @"MALDI Synapt G2 HDMS", @"Waters oa-ToF based MALDI Synapt G2 HDMS.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_G2_MS, new TermInfo(CVID.MS_MALDI_Synapt_G2_MS, @"MS", @"MS:1001772", @"MALDI Synapt G2 MS", @"Waters oa-ToF based MALDI Synapt G2 MS.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_G2_S_HDMS, new TermInfo(CVID.MS_MALDI_Synapt_G2_S_HDMS, @"MS", @"MS:1001773", @"MALDI Synapt G2-S HDMS", @"Waters oa-ToF based MALDI Synapt G2 MS.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_G2_S_MS, new TermInfo(CVID.MS_MALDI_Synapt_G2_S_MS, @"MS", @"MS:1001774", @"MALDI Synapt G2-S MS", @"Waters oa-ToF based MALDI Synapt G2-S MS.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_HDMS, new TermInfo(CVID.MS_MALDI_Synapt_HDMS, @"MS", @"MS:1001775", @"MALDI Synapt HDMS", @"Waters oa-ToF based MALDI Synapt HDMS.", false));
            TermData.Add(CVID.MS_MALDI_Synapt_MS, new TermInfo(CVID.MS_MALDI_Synapt_MS, @"MS", @"MS:1001776", @"MALDI Synapt MS", @"Waters oa-ToF based MALDI Synapt MS.", false));
            TermData.Add(CVID.MS_Synapt_G2_HDMS, new TermInfo(CVID.MS_Synapt_G2_HDMS, @"MS", @"MS:1001777", @"Synapt G2 HDMS", @"Waters oa-ToF based Synapt G2 HDMS.", false));
            TermData.Add(CVID.MS_Synapt_G2_MS, new TermInfo(CVID.MS_Synapt_G2_MS, @"MS", @"MS:1001778", @"Synapt G2 MS", @"Waters oa-ToF based Synapt G2 MS.", false));
            TermData.Add(CVID.MS_Synapt_G2_S_HDMS, new TermInfo(CVID.MS_Synapt_G2_S_HDMS, @"MS", @"MS:1001779", @"Synapt G2-S HDMS", @"Waters oa-ToF based Synapt G2-S HDMS.", false));
            TermData.Add(CVID.MS_Synapt_G2_S_MS, new TermInfo(CVID.MS_Synapt_G2_S_MS, @"MS", @"MS:1001780", @"Synapt G2-S MS", @"Waters oa-ToF based Synapt G2-S MS.", false));
            TermData.Add(CVID.MS_Synapt_HDMS, new TermInfo(CVID.MS_Synapt_HDMS, @"MS", @"MS:1001781", @"Synapt HDMS", @"Waters oa-ToF based Synapt HDMS.", false));
            TermData.Add(CVID.MS_Synapt_MS, new TermInfo(CVID.MS_Synapt_MS, @"MS", @"MS:1001782", @"Synapt MS", @"Waters oa-ToF based Synapt MS.", false));
            TermData.Add(CVID.MS_Xevo_G2_Q_Tof, new TermInfo(CVID.MS_Xevo_G2_Q_Tof, @"MS", @"MS:1001783", @"Xevo G2 Q-Tof", @"Waters oa-ToF based Xevo G2 Q-Tof.", false));
            TermData.Add(CVID.MS_Xevo_G2_Tof, new TermInfo(CVID.MS_Xevo_G2_Tof, @"MS", @"MS:1001784", @"Xevo G2 Tof", @"Waters oa-ToF based Xevo G2 Tof.", false));
            TermData.Add(CVID.MS_Xevo_Q_Tof, new TermInfo(CVID.MS_Xevo_Q_Tof, @"MS", @"MS:1001785", @"Xevo Q-Tof", @"Waters oa-ToF based Xevo Q-Tof.", false));
            TermData.Add(CVID.MS_3100, new TermInfo(CVID.MS_3100, @"MS", @"MS:1001786", @"3100", @"Waters quadrupole based 3100.", false));
            TermData.Add(CVID.MS_Acquity_SQD, new TermInfo(CVID.MS_Acquity_SQD, @"MS", @"MS:1001787", @"Acquity SQD", @"Waters quadrupole based Acquity SQD.", false));
            TermData.Add(CVID.MS_Acquity_TQD, new TermInfo(CVID.MS_Acquity_TQD, @"MS", @"MS:1001788", @"Acquity TQD", @"Waters quadrupole based Acquity TQD.", false));
            TermData.Add(CVID.MS_Quattro_micro_GC, new TermInfo(CVID.MS_Quattro_micro_GC, @"MS", @"MS:1001789", @"Quattro micro GC", @"Waters (triple) quadrupole based Quattro micro GC.", false));
            TermData.Add(CVID.MS_Xevo_TQ_MS, new TermInfo(CVID.MS_Xevo_TQ_MS, @"MS", @"MS:1001790", @"Xevo TQ MS", @"Waters quadrupole based Xevo TQ MS.", false));
            TermData.Add(CVID.MS_Xevo_TQD, new TermInfo(CVID.MS_Xevo_TQD, @"MS", @"MS:1001791", @"Xevo TQD", @"Waters quadrupole based Xevo TQD.", false));
            TermData.Add(CVID.MS_Xevo_TQ_S, new TermInfo(CVID.MS_Xevo_TQ_S, @"MS", @"MS:1001792", @"Xevo TQ-S", @"Waters quadrupole based Xevo TQ-S.", false));
            TermData.Add(CVID.MS_Mascot_PreferredTaxonomy, new TermInfo(CVID.MS_Mascot_PreferredTaxonomy, @"MS", @"MS:1001793", @"Mascot:PreferredTaxonomy", @"NCBI TaxID taxonomy ID to prefer when two or more proteins match the same set of peptides or when protein entry in database represents multiple sequences.", false));
            TermData.Add(CVID.MS_Empower, new TermInfo(CVID.MS_Empower, @"MS", @"MS:1001795", @"Empower", @"Waters Empower software for liquid chromatography and mass spectrometry acquisition.", false));
            TermData.Add(CVID.MS_UNIFY, new TermInfo(CVID.MS_UNIFY, @"MS", @"MS:1001796", @"UNIFY", @"Waters UNIFY software for liquid chromatography and mass spectrometry acquisition.", false));
            TermData.Add(CVID.MS_travelling_wave_ion_mobility_mass_spectrometer_OBSOLETE, new TermInfo(CVID.MS_travelling_wave_ion_mobility_mass_spectrometer_OBSOLETE, @"MS", @"MS:1001797", @"travelling wave ion mobility mass spectrometer", @"OBSOLETE An ion mobility mass spectrometry technique based on the superimposition of travelling voltage waves on a radially-confining RF voltage in a gas-filled, stacked-ring ion guide.", true));
            TermData.Add(CVID.MS_LECO_software, new TermInfo(CVID.MS_LECO_software, @"MS", @"MS:1001798", @"LECO software", @"LECO software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_ChromaTOF_software, new TermInfo(CVID.MS_ChromaTOF_software, @"MS", @"MS:1001799", @"ChromaTOF software", @"Software for acquisition, processing and analysis of data for LECO instruments.", false));
            TermData.Add(CVID.MS_LECO_instrument_model, new TermInfo(CVID.MS_LECO_instrument_model, @"MS", @"MS:1001800", @"LECO instrument model", @"LECO instrument model.", false));
            TermData.Add(CVID.MS_Pegasus_HRT, new TermInfo(CVID.MS_Pegasus_HRT, @"MS", @"MS:1001801", @"Pegasus HRT", @"LECO high resolution time-of-flight GC mass spectrometer.", false));
            TermData.Add(CVID.MS_Citius_HRT, new TermInfo(CVID.MS_Citius_HRT, @"MS", @"MS:1001802", @"Citius HRT", @"LECO high resolution time-of-flight LC mass spectrometer.", false));
            TermData.Add(CVID.MS_Pegasus, new TermInfo(CVID.MS_Pegasus, @"MS", @"MS:1001803", @"Pegasus", @"LECO GC time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_TruTOF, new TermInfo(CVID.MS_TruTOF, @"MS", @"MS:1001804", @"TruTOF", @"LECO bench-top GC time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_quantification_datatype, new TermInfo(CVID.MS_quantification_datatype, @"MS", @"MS:1001805", @"quantification datatype", @"The data type of the value reported in a QuantLayer.", false));
            TermData.Add(CVID.MS_quantification_object_attribute, new TermInfo(CVID.MS_quantification_object_attribute, @"MS", @"MS:1001806", @"quantification object attribute", @"Attributes describing the details of an object relevant for reporting quantification workflows or values.", false));
            TermData.Add(CVID.MS_study_variable_attribute, new TermInfo(CVID.MS_study_variable_attribute, @"MS", @"MS:1001807", @"study variable attribute", @"Attribute describing a study variable.", false));
            TermData.Add(CVID.MS_technical_replicate, new TermInfo(CVID.MS_technical_replicate, @"MS", @"MS:1001808", @"technical replicate", @"The study variable is 'technical replicate'. The string value denotes the category of technical replicate, e.g. 'run generated from same sample'.", false));
            TermData.Add(CVID.MS_biological_replicate, new TermInfo(CVID.MS_biological_replicate, @"MS", @"MS:1001809", @"biological replicate", @"The study variable is 'biological replicate'. This means, the run was generated from another individual or sample.", false));
            TermData.Add(CVID.MS_experimental_condition__case_, new TermInfo(CVID.MS_experimental_condition__case_, @"MS", @"MS:1001810", @"experimental condition 'case'", @"The experimental condition is 'case' in contrast to 'control'.", false));
            TermData.Add(CVID.MS_experimental_condition__control_, new TermInfo(CVID.MS_experimental_condition__control_, @"MS", @"MS:1001811", @"experimental condition 'control'", @"The experimental condition is 'control' in contrast to 'case'.", false));
            TermData.Add(CVID.MS_experimental_condition__disease_, new TermInfo(CVID.MS_experimental_condition__disease_, @"MS", @"MS:1001812", @"experimental condition 'disease'", @"The experimental condition is 'disease' in contrast to 'healthy'.", false));
            TermData.Add(CVID.MS_experimental_condition__healthy_, new TermInfo(CVID.MS_experimental_condition__healthy_, @"MS", @"MS:1001813", @"experimental condition 'healthy'", @"The experimental condition is 'healthy' in contrast to 'disease'.", false));
            TermData.Add(CVID.MS_generic_experimental_condition, new TermInfo(CVID.MS_generic_experimental_condition, @"MS", @"MS:1001814", @"generic experimental condition", @"The experimental condition is given in the value of this term.", false));
            TermData.Add(CVID.MS_time_series__time_point_X, new TermInfo(CVID.MS_time_series__time_point_X, @"MS", @"MS:1001815", @"time series, time point X", @"The experimental design followed a time series design. The time point of this run is given in the value of this term.", false));
            TermData.Add(CVID.MS_dilution_series__concentration_X, new TermInfo(CVID.MS_dilution_series__concentration_X, @"MS", @"MS:1001816", @"dilution series, concentration X", @"The experimental design followed a dilution series design. The concentration of this run is given in the value of this term.", false));
            TermData.Add(CVID.MS_raw_file_attribute, new TermInfo(CVID.MS_raw_file_attribute, @"MS", @"MS:1001817", @"raw file attribute", @"Attribute describing a raw file.", false));
            TermData.Add(CVID.MS_one_sample_run, new TermInfo(CVID.MS_one_sample_run, @"MS", @"MS:1001818", @"one sample run", @"The raw file contains the run of one sample (e.g. spectral counting, LC-MS label-free).", false));
            TermData.Add(CVID.MS_two_sample_run, new TermInfo(CVID.MS_two_sample_run, @"MS", @"MS:1001819", @"two sample run", @"The raw file contains the run of two samples (e.g. SILAC, metabolic labelling).", false));
            TermData.Add(CVID.MS_three_sample_run, new TermInfo(CVID.MS_three_sample_run, @"MS", @"MS:1001820", @"three sample run", @"The raw file contains the run of three samples (e.g. 3-plex SILAC).", false));
            TermData.Add(CVID.MS_four_sample_run, new TermInfo(CVID.MS_four_sample_run, @"MS", @"MS:1001821", @"four sample run", @"The raw file contains the run of four samples (e.g. 4-plex iTraq).", false));
            TermData.Add(CVID.MS_eight_sample_run, new TermInfo(CVID.MS_eight_sample_run, @"MS", @"MS:1001822", @"eight sample run", @"The raw file contains the run of eight samples (e.g. 8-plex iTraq).", false));
            TermData.Add(CVID.MS_raw_files_group_attribute, new TermInfo(CVID.MS_raw_files_group_attribute, @"MS", @"MS:1001823", @"raw files group attribute", @"Attribute describing, how raw files build a raw file group.", false));
            TermData.Add(CVID.MS_merge_of_runs_of_1D_gel_bands, new TermInfo(CVID.MS_merge_of_runs_of_1D_gel_bands, @"MS", @"MS:1001824", @"merge of runs of 1D gel bands", @"Attribute describing, how raw files build a raw file group.", false));
            TermData.Add(CVID.MS_feature_list_attribute, new TermInfo(CVID.MS_feature_list_attribute, @"MS", @"MS:1001825", @"feature list attribute", @"Attribute describing a feature list.", false));
            TermData.Add(CVID.MS_mass_trace_reporting__rectangles, new TermInfo(CVID.MS_mass_trace_reporting__rectangles, @"MS", @"MS:1001826", @"mass trace reporting: rectangles", @"The mass trace of the features of this feature list specifies rectangles. Each mass trace has the syntax (RT_start,MZ_start,RT_end,MZ_end), i.e. opposite corners are given.", false));
            TermData.Add(CVID.MS_mass_trace_reporting__polygons, new TermInfo(CVID.MS_mass_trace_reporting__polygons, @"MS", @"MS:1001827", @"mass trace reporting: polygons", @"The mass trace of the features of this feature list specifies polygons. Each mass trace has the syntax (RT_1, MZ_1, RT_2, MZ_2, ... , RT_i, MZ_i, ... , RT_n, MZ_n), where the line (RT_n, MZ_n)->(RT_1, MZ_1) is implicit.", false));
            TermData.Add(CVID.MS_feature_attribute, new TermInfo(CVID.MS_feature_attribute, @"MS", @"MS:1001828", @"feature attribute", @"Attribute describing a feature.", false));
            TermData.Add(CVID.MS_SRM_transition_ID, new TermInfo(CVID.MS_SRM_transition_ID, @"MS", @"MS:1001829", @"SRM transition ID", @"Identifier for an SRM transition in an external document describing additional information about the transition.", false));
            TermData.Add(CVID.MS_Progenesis_LC_MS, new TermInfo(CVID.MS_Progenesis_LC_MS, @"MS", @"MS:1001830", @"Progenesis LC-MS", @"Software from Nonlinear Dynamics for LC-MS label-free workflow.", false));
            TermData.Add(CVID.MS_SILACAnalyzer, new TermInfo(CVID.MS_SILACAnalyzer, @"MS", @"MS:1001831", @"SILACAnalyzer", @"Software for SILAC workflow.", false));
            TermData.Add(CVID.MS_quantitation_software_comment_or_customizations, new TermInfo(CVID.MS_quantitation_software_comment_or_customizations, @"MS", @"MS:1001832", @"quantitation software comment or customizations", @"Quantitation software comment or any customizations to the default setup of the software.", false));
            TermData.Add(CVID.MS_quantitation_analysis_summary, new TermInfo(CVID.MS_quantitation_analysis_summary, @"MS", @"MS:1001833", @"quantitation analysis summary", @"The overall workflow of this quantitation report.", false));
            TermData.Add(CVID.MS_LC_MS_label_free_quantitation_analysis, new TermInfo(CVID.MS_LC_MS_label_free_quantitation_analysis, @"MS", @"MS:1001834", @"LC-MS label-free quantitation analysis", @"LC-MS label-free workflow (RT m/z map).", false));
            TermData.Add(CVID.MS_SILAC_quantitation_analysis, new TermInfo(CVID.MS_SILAC_quantitation_analysis, @"MS", @"MS:1001835", @"SILAC quantitation analysis", @"SILAC workflow (heavy, light, and sometimes medium peak).", false));
            TermData.Add(CVID.MS_spectral_counting_quantitation_analysis, new TermInfo(CVID.MS_spectral_counting_quantitation_analysis, @"MS", @"MS:1001836", @"spectral counting quantitation analysis", @"Spectral counting workflow (number of identified MS2 spectra as approximation of peptide / protein quant).", false));
            TermData.Add(CVID.MS_iTRAQ_quantitation_analysis, new TermInfo(CVID.MS_iTRAQ_quantitation_analysis, @"MS", @"MS:1001837", @"iTRAQ quantitation analysis", @"Quantification analysis using the SCIEX amine-reactive isobaric tags for relative and absolute quantification (iTRAQ) labelling workflow, wherein 2-8 reporter ions are measured in MS2 spectra near in the 114-121 m/z range.", false));
            TermData.Add(CVID.MS_SRM_quantitation_analysis, new TermInfo(CVID.MS_SRM_quantitation_analysis, @"MS", @"MS:1001838", @"SRM quantitation analysis", @"Selected Reaction Monitoring workflow (XIC quantitation of precursor / fragment mass pair).", false));
            TermData.Add(CVID.MS_metabolic_labeling_14N___15N_quantitation_analysis, new TermInfo(CVID.MS_metabolic_labeling_14N___15N_quantitation_analysis, @"MS", @"MS:1001839", @"metabolic labeling 14N / 15N quantitation analysis", @"Metabolic labeling workflow (heavy and light versions of peptides, depending on number of nitrogens).", false));
            TermData.Add(CVID.MS_LC_MS_feature_intensity, new TermInfo(CVID.MS_LC_MS_feature_intensity, @"MS", @"MS:1001840", @"LC-MS feature intensity", @"Maximum peak intensity of the LC-MS feature.", false));
            TermData.Add(CVID.MS_LC_MS_feature_volume, new TermInfo(CVID.MS_LC_MS_feature_volume, @"MS", @"MS:1001841", @"LC-MS feature volume", @"Real (intensity times area) volume of the LC-MS feature.", false));
            TermData.Add(CVID.MS_sequence_level_spectral_count, new TermInfo(CVID.MS_sequence_level_spectral_count, @"MS", @"MS:1001842", @"sequence-level spectral count", @"The number of MS2 spectra identified for a raw peptide sequence without PTMs and charge state in spectral counting.", false));
            TermData.Add(CVID.MS_MS1_feature_maximum_intensity, new TermInfo(CVID.MS_MS1_feature_maximum_intensity, @"MS", @"MS:1001843", @"MS1 feature maximum intensity", @"Maximum intensity of MS1 feature.", false));
            TermData.Add(CVID.MS_MS1_feature_area, new TermInfo(CVID.MS_MS1_feature_area, @"MS", @"MS:1001844", @"MS1 feature area", @"Area of MS1 feature.", false));
            TermData.Add(CVID.MS_peak_area_OBSOLETE, new TermInfo(CVID.MS_peak_area_OBSOLETE, @"MS", @"MS:1001845", @"peak area", @"OBSOLETE Area of MS1 peak (e.g. SILAC, 15N).", true));
            TermData.Add(CVID.MS_isotopic_pattern_area, new TermInfo(CVID.MS_isotopic_pattern_area, @"MS", @"MS:1001846", @"isotopic pattern area", @"Area of all peaks belonging to the isotopic pattern of light or heavy peak (e.g. 15N).", false));
            TermData.Add(CVID.MS_reporter_ion_intensity, new TermInfo(CVID.MS_reporter_ion_intensity, @"MS", @"MS:1001847", @"reporter ion intensity", @"Intensity of MS2 reporter ion (e.g. iTraq).", false));
            TermData.Add(CVID.MS_simple_ratio_of_two_values, new TermInfo(CVID.MS_simple_ratio_of_two_values, @"MS", @"MS:1001848", @"simple ratio of two values", @"Simple ratio of two values (enumerator and denominator).", false));
            TermData.Add(CVID.MS_sum_of_MatchedFeature_values_OBSOLETE, new TermInfo(CVID.MS_sum_of_MatchedFeature_values_OBSOLETE, @"MS", @"MS:1001849", @"sum of MatchedFeature values", @"OBSOLETE Peptide quantification value calculated as sum of MatchedFeature quantification values.", true));
            TermData.Add(CVID.MS_normalized_peptide_value, new TermInfo(CVID.MS_normalized_peptide_value, @"MS", @"MS:1001850", @"normalized peptide value", @"Normalized peptide value.", false));
            TermData.Add(CVID.MS_protein_value__sum_of_peptide_values, new TermInfo(CVID.MS_protein_value__sum_of_peptide_values, @"MS", @"MS:1001851", @"protein value: sum of peptide values", @"Protein quantification value calculated as sum of peptide values.", false));
            TermData.Add(CVID.MS_normalized_protein_value, new TermInfo(CVID.MS_normalized_protein_value, @"MS", @"MS:1001852", @"normalized protein value", @"Normalized protein value.", false));
            TermData.Add(CVID.MS_max_fold_change, new TermInfo(CVID.MS_max_fold_change, @"MS", @"MS:1001853", @"max fold change", @"Global datatype: Maximum of all pair-wise fold changes of group means (e.g. Progenesis).", false));
            TermData.Add(CVID.MS_ANOVA_p_value, new TermInfo(CVID.MS_ANOVA_p_value, @"MS", @"MS:1001854", @"ANOVA p-value", @"Global datatype: p-value of ANOVA of group means (e.g. Progenesis).", false));
            TermData.Add(CVID.MS_t_test_p_value, new TermInfo(CVID.MS_t_test_p_value, @"MS", @"MS:1001855", @"t-test p-value", @"P-value of t-Test of two groups.", false));
            TermData.Add(CVID.MS_reporter_ion_raw_value, new TermInfo(CVID.MS_reporter_ion_raw_value, @"MS", @"MS:1001856", @"reporter ion raw value", @"Intensity (or area) of MS2 reporter ion (e.g. iTraq).", false));
            TermData.Add(CVID.MS_reporter_ion_normalized_value, new TermInfo(CVID.MS_reporter_ion_normalized_value, @"MS", @"MS:1001857", @"reporter ion normalized value", @"Normalized value of MS2 reporter ion (e.g. iTraq).", false));
            TermData.Add(CVID.MS_XIC_area, new TermInfo(CVID.MS_XIC_area, @"MS", @"MS:1001858", @"XIC area", @"Area of the extracted ion chromatogram (e.g. of a transition in SRM).", false));
            TermData.Add(CVID.MS_normalized_XIC_area, new TermInfo(CVID.MS_normalized_XIC_area, @"MS", @"MS:1001859", @"normalized XIC area", @"Normalized area of the extracted ion chromatogram (e.g. of a transition in SRM).", false));
            TermData.Add(CVID.MS_protein_value__mean_of_peptide_ratios, new TermInfo(CVID.MS_protein_value__mean_of_peptide_ratios, @"MS", @"MS:1001860", @"protein value: mean of peptide ratios", @"Protein quantification value calculated as mean of peptide ratios.", false));
            TermData.Add(CVID.MS_quantification_data_processing, new TermInfo(CVID.MS_quantification_data_processing, @"MS", @"MS:1001861", @"quantification data processing", @"Terms used to describe types of quantification data processing.", false));
            TermData.Add(CVID.MS_normalization_to_mean_of_sum_of_all_proteins, new TermInfo(CVID.MS_normalization_to_mean_of_sum_of_all_proteins, @"MS", @"MS:1001862", @"normalization to mean of sum of all proteins", @"Normalization of protein values to the mean of the sum of all protein PSM counts (e.g. spectral counting).", false));
            TermData.Add(CVID.MS_quantile_normalization__proteins, new TermInfo(CVID.MS_quantile_normalization__proteins, @"MS", @"MS:1001863", @"quantile normalization, proteins", @"Normalization of protein values to approach the same distribution.", false));
            TermData.Add(CVID.MS_quantile_normalization__peptides, new TermInfo(CVID.MS_quantile_normalization__peptides, @"MS", @"MS:1001864", @"quantile normalization, peptides", @"Normalization of peptide values to approach the same distribution.", false));
            TermData.Add(CVID.MS_Progenesis_automatic_alignment, new TermInfo(CVID.MS_Progenesis_automatic_alignment, @"MS", @"MS:1001865", @"Progenesis automatic alignment", @"Automatic RT alignment of Progenesis software.", false));
            TermData.Add(CVID.MS_Progenesis_manual_alignment, new TermInfo(CVID.MS_Progenesis_manual_alignment, @"MS", @"MS:1001866", @"Progenesis manual alignment", @"RT alignment of Progenesis software using automatic and manual vectors.", false));
            TermData.Add(CVID.MS_Progenesis_normalization, new TermInfo(CVID.MS_Progenesis_normalization, @"MS", @"MS:1001867", @"Progenesis normalization", @"Normalization as performed by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_distinct_peptide_level_q_value, new TermInfo(CVID.MS_distinct_peptide_level_q_value, @"MS", @"MS:1001868", @"distinct peptide-level q-value", @"Estimation of the q-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs, possibly with different mass modifications, mapping to the same sequence have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_protein_level_q_value, new TermInfo(CVID.MS_protein_level_q_value, @"MS", @"MS:1001869", @"protein-level q-value", @"Estimation of the q-value for proteins.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_p_value, new TermInfo(CVID.MS_peptide_sequence_level_p_value, @"MS", @"MS:1001870", @"peptide sequence-level p-value", @"Estimation of the p-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_protein_level_p_value, new TermInfo(CVID.MS_protein_level_p_value, @"MS", @"MS:1001871", @"protein-level p-value", @"Estimation of the p-value for proteins.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_e_value, new TermInfo(CVID.MS_peptide_sequence_level_e_value, @"MS", @"MS:1001872", @"peptide sequence-level e-value", @"Estimation of the e-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_protein_level_e_value, new TermInfo(CVID.MS_protein_level_e_value, @"MS", @"MS:1001873", @"protein-level e-value", @"Estimation of the e-value for proteins.", false));
            TermData.Add(CVID.MS_FDRScore_OBSOLETE, new TermInfo(CVID.MS_FDRScore_OBSOLETE, @"MS", @"MS:1001874", @"FDRScore", @"OBSOLETE A smoothing of the distribution of q-values calculated for PSMs from individual search engines, such that ordering of result quality is maintained and all FDRScore values are guaranteed to have a value > 0.", true));
            TermData.Add(CVID.MS_modification_motif, new TermInfo(CVID.MS_modification_motif, @"MS", @"MS:1001875", @"modification motif", @"The regular expression describing the sequence motif for a modification.", false));
            TermData.Add(CVID.MS_modification_probability, new TermInfo(CVID.MS_modification_probability, @"MS", @"MS:1001876", @"modification probability", @"The a priori probability of a modification.", false));
            TermData.Add(CVID.MS_ChromaTOF_HRT_software, new TermInfo(CVID.MS_ChromaTOF_HRT_software, @"MS", @"MS:1001877", @"ChromaTOF HRT software", @"Software for acquisition, processing and analysis of data for LECO instruments.", false));
            TermData.Add(CVID.MS_MALDI_Solutions_Microbial_Identification, new TermInfo(CVID.MS_MALDI_Solutions_Microbial_Identification, @"MS", @"MS:1001878", @"MALDI Solutions Microbial Identification", @"Shimadzu Biotech software for data acquisition, processing, and analysis.", false));
            TermData.Add(CVID.MS_offset_voltage, new TermInfo(CVID.MS_offset_voltage, @"MS", @"MS:1001879", @"offset voltage", @"The potential difference between two adjacent interface voltages affecting in-source collision induced dissociation.", false));
            TermData.Add(CVID.MS_in_source_collision_induced_dissociation, new TermInfo(CVID.MS_in_source_collision_induced_dissociation, @"MS", @"MS:1001880", @"in-source collision-induced dissociation", @"The dissociation of an ion as a result of collisional excitation during ion transfer from an atmospheric pressure ion source and the mass spectrometer vacuum.", false));
            TermData.Add(CVID.MS_mz5_format, new TermInfo(CVID.MS_mz5_format, @"MS", @"MS:1001881", @"mz5 format", @"mz5 file format, modelled after mzML.", false));
            TermData.Add(CVID.MS_transition_validation_attribute, new TermInfo(CVID.MS_transition_validation_attribute, @"MS", @"MS:1001882", @"transition validation attribute", @"Attributes of the quality of a transition that affect its selection as appropriate.", false));
            TermData.Add(CVID.MS_coefficient_of_variation, new TermInfo(CVID.MS_coefficient_of_variation, @"MS", @"MS:1001883", @"coefficient of variation", @"Variation of a set of signal measurements calculated as the standard deviation relative to the mean.", false));
            TermData.Add(CVID.MS_signal_to_noise_ratio, new TermInfo(CVID.MS_signal_to_noise_ratio, @"MS", @"MS:1001884", @"signal-to-noise ratio", @"Unitless number providing the ratio of the total measured intensity of a signal relative to the estimated noise level for that signal.", false));
            TermData.Add(CVID.MS_command_line_parameters, new TermInfo(CVID.MS_command_line_parameters, @"MS", @"MS:1001885", @"command-line parameters", @"Parameters string passed to a command-line interface software application, omitting the executable name.", false));
            TermData.Add(CVID.MS_SQID, new TermInfo(CVID.MS_SQID, @"MS", @"MS:1001886", @"SQID", @"Software for data analysis of peptides and proteins.", false));
            TermData.Add(CVID.MS_SQID_score, new TermInfo(CVID.MS_SQID_score, @"MS", @"MS:1001887", @"SQID:score", @"The SQID result 'Score'.", false));
            TermData.Add(CVID.MS_SQID_deltaScore, new TermInfo(CVID.MS_SQID_deltaScore, @"MS", @"MS:1001888", @"SQID:deltaScore", @"The SQID result 'deltaScore'.", false));
            TermData.Add(CVID.MS_SQID_protein_score, new TermInfo(CVID.MS_SQID_protein_score, @"MS", @"MS:1001889", @"SQID:protein score", @"The SQID result 'protein score'.", false));
            TermData.Add(CVID.MS_Progenesis_protein_normalised_abundance, new TermInfo(CVID.MS_Progenesis_protein_normalised_abundance, @"MS", @"MS:1001890", @"Progenesis:protein normalised abundance", @"The data type normalised abundance for proteins produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_peptide_normalised_abundance, new TermInfo(CVID.MS_Progenesis_peptide_normalised_abundance, @"MS", @"MS:1001891", @"Progenesis:peptide normalised abundance", @"The data type normalised abundance for peptides produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_protein_raw_abundance, new TermInfo(CVID.MS_Progenesis_protein_raw_abundance, @"MS", @"MS:1001892", @"Progenesis:protein raw abundance", @"The data type raw abundance for proteins produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_peptide_raw_abundance, new TermInfo(CVID.MS_Progenesis_peptide_raw_abundance, @"MS", @"MS:1001893", @"Progenesis:peptide raw abundance", @"The data type raw abundance for peptide produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_confidence_score, new TermInfo(CVID.MS_Progenesis_confidence_score, @"MS", @"MS:1001894", @"Progenesis:confidence score", @"The data type confidence score produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_peptide_count, new TermInfo(CVID.MS_Progenesis_peptide_count, @"MS", @"MS:1001895", @"Progenesis:peptide count", @"The data type peptide count produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_feature_intensity, new TermInfo(CVID.MS_Progenesis_feature_intensity, @"MS", @"MS:1001896", @"Progenesis:feature intensity", @"The data type feature intensity produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_MaxQuant_peptide_counts__unique_, new TermInfo(CVID.MS_MaxQuant_peptide_counts__unique_, @"MS", @"MS:1001897", @"MaxQuant:peptide counts (unique)", @"The data type peptide counts (unique) produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_peptide_counts__all_, new TermInfo(CVID.MS_MaxQuant_peptide_counts__all_, @"MS", @"MS:1001898", @"MaxQuant:peptide counts (all)", @"The data type peptide counts (all) produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_peptide_counts__razor_unique_, new TermInfo(CVID.MS_MaxQuant_peptide_counts__razor_unique_, @"MS", @"MS:1001899", @"MaxQuant:peptide counts (razor+unique)", @"The data type peptide counts (razor+unique) produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_sequence_length, new TermInfo(CVID.MS_MaxQuant_sequence_length, @"MS", @"MS:1001900", @"MaxQuant:sequence length", @"The data type sequence length produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_PEP, new TermInfo(CVID.MS_MaxQuant_PEP, @"MS", @"MS:1001901", @"MaxQuant:PEP", @"The data type PEP (posterior error probability) produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_LFQ_intensity, new TermInfo(CVID.MS_MaxQuant_LFQ_intensity, @"MS", @"MS:1001902", @"MaxQuant:LFQ intensity", @"The data type LFQ intensity produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_feature_intensity, new TermInfo(CVID.MS_MaxQuant_feature_intensity, @"MS", @"MS:1001903", @"MaxQuant:feature intensity", @"The data type feature intensity produced by MaxQuant.", false));
            TermData.Add(CVID.MS_MaxQuant_MS_MS_count, new TermInfo(CVID.MS_MaxQuant_MS_MS_count, @"MS", @"MS:1001904", @"MaxQuant:MS/MS count", @"The data type MS2 count produced by MaxQuant.", false));
            TermData.Add(CVID.MS_emPAI_value, new TermInfo(CVID.MS_emPAI_value, @"MS", @"MS:1001905", @"emPAI value", @"The emPAI value of protein abundance, produced from the emPAI algorithm.", false));
            TermData.Add(CVID.MS_APEX_value, new TermInfo(CVID.MS_APEX_value, @"MS", @"MS:1001906", @"APEX value", @"The APEX value of protein abundance, produced from the APEX software.", false));
            TermData.Add(CVID.MS_retention_time_window_width, new TermInfo(CVID.MS_retention_time_window_width, @"MS", @"MS:1001907", @"retention time window width", @"The full width of a retention time window for a chromatographic peak.", false));
            TermData.Add(CVID.MS_ISQ, new TermInfo(CVID.MS_ISQ, @"MS", @"MS:1001908", @"ISQ", @"Thermo Scientific ISQ single quadrupole MS with the ExtractraBrite source.", false));
            TermData.Add(CVID.MS_Velos_Plus, new TermInfo(CVID.MS_Velos_Plus, @"MS", @"MS:1001909", @"Velos Plus", @"Thermo Scientific second generation Velos.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_Elite, new TermInfo(CVID.MS_LTQ_Orbitrap_Elite, @"MS", @"MS:1001910", @"LTQ Orbitrap Elite", @"Thermo Scientific LTQ Orbitrap Elite, often just referred to as the Orbitrap Elite.", false));
            TermData.Add(CVID.MS_Q_Exactive, new TermInfo(CVID.MS_Q_Exactive, @"MS", @"MS:1001911", @"Q Exactive", @"Thermo Scientific Q Exactive.", false));
            TermData.Add(CVID.MS_PinPoint, new TermInfo(CVID.MS_PinPoint, @"MS", @"MS:1001912", @"PinPoint", @"Thermo Scientific PinPoint SRM analysis software.", false));
            TermData.Add(CVID.MS_S_lens_voltage, new TermInfo(CVID.MS_S_lens_voltage, @"MS", @"MS:1001913", @"S-lens voltage", @"Potential difference setting of the Thermo Scientific S-lens stacked-ring ion guide in volts.", false));
            TermData.Add(CVID.MS_pymzML, new TermInfo(CVID.MS_pymzML, @"MS", @"MS:1001914", @"pymzML", @"Python module to interface mzML Data.", false));
            TermData.Add(CVID.MS_leukocyte_elastase, new TermInfo(CVID.MS_leukocyte_elastase, @"MS", @"MS:1001915", @"leukocyte elastase", @"Enzyme leukocyte elastase (EC 3.4.21.37).", false));
            TermData.Add(CVID.MS_proline_endopeptidase, new TermInfo(CVID.MS_proline_endopeptidase, @"MS", @"MS:1001916", @"proline endopeptidase", @"Enzyme proline endopeptidase (EC 3.4.21.26).", false));
            TermData.Add(CVID.MS_glutamyl_endopeptidase, new TermInfo(CVID.MS_glutamyl_endopeptidase, @"MS", @"MS:1001917", @"glutamyl endopeptidase", @"Enzyme glutamyl endopeptidase (EC 3.4.21.19).", false));
            TermData.Add(CVID.MS_2_iodobenzoate, new TermInfo(CVID.MS_2_iodobenzoate, @"MS", @"MS:1001918", @"2-iodobenzoate", @"Chemical iodobenzoate. Cleaves after W.", false));
            TermData.Add(CVID.MS_ProteomeXchange_accession_number, new TermInfo(CVID.MS_ProteomeXchange_accession_number, @"MS", @"MS:1001919", @"ProteomeXchange accession number", @"Main identifier of a ProteomeXchange dataset.", false));
            TermData.Add(CVID.MS_ProteomeXchange_accession_number_version_number, new TermInfo(CVID.MS_ProteomeXchange_accession_number_version_number, @"MS", @"MS:1001921", @"ProteomeXchange accession number version number", @"Version number of a ProteomeXchange accession number.", false));
            TermData.Add(CVID.MS_Digital_Object_Identifier__DOI_, new TermInfo(CVID.MS_Digital_Object_Identifier__DOI_, @"MS", @"MS:1001922", @"Digital Object Identifier (DOI)", @"DOI unique identifier of a publication.", false));
            TermData.Add(CVID.MS_external_reference_keyword, new TermInfo(CVID.MS_external_reference_keyword, @"MS", @"MS:1001923", @"external reference keyword", @"Free text attribute that can enrich the information about an entity.", false));
            TermData.Add(CVID.MS_journal_article_keyword, new TermInfo(CVID.MS_journal_article_keyword, @"MS", @"MS:1001924", @"journal article keyword", @"Keyword present in a scientific publication.", false));
            TermData.Add(CVID.MS_submitter_keyword, new TermInfo(CVID.MS_submitter_keyword, @"MS", @"MS:1001925", @"submitter keyword", @"Keyword assigned by the data submitter.", false));
            TermData.Add(CVID.MS_curator_keyword, new TermInfo(CVID.MS_curator_keyword, @"MS", @"MS:1001926", @"curator keyword", @"Keyword assigned by a data curator.", false));
            TermData.Add(CVID.MS_Tranche_file_hash, new TermInfo(CVID.MS_Tranche_file_hash, @"MS", @"MS:1001927", @"Tranche file hash", @"Hash assigned by the Tranche resource to an individual file.", false));
            TermData.Add(CVID.MS_Tranche_project_hash, new TermInfo(CVID.MS_Tranche_project_hash, @"MS", @"MS:1001928", @"Tranche project hash", @"Hash assigned by the Tranche resource to a whole project.", false));
            TermData.Add(CVID.MS_PRIDE_experiment_URI, new TermInfo(CVID.MS_PRIDE_experiment_URI, @"MS", @"MS:1001929", @"PRIDE experiment URI", @"URI that allows the access to one experiment in the PRIDE database.", false));
            TermData.Add(CVID.MS_PRIDE_project_URI, new TermInfo(CVID.MS_PRIDE_project_URI, @"MS", @"MS:1001930", @"PRIDE project URI", @"URI that allows the access to one project in the PRIDE database.", false));
            TermData.Add(CVID.MS_source_interface, new TermInfo(CVID.MS_source_interface, @"MS", @"MS:1001931", @"source interface", @"The source interface.", false));
            TermData.Add(CVID.MS_source_interface_model, new TermInfo(CVID.MS_source_interface_model, @"MS", @"MS:1001932", @"source interface model", @"The source interface model.", false));
            TermData.Add(CVID.MS_source_sprayer, new TermInfo(CVID.MS_source_sprayer, @"MS", @"MS:1001933", @"source sprayer", @"The source sprayer.", false));
            TermData.Add(CVID.MS_source_sprayer_type, new TermInfo(CVID.MS_source_sprayer_type, @"MS", @"MS:1001934", @"source sprayer type", @"The source sprayer type.", false));
            TermData.Add(CVID.MS_source_sprayer_manufacturer, new TermInfo(CVID.MS_source_sprayer_manufacturer, @"MS", @"MS:1001935", @"source sprayer manufacturer", @"The source sprayer manufacturer.", false));
            TermData.Add(CVID.MS_source_sprayer_model, new TermInfo(CVID.MS_source_sprayer_model, @"MS", @"MS:1001936", @"source sprayer model", @"The source sprayer model.", false));
            TermData.Add(CVID.MS_sample_plate, new TermInfo(CVID.MS_sample_plate, @"MS", @"MS:1001937", @"sample plate", @"Plate where the sample solution is spotted in a MALDI or similar instrument.", false));
            TermData.Add(CVID.MS_sample_plate_type, new TermInfo(CVID.MS_sample_plate_type, @"MS", @"MS:1001938", @"sample plate type", @"The sample plate type.", false));
            TermData.Add(CVID.MS_stainless_steel_plate, new TermInfo(CVID.MS_stainless_steel_plate, @"MS", @"MS:1001939", @"stainless steel plate", @"Stainless steel plate.", false));
            TermData.Add(CVID.MS_coated_glass_plate, new TermInfo(CVID.MS_coated_glass_plate, @"MS", @"MS:1001940", @"coated glass plate", @"Coated glass plate.", false));
            TermData.Add(CVID.MS_electrospray_supply_type, new TermInfo(CVID.MS_electrospray_supply_type, @"MS", @"MS:1001941", @"electrospray supply type", @"Whether the sprayer is fed or is loaded with sample once.", false));
            TermData.Add(CVID.MS_static_supply_electrospray, new TermInfo(CVID.MS_static_supply_electrospray, @"MS", @"MS:1001942", @"static supply electrospray", @"The sprayer is loaded with sample once.", false));
            TermData.Add(CVID.MS_fed_supply_electrospray, new TermInfo(CVID.MS_fed_supply_electrospray, @"MS", @"MS:1001943", @"fed supply electrospray", @"The sprayer is continuously fed with sample.", false));
            TermData.Add(CVID.MS_Collision_cell_exit_potential, new TermInfo(CVID.MS_Collision_cell_exit_potential, @"MS", @"MS:1001944", @"Collision cell exit potential", @"Potential difference between Q2 and Q3 in a triple quadrupole instrument in volts.", false));
            TermData.Add(CVID.MS_Pegasus_4D, new TermInfo(CVID.MS_Pegasus_4D, @"MS", @"MS:1001945", @"Pegasus 4D", @"LECO nominal mass resolution time-of-flight GCxGC mass spectrometer.", false));
            TermData.Add(CVID.MS_PEAKS_Studio, new TermInfo(CVID.MS_PEAKS_Studio, @"MS", @"MS:1001946", @"PEAKS Studio", @"PEAKS Studio software for data analysis.", false));
            TermData.Add(CVID.MS_PEAKS_Online, new TermInfo(CVID.MS_PEAKS_Online, @"MS", @"MS:1001947", @"PEAKS Online", @"PEAKS Online software for high throughput data analysis.", false));
            TermData.Add(CVID.MS_PEAKS_Node, new TermInfo(CVID.MS_PEAKS_Node, @"MS", @"MS:1001948", @"PEAKS Node", @"PEAKS Node software for high throughput data analysis.", false));
            TermData.Add(CVID.MS_BSI_software, new TermInfo(CVID.MS_BSI_software, @"MS", @"MS:1001949", @"BSI software", @"Bioinformatics Solutions Inc. Software for data processing and analysis.", false));
            TermData.Add(CVID.MS_PEAKS_peptideScore, new TermInfo(CVID.MS_PEAKS_peptideScore, @"MS", @"MS:1001950", @"PEAKS:peptideScore", @"The PEAKS peptide '-10lgP Score'.", false));
            TermData.Add(CVID.MS_PEAKS_proteinScore, new TermInfo(CVID.MS_PEAKS_proteinScore, @"MS", @"MS:1001951", @"PEAKS:proteinScore", @"The PEAKS protein '-10lgP Score'.", false));
            TermData.Add(CVID.MS_ZCore_probScore, new TermInfo(CVID.MS_ZCore_probScore, @"MS", @"MS:1001952", @"ZCore:probScore", @"The ZCore probability score.", false));
            TermData.Add(CVID.MS_source_interface_manufacturer, new TermInfo(CVID.MS_source_interface_manufacturer, @"MS", @"MS:1001953", @"source interface manufacturer", @"The source interface manufacturer.", false));
            TermData.Add(CVID.MS_acquisition_parameter, new TermInfo(CVID.MS_acquisition_parameter, @"MS", @"MS:1001954", @"acquisition parameter", @"Parameters used in the mass spectrometry acquisition.", false));
            TermData.Add(CVID.MS_no_cleavage, new TermInfo(CVID.MS_no_cleavage, @"MS", @"MS:1001955", @"no cleavage", @"No cleavage.", false));
            TermData.Add(CVID.MS_unspecific_cleavage, new TermInfo(CVID.MS_unspecific_cleavage, @"MS", @"MS:1001956", @"unspecific cleavage", @"Unspecific cleavage.", false));
            TermData.Add(CVID.MS______ALIV_____P_, new TermInfo(CVID.MS______ALIV_____P_, @"MS", @"MS:1001957", @"(?<=[ALIV])(?!P)", @"Regular expression for leukocyte elastase.", false));
            TermData.Add(CVID.MS______HKR_P____P_, new TermInfo(CVID.MS______HKR_P____P_, @"MS", @"MS:1001958", @"(?<=[HKR]P)(?!P)", @"Regular expression for proline endopeptidase.", false));
            TermData.Add(CVID.MS_______E_E_, new TermInfo(CVID.MS_______E_E_, @"MS", @"MS:1001959", @"(?<=[^E]E)", @"Regular expression for glutamyl endopeptidase.", false));
            TermData.Add(CVID.MS_____W_, new TermInfo(CVID.MS_____W_, @"MS", @"MS:1001960", @"(?<=W)", @"Regular expression for 2-iodobenzoate.", false));
            TermData.Add(CVID.MS_peptide_spectrum_match_scoring_algorithm, new TermInfo(CVID.MS_peptide_spectrum_match_scoring_algorithm, @"MS", @"MS:1001961", @"peptide spectrum match scoring algorithm", @"Algorithm used to score the match between a spectrum and a peptide ion.", false));
            TermData.Add(CVID.MS_Mascot_C13_counts, new TermInfo(CVID.MS_Mascot_C13_counts, @"MS", @"MS:1001962", @"Mascot:C13 counts", @"C13 peaks to use in peak detection.", false));
            TermData.Add(CVID.MS_ProteinExtractor_Weighting, new TermInfo(CVID.MS_ProteinExtractor_Weighting, @"MS", @"MS:1001963", @"ProteinExtractor:Weighting", @"Weighting factor for protein list compilation by ProteinExtractor.", false));
            TermData.Add(CVID.MS_ProteinScape_second_round_Mascot, new TermInfo(CVID.MS_ProteinScape_second_round_Mascot, @"MS", @"MS:1001964", @"ProteinScape:second round Mascot", @"Flag indicating a second round search with Mascot.", false));
            TermData.Add(CVID.MS_ProteinScape_second_round_Phenyx, new TermInfo(CVID.MS_ProteinScape_second_round_Phenyx, @"MS", @"MS:1001965", @"ProteinScape:second round Phenyx", @"Flag indicating a second round search with Phenyx.", false));
            TermData.Add(CVID.MS_product_ion_mobility, new TermInfo(CVID.MS_product_ion_mobility, @"MS", @"MS:1001966", @"product ion mobility", @"The mobility of an MS2 product ion, as measured by ion mobility mass spectrometry.", false));
            TermData.Add(CVID.MS_product_ion_drift_time_OBSOLETE, new TermInfo(CVID.MS_product_ion_drift_time_OBSOLETE, @"MS", @"MS:1001967", @"product ion drift time", @"OBSOLETE The ion drift time of an MS2 product ion.", true));
            TermData.Add(CVID.MS_PTM_localization_PSM_level_statistic, new TermInfo(CVID.MS_PTM_localization_PSM_level_statistic, @"MS", @"MS:1001968", @"PTM localization PSM-level statistic", @"Statistic to convey the confidence of the localization of an amino acid modification on a peptide sequence at the PSM-level.", false));
            TermData.Add(CVID.MS_phosphoRS_score, new TermInfo(CVID.MS_phosphoRS_score, @"MS", @"MS:1001969", @"phosphoRS score", @"phosphoRS score for PTM site location at the PSM-level.", false));
            TermData.Add(CVID.MS_phosphoRS_sequence_probability, new TermInfo(CVID.MS_phosphoRS_sequence_probability, @"MS", @"MS:1001970", @"phosphoRS sequence probability", @"Probability that the respective isoform is correct.", false));
            TermData.Add(CVID.MS_phosphoRS_site_probability, new TermInfo(CVID.MS_phosphoRS_site_probability, @"MS", @"MS:1001971", @"phosphoRS site probability", @"Estimate of the probability that the respective site is truly phosphorylated.", false));
            TermData.Add(CVID.MS_PTM_scoring_algorithm_version, new TermInfo(CVID.MS_PTM_scoring_algorithm_version, @"MS", @"MS:1001972", @"PTM scoring algorithm version", @"Version of the post-translational modification scoring algorithm.", false));
            TermData.Add(CVID.MS_DeBunker, new TermInfo(CVID.MS_DeBunker, @"MS", @"MS:1001973", @"DeBunker", @"DeBunker software.", false));
            TermData.Add(CVID.MS_DeBunker_score, new TermInfo(CVID.MS_DeBunker_score, @"MS", @"MS:1001974", @"DeBunker:score", @"Score specific to DeBunker.", false));
            TermData.Add(CVID.MS_delta_m_z, new TermInfo(CVID.MS_delta_m_z, @"MS", @"MS:1001975", @"delta m/z", @"The difference between a theoretically calculated m/z and the corresponding experimentally measured m/z. It can be expressed as absolute or relative value.", false));
            TermData.Add(CVID.MS_delta_M, new TermInfo(CVID.MS_delta_M, @"MS", @"MS:1001976", @"delta M", @"The difference between a theoretically calculated molecular mass M and the corresponding experimentally measured M. It can be expressed as absolute or relative value.", false));
            TermData.Add(CVID.MS_MSQuant, new TermInfo(CVID.MS_MSQuant, @"MS", @"MS:1001977", @"MSQuant", @"MSQuant software.", false));
            TermData.Add(CVID.MS_MSQuant_PTM_score, new TermInfo(CVID.MS_MSQuant_PTM_score, @"MS", @"MS:1001978", @"MSQuant:PTM-score", @"The PTM score from MSQuant software.", false));
            TermData.Add(CVID.MS_MaxQuant_PTM_Score, new TermInfo(CVID.MS_MaxQuant_PTM_Score, @"MS", @"MS:1001979", @"MaxQuant:PTM Score", @"The PTM score from MaxQuant software.", false));
            TermData.Add(CVID.MS_MaxQuant_Phospho__STY__Probabilities, new TermInfo(CVID.MS_MaxQuant_Phospho__STY__Probabilities, @"MS", @"MS:1001980", @"MaxQuant:Phospho (STY) Probabilities", @"The Phospho (STY) Probabilities from MaxQuant software.", false));
            TermData.Add(CVID.MS_MaxQuant_Phospho__STY__Score_Diffs, new TermInfo(CVID.MS_MaxQuant_Phospho__STY__Score_Diffs, @"MS", @"MS:1001981", @"MaxQuant:Phospho (STY) Score Diffs", @"The Phospho (STY) Score Diffs from MaxQuant software.", false));
            TermData.Add(CVID.MS_MaxQuant_P_site_localization_probability, new TermInfo(CVID.MS_MaxQuant_P_site_localization_probability, @"MS", @"MS:1001982", @"MaxQuant:P-site localization probability", @"The P-site localization probability value from MaxQuant software.", false));
            TermData.Add(CVID.MS_MaxQuant_PTM_Delta_Score, new TermInfo(CVID.MS_MaxQuant_PTM_Delta_Score, @"MS", @"MS:1001983", @"MaxQuant:PTM Delta Score", @"The PTM Delta Score value from MaxQuant software (Difference between highest scoring site and second highest).", false));
            TermData.Add(CVID.MS_Ascore_software, new TermInfo(CVID.MS_Ascore_software, @"MS", @"MS:1001984", @"Ascore software", @"Ascore software.", false));
            TermData.Add(CVID.MS_Ascore, new TermInfo(CVID.MS_Ascore, @"MS", @"MS:1001985", @"Ascore", @"A-score for PTM site location at the PSM-level.", false));
            TermData.Add(CVID.MS_H_Score, new TermInfo(CVID.MS_H_Score, @"MS", @"MS:1001986", @"H-Score", @"H-Score for peptide phosphorylation site location.", false));
            TermData.Add(CVID.MS_vacuum_drying_MALDI_sample_preparation, new TermInfo(CVID.MS_vacuum_drying_MALDI_sample_preparation, @"MS", @"MS:1001987", @"vacuum drying MALDI sample preparation", @"Vacuum-drying MALDI sample preparation crystallization method.", false));
            TermData.Add(CVID.MS_crushed_crystal_MALDI_sample_preparation, new TermInfo(CVID.MS_crushed_crystal_MALDI_sample_preparation, @"MS", @"MS:1001988", @"crushed crystal MALDI sample preparation", @"Crushed-crystal MALDI sample preparation method.", false));
            TermData.Add(CVID.MS_fast_evaporation_MALDI_sample_preparation, new TermInfo(CVID.MS_fast_evaporation_MALDI_sample_preparation, @"MS", @"MS:1001989", @"fast evaporation MALDI sample preparation", @"Fast-evaporation MALDI sample preparation method.", false));
            TermData.Add(CVID.MS_overlayer_MALDI_sample_preparation, new TermInfo(CVID.MS_overlayer_MALDI_sample_preparation, @"MS", @"MS:1001990", @"overlayer MALDI sample preparation", @"Overlayer method combining features of the crushed-crystal method and the fast-evaporation method.", false));
            TermData.Add(CVID.MS_sandwich_MALDI_sample_preparation, new TermInfo(CVID.MS_sandwich_MALDI_sample_preparation, @"MS", @"MS:1001991", @"sandwich MALDI sample preparation", @"Sandwich MALDI sample preparation method.", false));
            TermData.Add(CVID.MS_spin_coating_MALDI_sample_preparation, new TermInfo(CVID.MS_spin_coating_MALDI_sample_preparation, @"MS", @"MS:1001992", @"spin coating MALDI sample preparation", @"Spin coating MALDI sample preparation method.", false));
            TermData.Add(CVID.MS_quick_and_dirty_MALDI_sample_preparation, new TermInfo(CVID.MS_quick_and_dirty_MALDI_sample_preparation, @"MS", @"MS:1001993", @"quick and dirty MALDI sample preparation", @"Quick & dirty (Q&D) sample preparation separating matrix handling from sample handling.", false));
            TermData.Add(CVID.MS_top_hat_baseline_reduction, new TermInfo(CVID.MS_top_hat_baseline_reduction, @"MS", @"MS:1001994", @"top hat baseline reduction", @"Top-hat morphological filter based on the basic morphological operations 'erosion' and 'dilatation'.", false));
            TermData.Add(CVID.MS_convex_hull_baseline_reduction, new TermInfo(CVID.MS_convex_hull_baseline_reduction, @"MS", @"MS:1001995", @"convex hull baseline reduction", @"Constructs the baseline by fitting multiple parabolas to the spectrum starting with the large scale structures.", false));
            TermData.Add(CVID.MS_median_baseline_reduction, new TermInfo(CVID.MS_median_baseline_reduction, @"MS", @"MS:1001996", @"median baseline reduction", @"The spectrum that will be baseline subtracted is divided into a number of segments.", false));
            TermData.Add(CVID.MS_wavelet_transformation_smoothing, new TermInfo(CVID.MS_wavelet_transformation_smoothing, @"MS", @"MS:1001997", @"wavelet transformation smoothing", @"The random noise is removed by using the undecimated wavelet transform.", false));
            TermData.Add(CVID.MS_sophisticated_numerical_annotation_procedure, new TermInfo(CVID.MS_sophisticated_numerical_annotation_procedure, @"MS", @"MS:1001998", @"sophisticated numerical annotation procedure", @"It searches for known patterns in the measured spectrum.", false));
            TermData.Add(CVID.MS_area_normalization, new TermInfo(CVID.MS_area_normalization, @"MS", @"MS:1001999", @"area normalization", @"Normalization of areas below the curves.", false));
            TermData.Add(CVID.MS_LIFT, new TermInfo(CVID.MS_LIFT, @"MS", @"MS:1002000", @"LIFT", @"A Bruker's proprietary technique where molecular ions are initially accelerated at lower energy, then collide with inert gas in a collision cell that is then 'lifted' to high potential. The use of inert gas is optional, as it could lift also fragments provided by LID.", false));
            TermData.Add(CVID.MS_MS1_label_based_raw_feature_quantitation, new TermInfo(CVID.MS_MS1_label_based_raw_feature_quantitation, @"MS", @"MS:1002001", @"MS1 label-based raw feature quantitation", @"MS1 label-based raw feature quantitation.", false));
            TermData.Add(CVID.MS_MS1_label_based_peptide_level_quantitation, new TermInfo(CVID.MS_MS1_label_based_peptide_level_quantitation, @"MS", @"MS:1002002", @"MS1 label-based peptide level quantitation", @"MS1 label-based peptide level quantitation.", false));
            TermData.Add(CVID.MS_MS1_label_based_protein_level_quantitation, new TermInfo(CVID.MS_MS1_label_based_protein_level_quantitation, @"MS", @"MS:1002003", @"MS1 label-based protein level quantitation", @"MS1 label-based protein level quantitation.", false));
            TermData.Add(CVID.MS_MS1_label_based_proteingroup_level_quantitation, new TermInfo(CVID.MS_MS1_label_based_proteingroup_level_quantitation, @"MS", @"MS:1002004", @"MS1 label-based proteingroup level quantitation", @"MS1 label-based proteingroup level quantitation.", false));
            TermData.Add(CVID.MS_iRT_retention_time_normalization_standard, new TermInfo(CVID.MS_iRT_retention_time_normalization_standard, @"MS", @"MS:1002005", @"iRT retention time normalization standard", @"A de facto standard providing the retention times at which a specific set of 10 reference peptides exit the reference chromatographic column. The kit may be obtain from Biognosys.", false));
            TermData.Add(CVID.MS_SRM_transition_type, new TermInfo(CVID.MS_SRM_transition_type, @"MS", @"MS:1002006", @"SRM transition type", @"The type of the transitions, e.g. target or decoy.", false));
            TermData.Add(CVID.MS_target_SRM_transition, new TermInfo(CVID.MS_target_SRM_transition, @"MS", @"MS:1002007", @"target SRM transition", @"A transition used to target a specific compound that may be in the sample.", false));
            TermData.Add(CVID.MS_decoy_SRM_transition, new TermInfo(CVID.MS_decoy_SRM_transition, @"MS", @"MS:1002008", @"decoy SRM transition", @"A transition not expected to be present in the sample and used to calculate statistical confidence of target transition detections in some workflows.", false));
            TermData.Add(CVID.MS_isobaric_label_quantitation_analysis, new TermInfo(CVID.MS_isobaric_label_quantitation_analysis, @"MS", @"MS:1002009", @"isobaric label quantitation analysis", @"Quantitation analysis using an isobaric labelling workflow.", false));
            TermData.Add(CVID.MS_TMT_quantitation_analysis, new TermInfo(CVID.MS_TMT_quantitation_analysis, @"MS", @"MS:1002010", @"TMT quantitation analysis", @"Quantitation analysis using the Thermo Fisher amine-reactive tandem mass tag (TMT) labelling workflow, wherein 2-10 reporter ions are measured in MS2 spectra in the 126-131 m/z.", false));
            TermData.Add(CVID.MS_desorption_electrospray_ionization, new TermInfo(CVID.MS_desorption_electrospray_ionization, @"MS", @"MS:1002011", @"desorption electrospray ionization", @"Combination of electrospray and desorption ionization method that ionizes gases, liquids and solids in open air under atmospheric pressure.", false));
            TermData.Add(CVID.MS_Mascot_PTM_site_assignment_confidence, new TermInfo(CVID.MS_Mascot_PTM_site_assignment_confidence, @"MS", @"MS:1002012", @"Mascot:PTM site assignment confidence", @"Relative probability that PTM site assignment is correct, derived from the Mascot score difference between matches to the same spectrum (Mascot Delta Score).", false));
            TermData.Add(CVID.MS_collision_energy_ramp_start, new TermInfo(CVID.MS_collision_energy_ramp_start, @"MS", @"MS:1002013", @"collision energy ramp start", @"Collision energy at the start of the collision energy ramp.", false));
            TermData.Add(CVID.MS_collision_energy_ramp_end, new TermInfo(CVID.MS_collision_energy_ramp_end, @"MS", @"MS:1002014", @"collision energy ramp end", @"Collision energy at the end of the collision energy ramp.", false));
            TermData.Add(CVID.MS_spectral_count_peptide_level_quantitation, new TermInfo(CVID.MS_spectral_count_peptide_level_quantitation, @"MS", @"MS:1002015", @"spectral count peptide level quantitation", @"Spectral count peptide level quantitation.", false));
            TermData.Add(CVID.MS_spectral_count_protein_level_quantitation, new TermInfo(CVID.MS_spectral_count_protein_level_quantitation, @"MS", @"MS:1002016", @"spectral count protein level quantitation", @"Spectral count protein level quantitation.", false));
            TermData.Add(CVID.MS_spectral_count_proteingroup_level_quantitation, new TermInfo(CVID.MS_spectral_count_proteingroup_level_quantitation, @"MS", @"MS:1002017", @"spectral count proteingroup level quantitation", @"Spectral count proteingroup level quantitation.", false));
            TermData.Add(CVID.MS_MS1_label_based_analysis, new TermInfo(CVID.MS_MS1_label_based_analysis, @"MS", @"MS:1002018", @"MS1 label-based analysis", @"MS1 label-based analysis.", false));
            TermData.Add(CVID.MS_label_free_raw_feature_quantitation, new TermInfo(CVID.MS_label_free_raw_feature_quantitation, @"MS", @"MS:1002019", @"label-free raw feature quantitation", @"Label-free raw feature quantitation.", false));
            TermData.Add(CVID.MS_label_free_peptide_level_quantitation, new TermInfo(CVID.MS_label_free_peptide_level_quantitation, @"MS", @"MS:1002020", @"label-free peptide level quantitation", @"Label-free peptide level quantitation.", false));
            TermData.Add(CVID.MS_label_free_protein_level_quantitation, new TermInfo(CVID.MS_label_free_protein_level_quantitation, @"MS", @"MS:1002021", @"label-free protein level quantitation", @"Label-free protein level quantitation.", false));
            TermData.Add(CVID.MS_label_free_proteingroup_level_quantitation, new TermInfo(CVID.MS_label_free_proteingroup_level_quantitation, @"MS", @"MS:1002022", @"label-free proteingroup level quantitation", @"Label-free proteingroup level quantitation.", false));
            TermData.Add(CVID.MS_MS2_tag_based_analysis, new TermInfo(CVID.MS_MS2_tag_based_analysis, @"MS", @"MS:1002023", @"MS2 tag-based analysis", @"MS2 tag-based analysis.", false));
            TermData.Add(CVID.MS_MS2_tag_based_feature_level_quantitation, new TermInfo(CVID.MS_MS2_tag_based_feature_level_quantitation, @"MS", @"MS:1002024", @"MS2 tag-based feature level quantitation", @"MS2 tag-based feature level quantitation.", false));
            TermData.Add(CVID.MS_MS2_tag_based_peptide_level_quantitation, new TermInfo(CVID.MS_MS2_tag_based_peptide_level_quantitation, @"MS", @"MS:1002025", @"MS2 tag-based peptide level quantitation", @"MS2 tag-based peptide level quantitation.", false));
            TermData.Add(CVID.MS_MS2_tag_based_protein_level_quantitation, new TermInfo(CVID.MS_MS2_tag_based_protein_level_quantitation, @"MS", @"MS:1002026", @"MS2 tag-based protein level quantitation", @"MS2 tag-based protein level quantitation.", false));
            TermData.Add(CVID.MS_MS2_tag_based_proteingroup_level_quantitation, new TermInfo(CVID.MS_MS2_tag_based_proteingroup_level_quantitation, @"MS", @"MS:1002027", @"MS2 tag-based proteingroup level quantitation", @"MS2 tag-based proteingroup level quantitation.", false));
            TermData.Add(CVID.MS_nucleic_acid_base_modification, new TermInfo(CVID.MS_nucleic_acid_base_modification, @"MS", @"MS:1002028", @"nucleic acid base modification", @"Nucleic acid base modification (substitution, insertion or deletion).", false));
            TermData.Add(CVID.MS_original_nucleic_acid_sequence, new TermInfo(CVID.MS_original_nucleic_acid_sequence, @"MS", @"MS:1002029", @"original nucleic acid sequence", @"Specification of the original nucleic acid sequence, prior to a modification. The value slot should hold the DNA or RNA sequence.", false));
            TermData.Add(CVID.MS_modified_nucleic_acid_sequence, new TermInfo(CVID.MS_modified_nucleic_acid_sequence, @"MS", @"MS:1002030", @"modified nucleic acid sequence", @"Specification of the modified nucleic acid sequence. The value slot should hold the DNA or RNA sequence.", false));
            TermData.Add(CVID.MS_PASSEL_transition_group_browser_URI, new TermInfo(CVID.MS_PASSEL_transition_group_browser_URI, @"MS", @"MS:1002031", @"PASSEL transition group browser URI", @"URI to retrieve transition group data for a PASSEL (PeptideAtlas SRM Experiment Library) experiment.", false));
            TermData.Add(CVID.MS_PeptideAtlas_dataset_URI, new TermInfo(CVID.MS_PeptideAtlas_dataset_URI, @"MS", @"MS:1002032", @"PeptideAtlas dataset URI", @"URI that allows access to a PeptideAtlas dataset.", false));
            TermData.Add(CVID.MS_contact_role, new TermInfo(CVID.MS_contact_role, @"MS", @"MS:1002033", @"contact role", @"Role of the contact person.", false));
            TermData.Add(CVID.MS_first_author, new TermInfo(CVID.MS_first_author, @"MS", @"MS:1002034", @"first author", @"The first of a set of authors associated with a publication or release. There may be more than one first author in cases where several authors share primary attribution.", false));
            TermData.Add(CVID.MS_senior_author, new TermInfo(CVID.MS_senior_author, @"MS", @"MS:1002035", @"senior author", @"The last of a set of authors associated with a publication or release. There may be more than one senior author in cases where several authors share senior attribution.", false));
            TermData.Add(CVID.MS_co_author, new TermInfo(CVID.MS_co_author, @"MS", @"MS:1002036", @"co-author", @"One of a set of authors associated with a publication or release.", false));
            TermData.Add(CVID.MS_dataset_submitter, new TermInfo(CVID.MS_dataset_submitter, @"MS", @"MS:1002037", @"dataset submitter", @"A person who submits a dataset to a repository.", false));
            TermData.Add(CVID.MS_label_free_sample, new TermInfo(CVID.MS_label_free_sample, @"MS", @"MS:1002038", @"label free sample", @"A sample that has not been labelled or modified. This is often referred to as \ light\  to distinguish from \ heavy\ .", false));
            TermData.Add(CVID.MS_inlet_attribute, new TermInfo(CVID.MS_inlet_attribute, @"MS", @"MS:1002039", @"inlet attribute", @"Inlet properties that are associated with a value.", false));
            TermData.Add(CVID.MS_inlet_temperature, new TermInfo(CVID.MS_inlet_temperature, @"MS", @"MS:1002040", @"inlet temperature", @"The temperature of the inlet of a mass spectrometer.", false));
            TermData.Add(CVID.MS_source_temperature, new TermInfo(CVID.MS_source_temperature, @"MS", @"MS:1002041", @"source temperature", @"The temperature of the source of a mass spectrometer.", false));
            TermData.Add(CVID.MS_modulation_time, new TermInfo(CVID.MS_modulation_time, @"MS", @"MS:1002042", @"modulation time", @"The duration of a complete cycle of modulation in a comprehensive two-dimensional separation system, equals the length of a second dimension chromatogram, i.e., the time between two successive injections into the second column.", false));
            TermData.Add(CVID.MS_ProteinProspector, new TermInfo(CVID.MS_ProteinProspector, @"MS", @"MS:1002043", @"ProteinProspector", @"ProteinProspector software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_ProteinProspector_score, new TermInfo(CVID.MS_ProteinProspector_score, @"MS", @"MS:1002044", @"ProteinProspector:score", @"The ProteinProspector result 'Score'.", false));
            TermData.Add(CVID.MS_ProteinProspector_expectation_value, new TermInfo(CVID.MS_ProteinProspector_expectation_value, @"MS", @"MS:1002045", @"ProteinProspector:expectation value", @"The ProteinProspector result 'Expectation value'.", false));
            TermData.Add(CVID.MS_native_source_path, new TermInfo(CVID.MS_native_source_path, @"MS", @"MS:1002046", @"native source path", @"The original source path used for directory-based sources.", false));
            TermData.Add(CVID.MS_MS_GF, new TermInfo(CVID.MS_MS_GF, @"MS", @"MS:1002047", @"MS-GF", @"MS-GF software used to re-score the peptide-spectrum matches.", false));
            TermData.Add(CVID.MS_MS_GF_, new TermInfo(CVID.MS_MS_GF_, @"MS", @"MS:1002048", @"MS-GF+", @"MS-GF+ software used to analyze the spectra.", false));
            TermData.Add(CVID.MS_MS_GF_RawScore, new TermInfo(CVID.MS_MS_GF_RawScore, @"MS", @"MS:1002049", @"MS-GF:RawScore", @"MS-GF raw score.", false));
            TermData.Add(CVID.MS_MS_GF_DeNovoScore, new TermInfo(CVID.MS_MS_GF_DeNovoScore, @"MS", @"MS:1002050", @"MS-GF:DeNovoScore", @"MS-GF de novo score.", false));
            TermData.Add(CVID.MS_MS_GF_Energy, new TermInfo(CVID.MS_MS_GF_Energy, @"MS", @"MS:1002051", @"MS-GF:Energy", @"MS-GF energy score.", false));
            TermData.Add(CVID.MS_MS_GF_SpecEValue, new TermInfo(CVID.MS_MS_GF_SpecEValue, @"MS", @"MS:1002052", @"MS-GF:SpecEValue", @"MS-GF spectral E-value.", false));
            TermData.Add(CVID.MS_MS_GF_EValue, new TermInfo(CVID.MS_MS_GF_EValue, @"MS", @"MS:1002053", @"MS-GF:EValue", @"MS-GF E-value.", false));
            TermData.Add(CVID.MS_MS_GF_QValue, new TermInfo(CVID.MS_MS_GF_QValue, @"MS", @"MS:1002054", @"MS-GF:QValue", @"MS-GF Q-value.", false));
            TermData.Add(CVID.MS_MS_GF_PepQValue, new TermInfo(CVID.MS_MS_GF_PepQValue, @"MS", @"MS:1002055", @"MS-GF:PepQValue", @"MS-GF peptide-level Q-value.", false));
            TermData.Add(CVID.MS_MS_GF_PEP, new TermInfo(CVID.MS_MS_GF_PEP, @"MS", @"MS:1002056", @"MS-GF:PEP", @"MS-GF posterior error probability.", false));
            TermData.Add(CVID.MS_modification_specificity_protein_N_term, new TermInfo(CVID.MS_modification_specificity_protein_N_term, @"MS", @"MS:1002057", @"modification specificity protein N-term", @"As parameter for search engine: apply the modification only at the N-terminus of a protein.", false));
            TermData.Add(CVID.MS_modification_specificity_protein_C_term, new TermInfo(CVID.MS_modification_specificity_protein_C_term, @"MS", @"MS:1002058", @"modification specificity protein C-term", @"As parameter for search engine: apply the modification only at the C-terminus of a protein.", false));
            TermData.Add(CVID.MS_Microsoft_Excel, new TermInfo(CVID.MS_Microsoft_Excel, @"MS", @"MS:1002059", @"Microsoft Excel", @"Microsoft Excel (can be used for spectral counting).", false));
            TermData.Add(CVID.MS_database_UniProtKB_TrEMBL, new TermInfo(CVID.MS_database_UniProtKB_TrEMBL, @"MS", @"MS:1002060", @"database UniProtKB/TrEMBL", @"The name of the UniProtKB/TrEMBL database.", false));
            TermData.Add(CVID.MS_decoy_DB_from_UniProtKB_TrEMBL_OBSOLETE, new TermInfo(CVID.MS_decoy_DB_from_UniProtKB_TrEMBL_OBSOLETE, @"MS", @"MS:1002061", @"decoy DB from UniProtKB/TrEMBL", @"OBSOLETE Decoy database from a TrEMBL protein sequence database.", true));
            TermData.Add(CVID.MS_metabolic_labelling__natural_N__mainly_14N_, new TermInfo(CVID.MS_metabolic_labelling__natural_N__mainly_14N_, @"MS", @"MS:1002062", @"metabolic labelling: natural N (mainly 14N)", @"Metabolic labelling: natural N (mainly 14N).", false));
            TermData.Add(CVID.MS_FindPairs, new TermInfo(CVID.MS_FindPairs, @"MS", @"MS:1002063", @"FindPairs", @"Software e.g. for SILAC and 14N/15N workflow, part of the PeakQuant suite.", false));
            TermData.Add(CVID.MS_peptide_consensus_RT, new TermInfo(CVID.MS_peptide_consensus_RT, @"MS", @"MS:1002064", @"peptide consensus RT", @"Peptide consensus retention time.", false));
            TermData.Add(CVID.MS_peptide_consensus_m_z, new TermInfo(CVID.MS_peptide_consensus_m_z, @"MS", @"MS:1002065", @"peptide consensus m/z", @"Peptide consensus mass/charge ratio.", false));
            TermData.Add(CVID.MS_ratio_calculation_method, new TermInfo(CVID.MS_ratio_calculation_method, @"MS", @"MS:1002066", @"ratio calculation method", @"Method used to calculate the ratio.", false));
            TermData.Add(CVID.MS_protein_value__median_of_peptide_ratios, new TermInfo(CVID.MS_protein_value__median_of_peptide_ratios, @"MS", @"MS:1002067", @"protein value: median of peptide ratios", @"Protein quantification value calculated as median of peptide ratios.", false));
            TermData.Add(CVID.MS_metabolic_labelling__heavy_N__mainly_15N_, new TermInfo(CVID.MS_metabolic_labelling__heavy_N__mainly_15N_, @"MS", @"MS:1002068", @"metabolic labelling: heavy N (mainly 15N)", @"Metabolic labelling: heavy N (mainly 15N).", false));
            TermData.Add(CVID.MS_metabolic_labelling_purity, new TermInfo(CVID.MS_metabolic_labelling_purity, @"MS", @"MS:1002069", @"metabolic labelling purity", @"Metabolic labelling: Description of labelling purity. Usually the purity of feeding material (e.g. 95%), or the inclusion rate derived from isotopic peak pattern shape.", false));
            TermData.Add(CVID.MS_t_test, new TermInfo(CVID.MS_t_test, @"MS", @"MS:1002070", @"t-test", @"Perform a t-test (two groups). Specify in string value, whether paired / unpaired, variance equal / different, one- / two-sided version is performed.", false));
            TermData.Add(CVID.MS_ANOVA_test, new TermInfo(CVID.MS_ANOVA_test, @"MS", @"MS:1002071", @"ANOVA-test", @"Perform an ANOVA-test (more than two groups). Specify in string value, which version is performed.", false));
            TermData.Add(CVID.MS_p_value, new TermInfo(CVID.MS_p_value, @"MS", @"MS:1002072", @"p-value", @"P-value as result of one of the processing steps described. Specify in the description, which processing step it was.", false));
            TermData.Add(CVID.MS_mzIdentML_format, new TermInfo(CVID.MS_mzIdentML_format, @"MS", @"MS:1002073", @"mzIdentML format", @"The mzIdentML format for peptide and protein identification data from the PSI. File extension '.mzid'.", false));
            TermData.Add(CVID.MS_quantification_file_format, new TermInfo(CVID.MS_quantification_file_format, @"MS", @"MS:1002074", @"quantification file format", @"File format containing quantification results.", false));
            TermData.Add(CVID.MS_mzQuantML_format, new TermInfo(CVID.MS_mzQuantML_format, @"MS", @"MS:1002075", @"mzQuantML format", @"The mzQuantML format for quantification data from the PSI. File extension '.mzq'.", false));
            TermData.Add(CVID.MS_PAnalyzer, new TermInfo(CVID.MS_PAnalyzer, @"MS", @"MS:1002076", @"PAnalyzer", @"PAnalyzer software for getting protein evidence categories.", false));
            TermData.Add(CVID.MS_impact, new TermInfo(CVID.MS_impact, @"MS", @"MS:1002077", @"impact", @"Bruker Daltonics' impact: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_1__Static_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_1__Static_Modification_OBSOLETE, @"MS", @"MS:1002078", @"ProteomeDiscoverer:1. Static Modification", @"OBSOLETE ProteomeDiscoverer's 1st static post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_2__Static_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_2__Static_Modification_OBSOLETE, @"MS", @"MS:1002079", @"ProteomeDiscoverer:2. Static Modification", @"OBSOLETE ProteomeDiscoverer's 2nd static post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_Before, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_Before, @"MS", @"MS:1002080", @"ProteomeDiscoverer:Spectrum Selector:Precursor Clipping Range Before", @"Precursor clipping range before.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_After, new TermInfo(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_After, @"MS", @"MS:1002081", @"ProteomeDiscoverer:Spectrum Selector:Precursor Clipping Range After", @"Precursor clipping range after.", false));
            TermData.Add(CVID.MS_first_column_elution_time, new TermInfo(CVID.MS_first_column_elution_time, @"MS", @"MS:1002082", @"first column elution time", @"The time of elution from the first chromatographic column in the chromatographic separation step, relative to the start of chromatography on the first column.", false));
            TermData.Add(CVID.MS_second_column_elution_time, new TermInfo(CVID.MS_second_column_elution_time, @"MS", @"MS:1002083", @"second column elution time", @"The time of elution from the second chromatographic column in the chromatographic separation step, relative to the start of the chromatography on the second column.", false));
            TermData.Add(CVID.MS_multidimensional_chromatography_modulation_description, new TermInfo(CVID.MS_multidimensional_chromatography_modulation_description, @"MS", @"MS:1002084", @"multidimensional chromatography modulation description", @"Multidimensional chromatography modulation description.", false));
            TermData.Add(CVID.MS_two_dimensional_gas_chromatography_with_fixed_modulation_time, new TermInfo(CVID.MS_two_dimensional_gas_chromatography_with_fixed_modulation_time, @"MS", @"MS:1002085", @"two-dimensional gas chromatography with fixed modulation time", @"Two-dimensional gas chromatography where a single modulation time is used throughout the acquisition.", false));
            TermData.Add(CVID.MS_two_dimensional_gas_chromatography_with_discrete_modulation_time_steps, new TermInfo(CVID.MS_two_dimensional_gas_chromatography_with_discrete_modulation_time_steps, @"MS", @"MS:1002086", @"two-dimensional gas chromatography with discrete modulation time steps", @"Two-dimensional gas chromatography where the acquisition is divided into steps, each with a different modulation time.", false));
            TermData.Add(CVID.MS_two_dimensional_liquid_chromatography_with_fixed_modulation_time, new TermInfo(CVID.MS_two_dimensional_liquid_chromatography_with_fixed_modulation_time, @"MS", @"MS:1002087", @"two-dimensional liquid chromatography with fixed modulation time", @"Two-dimensional liquid chromatography where a single modulation time is used throughout the acquisition.", false));
            TermData.Add(CVID.MS_two_dimensional_liquid_chromatography_with_discrete_modulation_time_steps, new TermInfo(CVID.MS_two_dimensional_liquid_chromatography_with_discrete_modulation_time_steps, @"MS", @"MS:1002088", @"two-dimensional liquid chromatography with discrete modulation time steps", @"Two-dimensional liquid chromatography where the acquisition is divided into steps, each with a different modulation time.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_XCorr_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_XCorr_Threshold, @"MS", @"MS:1002089", @"ProteomeDiscoverer:Peptide Without Protein XCorr Threshold", @"XCorr threshold for storing peptides that do not belong to a protein.", false));
            TermData.Add(CVID.MS_Calculate_Probability_Scores, new TermInfo(CVID.MS_Calculate_Probability_Scores, @"MS", @"MS:1002090", @"Calculate Probability Scores", @"Flag indicating that a probability score for the assessment that a reported peptide match is a random occurrence is calculated.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Maximum_Delta_Cn, new TermInfo(CVID.MS_ProteomeDiscoverer_Maximum_Delta_Cn, @"MS", @"MS:1002091", @"ProteomeDiscoverer:Maximum Delta Cn", @"Delta Cn threshold for filtering out PSM's.", false));
            TermData.Add(CVID.MS_Percolator_Validation_based_on, new TermInfo(CVID.MS_Percolator_Validation_based_on, @"MS", @"MS:1002092", @"Percolator:Validation based on", @"Algorithm (e.g. q-value or PEP) used for calculation of the validation score using Percolator.", false));
            TermData.Add(CVID.MS_search_engine_input_parameter, new TermInfo(CVID.MS_search_engine_input_parameter, @"MS", @"MS:1002093", @"search engine input parameter", @"Search engine input parameter.", false));
            TermData.Add(CVID.MS_common_search_engine_input_parameter, new TermInfo(CVID.MS_common_search_engine_input_parameter, @"MS", @"MS:1002094", @"common search engine input parameter", @"Search engine input parameter that is shared by more than one search engine.", false));
            TermData.Add(CVID.MS_Mascot_input_parameter, new TermInfo(CVID.MS_Mascot_input_parameter, @"MS", @"MS:1002095", @"Mascot input parameter", @"Search engine input parameters specific to Mascot.", false));
            TermData.Add(CVID.MS_SEQUEST_input_parameter, new TermInfo(CVID.MS_SEQUEST_input_parameter, @"MS", @"MS:1002096", @"SEQUEST input parameter", @"Search engine input parameters specific to SEQUEST.", false));
            TermData.Add(CVID.MS_Phenyx_input_parameter, new TermInfo(CVID.MS_Phenyx_input_parameter, @"MS", @"MS:1002097", @"Phenyx input parameter", @"Search engine input parameters specific to Phenyx.", false));
            TermData.Add(CVID.MS_ProteinExtractor_input_parameter, new TermInfo(CVID.MS_ProteinExtractor_input_parameter, @"MS", @"MS:1002098", @"ProteinExtractor input parameter", @"Search engine input parameters specific to ProteinExtractor.", false));
            TermData.Add(CVID.MS_OMSSA_input_parameter, new TermInfo(CVID.MS_OMSSA_input_parameter, @"MS", @"MS:1002099", @"OMSSA input parameter", @"Search engine input parameters specific to OMSSA.", false));
            TermData.Add(CVID.MS_ProteinScape_input_parameter, new TermInfo(CVID.MS_ProteinScape_input_parameter, @"MS", @"MS:1002100", @"ProteinScape input parameter", @"Search engine input parameters specific to ProteinScape.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_input_parameter, new TermInfo(CVID.MS_ProteomeDiscoverer_input_parameter, @"MS", @"MS:1002101", @"ProteomeDiscoverer input parameter", @"Search engine input parameters specific to ProteomeDiscoverer.", false));
            TermData.Add(CVID.MS_software_input_parameter, new TermInfo(CVID.MS_software_input_parameter, @"MS", @"MS:1002103", @"software input parameter", @"Software input parameters.", false));
            TermData.Add(CVID.MS_common_software_input_parameter, new TermInfo(CVID.MS_common_software_input_parameter, @"MS", @"MS:1002104", @"common software input parameter", @"Software input parameter that is shared by more than one software.", false));
            TermData.Add(CVID.MS_software_specific_input_parameter, new TermInfo(CVID.MS_software_specific_input_parameter, @"MS", @"MS:1002105", @"software specific input parameter", @"Software specific input parameter.", false));
            TermData.Add(CVID.MS_Scaffold_input_parameter, new TermInfo(CVID.MS_Scaffold_input_parameter, @"MS", @"MS:1002106", @"Scaffold input parameter", @"Search engine input parameters specific to Scaffold.", false));
            TermData.Add(CVID.MS_Percolator_input_parameter, new TermInfo(CVID.MS_Percolator_input_parameter, @"MS", @"MS:1002107", @"Percolator input parameter", @"Search engine input parameters specific to Percolator.", false));
            TermData.Add(CVID.MS_higher_score_better, new TermInfo(CVID.MS_higher_score_better, @"MS", @"MS:1002108", @"higher score better", @"Indicates that a higher score is better.", false));
            TermData.Add(CVID.MS_lower_score_better, new TermInfo(CVID.MS_lower_score_better, @"MS", @"MS:1002109", @"lower score better", @"Indicates that a lower score is better.", false));
            TermData.Add(CVID.MS_assay_attribute, new TermInfo(CVID.MS_assay_attribute, @"MS", @"MS:1002110", @"assay attribute", @"Attribute describing an assay.", false));
            TermData.Add(CVID.MS_assay_label_attribute, new TermInfo(CVID.MS_assay_label_attribute, @"MS", @"MS:1002111", @"assay label attribute", @"Attribute describing an assay label.", false));
            TermData.Add(CVID.MS_protein_group_list_attribute, new TermInfo(CVID.MS_protein_group_list_attribute, @"MS", @"MS:1002112", @"protein group list attribute", @"Attribute describing a protein group list.", false));
            TermData.Add(CVID.MS_protein_group_attribute, new TermInfo(CVID.MS_protein_group_attribute, @"MS", @"MS:1002113", @"protein group attribute", @"Attribute describing a protein group.", false));
            TermData.Add(CVID.MS_protein_list_attribute, new TermInfo(CVID.MS_protein_list_attribute, @"MS", @"MS:1002114", @"protein list attribute", @"Attribute describing a protein list.", false));
            TermData.Add(CVID.MS_peptide_consensus_list_attribute, new TermInfo(CVID.MS_peptide_consensus_list_attribute, @"MS", @"MS:1002115", @"peptide consensus list attribute", @"Attribute describing a peptide consensus list.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 3</summary>
        private static void PopulateTermData_MS_Part3()
        {
            TermData.Add(CVID.MS_peptide_consensus_attribute, new TermInfo(CVID.MS_peptide_consensus_attribute, @"MS", @"MS:1002116", @"peptide consensus attribute", @"Attribute describing a peptide consensus.", false));
            TermData.Add(CVID.MS_small_molecule_list_attribute, new TermInfo(CVID.MS_small_molecule_list_attribute, @"MS", @"MS:1002117", @"small molecule list attribute", @"Attribute describing a small molecule list.", false));
            TermData.Add(CVID.MS_small_molecule_attribute, new TermInfo(CVID.MS_small_molecule_attribute, @"MS", @"MS:1002118", @"small molecule attribute", @"Attribute describing a small molecule.", false));
            TermData.Add(CVID.MS_small_molecule_modification_attribute, new TermInfo(CVID.MS_small_molecule_modification_attribute, @"MS", @"MS:1002119", @"small molecule modification attribute", @"Attribute describing a small molecule modification.", false));
            TermData.Add(CVID.MS_experiment_name, new TermInfo(CVID.MS_experiment_name, @"MS", @"MS:1002120", @"experiment name", @"The name for identifying an experiment.", false));
            TermData.Add(CVID.MS_spectral_count_feature, new TermInfo(CVID.MS_spectral_count_feature, @"MS", @"MS:1002121", @"spectral count feature", @"Dummy decribing a spectral count feature.", false));
            TermData.Add(CVID.MS_counts_reporting, new TermInfo(CVID.MS_counts_reporting, @"MS", @"MS:1002122", @"counts reporting", @"FeatureList of spectral counts.", false));
            TermData.Add(CVID.MS_x_Tracker, new TermInfo(CVID.MS_x_Tracker, @"MS", @"MS:1002123", @"x-Tracker", @"X-Tracker generic tool for quantitative proteomics.", false));
            TermData.Add(CVID.MS_ProteoSuite, new TermInfo(CVID.MS_ProteoSuite, @"MS", @"MS:1002124", @"ProteoSuite", @"ProteoSuite software for the analysis of quantitative proteomics data.", false));
            TermData.Add(CVID.MS_combined_FDRScore_OBSOLETE, new TermInfo(CVID.MS_combined_FDRScore_OBSOLETE, @"MS", @"MS:1002125", @"combined FDRScore", @"OBSOLETE FDRScore values specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools.", true));
            TermData.Add(CVID.MS_database_UniProtKB, new TermInfo(CVID.MS_database_UniProtKB, @"MS", @"MS:1002126", @"database UniProtKB", @"The name of the UniProtKB knowledgebase.", false));
            TermData.Add(CVID.MS_identification_file_attribute, new TermInfo(CVID.MS_identification_file_attribute, @"MS", @"MS:1002127", @"identification file attribute", @"Attribute describing an identification file.", false));
            TermData.Add(CVID.MS_method_file_format, new TermInfo(CVID.MS_method_file_format, @"MS", @"MS:1002128", @"method file format", @"Attribute describing a method file format.", false));
            TermData.Add(CVID.MS_ITRAQAnalyzer, new TermInfo(CVID.MS_ITRAQAnalyzer, @"MS", @"MS:1002129", @"ITRAQAnalyzer", @"Software for iTRAQ workflow. Extracts and normalizes iTRAQ information from an MS experiment.", false));
            TermData.Add(CVID.MS_identification_file_format, new TermInfo(CVID.MS_identification_file_format, @"MS", @"MS:1002130", @"identification file format", @"Attribute describing an identification file format.", false));
            TermData.Add(CVID.MS_TOPP_noise_filter, new TermInfo(CVID.MS_TOPP_noise_filter, @"MS", @"MS:1002131", @"TOPP noise filter", @"Noise filter component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_NoiseFilterGaussian, new TermInfo(CVID.MS_TOPP_NoiseFilterGaussian, @"MS", @"MS:1002132", @"TOPP NoiseFilterGaussian", @"Removes noise from profile spectra by using a gaussian smoothing.", false));
            TermData.Add(CVID.MS_TOPP_NoiseFilterSGolay, new TermInfo(CVID.MS_TOPP_NoiseFilterSGolay, @"MS", @"MS:1002133", @"TOPP NoiseFilterSGolay", @"Removes noise from profile spectra by using a Savitzky-Golay smoothing.", false));
            TermData.Add(CVID.MS_TOPP_peak_picker, new TermInfo(CVID.MS_TOPP_peak_picker, @"MS", @"MS:1002134", @"TOPP peak picker", @"Peak picker component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_PeakPickerHiRes, new TermInfo(CVID.MS_TOPP_PeakPickerHiRes, @"MS", @"MS:1002135", @"TOPP PeakPickerHiRes", @"Finds mass spectrometric peaks in high-resoluted profile mass spectra.", false));
            TermData.Add(CVID.MS_TOPP_PeakPickerWavelet, new TermInfo(CVID.MS_TOPP_PeakPickerWavelet, @"MS", @"MS:1002136", @"TOPP PeakPickerWavelet", @"Finds mass spectrometric peaks with a wavelet algorithm in low-resoluted profile mass spectra.", false));
            TermData.Add(CVID.MS_TOPP_spectra_filter, new TermInfo(CVID.MS_TOPP_spectra_filter, @"MS", @"MS:1002137", @"TOPP spectra filter", @"Spectra filter component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterBernNorm, new TermInfo(CVID.MS_TOPP_SpectraFilterBernNorm, @"MS", @"MS:1002138", @"TOPP SpectraFilterBernNorm", @"Applies a Bern et al normalization to peak spectra.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterMarkerMower, new TermInfo(CVID.MS_TOPP_SpectraFilterMarkerMower, @"MS", @"MS:1002139", @"TOPP SpectraFilterMarkerMower", @"Applies a filter to peak spectra for marked peaks.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterNLargest, new TermInfo(CVID.MS_TOPP_SpectraFilterNLargest, @"MS", @"MS:1002140", @"TOPP SpectraFilterNLargest", @"Retains the n largest peaks of a peak spectra.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterNormalizer, new TermInfo(CVID.MS_TOPP_SpectraFilterNormalizer, @"MS", @"MS:1002141", @"TOPP SpectraFilterNormalizer", @"Applies a TIC/maximal intensity normalization to peak spectra.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterParentPeakMower, new TermInfo(CVID.MS_TOPP_SpectraFilterParentPeakMower, @"MS", @"MS:1002142", @"TOPP SpectraFilterParentPeakMower", @"Filters putative unfragmented precursor ions from tandem spectra.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterScaler, new TermInfo(CVID.MS_TOPP_SpectraFilterScaler, @"MS", @"MS:1002143", @"TOPP SpectraFilterScaler", @"Applies a filter to peak spectra after intensity scaling according to rank.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterSqrtMower, new TermInfo(CVID.MS_TOPP_SpectraFilterSqrtMower, @"MS", @"MS:1002144", @"TOPP SpectraFilterSqrtMower", @"Applies a filter to peak spectra after intensity scaling to the square root.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterThresholdMower, new TermInfo(CVID.MS_TOPP_SpectraFilterThresholdMower, @"MS", @"MS:1002145", @"TOPP SpectraFilterThresholdMower", @"Applies a filter of peaks below a given threshold to peak spectra.", false));
            TermData.Add(CVID.MS_TOPP_SpectraFilterWindowMower, new TermInfo(CVID.MS_TOPP_SpectraFilterWindowMower, @"MS", @"MS:1002146", @"TOPP SpectraFilterWindowMower", @"Applies a filter of the largest peaks in a sliding window over a peak spectrum.", false));
            TermData.Add(CVID.MS_TOPP_map_aligner, new TermInfo(CVID.MS_TOPP_map_aligner, @"MS", @"MS:1002147", @"TOPP map aligner", @"Map aligner component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_MapAlignerIdentification, new TermInfo(CVID.MS_TOPP_MapAlignerIdentification, @"MS", @"MS:1002148", @"TOPP MapAlignerIdentification", @"Corrects retention time distortions between maps based on common peptide identifications.", false));
            TermData.Add(CVID.MS_TOPP_MapAlignerPoseClustering, new TermInfo(CVID.MS_TOPP_MapAlignerPoseClustering, @"MS", @"MS:1002149", @"TOPP MapAlignerPoseClustering", @"Corrects retention time distortions between maps using a pose clustering approach.", false));
            TermData.Add(CVID.MS_TOPP_MapAlignerSpectrum, new TermInfo(CVID.MS_TOPP_MapAlignerSpectrum, @"MS", @"MS:1002150", @"TOPP MapAlignerSpectrum", @"Corrects retention time distortions between maps by spectrum alignment.", false));
            TermData.Add(CVID.MS_numerator_data_type_attribute, new TermInfo(CVID.MS_numerator_data_type_attribute, @"MS", @"MS:1002151", @"numerator data type attribute", @"Attribute describing the data type of the numerator of a ratio.", false));
            TermData.Add(CVID.MS_denominator_data_type_attribute, new TermInfo(CVID.MS_denominator_data_type_attribute, @"MS", @"MS:1002152", @"denominator data type attribute", @"Attribute describing the data type of the denominator of a ratio.", false));
            TermData.Add(CVID.MS_protein_level_PSM_counts, new TermInfo(CVID.MS_protein_level_PSM_counts, @"MS", @"MS:1002153", @"protein level PSM counts", @"The number of spectra identified for this protein in spectral counting.", false));
            TermData.Add(CVID.MS_TOPP_DTAExtractor, new TermInfo(CVID.MS_TOPP_DTAExtractor, @"MS", @"MS:1002154", @"TOPP DTAExtractor", @"Extracts spectra of an MS run file to several files in DTA format.", false));
            TermData.Add(CVID.MS_TOPP_IDMerger, new TermInfo(CVID.MS_TOPP_IDMerger, @"MS", @"MS:1002155", @"TOPP IDMerger", @"Merges several protein/peptide identification files into one file.", false));
            TermData.Add(CVID.MS_TOPP_IDFileConverter, new TermInfo(CVID.MS_TOPP_IDFileConverter, @"MS", @"MS:1002156", @"TOPP IDFileConverter", @"Converts identification engine file formats.", false));
            TermData.Add(CVID.MS_TOPP_SpectraMerger, new TermInfo(CVID.MS_TOPP_SpectraMerger, @"MS", @"MS:1002157", @"TOPP SpectraMerger", @"Merges spectra from an LC/MS map, either by precursor or by RT blocks.", false));
            TermData.Add(CVID.MS_TOPP_MzTabExporter, new TermInfo(CVID.MS_TOPP_MzTabExporter, @"MS", @"MS:1002158", @"TOPP MzTabExporter", @"Exports various XML formats to an mzTab file.", false));
            TermData.Add(CVID.MS_TOPP_MassTraceExtractor, new TermInfo(CVID.MS_TOPP_MassTraceExtractor, @"MS", @"MS:1002159", @"TOPP MassTraceExtractor", @"Annotates mass traces in centroided LC/MS maps.", false));
            TermData.Add(CVID.MS_TOPP_PrecursorMassCorrector, new TermInfo(CVID.MS_TOPP_PrecursorMassCorrector, @"MS", @"MS:1002160", @"TOPP PrecursorMassCorrector", @"Correct the precursor entries of tandem MS scans.", false));
            TermData.Add(CVID.MS_TOPP_HighResPrecursorMassCorrector, new TermInfo(CVID.MS_TOPP_HighResPrecursorMassCorrector, @"MS", @"MS:1002161", @"TOPP HighResPrecursorMassCorrector", @"Performs precursor mz correction on centroided high resolution data.", false));
            TermData.Add(CVID.MS_TOPP_AdditiveSeries, new TermInfo(CVID.MS_TOPP_AdditiveSeries, @"MS", @"MS:1002162", @"TOPP AdditiveSeries", @"Computes an additive series to quantify a peptide in a set of samples.", false));
            TermData.Add(CVID.MS_TOPP_Decharger, new TermInfo(CVID.MS_TOPP_Decharger, @"MS", @"MS:1002163", @"TOPP Decharger", @"Decharges and merges different feature charge variants of the same chemical entity.", false));
            TermData.Add(CVID.MS_TOPP_EICExtractor, new TermInfo(CVID.MS_TOPP_EICExtractor, @"MS", @"MS:1002164", @"TOPP EICExtractor", @"Quantifies signals at given positions in (raw or picked) LC/MS maps.", false));
            TermData.Add(CVID.MS_TOPP_feature_finder, new TermInfo(CVID.MS_TOPP_feature_finder, @"MS", @"MS:1002165", @"TOPP feature finder", @"Feature finder component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_FeatureFinderCentroided, new TermInfo(CVID.MS_TOPP_FeatureFinderCentroided, @"MS", @"MS:1002166", @"TOPP FeatureFinderCentroided", @"Detects two-dimensional features in centroided LC-MS data.", false));
            TermData.Add(CVID.MS_TOPP_FeatureFinderRaw, new TermInfo(CVID.MS_TOPP_FeatureFinderRaw, @"MS", @"MS:1002167", @"TOPP FeatureFinderRaw", @"Detects two-dimensional features in uncentroided LC-MS data.", false));
            TermData.Add(CVID.MS_TOPP_FeatureFinderIsotopeWavelet, new TermInfo(CVID.MS_TOPP_FeatureFinderIsotopeWavelet, @"MS", @"MS:1002168", @"TOPP FeatureFinderIsotopeWavelet", @"Detects two-dimensional features in uncentroided LC-MS data with a wavelet algorithm.", false));
            TermData.Add(CVID.MS_TOPP_FeatureFinderMetabo, new TermInfo(CVID.MS_TOPP_FeatureFinderMetabo, @"MS", @"MS:1002169", @"TOPP FeatureFinderMetabo", @"Detects two-dimensional features in centroided LC-MS data of metabolites.", false));
            TermData.Add(CVID.MS_TOPP_FeatureFinderMRM, new TermInfo(CVID.MS_TOPP_FeatureFinderMRM, @"MS", @"MS:1002170", @"TOPP FeatureFinderMRM", @"Quantifies features LC-MS/MS MRM data.", false));
            TermData.Add(CVID.MS_TOPP_ProteinQuantifier, new TermInfo(CVID.MS_TOPP_ProteinQuantifier, @"MS", @"MS:1002171", @"TOPP ProteinQuantifier", @"Computes protein abundances from annotated feature/consensus maps.", false));
            TermData.Add(CVID.MS_TOPP_ConsensusMapNormalizer, new TermInfo(CVID.MS_TOPP_ConsensusMapNormalizer, @"MS", @"MS:1002172", @"TOPP ConsensusMapNormalizer", @"Normalizes maps of one consensus XML file (after linking).", false));
            TermData.Add(CVID.MS_TOPP_MapRTTransformer, new TermInfo(CVID.MS_TOPP_MapRTTransformer, @"MS", @"MS:1002173", @"TOPP MapRTTransformer", @"Applies retention time transformations to maps.", false));
            TermData.Add(CVID.MS_TOPP_feature_linker, new TermInfo(CVID.MS_TOPP_feature_linker, @"MS", @"MS:1002174", @"TOPP feature linker", @"Feature linker component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_FeatureLinkerLabeled, new TermInfo(CVID.MS_TOPP_FeatureLinkerLabeled, @"MS", @"MS:1002175", @"TOPP FeatureLinkerLabeled", @"Groups corresponding isotope-labeled features in a feature map.", false));
            TermData.Add(CVID.MS_TOPP_FeatureLinkerUnlabeled, new TermInfo(CVID.MS_TOPP_FeatureLinkerUnlabeled, @"MS", @"MS:1002176", @"TOPP FeatureLinkerUnlabeled", @"Groups corresponding features from multiple maps.", false));
            TermData.Add(CVID.MS_TOPP_FeatureLinkerUnlabeledQT, new TermInfo(CVID.MS_TOPP_FeatureLinkerUnlabeledQT, @"MS", @"MS:1002177", @"TOPP FeatureLinkerUnlabeledQT", @"Groups corresponding features from multiple maps using a quality threshold clustering approach.", false));
            TermData.Add(CVID.MS_TOPP_CompNovo, new TermInfo(CVID.MS_TOPP_CompNovo, @"MS", @"MS:1002178", @"TOPP CompNovo", @"Performs a peptide/protein identification with the CompNovo engine.", false));
            TermData.Add(CVID.MS_TOPP_CompNovoCID, new TermInfo(CVID.MS_TOPP_CompNovoCID, @"MS", @"MS:1002179", @"TOPP CompNovoCID", @"Performs a peptide/protein identification with the CompNovo engine in collision-induced dissociation (CID) mode.", false));
            TermData.Add(CVID.MS_TOPP_software_adaptor, new TermInfo(CVID.MS_TOPP_software_adaptor, @"MS", @"MS:1002180", @"TOPP software adaptor", @"Software adaptor to an external program in the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_InspectAdapter, new TermInfo(CVID.MS_TOPP_InspectAdapter, @"MS", @"MS:1002181", @"TOPP InspectAdapter", @"Identifies MS2 spectra using the external program Inspect.", false));
            TermData.Add(CVID.MS_TOPP_MascotAdapter, new TermInfo(CVID.MS_TOPP_MascotAdapter, @"MS", @"MS:1002182", @"TOPP MascotAdapter", @"Identifies MS2 spectra using the external program Mascot.", false));
            TermData.Add(CVID.MS_TOPP_MascotAdapterOnline, new TermInfo(CVID.MS_TOPP_MascotAdapterOnline, @"MS", @"MS:1002183", @"TOPP MascotAdapterOnline", @"Identifies MS2 spectra using the online version of the external program Mascot.", false));
            TermData.Add(CVID.MS_TOPP_OMSSAAdapter, new TermInfo(CVID.MS_TOPP_OMSSAAdapter, @"MS", @"MS:1002184", @"TOPP OMSSAAdapter", @"Identifies MS2 spectra using the external program OMSSA.", false));
            TermData.Add(CVID.MS_TOPP_PepNovoAdapter, new TermInfo(CVID.MS_TOPP_PepNovoAdapter, @"MS", @"MS:1002185", @"TOPP PepNovoAdapter", @"Identifies MS2 spectra using the external program PepNovo.", false));
            TermData.Add(CVID.MS_TOPP_XTandemAdapter, new TermInfo(CVID.MS_TOPP_XTandemAdapter, @"MS", @"MS:1002186", @"TOPP XTandemAdapter", @"Identifies MS2 spectra using the external program XTandem.", false));
            TermData.Add(CVID.MS_TOPP_SpecLibSearcher, new TermInfo(CVID.MS_TOPP_SpecLibSearcher, @"MS", @"MS:1002187", @"TOPP SpecLibSearcher", @"Identifies peptide MS2 spectra by spectral matching with a searchable spectral library.", false));
            TermData.Add(CVID.MS_TOPP_ConsensusID, new TermInfo(CVID.MS_TOPP_ConsensusID, @"MS", @"MS:1002188", @"TOPP ConsensusID", @"Computes a consensus identification from peptide identifications of several identification engines.", false));
            TermData.Add(CVID.MS_TOPP_IDConflictResolver, new TermInfo(CVID.MS_TOPP_IDConflictResolver, @"MS", @"MS:1002189", @"TOPP IDConflictResolver", @"Resolves ambiguous annotations of features with peptide identifications.", false));
            TermData.Add(CVID.MS_TOPP_IDFilter, new TermInfo(CVID.MS_TOPP_IDFilter, @"MS", @"MS:1002190", @"TOPP IDFilter", @"Filters results from protein or peptide identification engines based on different criteria.", false));
            TermData.Add(CVID.MS_TOPP_IDMapper, new TermInfo(CVID.MS_TOPP_IDMapper, @"MS", @"MS:1002191", @"TOPP IDMapper", @"Assigns protein/peptide identifications to feature or consensus features.", false));
            TermData.Add(CVID.MS_TOPP_IDPosteriorErrorProbability, new TermInfo(CVID.MS_TOPP_IDPosteriorErrorProbability, @"MS", @"MS:1002192", @"TOPP IDPosteriorErrorProbability", @"Estimates posterior error probabilities using a mixture model.", false));
            TermData.Add(CVID.MS_TOPP_IDRTCalibration, new TermInfo(CVID.MS_TOPP_IDRTCalibration, @"MS", @"MS:1002193", @"TOPP IDRTCalibration", @"Calibrate Retention times of peptide hits to standards.", false));
            TermData.Add(CVID.MS_TOPP_PeptideIndexer, new TermInfo(CVID.MS_TOPP_PeptideIndexer, @"MS", @"MS:1002194", @"TOPP PeptideIndexer", @"Refreshes the protein references for all peptide hits.", false));
            TermData.Add(CVID.MS_TOPP_PrecursorIonSelector, new TermInfo(CVID.MS_TOPP_PrecursorIonSelector, @"MS", @"MS:1002195", @"TOPP PrecursorIonSelector", @"A tool for precursor ion selection based on identification results.", false));
            TermData.Add(CVID.MS_TOPP_MRMMapper, new TermInfo(CVID.MS_TOPP_MRMMapper, @"MS", @"MS:1002196", @"TOPP MRMMapper", @"MRMMapper maps measured chromatograms (mzML) and the transitions used (TraML).", false));
            TermData.Add(CVID.MS_TOPP_OpenSwath_component, new TermInfo(CVID.MS_TOPP_OpenSwath_component, @"MS", @"MS:1002197", @"TOPP OpenSwath component", @"OpenSwath component of the TOPP software.", false));
            TermData.Add(CVID.MS_TOPP_OpenSwathAnalyzer, new TermInfo(CVID.MS_TOPP_OpenSwathAnalyzer, @"MS", @"MS:1002198", @"TOPP OpenSwathAnalyzer", @"Picks peaks and finds features in an SRM experiment.", false));
            TermData.Add(CVID.MS_TOPP_OpenSwathChromatogramExtractor, new TermInfo(CVID.MS_TOPP_OpenSwathChromatogramExtractor, @"MS", @"MS:1002199", @"TOPP OpenSwathChromatogramExtractor", @"Extract chromatograms (XIC) from a MS2 map file.", false));
            TermData.Add(CVID.MS_TOPP_OpenSwathDecoyGenerator, new TermInfo(CVID.MS_TOPP_OpenSwathDecoyGenerator, @"MS", @"MS:1002200", @"TOPP OpenSwathDecoyGenerator", @"Generates decoys according to different models for a specific TraML.", false));
            TermData.Add(CVID.MS_TOPP_OpenSwathFeatureXMLToTSV, new TermInfo(CVID.MS_TOPP_OpenSwathFeatureXMLToTSV, @"MS", @"MS:1002201", @"TOPP OpenSwathFeatureXMLToTSV", @"Converts a featureXML to a mProphet tsv (tab separated values).", false));
            TermData.Add(CVID.MS_TOPP_OpenSwathRTNormalizer, new TermInfo(CVID.MS_TOPP_OpenSwathRTNormalizer, @"MS", @"MS:1002202", @"TOPP OpenSwathRTNormalizer", @"Generates a transformation file for retention time space into normalized space.", false));
            TermData.Add(CVID.MS_TOPP_ProteinInference, new TermInfo(CVID.MS_TOPP_ProteinInference, @"MS", @"MS:1002203", @"TOPP ProteinInference", @"Infer proteins from a list of (high-confidence) peptides.", false));
            TermData.Add(CVID.MS_TOPP_FalseDiscoveryRate, new TermInfo(CVID.MS_TOPP_FalseDiscoveryRate, @"MS", @"MS:1002204", @"TOPP FalseDiscoveryRate", @"Estimates the false discovery rate on peptide and protein level using decoy searches.", false));
            TermData.Add(CVID.MS_ProteoWizard_msconvert, new TermInfo(CVID.MS_ProteoWizard_msconvert, @"MS", @"MS:1002205", @"ProteoWizard msconvert", @"Converts, filters, and processes mass spectrometry data in variety of formats.", false));
            TermData.Add(CVID.MS_ProteoWizard_idconvert, new TermInfo(CVID.MS_ProteoWizard_idconvert, @"MS", @"MS:1002206", @"ProteoWizard idconvert", @"Converts, filters, and processes identifications from shotgun proteomics experiments.", false));
            TermData.Add(CVID.MS_ProteoWizard_chainsaw, new TermInfo(CVID.MS_ProteoWizard_chainsaw, @"MS", @"MS:1002207", @"ProteoWizard chainsaw", @"Filters and processes protein sequence databases.", false));
            TermData.Add(CVID.MS_ProteoWizard_msaccess, new TermInfo(CVID.MS_ProteoWizard_msaccess, @"MS", @"MS:1002208", @"ProteoWizard msaccess", @"Filters, processes, and displays mass spectrometry data in a variety of ways.", false));
            TermData.Add(CVID.MS_ProteoWizard_SeeMS, new TermInfo(CVID.MS_ProteoWizard_SeeMS, @"MS", @"MS:1002209", @"ProteoWizard SeeMS", @"An interactive GUI application to view and filter mass spectrometry data in a variety of formats.", false));
            TermData.Add(CVID.MS_IsobariQ, new TermInfo(CVID.MS_IsobariQ, @"MS", @"MS:1002210", @"IsobariQ", @"A quantitative software package designed for analysis of IPTL, TMT and iTRAQ data.", false));
            TermData.Add(CVID.MS_Variance_stabilizing_normalization, new TermInfo(CVID.MS_Variance_stabilizing_normalization, @"MS", @"MS:1002211", @"Variance stabilizing normalization", @"The model incorporates data calibration (normalization), a model for the dependence of the variance on the mean intensity, and a variance stabilizing data transformation.", false));
            TermData.Add(CVID.MS_IPTL_quantitation_analysis, new TermInfo(CVID.MS_IPTL_quantitation_analysis, @"MS", @"MS:1002212", @"IPTL quantitation analysis", @"Quantification analysis using a labelling strategy where both peptide termini are labelled so that the peptides from different labelling schema are isobaric.", false));
            TermData.Add(CVID.MS_PAnalyzer_conclusive_protein, new TermInfo(CVID.MS_PAnalyzer_conclusive_protein, @"MS", @"MS:1002213", @"PAnalyzer:conclusive protein", @"A protein identified by at least one unique (distinct, discrete) peptide (peptides are considered different only if they can be distinguished by evidence in mass spectrum).", false));
            TermData.Add(CVID.MS_PAnalyzer_indistinguishable_protein, new TermInfo(CVID.MS_PAnalyzer_indistinguishable_protein, @"MS", @"MS:1002214", @"PAnalyzer:indistinguishable protein", @"A member of a group of proteins sharing all peptides that are exclusive to the group (peptides are considered different only if they can be distinguished by evidence in mass spectrum).", false));
            TermData.Add(CVID.MS_PAnalyzer_non_conclusive_protein, new TermInfo(CVID.MS_PAnalyzer_non_conclusive_protein, @"MS", @"MS:1002215", @"PAnalyzer:non-conclusive protein", @"A protein sharing all its matched peptides with either conclusive or indistinguishable proteins (peptides are considered different only if they can be distinguished by evidence in mass spectrum).", false));
            TermData.Add(CVID.MS_PAnalyzer_ambiguous_group_member, new TermInfo(CVID.MS_PAnalyzer_ambiguous_group_member, @"MS", @"MS:1002216", @"PAnalyzer:ambiguous group member", @"A protein sharing at least one peptide not matched to either conclusive or indistinguishable proteins (peptides are considered different only if they can be distinguished by evidence in mass spectrum).", false));
            TermData.Add(CVID.MS_decoy_peptide, new TermInfo(CVID.MS_decoy_peptide, @"MS", @"MS:1002217", @"decoy peptide", @"A putative identified peptide issued from a decoy sequence database.", false));
            TermData.Add(CVID.MS_percent_collision_energy_ramp_start, new TermInfo(CVID.MS_percent_collision_energy_ramp_start, @"MS", @"MS:1002218", @"percent collision energy ramp start", @"Collision energy at the start of the collision energy ramp in percent, normalized to the mass of the ion.", false));
            TermData.Add(CVID.MS_percent_collision_energy_ramp_end, new TermInfo(CVID.MS_percent_collision_energy_ramp_end, @"MS", @"MS:1002219", @"percent collision energy ramp end", @"Collision energy at the end of the collision energy ramp in percent, normalized to the mass of the ion.", false));
            TermData.Add(CVID.MS_MRMaid, new TermInfo(CVID.MS_MRMaid, @"MS", @"MS:1002220", @"MRMaid", @"A web-based SRM assay design tool whose transitions are generated by mining the millions of identified peptide spectra held in the EBI's PRIDE database.", false));
            TermData.Add(CVID.MS_MRMaid_peptide_score, new TermInfo(CVID.MS_MRMaid_peptide_score, @"MS", @"MS:1002221", @"MRMaid:peptide score", @"Score in MRMaid to indicate the expected performance of the peptide in SRM.", false));
            TermData.Add(CVID.MS_SRM_transition_attribute, new TermInfo(CVID.MS_SRM_transition_attribute, @"MS", @"MS:1002222", @"SRM transition attribute", @"Attribute associated with a SRM transition.", false));
            TermData.Add(CVID.MS_precursor_ion_detection_probability, new TermInfo(CVID.MS_precursor_ion_detection_probability, @"MS", @"MS:1002223", @"precursor ion detection probability", @"Probability of detecting precursor when parent protein is present.", false));
            TermData.Add(CVID.MS_product_ion_detection_probability, new TermInfo(CVID.MS_product_ion_detection_probability, @"MS", @"MS:1002224", @"product ion detection probability", @"Probability of detecting product ion when precursor ion is present.", false));
            TermData.Add(CVID.MS_average_product_ion_intensity, new TermInfo(CVID.MS_average_product_ion_intensity, @"MS", @"MS:1002225", @"average product ion intensity", @"Average value of product ion intensity in a collection of identified spectra.", false));
            TermData.Add(CVID.MS_product_ion_intensity_standard_deviation, new TermInfo(CVID.MS_product_ion_intensity_standard_deviation, @"MS", @"MS:1002226", @"product ion intensity standard deviation", @"Standard deviation of product ion intensity in a collection of identified spectra.", false));
            TermData.Add(CVID.MS_number_of_product_ion_observations, new TermInfo(CVID.MS_number_of_product_ion_observations, @"MS", @"MS:1002227", @"number of product ion observations", @"The number of times the specific product ion has been observed in a series of SRM experiments.", false));
            TermData.Add(CVID.MS_number_of_precursor_ion_observations, new TermInfo(CVID.MS_number_of_precursor_ion_observations, @"MS", @"MS:1002228", @"number of precursor ion observations", @"The number of times the specific precursor ion has been observed in a series of SRM experiments.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Significance_Middle, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Significance_Middle, @"MS", @"MS:1002229", @"ProteomeDiscoverer:Mascot:Significance Middle", @"Calculated relaxed significance when performing a decoy search for high-confidence peptides.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Mascot_Significance_High, new TermInfo(CVID.MS_ProteomeDiscoverer_Mascot_Significance_High, @"MS", @"MS:1002230", @"ProteomeDiscoverer:Mascot:Significance High", @"Calculated relaxed significance when performing a decoy search for medium-confidence peptides.", false));
            TermData.Add(CVID.MS_regular_expressions_for_a_GUID, new TermInfo(CVID.MS_regular_expressions_for_a_GUID, @"MS", @"MS:1002231", @"regular expressions for a GUID", @"(", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Default_FDR_calculator, new TermInfo(CVID.MS_ProteomeDiscoverer_Default_FDR_calculator, @"MS", @"MS:1002232", @"ProteomeDiscoverer:Default FDR calculator", @"The default FDR calculator as globally unique identifier (GUID).", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Low_resolution_spectra_contained, new TermInfo(CVID.MS_ProteomeDiscoverer_SEQUEST_Low_resolution_spectra_contained, @"MS", @"MS:1002233", @"ProteomeDiscoverer:SEQUEST:Low resolution spectra contained", @"Flag indicating if low-resolution spectra are taken into consideration.", false));
            TermData.Add(CVID.MS_selected_precursor_m_z, new TermInfo(CVID.MS_selected_precursor_m_z, @"MS", @"MS:1002234", @"selected precursor m/z", @"Mass-to-charge ratio of a precursor ion selected for fragmentation.", false));
            TermData.Add(CVID.MS_ProteoGrouper_PDH_score, new TermInfo(CVID.MS_ProteoGrouper_PDH_score, @"MS", @"MS:1002235", @"ProteoGrouper:PDH score", @"A score assigned to a single protein accession (modelled as ProteinDetectionHypothesis in mzIdentML), based on summed peptide level scores.", false));
            TermData.Add(CVID.MS_ProteoGrouper_PAG_score, new TermInfo(CVID.MS_ProteoGrouper_PAG_score, @"MS", @"MS:1002236", @"ProteoGrouper:PAG score", @"A score assigned to a protein group (modelled as ProteinAmbiguityGroup in mzIdentML), based on all summed peptide level scores that have been assigned to the group as unique or razor peptides.", false));
            TermData.Add(CVID.MS_mzidLib, new TermInfo(CVID.MS_mzidLib, @"MS", @"MS:1002237", @"mzidLib", @"A library of Java routines for manipulating mzIdentML files.", false));
            TermData.Add(CVID.MS_mzidLib_Omssa2Mzid, new TermInfo(CVID.MS_mzidLib_Omssa2Mzid, @"MS", @"MS:1002238", @"mzidLib:Omssa2Mzid", @"A converter for OMSSA OMX to mzIdentML.", false));
            TermData.Add(CVID.MS_mzidLib_Tandem2Mzid, new TermInfo(CVID.MS_mzidLib_Tandem2Mzid, @"MS", @"MS:1002239", @"mzidLib:Tandem2Mzid", @"A converter for Tandem XML to mzIdentML.", false));
            TermData.Add(CVID.MS_mzidLib_Csv2Mzid, new TermInfo(CVID.MS_mzidLib_Csv2Mzid, @"MS", @"MS:1002240", @"mzidLib:Csv2Mzid", @"A converter for CSV files (following OMSSA CSV style) to mzIdentML.", false));
            TermData.Add(CVID.MS_mzidLib_ProteoGrouper, new TermInfo(CVID.MS_mzidLib_ProteoGrouper, @"MS", @"MS:1002241", @"mzidLib:ProteoGrouper", @"A generic and parameterizable protein inference algorithm for mzIdentML files.", false));
            TermData.Add(CVID.MS_mzidLib_Thresholder, new TermInfo(CVID.MS_mzidLib_Thresholder, @"MS", @"MS:1002242", @"mzidLib:Thresholder", @"A routine for keeping only identifications passing a given threshold or setting passThreshold to true or false for SpectrumIdentificationItem or ProteinDetectionHypothesis in mzIdentML files.", false));
            TermData.Add(CVID.MS_mzidLib_Perform_emPAI_on_mzid, new TermInfo(CVID.MS_mzidLib_Perform_emPAI_on_mzid, @"MS", @"MS:1002243", @"mzidLib:Perform emPAI on mzid", @"A routine for adding emPAI quantitative values to an mzIdentML file.", false));
            TermData.Add(CVID.MS_mzidLib_FalseDiscoveryRate, new TermInfo(CVID.MS_mzidLib_FalseDiscoveryRate, @"MS", @"MS:1002244", @"mzidLib:FalseDiscoveryRate", @"A routine for calculating local FDR, q-value and FDRScore for mzIdentML files, based on a decoy search.", false));
            TermData.Add(CVID.MS_mzidLib_Mzidentml2Csv, new TermInfo(CVID.MS_mzidLib_Mzidentml2Csv, @"MS", @"MS:1002245", @"mzidLib:Mzidentml2Csv", @"A tool for converting mzIdentML files to CSV format.", false));
            TermData.Add(CVID.MS_mzidLib_CombineSearchEngines, new TermInfo(CVID.MS_mzidLib_CombineSearchEngines, @"MS", @"MS:1002246", @"mzidLib:CombineSearchEngines", @"A tool for combining results analysed in parallel in two or three search engines into a single mzIdentML file.", false));
            TermData.Add(CVID.MS_mzidLib_InsertMetaDataFromFasta, new TermInfo(CVID.MS_mzidLib_InsertMetaDataFromFasta, @"MS", @"MS:1002247", @"mzidLib:InsertMetaDataFromFasta", @"A tool for adding additional meta data from a FASTA file to DBSequence entries (sequence and description) in mzIdentML files.", false));
            TermData.Add(CVID.MS_SEQUEST_spscore, new TermInfo(CVID.MS_SEQUEST_spscore, @"MS", @"MS:1002248", @"SEQUEST:spscore", @"The SEQUEST result 'SpScore'.", false));
            TermData.Add(CVID.MS_SEQUEST_sprank, new TermInfo(CVID.MS_SEQUEST_sprank, @"MS", @"MS:1002249", @"SEQUEST:sprank", @"The SEQUEST result 'SpRank'.", false));
            TermData.Add(CVID.MS_SEQUEST_deltacnstar, new TermInfo(CVID.MS_SEQUEST_deltacnstar, @"MS", @"MS:1002250", @"SEQUEST:deltacnstar", @"The SEQUEST result 'DeltaCnStar'.", false));
            TermData.Add(CVID.MS_Comet, new TermInfo(CVID.MS_Comet, @"MS", @"MS:1002251", @"Comet", @"Comet open-source sequence search engine developed at the University of Washington.", false));
            TermData.Add(CVID.MS_Comet_xcorr, new TermInfo(CVID.MS_Comet_xcorr, @"MS", @"MS:1002252", @"Comet:xcorr", @"The Comet result 'XCorr'.", false));
            TermData.Add(CVID.MS_Comet_deltacn, new TermInfo(CVID.MS_Comet_deltacn, @"MS", @"MS:1002253", @"Comet:deltacn", @"The Comet result 'DeltaCn'.", false));
            TermData.Add(CVID.MS_Comet_deltacnstar, new TermInfo(CVID.MS_Comet_deltacnstar, @"MS", @"MS:1002254", @"Comet:deltacnstar", @"The Comet result 'DeltaCnStar'.", false));
            TermData.Add(CVID.MS_Comet_spscore, new TermInfo(CVID.MS_Comet_spscore, @"MS", @"MS:1002255", @"Comet:spscore", @"The Comet result 'SpScore'.", false));
            TermData.Add(CVID.MS_Comet_sprank, new TermInfo(CVID.MS_Comet_sprank, @"MS", @"MS:1002256", @"Comet:sprank", @"The Comet result 'SpRank'.", false));
            TermData.Add(CVID.MS_Comet_expectation_value, new TermInfo(CVID.MS_Comet_expectation_value, @"MS", @"MS:1002257", @"Comet:expectation value", @"The Comet result 'Expectation value'.", false));
            TermData.Add(CVID.MS_Comet_matched_ions, new TermInfo(CVID.MS_Comet_matched_ions, @"MS", @"MS:1002258", @"Comet:matched ions", @"The Comet result 'Matched Ions'.", false));
            TermData.Add(CVID.MS_Comet_total_ions, new TermInfo(CVID.MS_Comet_total_ions, @"MS", @"MS:1002259", @"Comet:total ions", @"The Comet result 'Total Ions'.", false));
            TermData.Add(CVID.MS_PSM_FDR_threshold, new TermInfo(CVID.MS_PSM_FDR_threshold, @"MS", @"MS:1002260", @"PSM:FDR threshold", @"False-discovery rate threshold for peptide-spectrum matches.", false));
            TermData.Add(CVID.MS_Byonic, new TermInfo(CVID.MS_Byonic, @"MS", @"MS:1002261", @"Byonic", @"Byonic search engine from Protein Metrics.", false));
            TermData.Add(CVID.MS_Byonic_Score, new TermInfo(CVID.MS_Byonic_Score, @"MS", @"MS:1002262", @"Byonic:Score", @"The Byonic score is the primary indicator of PSM correctness. The Byonic score reflects the absolute quality of the peptide-spectrum match, not the relative quality compared to other candidate peptides. Byonic scores range from 0 to about 1000, with 300 a good score, 400 a very good score, and PSMs with scores over 500 almost sure to be correct.", false));
            TermData.Add(CVID.MS_Byonic_Delta_Score, new TermInfo(CVID.MS_Byonic_Delta_Score, @"MS", @"MS:1002263", @"Byonic:Delta Score", @"The drop in Byonic score from the top-scoring peptide to the next peptide with distinct sequence. In this computation, the same peptide with different modifications is not considered distinct.", false));
            TermData.Add(CVID.MS_Byonic_DeltaMod_Score, new TermInfo(CVID.MS_Byonic_DeltaMod_Score, @"MS", @"MS:1002264", @"Byonic:DeltaMod Score", @"The drop in Byonic score from the top-scoring peptide to the next peptide different in any way, including placement of modifications. DeltaMod gives an indication of whether modifications are confidently localized; DeltaMod over 10.0 means that there is high likelihood that all modification placements are correct.", false));
            TermData.Add(CVID.MS_Byonic_PEP, new TermInfo(CVID.MS_Byonic_PEP, @"MS", @"MS:1002265", @"Byonic:PEP", @"Byonic posterior error probability.", false));
            TermData.Add(CVID.MS_Byonic_Peptide_LogProb, new TermInfo(CVID.MS_Byonic_Peptide_LogProb, @"MS", @"MS:1002266", @"Byonic:Peptide LogProb", @"The log p-value of the PSM. This is the log of the probability that the PSM with such a score and delta would arise by chance in a search of this size (the size of the protein database, as expanded by the modification rules). A log p-value of -3.0 should happen by chance on only one of a thousand spectra. Caveat: it is very hard to compute a p-value that works for all searches and all spectra, so read Byonic p-values with a certain amount of skepticism.", false));
            TermData.Add(CVID.MS_Byonic_Protein_LogProb, new TermInfo(CVID.MS_Byonic_Protein_LogProb, @"MS", @"MS:1002267", @"Byonic:Protein LogProb", @"The log p-value of the protein.", false));
            TermData.Add(CVID.MS_Byonic_Best_LogProb, new TermInfo(CVID.MS_Byonic_Best_LogProb, @"MS", @"MS:1002268", @"Byonic:Best LogProb", @"Best (most negative) log p-value of an individual PSM.", false));
            TermData.Add(CVID.MS_Byonic_Best_Score, new TermInfo(CVID.MS_Byonic_Best_Score, @"MS", @"MS:1002269", @"Byonic:Best Score", @"Best (largest) Byonic score of a PSM.", false));
            TermData.Add(CVID.MS_chromatography_separation, new TermInfo(CVID.MS_chromatography_separation, @"MS", @"MS:1002270", @"chromatography separation", @"A technique by which molecules are separated by chemical and physical properties such as hydrophobicity or vapour pressure.", false));
            TermData.Add(CVID.MS_liquid_chromatography_separation, new TermInfo(CVID.MS_liquid_chromatography_separation, @"MS", @"MS:1002271", @"liquid chromatography separation", @"Liquid chromatography (LC) is a separation technique in which the mobile phase is a liquid.", false));
            TermData.Add(CVID.MS_gas_chromatography_separation, new TermInfo(CVID.MS_gas_chromatography_separation, @"MS", @"MS:1002272", @"gas chromatography separation", @"Gas chromatography (GC) is a separation technique in which the mobile phase is a gas.", false));
            TermData.Add(CVID.MS_detector_potential, new TermInfo(CVID.MS_detector_potential, @"MS", @"MS:1002273", @"detector potential", @"Detector potential difference in volts.", false));
            TermData.Add(CVID.MS_SQ_Detector_2_, new TermInfo(CVID.MS_SQ_Detector_2_, @"MS", @"MS:1002274", @"SQ Detector 2	", @"Waters quadrupole based SQ Detector 2.", false));
            TermData.Add(CVID.MS_Xevo_G2_S_Tof, new TermInfo(CVID.MS_Xevo_G2_S_Tof, @"MS", @"MS:1002275", @"Xevo G2-S Tof", @"Waters oa-ToF based Xevo G2-S Tof.", false));
            TermData.Add(CVID.MS_Xevo_G2_S_QTof, new TermInfo(CVID.MS_Xevo_G2_S_QTof, @"MS", @"MS:1002276", @"Xevo G2-S QTof", @"Waters oa-ToF based Xevo G2-S QTof.", false));
            TermData.Add(CVID.MS_AutoSpec_Premier, new TermInfo(CVID.MS_AutoSpec_Premier, @"MS", @"MS:1002277", @"AutoSpec Premier", @"Waters AutoSpec Premier magnetic sector instrument.", false));
            TermData.Add(CVID.MS_Pegasus_III, new TermInfo(CVID.MS_Pegasus_III, @"MS", @"MS:1002278", @"Pegasus III", @"LECO nominal mass resolution time-of-flight GC mass spectrometer.", false));
            TermData.Add(CVID.MS_maXis_4G, new TermInfo(CVID.MS_maXis_4G, @"MS", @"MS:1002279", @"maXis 4G", @"Bruker Daltonics' maXis 4G: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_compact, new TermInfo(CVID.MS_compact, @"MS", @"MS:1002280", @"compact", @"Bruker Daltonics' compact: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_SRM_feature_level_quantitation, new TermInfo(CVID.MS_SRM_feature_level_quantitation, @"MS", @"MS:1002281", @"SRM feature level quantitation", @"Selected Reaction Monitoring feature level quantitation.", false));
            TermData.Add(CVID.MS_SRM_peptide_level_quantitation, new TermInfo(CVID.MS_SRM_peptide_level_quantitation, @"MS", @"MS:1002282", @"SRM peptide level quantitation", @"Selected Reaction Monitoring peptide level quantitation.", false));
            TermData.Add(CVID.MS_SRM_protein_level_quantitation, new TermInfo(CVID.MS_SRM_protein_level_quantitation, @"MS", @"MS:1002283", @"SRM protein level quantitation", @"Selected Reaction Monitoring protein level quantitation.", false));
            TermData.Add(CVID.MS_SRM_proteingroup_level_quantitation, new TermInfo(CVID.MS_SRM_proteingroup_level_quantitation, @"MS", @"MS:1002284", @"SRM proteingroup level quantitation", @"Selected Reaction Monitoring proteingroup level quantitation.", false));
            TermData.Add(CVID.MS_Trans_Proteomic_Pipeline, new TermInfo(CVID.MS_Trans_Proteomic_Pipeline, @"MS", @"MS:1002285", @"Trans-Proteomic Pipeline", @"A suite of open source tools for the processing of MS2 proteomics data developed by the Seattle Proteome Center at the Institute for Systems Biology.", false));
            TermData.Add(CVID.MS_Trans_Proteomic_Pipeline_software, new TermInfo(CVID.MS_Trans_Proteomic_Pipeline_software, @"MS", @"MS:1002286", @"Trans-Proteomic Pipeline software", @"A software program that is a component of the Trans-Proteomic Pipeline.", false));
            TermData.Add(CVID.MS_PeptideProphet, new TermInfo(CVID.MS_PeptideProphet, @"MS", @"MS:1002287", @"PeptideProphet", @"A program in the TPP that calculates PSM probabilities for MS2 proteomics data searched with any of the supported sequence or spectral library search engines via the pepXML format.", false));
            TermData.Add(CVID.MS_iProphet, new TermInfo(CVID.MS_iProphet, @"MS", @"MS:1002288", @"iProphet", @"A program in the TPP that calculates distinct peptide probabilities based on several lines of corroborating evidence including search results from multiple search engines via the pepXML format.", false));
            TermData.Add(CVID.MS_ProteinProphet, new TermInfo(CVID.MS_ProteinProphet, @"MS", @"MS:1002289", @"ProteinProphet", @"A program in the TPP that calculates protein-level probabilities based on input PSM or peptide-level probabilities from PeptideProphet or iProphet. The output is written in the protXML format.", false));
            TermData.Add(CVID.MS_XPRESS, new TermInfo(CVID.MS_XPRESS, @"MS", @"MS:1002290", @"XPRESS", @"A program in the TPP that calculates PSM-level abundances based on 2-channel isotope-labelled data such as ICAT, SILAC, etc.", false));
            TermData.Add(CVID.MS_Libra, new TermInfo(CVID.MS_Libra, @"MS", @"MS:1002291", @"Libra", @"A program in the TPP that calculates PSM, peptide, and protein-level abundances based on N-channel isobaric label peptide data such as iTRAQ, TMT, etc.", false));
            TermData.Add(CVID.MS_PTMProphet, new TermInfo(CVID.MS_PTMProphet, @"MS", @"MS:1002292", @"PTMProphet", @"A program in the TPP that calculates PTM localization probabilities by re-analyzing the peaks that are available to distinguish between possible modification sites.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_SCION_series, new TermInfo(CVID.MS_Bruker_Daltonics_SCION_series, @"MS", @"MS:1002293", @"Bruker Daltonics SCION series", @"Bruker Daltonics' SCION series.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_EVOQ_series, new TermInfo(CVID.MS_Bruker_Daltonics_EVOQ_series, @"MS", @"MS:1002294", @"Bruker Daltonics EVOQ series", @"Bruker Daltonics' EVOQ series.", false));
            TermData.Add(CVID.MS_SCION_SQ, new TermInfo(CVID.MS_SCION_SQ, @"MS", @"MS:1002295", @"SCION SQ", @"Bruker Daltonics' SCION SQ: GC-single quadrupole.", false));
            TermData.Add(CVID.MS_SCION_TQ, new TermInfo(CVID.MS_SCION_TQ, @"MS", @"MS:1002296", @"SCION TQ", @"Bruker Daltonics' SCION TQ: GC-triple quadrupole.", false));
            TermData.Add(CVID.MS_EVOQ_Elite, new TermInfo(CVID.MS_EVOQ_Elite, @"MS", @"MS:1002297", @"EVOQ Elite", @"Bruker Daltonics' EVOQ Elite: LC-triple quadrupole.", false));
            TermData.Add(CVID.MS_EVOQ_Qube, new TermInfo(CVID.MS_EVOQ_Qube, @"MS", @"MS:1002298", @"EVOQ Qube", @"Bruker Daltonics' EVOQ Qube: LC-triple quadrupole.", false));
            TermData.Add(CVID.MS_micrOTOF_Q_III, new TermInfo(CVID.MS_micrOTOF_Q_III, @"MS", @"MS:1002299", @"micrOTOF-Q III", @"Bruker Daltonics' micrOTOF-Q III: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_amaZon_Speed_ETD, new TermInfo(CVID.MS_amaZon_Speed_ETD, @"MS", @"MS:1002300", @"amaZon Speed ETD", @"Bruker Daltonics' amaZon Speed ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_amaZon_Speed, new TermInfo(CVID.MS_amaZon_Speed, @"MS", @"MS:1002301", @"amaZon Speed", @"Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray.", false));
            TermData.Add(CVID.MS_Bruker_Container_format, new TermInfo(CVID.MS_Bruker_Container_format, @"MS", @"MS:1002302", @"Bruker Container format", @"Bruker Container raw file format.", false));
            TermData.Add(CVID.MS_Bruker_Container_nativeID_format, new TermInfo(CVID.MS_Bruker_Container_nativeID_format, @"MS", @"MS:1002303", @"Bruker Container nativeID format", @"Native identifier (UUID).", false));
            TermData.Add(CVID.MS_domain_range, new TermInfo(CVID.MS_domain_range, @"MS", @"MS:1002304", @"domain range", @"Domain range of a numerical value.", false));
            TermData.Add(CVID.MS_value_between_0_and_1_inclusive, new TermInfo(CVID.MS_value_between_0_and_1_inclusive, @"MS", @"MS:1002305", @"value between 0 and 1 inclusive", @"Value range for probabilities.", false));
            TermData.Add(CVID.MS_value_greater_than_zero, new TermInfo(CVID.MS_value_greater_than_zero, @"MS", @"MS:1002306", @"value greater than zero", @"Positive value range.", false));
            TermData.Add(CVID.MS_fragmentation_ion_type, new TermInfo(CVID.MS_fragmentation_ion_type, @"MS", @"MS:1002307", @"fragmentation ion type", @"Type of fragment ion based on where the backbone breaks, such as a y ion or a c ion.", false));
            TermData.Add(CVID.MS_fluorescence_detector, new TermInfo(CVID.MS_fluorescence_detector, @"MS", @"MS:1002308", @"fluorescence detector", @"A detector using a fluorescent signal after excitation with light.", false));
            TermData.Add(CVID.MS_Byonic__Peptide_AbsLogProb, new TermInfo(CVID.MS_Byonic__Peptide_AbsLogProb, @"MS", @"MS:1002309", @"Byonic: Peptide AbsLogProb", @"The absolute value of the log-base10 of the Byonic posterior error probability (PEP) of the PSM.", false));
            TermData.Add(CVID.MS_Byonic__Protein_AbsLogProb, new TermInfo(CVID.MS_Byonic__Protein_AbsLogProb, @"MS", @"MS:1002310", @"Byonic: Protein AbsLogProb", @"The absolute value of the log-base10 of the Byonic posterior error probability (PEP) of the protein.", false));
            TermData.Add(CVID.MS_Byonic__Peptide_AbsLogProb2D, new TermInfo(CVID.MS_Byonic__Peptide_AbsLogProb2D, @"MS", @"MS:1002311", @"Byonic: Peptide AbsLogProb2D", @"The absolute value of the log-base10 Byonic two-dimensional posterior error probability (PEP) of the PSM. The two-dimensional PEP takes into account protein ranking information as well as PSM information.", false));
            TermData.Add(CVID.MS_MS_Numpress_linear_prediction_compression, new TermInfo(CVID.MS_MS_Numpress_linear_prediction_compression, @"MS", @"MS:1002312", @"MS-Numpress linear prediction compression", @"Compression using MS-Numpress linear prediction compression.", false));
            TermData.Add(CVID.MS_MS_Numpress_positive_integer_compression, new TermInfo(CVID.MS_MS_Numpress_positive_integer_compression, @"MS", @"MS:1002313", @"MS-Numpress positive integer compression", @"Compression using MS-Numpress positive integer compression.", false));
            TermData.Add(CVID.MS_MS_Numpress_short_logged_float_compression, new TermInfo(CVID.MS_MS_Numpress_short_logged_float_compression, @"MS", @"MS:1002314", @"MS-Numpress short logged float compression", @"Compression using MS-Numpress short logged float compression.", false));
            TermData.Add(CVID.MS_consensus_result, new TermInfo(CVID.MS_consensus_result, @"MS", @"MS:1002315", @"consensus result", @"Indicates a consensus result from several search engine runs.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Amanda_high_confidence_threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Amanda_high_confidence_threshold, @"MS", @"MS:1002316", @"ProteomeDiscoverer:Amanda:high confidence threshold", @"Strict confidence probability score.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Amanda_middle_confidence_threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Amanda_middle_confidence_threshold, @"MS", @"MS:1002317", @"ProteomeDiscoverer:Amanda:middle confidence threshold", @"Relaxed confidence probability score.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_automatic_workload, new TermInfo(CVID.MS_ProteomeDiscoverer_automatic_workload, @"MS", @"MS:1002318", @"ProteomeDiscoverer:automatic workload", @"Flag indicating automatic estimation of the workload level.", false));
            TermData.Add(CVID.MS_Amanda_AmandaScore, new TermInfo(CVID.MS_Amanda_AmandaScore, @"MS", @"MS:1002319", @"Amanda:AmandaScore", @"The Amanda score of the scoring function for a PSM.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_differential_modifications, new TermInfo(CVID.MS_ProteomeDiscoverer_max_differential_modifications, @"MS", @"MS:1002320", @"ProteomeDiscoverer:max differential modifications", @"Maximum dynamic modifications per PSM.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_equal_modifications, new TermInfo(CVID.MS_ProteomeDiscoverer_max_equal_modifications, @"MS", @"MS:1002321", @"ProteomeDiscoverer:max equal modifications", @"Maximum equal modifications per PSM.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_min_peptide_length, new TermInfo(CVID.MS_ProteomeDiscoverer_min_peptide_length, @"MS", @"MS:1002322", @"ProteomeDiscoverer:min peptide length", @"Minimum peptide length.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_peptide_length, new TermInfo(CVID.MS_ProteomeDiscoverer_max_peptide_length, @"MS", @"MS:1002323", @"ProteomeDiscoverer:max peptide length", @"Maximum peptide length.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss, new TermInfo(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss, @"MS", @"MS:1002324", @"ProteomeDiscoverer:max number neutral loss", @"Maximum number of same neutral losses.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss_modifications, new TermInfo(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss_modifications, @"MS", @"MS:1002325", @"ProteomeDiscoverer:max number neutral loss modifications", @"Max number of same neutral losses of modifications.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_use_flanking_ions, new TermInfo(CVID.MS_ProteomeDiscoverer_use_flanking_ions, @"MS", @"MS:1002326", @"ProteomeDiscoverer:use flanking ions", @"Flag for usage of flanking ions.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_max_number_of_same_modifs, new TermInfo(CVID.MS_ProteomeDiscoverer_max_number_of_same_modifs, @"MS", @"MS:1002327", @"ProteomeDiscoverer:max number of same modifs", @"The maximum number of possible equal modifications per PSM.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_perform_deisotoping, new TermInfo(CVID.MS_ProteomeDiscoverer_perform_deisotoping, @"MS", @"MS:1002328", @"ProteomeDiscoverer:perform deisotoping", @"Defines whether a simple deisotoping shall be performed.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_ion_settings, new TermInfo(CVID.MS_ProteomeDiscoverer_ion_settings, @"MS", @"MS:1002329", @"ProteomeDiscoverer:ion settings", @"Specifies the fragment ions and neutral losses that are calculated.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_3__Static_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_3__Static_Modification_OBSOLETE, @"MS", @"MS:1002330", @"ProteomeDiscoverer:3. Static Modification", @"OBSOLETE ProteomeDiscoverer's 3rd static post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_ProteomeDiscoverer_5__Dynamic_Modification_OBSOLETE, new TermInfo(CVID.MS_ProteomeDiscoverer_5__Dynamic_Modification_OBSOLETE, @"MS", @"MS:1002331", @"ProteomeDiscoverer:5. Dynamic Modification", @"OBSOLETE ProteomeDiscoverer's 5th dynamic post-translational modification (PTM) input parameter.", true));
            TermData.Add(CVID.MS_lab_head, new TermInfo(CVID.MS_lab_head, @"MS", @"MS:1002332", @"lab head", @"The scientist responsible for personnel, grants, and instrumentation in a functional laboratory group.", false));
            TermData.Add(CVID.MS_conversion_software, new TermInfo(CVID.MS_conversion_software, @"MS", @"MS:1002333", @"conversion software", @"Computer software primarily designed to convert data represented in one format to another format, sometimes with minor data alterations in the process.", false));
            TermData.Add(CVID.MS_ProCon, new TermInfo(CVID.MS_ProCon, @"MS", @"MS:1002334", @"ProCon", @"Java software designed to convert one of several proteomics identification results formats into mzIdentML or PRIDE XML.", false));
            TermData.Add(CVID.MS_PRIDE_Converter2, new TermInfo(CVID.MS_PRIDE_Converter2, @"MS", @"MS:1002335", @"PRIDE Converter2", @"Java software designed to convert one of several proteomics identification results formats into PRIDE XML.", false));
            TermData.Add(CVID.MS_Amanda, new TermInfo(CVID.MS_Amanda, @"MS", @"MS:1002336", @"Amanda", @"Amanda scoring system for PSM identification.", false));
            TermData.Add(CVID.MS_Andromeda, new TermInfo(CVID.MS_Andromeda, @"MS", @"MS:1002337", @"Andromeda", @"Andromeda is a peptide search engine.", false));
            TermData.Add(CVID.MS_Andromeda_score, new TermInfo(CVID.MS_Andromeda_score, @"MS", @"MS:1002338", @"Andromeda:score", @"The probability based score of the Andromeda search engine.", false));
            TermData.Add(CVID.MS_site_global_FDR, new TermInfo(CVID.MS_site_global_FDR, @"MS", @"MS:1002339", @"site:global FDR", @"Estimation of global false discovery rate of peptides with a post-translational modification.", false));
            TermData.Add(CVID.MS_ProteomeXchange_project_tag, new TermInfo(CVID.MS_ProteomeXchange_project_tag, @"MS", @"MS:1002340", @"ProteomeXchange project tag", @"Tag that can be added to a ProteomeXchange dataset, to enable the grouping of datasets. One tag can be used for indicating that a given dataset is part of a bigger project, like e.g. the Human Proteome Project.", false));
            TermData.Add(CVID.MS_second_pass_peptide_identification, new TermInfo(CVID.MS_second_pass_peptide_identification, @"MS", @"MS:1002341", @"second-pass peptide identification", @"A putative identified peptide found in a second-pass search of protein sequences selected from a first-pass search.", false));
            TermData.Add(CVID.MS_MZmine, new TermInfo(CVID.MS_MZmine, @"MS", @"MS:1002342", @"MZmine", @"A framework for differential analysis of mass spectrometry data.", false));
            TermData.Add(CVID.MS_ion_stability_type_OBSOLETE, new TermInfo(CVID.MS_ion_stability_type_OBSOLETE, @"MS", @"MS:1002343", @"ion stability type", @"OBSOLETE Stability type of the ion.", true));
            TermData.Add(CVID.MS_Maltcms, new TermInfo(CVID.MS_Maltcms, @"MS", @"MS:1002344", @"Maltcms", @"Modular Application Toolkit for Chromatography Mass-Spectrometry is an application framework mainly for developers.", false));
            TermData.Add(CVID.MS_PSM_level_attribute, new TermInfo(CVID.MS_PSM_level_attribute, @"MS", @"MS:1002345", @"PSM-level attribute", @"Attribute of a single peptide-spectrum match.", false));
            TermData.Add(CVID.MS_protein_group_level_identification_attribute, new TermInfo(CVID.MS_protein_group_level_identification_attribute, @"MS", @"MS:1002346", @"protein group-level identification attribute", @"Protein group level information.", false));
            TermData.Add(CVID.MS_PSM_level_identification_statistic, new TermInfo(CVID.MS_PSM_level_identification_statistic, @"MS", @"MS:1002347", @"PSM-level identification statistic", @"Identification confidence metric for a peptide spectrum match.", false));
            TermData.Add(CVID.MS_protein_group_level_identification_statistic, new TermInfo(CVID.MS_protein_group_level_identification_statistic, @"MS", @"MS:1002348", @"protein group-level identification statistic", @"Identification confidence metric for a protein group.", false));
            TermData.Add(CVID.MS_value_greater_than_zero_but_less_than_or_equal_to_one, new TermInfo(CVID.MS_value_greater_than_zero_but_less_than_or_equal_to_one, @"MS", @"MS:1002349", @"value greater than zero but less than or equal to one", @"Positive value range less than or equal to 1.", false));
            TermData.Add(CVID.MS_PSM_level_global_FDR, new TermInfo(CVID.MS_PSM_level_global_FDR, @"MS", @"MS:1002350", @"PSM-level global FDR", @"Estimation of the global false discovery rate of peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_local_FDR, new TermInfo(CVID.MS_PSM_level_local_FDR, @"MS", @"MS:1002351", @"PSM-level local FDR", @"Estimation of the local false discovery rate of peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_p_value, new TermInfo(CVID.MS_PSM_level_p_value, @"MS", @"MS:1002352", @"PSM-level p-value", @"Estimation of the p-value for peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_e_value, new TermInfo(CVID.MS_PSM_level_e_value, @"MS", @"MS:1002353", @"PSM-level e-value", @"Estimation of the e-value for peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_q_value, new TermInfo(CVID.MS_PSM_level_q_value, @"MS", @"MS:1002354", @"PSM-level q-value", @"Estimation of the q-value for peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_FDRScore, new TermInfo(CVID.MS_PSM_level_FDRScore, @"MS", @"MS:1002355", @"PSM-level FDRScore", @"mzidLibrary FDRScore for peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_combined_FDRScore, new TermInfo(CVID.MS_PSM_level_combined_FDRScore, @"MS", @"MS:1002356", @"PSM-level combined FDRScore", @"mzidLibrary Combined FDRScore for peptide spectrum matches specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools.", false));
            TermData.Add(CVID.MS_PSM_level_probability, new TermInfo(CVID.MS_PSM_level_probability, @"MS", @"MS:1002357", @"PSM-level probability", @"Probability that the reported peptide ion is truly responsible for some or all of the components of the specified mass spectrum.", false));
            TermData.Add(CVID.MS_search_engine_specific_peptide_sequence_level_identification_statistic, new TermInfo(CVID.MS_search_engine_specific_peptide_sequence_level_identification_statistic, @"MS", @"MS:1002358", @"search engine specific peptide sequence-level identification statistic", @"Search engine specific distinct peptide score.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_local_FDR, new TermInfo(CVID.MS_peptide_sequence_level_local_FDR, @"MS", @"MS:1002359", @"peptide sequence-level local FDR", @"Estimation of the local false discovery rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_distinct_peptide_level_FDRScore, new TermInfo(CVID.MS_distinct_peptide_level_FDRScore, @"MS", @"MS:1002360", @"distinct peptide-level FDRScore", @"MzidLibrary FDRScore for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_distinct_peptide_level_combined_FDRScore, new TermInfo(CVID.MS_distinct_peptide_level_combined_FDRScore, @"MS", @"MS:1002361", @"distinct peptide-level combined FDRScore", @"Combined FDRScore for peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry) specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given peptide, used for integrating results from these distinct pools.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_probability, new TermInfo(CVID.MS_peptide_sequence_level_probability, @"MS", @"MS:1002362", @"peptide sequence-level probability", @"Probability that the reported distinct peptide sequence (irrespective of mass modifications) has been correctly identified via the referenced PSMs.", false));
            TermData.Add(CVID.MS_search_engine_specific_score_for_proteins, new TermInfo(CVID.MS_search_engine_specific_score_for_proteins, @"MS", @"MS:1002363", @"search engine specific score for proteins", @"Search engine specific protein scores.", false));
            TermData.Add(CVID.MS_protein_level_local_FDR, new TermInfo(CVID.MS_protein_level_local_FDR, @"MS", @"MS:1002364", @"protein-level local FDR", @"Estimation of the local false discovery rate of proteins.", false));
            TermData.Add(CVID.MS_FDRScore_for_proteins, new TermInfo(CVID.MS_FDRScore_for_proteins, @"MS", @"MS:1002365", @"FDRScore for proteins", @"MzidLibrary FDRScore for proteins specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools.", false));
            TermData.Add(CVID.MS_combined_FDRScore_for_proteins, new TermInfo(CVID.MS_combined_FDRScore_for_proteins, @"MS", @"MS:1002366", @"combined FDRScore for proteins", @"MzidLibrary Combined FDRScore for proteins.", false));
            TermData.Add(CVID.MS_probability_for_proteins, new TermInfo(CVID.MS_probability_for_proteins, @"MS", @"MS:1002367", @"probability for proteins", @"Probability that a specific protein sequence has been correctly identified from the PSM and distinct peptide evidence, and based on the available protein sequences presented to the analysis software.", false));
            TermData.Add(CVID.MS_search_engine_specific_score_for_protein_groups, new TermInfo(CVID.MS_search_engine_specific_score_for_protein_groups, @"MS", @"MS:1002368", @"search engine specific score for protein groups", @"Search engine specific protein group scores.", false));
            TermData.Add(CVID.MS_protein_group_level_global_FDR, new TermInfo(CVID.MS_protein_group_level_global_FDR, @"MS", @"MS:1002369", @"protein group-level global FDR", @"Estimation of the global false discovery rate of protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_local_FDR, new TermInfo(CVID.MS_protein_group_level_local_FDR, @"MS", @"MS:1002370", @"protein group-level local FDR", @"Estimation of the local false discovery rate of protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_p_value, new TermInfo(CVID.MS_protein_group_level_p_value, @"MS", @"MS:1002371", @"protein group-level p-value", @"Estimation of the p-value for protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_e_value, new TermInfo(CVID.MS_protein_group_level_e_value, @"MS", @"MS:1002372", @"protein group-level e-value", @"Estimation of the e-value for protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_q_value, new TermInfo(CVID.MS_protein_group_level_q_value, @"MS", @"MS:1002373", @"protein group-level q-value", @"Estimation of the q-value for protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_FDRScore, new TermInfo(CVID.MS_protein_group_level_FDRScore, @"MS", @"MS:1002374", @"protein group-level FDRScore", @"mzidLibrary FDRScore for protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_combined_FDRScore, new TermInfo(CVID.MS_protein_group_level_combined_FDRScore, @"MS", @"MS:1002375", @"protein group-level combined FDRScore", @"mzidLibrary Combined FDRScore for proteins specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools.", false));
            TermData.Add(CVID.MS_protein_group_level_probability, new TermInfo(CVID.MS_protein_group_level_probability, @"MS", @"MS:1002376", @"protein group-level probability", @"Probability that at least one of the members of a group of protein sequences has been correctly identified from the PSM and distinct peptide evidence, and based on the available protein sequences presented to the analysis software.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Relaxed_Score_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Relaxed_Score_Threshold, @"MS", @"MS:1002377", @"ProteomeDiscoverer:Relaxed Score Threshold", @"Specifies the threshold value for relaxed scoring.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Strict_Score_Threshold, new TermInfo(CVID.MS_ProteomeDiscoverer_Strict_Score_Threshold, @"MS", @"MS:1002378", @"ProteomeDiscoverer:Strict Score Threshold", @"Specifies the threshold value for strict scoring.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_Cut_Off_Score, new TermInfo(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_Cut_Off_Score, @"MS", @"MS:1002379", @"ProteomeDiscoverer:Peptide Without Protein Cut Off Score", @"Cut off score for storing peptides that do not belong to a protein.", false));
            TermData.Add(CVID.MS_false_localization_rate, new TermInfo(CVID.MS_false_localization_rate, @"MS", @"MS:1002380", @"false localization rate", @"Estimation of the false localization rate for modification site assignment.", false));
            TermData.Add(CVID.MS_MALDI_Solutions_LC_MALDI, new TermInfo(CVID.MS_MALDI_Solutions_LC_MALDI, @"MS", @"MS:1002381", @"MALDI Solutions LC-MALDI", @"Software for automated LC-MALDI analysis and reporting.", false));
            TermData.Add(CVID.MS_Shimadzu_MALDI_7090, new TermInfo(CVID.MS_Shimadzu_MALDI_7090, @"MS", @"MS:1002382", @"Shimadzu MALDI-7090", @"Shimadzu MALDI-7090: MALDI-TOF-TOF.", false));
            TermData.Add(CVID.MS_SCiLS_software, new TermInfo(CVID.MS_SCiLS_software, @"MS", @"MS:1002383", @"SCiLS software", @"SCiLS software for data acquisition and analysis.", false));
            TermData.Add(CVID.MS_SCiLS_Lab, new TermInfo(CVID.MS_SCiLS_Lab, @"MS", @"MS:1002384", @"SCiLS Lab", @"SCiLS Lab software.", false));
            TermData.Add(CVID.MS_SCiLS_Lab_format, new TermInfo(CVID.MS_SCiLS_Lab_format, @"MS", @"MS:1002385", @"SCiLS Lab format", @"SCiLS Lab file format.", false));
            TermData.Add(CVID.MS_preprocessing_software, new TermInfo(CVID.MS_preprocessing_software, @"MS", @"MS:1002386", @"preprocessing software", @"Preprocessing software.", false));
            TermData.Add(CVID.MS_PIA, new TermInfo(CVID.MS_PIA, @"MS", @"MS:1002387", @"PIA", @"PIA - Protein Inference Algorithms, a toolbox for protein inference and identification analysis.", false));
            TermData.Add(CVID.MS_PIA_XML_format, new TermInfo(CVID.MS_PIA_XML_format, @"MS", @"MS:1002388", @"PIA XML format", @"A compilation of search engine results in the PIA XML format.", false));
            TermData.Add(CVID.MS_PIA_workflow_parameter, new TermInfo(CVID.MS_PIA_workflow_parameter, @"MS", @"MS:1002389", @"PIA workflow parameter", @"A parameter set for a single PIA analysis.", false));
            TermData.Add(CVID.MS_PIA_FDRScore_calculated, new TermInfo(CVID.MS_PIA_FDRScore_calculated, @"MS", @"MS:1002390", @"PIA:FDRScore calculated", @"Indicates whether the FDR score was calculated for the input file.", false));
            TermData.Add(CVID.MS_PIA_Combined_FDRScore_calculated, new TermInfo(CVID.MS_PIA_Combined_FDRScore_calculated, @"MS", @"MS:1002391", @"PIA:Combined FDRScore calculated", @"Indicates whether the combined FDR score was calculated for the PIA compilation.", false));
            TermData.Add(CVID.MS_PIA_PSM_sets_created, new TermInfo(CVID.MS_PIA_PSM_sets_created, @"MS", @"MS:1002392", @"PIA:PSM sets created", @"Indicates whether PSM sets were created.", false));
            TermData.Add(CVID.MS_PIA_used_top_identifications_for_FDR, new TermInfo(CVID.MS_PIA_used_top_identifications_for_FDR, @"MS", @"MS:1002393", @"PIA:used top identifications for FDR", @"The number of top identifications per spectrum used for the FDR calculation, 0 means all.", false));
            TermData.Add(CVID.MS_PIA_protein_score, new TermInfo(CVID.MS_PIA_protein_score, @"MS", @"MS:1002394", @"PIA:protein score", @"The score given to a protein by any protein inference.", false));
            TermData.Add(CVID.MS_PIA_protein_inference, new TermInfo(CVID.MS_PIA_protein_inference, @"MS", @"MS:1002395", @"PIA:protein inference", @"The used algorithm for the protein inference using PIA.", false));
            TermData.Add(CVID.MS_PIA_protein_inference_filter, new TermInfo(CVID.MS_PIA_protein_inference_filter, @"MS", @"MS:1002396", @"PIA:protein inference filter", @"A filter used by PIA for the protein inference.", false));
            TermData.Add(CVID.MS_PIA_protein_inference_scoring, new TermInfo(CVID.MS_PIA_protein_inference_scoring, @"MS", @"MS:1002397", @"PIA:protein inference scoring", @"The used scoring method for the protein inference using PIA.", false));
            TermData.Add(CVID.MS_PIA_protein_inference_used_score, new TermInfo(CVID.MS_PIA_protein_inference_used_score, @"MS", @"MS:1002398", @"PIA:protein inference used score", @"The used base score for the protein inference using PIA.", false));
            TermData.Add(CVID.MS_PIA_protein_inference_used_PSMs, new TermInfo(CVID.MS_PIA_protein_inference_used_PSMs, @"MS", @"MS:1002399", @"PIA:protein inference used PSMs", @"The method to determine the PSMs used for scoring by the protein inference.", false));
            TermData.Add(CVID.MS_PIA_filter, new TermInfo(CVID.MS_PIA_filter, @"MS", @"MS:1002400", @"PIA:filter", @"A filter used for the report generation.", false));
            TermData.Add(CVID.MS_leading_protein, new TermInfo(CVID.MS_leading_protein, @"MS", @"MS:1002401", @"leading protein", @"At least one protein within each group should be annotated as a leading protein to indicate it has the strongest evidence, or approximately equal evidence as other group members.", false));
            TermData.Add(CVID.MS_non_leading_protein, new TermInfo(CVID.MS_non_leading_protein, @"MS", @"MS:1002402", @"non-leading protein", @"Zero to many proteins within each group should be annotated as non-leading to indicate that other proteins have stronger evidence.", false));
            TermData.Add(CVID.MS_group_representative, new TermInfo(CVID.MS_group_representative, @"MS", @"MS:1002403", @"group representative", @"An arbitrary and optional flag applied to exactly one protein per group to indicate it can serve as the representative of the group, amongst leading proteins, in effect serving as a tiebreaker for approaches that require exactly one group representative.", false));
            TermData.Add(CVID.MS_count_of_identified_proteins, new TermInfo(CVID.MS_count_of_identified_proteins, @"MS", @"MS:1002404", @"count of identified proteins", @"The number of proteins that have been identified, which must match the number of groups that pass the threshold in the file.", false));
            TermData.Add(CVID.MS_protein_group_level_result_list_attribute, new TermInfo(CVID.MS_protein_group_level_result_list_attribute, @"MS", @"MS:1002405", @"protein group-level result list attribute", @"Details describing a protein cluster.", false));
            TermData.Add(CVID.MS_count_of_identified_clusters, new TermInfo(CVID.MS_count_of_identified_clusters, @"MS", @"MS:1002406", @"count of identified clusters", @"The number of protein clusters that have been identified, which must match the number of clusters that pass the threshold in the file.", false));
            TermData.Add(CVID.MS_cluster_identifier, new TermInfo(CVID.MS_cluster_identifier, @"MS", @"MS:1002407", @"cluster identifier", @"An identifier applied to protein groups to indicate that they are linked by shared peptides.", false));
            TermData.Add(CVID.MS_number_of_distinct_protein_sequences, new TermInfo(CVID.MS_number_of_distinct_protein_sequences, @"MS", @"MS:1002408", @"number of distinct protein sequences", @"The number of protein clusters that have been identified, which must match the number of clusters that pass the threshold in the file.", false));
            TermData.Add(CVID.MS_marginally_distinguished_protein, new TermInfo(CVID.MS_marginally_distinguished_protein, @"MS", @"MS:1002409", @"marginally distinguished protein", @"Assigned to a non-leading protein that has some independent evidence to support its presence relative to the leading protein(s), e.g. the protein may have a unique peptide but not sufficient to be promoted as a leading protein of another group.", false));
            TermData.Add(CVID.MS_Anubis, new TermInfo(CVID.MS_Anubis, @"MS", @"MS:1002410", @"Anubis", @"Anubis software for selected reaction monitoring data.", false));
            TermData.Add(CVID.MS_TraML_format, new TermInfo(CVID.MS_TraML_format, @"MS", @"MS:1002411", @"TraML format", @"The TraML format for transitions in SRM from the PSI. File extension '.TraML'.", false));
            TermData.Add(CVID.MS_total_XIC_area, new TermInfo(CVID.MS_total_XIC_area, @"MS", @"MS:1002412", @"total XIC area", @"Summed area of all the extracted ion chromatogram for the peptide (e.g. of all the transitions in SRM).", false));
            TermData.Add(CVID.MS_product_background, new TermInfo(CVID.MS_product_background, @"MS", @"MS:1002413", @"product background", @"The background area for the quantified transition.", false));
            TermData.Add(CVID.MS_postprocessing_software, new TermInfo(CVID.MS_postprocessing_software, @"MS", @"MS:1002414", @"postprocessing software", @"Postprocessing software.", false));
            TermData.Add(CVID.MS_protein_group_passes_threshold, new TermInfo(CVID.MS_protein_group_passes_threshold, @"MS", @"MS:1002415", @"protein group passes threshold", @"A Boolean attribute to determine whether the protein group has passed the threshold indicated in the file.", false));
            TermData.Add(CVID.MS_Orbitrap_Fusion, new TermInfo(CVID.MS_Orbitrap_Fusion, @"MS", @"MS:1002416", @"Orbitrap Fusion", @"Thermo Scientific Orbitrap Fusion.", false));
            TermData.Add(CVID.MS_Orbitrap_Fusion_ETD, new TermInfo(CVID.MS_Orbitrap_Fusion_ETD, @"MS", @"MS:1002417", @"Orbitrap Fusion ETD", @"Thermo Scientific Orbitrap Fusion with ETD.", false));
            TermData.Add(CVID.MS_TSQ_Quantiva, new TermInfo(CVID.MS_TSQ_Quantiva, @"MS", @"MS:1002418", @"TSQ Quantiva", @"Thermo Scientific TSQ Quantiva MS.", false));
            TermData.Add(CVID.MS_TSQ_Endura, new TermInfo(CVID.MS_TSQ_Endura, @"MS", @"MS:1002419", @"TSQ Endura", @"Thermo Scientific TSQ Endura MS.", false));
            TermData.Add(CVID.MS_PASSEL_experiment_URI, new TermInfo(CVID.MS_PASSEL_experiment_URI, @"MS", @"MS:1002420", @"PASSEL experiment URI", @"URI that allows access to a PASSEL experiment.", false));
            TermData.Add(CVID.MS_Paragon_input_parameter, new TermInfo(CVID.MS_Paragon_input_parameter, @"MS", @"MS:1002421", @"Paragon input parameter", @"Search engine input parameters specific to Paragon.", false));
            TermData.Add(CVID.MS_Paragon__sample_type, new TermInfo(CVID.MS_Paragon__sample_type, @"MS", @"MS:1002422", @"Paragon: sample type", @"The Paragon method setting indicating the type of sample at the high level, generally meaning the type of quantitation labelling or lack thereof. 'Identification' is indicated for samples without any labels for quantitation.", false));
            TermData.Add(CVID.MS_Paragon__cysteine_alkylation, new TermInfo(CVID.MS_Paragon__cysteine_alkylation, @"MS", @"MS:1002423", @"Paragon: cysteine alkylation", @"The Paragon method setting indicating the actual cysteine alkylation agent; 'None' is indicated if there was no cysteine alkylation.", false));
            TermData.Add(CVID.MS_Paragon__instrument_setting, new TermInfo(CVID.MS_Paragon__instrument_setting, @"MS", @"MS:1002424", @"Paragon: instrument setting", @"The Paragon method setting (translating to a large number of lower level settings) indicating the instrument used or a category of instrument.", false));
            TermData.Add(CVID.MS_Paragon__search_effort, new TermInfo(CVID.MS_Paragon__search_effort, @"MS", @"MS:1002425", @"Paragon: search effort", @"The Paragon method setting that controls the two major modes of search effort of the Paragon algorithm: the Rapid mode uses a conventional database search, while the Thorough mode uses a hybrid search, starting with the same approach as the Rapid mode but then follows it with a separate tag-based approach enabling a more extensive search.", false));
            TermData.Add(CVID.MS_Paragon__ID_focus, new TermInfo(CVID.MS_Paragon__ID_focus, @"MS", @"MS:1002426", @"Paragon: ID focus", @"A Paragon method setting that allows the inclusion of large sets of features such as biological modification or substitutions.", false));
            TermData.Add(CVID.MS_Paragon__FDR_analysis, new TermInfo(CVID.MS_Paragon__FDR_analysis, @"MS", @"MS:1002427", @"Paragon: FDR analysis", @"The Paragon method setting that controls whether FDR analysis is conducted.", false));
            TermData.Add(CVID.MS_Paragon__quantitation, new TermInfo(CVID.MS_Paragon__quantitation, @"MS", @"MS:1002428", @"Paragon: quantitation", @"The Paragon method setting that controls whether quantitation analysis is conducted.", false));
            TermData.Add(CVID.MS_Paragon__background_correction, new TermInfo(CVID.MS_Paragon__background_correction, @"MS", @"MS:1002429", @"Paragon: background correction", @"The Paragon method setting that controls whether the 'Background Correction' analysis is conducted; this processing estimates a correction to the attenuation in extremity ratios that can occur in isobaric quantatitation workflows on complex samples.", false));
            TermData.Add(CVID.MS_Paragon__bias_correction, new TermInfo(CVID.MS_Paragon__bias_correction, @"MS", @"MS:1002430", @"Paragon: bias correction", @"The Paragon method setting that controls whether 'Bias Correction' is invoked in quantitation analysis; this correction is a normalization to set the central tendency of protein ratios to unity.", false));
            TermData.Add(CVID.MS_Paragon__channel_to_use_as_denominator_in_ratios, new TermInfo(CVID.MS_Paragon__channel_to_use_as_denominator_in_ratios, @"MS", @"MS:1002431", @"Paragon: channel to use as denominator in ratios", @"The Paragon method setting that controls which label channel is used as the denominator in calculating relative expression ratios.", false));
            TermData.Add(CVID.MS_search_engine_specific_input_metadata, new TermInfo(CVID.MS_search_engine_specific_input_metadata, @"MS", @"MS:1002432", @"search engine specific input metadata", @"Search engine specific metadata that are not user-controlled settings.", false));
            TermData.Add(CVID.MS_Paragon__modified_data_dictionary_or_parameter_translation, new TermInfo(CVID.MS_Paragon__modified_data_dictionary_or_parameter_translation, @"MS", @"MS:1002433", @"Paragon: modified data dictionary or parameter translation", @"This metric detects if any changes have been made to the originally installed key control files for the software; if no changes have been made, then the software version and settings are sufficient to enable exact reproduction; if changes have been made, then the modified ParameterTranslation- and ProteinPilot DataDictionary-XML files much also be provided in order to exactly reproduce a result.", false));
            TermData.Add(CVID.MS_number_of_spectra_searched, new TermInfo(CVID.MS_number_of_spectra_searched, @"MS", @"MS:1002434", @"number of spectra searched", @"Number of spectra in a search.", false));
            TermData.Add(CVID.MS_data_processing_start_time, new TermInfo(CVID.MS_data_processing_start_time, @"MS", @"MS:1002435", @"data processing start time", @"The time that a data processing action was started.", false));
            TermData.Add(CVID.MS_Paragon__digestion, new TermInfo(CVID.MS_Paragon__digestion, @"MS", @"MS:1002436", @"Paragon: digestion", @"The Paragon method setting indicating the actual digestion agent - unlike other search tools, this setting does not include options that control partial specificity like 'semitrypsin'; if trypsin is used, trypsin is set, and partially conforming peptides are found in the Thorough mode of search; 'None' should be indicated only if there was really no digestion done.", false));
            TermData.Add(CVID.MS_number_of_decoy_sequences, new TermInfo(CVID.MS_number_of_decoy_sequences, @"MS", @"MS:1002437", @"number of decoy sequences", @"The number of decoy sequences, if the concatenated target-decoy approach is used.", false));
            TermData.Add(CVID.MS_spectrum_identification_list_result_details, new TermInfo(CVID.MS_spectrum_identification_list_result_details, @"MS", @"MS:1002438", @"spectrum identification list result details", @"Information about the list of PSMs (SpectrumIdentificationList).", false));
            TermData.Add(CVID.MS_final_PSM_list, new TermInfo(CVID.MS_final_PSM_list, @"MS", @"MS:1002439", @"final PSM list", @"A flag on a list of PSMs (SpectrumIdentificationList) to indicate that this is the final set of identifications to be interpreted by consuming software. Amongst the set of SpectrumIdentificationList(s) that are flagged with the term, each spectrum must not be referenced from more than one SpectrumIdentificationResult.", false));
            TermData.Add(CVID.MS_intermediate_PSM_list, new TermInfo(CVID.MS_intermediate_PSM_list, @"MS", @"MS:1002440", @"intermediate PSM list", @"A flag on a list of PSMs (SpectrumIdentificationList) to indicate that this is not the final set of identifications to be interpreted by consuming software. This term should be used when results are provided from multiple search engines for the results from each search engine before they are combined to give consensus identifications. Amongst the set of SpectrumIdentificationList(s) that are flagged with the term, each spectrum may be referenced from more than one SpectrumIdentificationResult.", false));
            TermData.Add(CVID.MS_Andi_MS_format, new TermInfo(CVID.MS_Andi_MS_format, @"MS", @"MS:1002441", @"Andi-MS format", @"AIA Analytical Data Interchange file format for mass spectrometry data.", false));
            TermData.Add(CVID.MS_chromatograph_file_format, new TermInfo(CVID.MS_chromatograph_file_format, @"MS", @"MS:1002442", @"chromatograph file format", @"The format of the chromatography file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format.", false));
            TermData.Add(CVID.MS_Andi_CHROM_format, new TermInfo(CVID.MS_Andi_CHROM_format, @"MS", @"MS:1002443", @"Andi-CHROM format", @"AIA Analytical Data Interchange file format for chromatography data.", false));
            TermData.Add(CVID.MS_6420_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6420_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002444", @"6420 Triple Quadrupole LC/MS", @"The 6420 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_6460_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6460_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002445", @"6460 Triple Quadrupole LC/MS", @"The 6460 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. It is similar to the 6420 but adds Agilent Jet Stream (AJS) technology to increase sensitivity.", false));
            TermData.Add(CVID.MS_6490_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6490_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002446", @"6490 Triple Quadrupole LC/MS", @"The 6490 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. It is similar to the 6420 but adds the Agilent iFunnel technology to increase sensitivity.", false));
            TermData.Add(CVID.MS_Paragon_special_factor, new TermInfo(CVID.MS_Paragon_special_factor, @"MS", @"MS:1002447", @"Paragon:special factor", @"The Paragon method setting indicating a list of one or more 'special factors', which generally capture secondary effects (relative to other settings) as a set of probabilities of modification features that override the assumed levels. For example the 'gel-based ID' special factor causes an increase probability of oxidation on several resides because of the air exposure impact on a gel, in addition to other effects.", false));
            TermData.Add(CVID.MS_PEAKS_inChorusPeptideScore, new TermInfo(CVID.MS_PEAKS_inChorusPeptideScore, @"MS", @"MS:1002448", @"PEAKS:inChorusPeptideScore", @"The PEAKS inChorus peptide score.", false));
            TermData.Add(CVID.MS_PEAKS_inChorusProteinScore, new TermInfo(CVID.MS_PEAKS_inChorusProteinScore, @"MS", @"MS:1002449", @"PEAKS:inChorusProteinScore", @"The PEAKS inChorus protein score.", false));
            TermData.Add(CVID.MS_param__b_ion_H3PO4_DEPRECATED, new TermInfo(CVID.MS_param__b_ion_H3PO4_DEPRECATED, @"MS", @"MS:1002450", @"param: b ion-H3PO4 DEPRECATED", @"Ion b-H3PO4: b ion with lost phosphoric acid.", false));
            TermData.Add(CVID.MS_param__y_ion_H3PO4_DEPRECATED, new TermInfo(CVID.MS_param__y_ion_H3PO4_DEPRECATED, @"MS", @"MS:1002451", @"param: y ion-H3PO4 DEPRECATED", @"Ion y-H3PO4: y ion with lost phosphoric acid.", false));
            TermData.Add(CVID.MS_Maui, new TermInfo(CVID.MS_Maui, @"MS", @"MS:1002452", @"Maui", @"The Maltcms Graphical User Interface.", false));
            TermData.Add(CVID.MS_No_fixed_modifications_searched, new TermInfo(CVID.MS_No_fixed_modifications_searched, @"MS", @"MS:1002453", @"No fixed modifications searched", @"No fixed modifications are included as a parameter for the search, and therefore they are not reported.", false));
            TermData.Add(CVID.MS_No_variable_modifications_searched, new TermInfo(CVID.MS_No_variable_modifications_searched, @"MS", @"MS:1002454", @"No variable modifications searched", @"No variable modifications are included as a parameter for the search, and therefore they are not reported.", false));
            TermData.Add(CVID.MS_H2O_neutral_loss_OBSOLETE, new TermInfo(CVID.MS_H2O_neutral_loss_OBSOLETE, @"MS", @"MS:1002455", @"H2O neutral loss", @"OBSOLETE Neutral loss of water.", true));
            TermData.Add(CVID.MS_NH3_neutral_loss_OBSOLETE, new TermInfo(CVID.MS_NH3_neutral_loss_OBSOLETE, @"MS", @"MS:1002456", @"NH3 neutral loss", @"OBSOLETE Neutral loss of ammonia.", true));
            TermData.Add(CVID.MS_H3PO4_neutral_loss_OBSOLETE, new TermInfo(CVID.MS_H3PO4_neutral_loss_OBSOLETE, @"MS", @"MS:1002457", @"H3PO4 neutral loss", @"OBSOLETE Neutral loss of phosphoric acid.", true));
            TermData.Add(CVID.MS_PeptideShaker, new TermInfo(CVID.MS_PeptideShaker, @"MS", @"MS:1002458", @"PeptideShaker", @"PeptideShaker is a software for the interpretation of proteomics identification results.", false));
            TermData.Add(CVID.MS_MS_Amanda_csv_format, new TermInfo(CVID.MS_MS_Amanda_csv_format, @"MS", @"MS:1002459", @"MS Amanda csv format", @"MS Amanda csv output format.", false));
            TermData.Add(CVID.MS_protein_group_level_global_FNR, new TermInfo(CVID.MS_protein_group_level_global_FNR, @"MS", @"MS:1002460", @"protein group-level global FNR", @"Estimation of the global false negative rate of protein groups.", false));
            TermData.Add(CVID.MS_protein_group_level_confidence, new TermInfo(CVID.MS_protein_group_level_confidence, @"MS", @"MS:1002461", @"protein group-level confidence", @"Estimation of the global confidence of protein groups.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_global_FNR, new TermInfo(CVID.MS_peptide_sequence_level_global_FNR, @"MS", @"MS:1002462", @"peptide sequence-level global FNR", @"Estimation of the global false negative rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_peptide_sequence_level_global_confidence, new TermInfo(CVID.MS_peptide_sequence_level_global_confidence, @"MS", @"MS:1002463", @"peptide sequence-level global confidence", @"Estimation of the global confidence for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry).", false));
            TermData.Add(CVID.MS_PSM_level_global_FNR, new TermInfo(CVID.MS_PSM_level_global_FNR, @"MS", @"MS:1002464", @"PSM-level global FNR", @"Estimation of the global false negative rate of peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PSM_level_global_confidence, new TermInfo(CVID.MS_PSM_level_global_confidence, @"MS", @"MS:1002465", @"PSM-level global confidence", @"Estimation of the global confidence of peptide spectrum matches.", false));
            TermData.Add(CVID.MS_PeptideShaker_PSM_score, new TermInfo(CVID.MS_PeptideShaker_PSM_score, @"MS", @"MS:1002466", @"PeptideShaker PSM score", @"The probability based PeptideShaker PSM score.", false));
            TermData.Add(CVID.MS_PeptideShaker_PSM_confidence, new TermInfo(CVID.MS_PeptideShaker_PSM_confidence, @"MS", @"MS:1002467", @"PeptideShaker PSM confidence", @"The probability based PeptideShaker PSM confidence.", false));
            TermData.Add(CVID.MS_PeptideShaker_peptide_score, new TermInfo(CVID.MS_PeptideShaker_peptide_score, @"MS", @"MS:1002468", @"PeptideShaker peptide score", @"The probability based PeptideShaker peptide score.", false));
            TermData.Add(CVID.MS_PeptideShaker_peptide_confidence, new TermInfo(CVID.MS_PeptideShaker_peptide_confidence, @"MS", @"MS:1002469", @"PeptideShaker peptide confidence", @"The probability based PeptideShaker peptide confidence.", false));
            TermData.Add(CVID.MS_PeptideShaker_protein_group_score, new TermInfo(CVID.MS_PeptideShaker_protein_group_score, @"MS", @"MS:1002470", @"PeptideShaker protein group score", @"The probability based PeptideShaker protein group score.", false));
            TermData.Add(CVID.MS_PeptideShaker_protein_group_confidence, new TermInfo(CVID.MS_PeptideShaker_protein_group_confidence, @"MS", @"MS:1002471", @"PeptideShaker protein group confidence", @"The probability based PeptideShaker protein group confidence.", false));
            TermData.Add(CVID.MS_trap_type_collision_induced_dissociation, new TermInfo(CVID.MS_trap_type_collision_induced_dissociation, @"MS", @"MS:1002472", @"trap-type collision-induced dissociation", @"A collision-induced dissociation process that occurs in a trap-type collision cell.", false));
            TermData.Add(CVID.MS_ion_series_considered_in_search, new TermInfo(CVID.MS_ion_series_considered_in_search, @"MS", @"MS:1002473", @"ion series considered in search", @"The description of the ion fragment series (including charges and neutral losses) that are considered by the search engine.", false));
            TermData.Add(CVID.MS_ProteoAnnotator_non_canonical_gene_model_score, new TermInfo(CVID.MS_ProteoAnnotator_non_canonical_gene_model_score, @"MS", @"MS:1002474", @"ProteoAnnotator:non-canonical gene model score", @"The sum of peptide-level scores for peptides mapped only to non-canonical gene models within the group.", false));
            TermData.Add(CVID.MS_ProteoAnnotator_count_alternative_peptides, new TermInfo(CVID.MS_ProteoAnnotator_count_alternative_peptides, @"MS", @"MS:1002475", @"ProteoAnnotator:count alternative peptides", @"The count of the number of peptide sequences mapped to non-canonical gene models only within the group.", false));
            TermData.Add(CVID.MS_ion_mobility_drift_time, new TermInfo(CVID.MS_ion_mobility_drift_time, @"MS", @"MS:1002476", @"ion mobility drift time", @"Drift time of an ion or spectrum of ions as measured in an ion mobility mass spectrometer. This time might refer to the central value of a bin into which all ions within a narrow range of drift time have been aggregated.", false));
            TermData.Add(CVID.MS_mean_drift_time_array, new TermInfo(CVID.MS_mean_drift_time_array, @"MS", @"MS:1002477", @"mean drift time array", @"Array of drift times, averaged from a matrix of binned m/z and drift time values, corresponding to spectrum of individual peaks encoded with an m/z array.", false));
            TermData.Add(CVID.MS_mean_charge_array, new TermInfo(CVID.MS_mean_charge_array, @"MS", @"MS:1002478", @"mean charge array", @"Array of mean charge values where the mean charge is calculated as a weighted mean of the charges of individual peaks that are aggregated into a processed spectrum.", false));
            TermData.Add(CVID.MS_regular_expression, new TermInfo(CVID.MS_regular_expression, @"MS", @"MS:1002479", @"regular expression", @"Regular expression.", false));
            TermData.Add(CVID.MS_regular_expression_for_a_digital_object_identifier__DOI_, new TermInfo(CVID.MS_regular_expression_for_a_digital_object_identifier__DOI_, @"MS", @"MS:1002480", @"regular expression for a digital object identifier (DOI)", @"(10", false));
            TermData.Add(CVID.MS_higher_energy_beam_type_collision_induced_dissociation, new TermInfo(CVID.MS_higher_energy_beam_type_collision_induced_dissociation, @"MS", @"MS:1002481", @"higher energy beam-type collision-induced dissociation", @"A collision-induced dissociation process wherein the projectile ion has the translational energy higher than approximately 1000 eV.", false));
            TermData.Add(CVID.MS_statistical_threshold, new TermInfo(CVID.MS_statistical_threshold, @"MS", @"MS:1002482", @"statistical threshold", @"Estimated statistical threshold.", false));
            TermData.Add(CVID.MS_PSM_level_statistical_threshold, new TermInfo(CVID.MS_PSM_level_statistical_threshold, @"MS", @"MS:1002483", @"PSM-level statistical threshold", @"Estimated statistical threshold at PSM-level.", false));
            TermData.Add(CVID.MS_peptide_level_statistical_threshold, new TermInfo(CVID.MS_peptide_level_statistical_threshold, @"MS", @"MS:1002484", @"peptide-level statistical threshold", @"Estimated statistical threshold at peptide-level.", false));
            TermData.Add(CVID.MS_protein_level_statistical_threshold, new TermInfo(CVID.MS_protein_level_statistical_threshold, @"MS", @"MS:1002485", @"protein-level statistical threshold", @"Estimated statistical threshold at protein-level.", false));
            TermData.Add(CVID.MS_protein_group_level_statistical_threshold, new TermInfo(CVID.MS_protein_group_level_statistical_threshold, @"MS", @"MS:1002486", @"protein group-level statistical threshold", @"Estimated statistical threshold at protein group-level.", false));
            TermData.Add(CVID.MS_MassIVE_dataset_identifier, new TermInfo(CVID.MS_MassIVE_dataset_identifier, @"MS", @"MS:1002487", @"MassIVE dataset identifier", @"Dataset identifier issued by the MassIVE repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_MassIVE_dataset_URI, new TermInfo(CVID.MS_MassIVE_dataset_URI, @"MS", @"MS:1002488", @"MassIVE dataset URI", @"URI that allows the access to one dataset in the MassIVE repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_special_processing, new TermInfo(CVID.MS_special_processing, @"MS", @"MS:1002489", @"special processing", @"Details describing a special processing.", false));
            TermData.Add(CVID.MS_peptide_level_scoring, new TermInfo(CVID.MS_peptide_level_scoring, @"MS", @"MS:1002490", @"peptide-level scoring", @"Peptide-level scoring performed.", false));
            TermData.Add(CVID.MS_modification_localization_scoring, new TermInfo(CVID.MS_modification_localization_scoring, @"MS", @"MS:1002491", @"modification localization scoring", @"Modification localization scoring performed.", false));
            TermData.Add(CVID.MS_consensus_scoring, new TermInfo(CVID.MS_consensus_scoring, @"MS", @"MS:1002492", @"consensus scoring", @"Consensus multiple search engine approach performed.", false));
            TermData.Add(CVID.MS_sample_pre_fractionation, new TermInfo(CVID.MS_sample_pre_fractionation, @"MS", @"MS:1002493", @"sample pre-fractionation", @"Sample pre-fractionation performed.", false));
            TermData.Add(CVID.MS_cross_linking_search, new TermInfo(CVID.MS_cross_linking_search, @"MS", @"MS:1002494", @"cross-linking search", @"Cross-linking search performed.", false));
            TermData.Add(CVID.MS_no_special_processing, new TermInfo(CVID.MS_no_special_processing, @"MS", @"MS:1002495", @"no special processing", @"No special processing performed.", false));
            TermData.Add(CVID.MS_group_PSMs_by_sequence, new TermInfo(CVID.MS_group_PSMs_by_sequence, @"MS", @"MS:1002496", @"group PSMs by sequence", @"Group PSMs by distinct peptide sequence ignoring modifications.", false));
            TermData.Add(CVID.MS_group_PSMs_by_sequence_with_modifications, new TermInfo(CVID.MS_group_PSMs_by_sequence_with_modifications, @"MS", @"MS:1002497", @"group PSMs by sequence with modifications", @"Group PSMs by distinct peptide sequence with taking modifications into account.", false));
            TermData.Add(CVID.MS_group_PSMs_by_sequence_with_modifications_and_charge, new TermInfo(CVID.MS_group_PSMs_by_sequence_with_modifications_and_charge, @"MS", @"MS:1002498", @"group PSMs by sequence with modifications and charge", @"Group PSMs by distinct peptide sequence with taking modifications and charge into account.", false));
            TermData.Add(CVID.MS_peptide_level_score_OBSOLETE, new TermInfo(CVID.MS_peptide_level_score_OBSOLETE, @"MS", @"MS:1002499", @"peptide level score", @"OBSOLETE Peptide level score.", true));
            TermData.Add(CVID.MS_peptide_passes_threshold, new TermInfo(CVID.MS_peptide_passes_threshold, @"MS", @"MS:1002500", @"peptide passes threshold", @"A Boolean attribute to determine whether the peptide has passed the threshold indicated in the file.", false));
            TermData.Add(CVID.MS_no_PSM_threshold, new TermInfo(CVID.MS_no_PSM_threshold, @"MS", @"MS:1002501", @"no PSM threshold", @"Indicating that no PSM threshold was used.", false));
            TermData.Add(CVID.MS_no_peptide_level_threshold, new TermInfo(CVID.MS_no_peptide_level_threshold, @"MS", @"MS:1002502", @"no peptide-level threshold", @"Indicating that no peptide-level threshold was used.", false));
            TermData.Add(CVID.MS_PSM_is_used_for_peptide_level_scoring, new TermInfo(CVID.MS_PSM_is_used_for_peptide_level_scoring, @"MS", @"MS:1002503", @"PSM is used for peptide-level scoring", @"Flags a PSM that it is used for peptide-level scoring.", false));
            TermData.Add(CVID.MS_modification_index, new TermInfo(CVID.MS_modification_index, @"MS", @"MS:1002504", @"modification index", @"The order of modifications to be referenced elsewhere in the document.", false));
            TermData.Add(CVID.MS_regular_expression_for_modification_localization_scoring, new TermInfo(CVID.MS_regular_expression_for_modification_localization_scoring, @"MS", @"MS:1002505", @"regular expression for modification localization scoring", @"(", false));
            TermData.Add(CVID.MS_modification_position_score, new TermInfo(CVID.MS_modification_position_score, @"MS", @"MS:1002506", @"modification position score", @"Modification position score.", false));
            TermData.Add(CVID.MS_modification_rescoring_false_localization_rate, new TermInfo(CVID.MS_modification_rescoring_false_localization_rate, @"MS", @"MS:1002507", @"modification rescoring:false localization rate", @"Mod position score: false localization rate.", false));
            TermData.Add(CVID.MS_cross_linking_attribute, new TermInfo(CVID.MS_cross_linking_attribute, @"MS", @"MS:1002508", @"cross-linking attribute", @"Cross-linking attribute.", false));
            TermData.Add(CVID.MS_cross_link_donor, new TermInfo(CVID.MS_cross_link_donor, @"MS", @"MS:1002509", @"cross-link donor", @"The Cross-linking donor, assigned according to the following rules: the export software SHOULD use the following rules to choose the cross-link donor as the: longer peptide, then higher peptide neutral mass, then alphabetical order.", false));
            TermData.Add(CVID.MS_cross_link_acceptor, new TermInfo(CVID.MS_cross_link_acceptor, @"MS", @"MS:1002510", @"cross-link acceptor", @"Cross-linking acceptor, assigned according to the following rules: the export software SHOULD use the following rules to choose the cross-link donor as the: longer peptide, then higher peptide neutral mass, then alphabetical order.", false));
            TermData.Add(CVID.MS_cross_link_spectrum_identification_item, new TermInfo(CVID.MS_cross_link_spectrum_identification_item, @"MS", @"MS:1002511", @"cross-link spectrum identification item", @"Cross-linked spectrum identification item.", false));
            TermData.Add(CVID.MS_cross_linking_score, new TermInfo(CVID.MS_cross_linking_score, @"MS", @"MS:1002512", @"cross-linking score", @"Cross-linking scoring value.", false));
            TermData.Add(CVID.MS_molecules_per_cell_, new TermInfo(CVID.MS_molecules_per_cell_, @"MS", @"MS:1002513", @"molecules per cell ", @"The absolute abundance of protein in a cell.", false));
            TermData.Add(CVID.MS_absolute_quantitation_analysis, new TermInfo(CVID.MS_absolute_quantitation_analysis, @"MS", @"MS:1002514", @"absolute quantitation analysis", @"Absolute quantitation analysis.", false));
            TermData.Add(CVID.MS_internal_peptide_reference_used, new TermInfo(CVID.MS_internal_peptide_reference_used, @"MS", @"MS:1002515", @"internal peptide reference used", @"States whether an internal peptide reference is used or not in absolute quantitation analysis.", false));
            TermData.Add(CVID.MS_internal_protein_reference_used, new TermInfo(CVID.MS_internal_protein_reference_used, @"MS", @"MS:1002516", @"internal protein reference used", @"States whether an internal protein reference is used or not in absolute quantitation analysis.", false));
            TermData.Add(CVID.MS_internal_reference_abundance, new TermInfo(CVID.MS_internal_reference_abundance, @"MS", @"MS:1002517", @"internal reference abundance", @"The absolute abundance of the spiked in reference peptide or protein used for absolute quantitation analysis.", false));
            TermData.Add(CVID.MS_Progenesis_protein_group_normalised_abundance, new TermInfo(CVID.MS_Progenesis_protein_group_normalised_abundance, @"MS", @"MS:1002518", @"Progenesis:protein group normalised abundance", @"The data type normalised abundance for protein groups produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_Progenesis_protein_group_raw_abundance, new TermInfo(CVID.MS_Progenesis_protein_group_raw_abundance, @"MS", @"MS:1002519", @"Progenesis:protein group raw abundance", @"The data type raw abundance for protein groups produced by Progenesis LC-MS.", false));
            TermData.Add(CVID.MS_peptide_group_ID, new TermInfo(CVID.MS_peptide_group_ID, @"MS", @"MS:1002520", @"peptide group ID", @"Peptide group identifier for peptide-level stats.", false));
            TermData.Add(CVID.MS_mass_spectrometry_imaging, new TermInfo(CVID.MS_mass_spectrometry_imaging, @"MS", @"MS:1002521", @"mass spectrometry imaging", @"A technique in which mass spectra are acquired in a spatially resolved manner. This is typically achieved by scanning a laser or primary ion beam over a sample and acquiring a mass spectrum at each position.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_1__Static_Terminal_Modification, new TermInfo(CVID.MS_ProteomeDiscoverer_1__Static_Terminal_Modification, @"MS", @"MS:1002522", @"ProteomeDiscoverer:1. Static Terminal Modification", @"Determine 1st static terminal post-translational modifications (PTMs).", false));
            TermData.Add(CVID.MS_Q_Exactive_HF, new TermInfo(CVID.MS_Q_Exactive_HF, @"MS", @"MS:1002523", @"Q Exactive HF", @"Thermo Scientific Q Exactive.", false));
            TermData.Add(CVID.MS_PepFinder, new TermInfo(CVID.MS_PepFinder, @"MS", @"MS:1002524", @"PepFinder", @"Thermo Scientific PepFinder BioPharma analysis software.", false));
            TermData.Add(CVID.MS_TSQ_8000_Evo, new TermInfo(CVID.MS_TSQ_8000_Evo, @"MS", @"MS:1002525", @"TSQ 8000 Evo", @"Thermo Scientific TSQ 8000 Evo MS.", false));
            TermData.Add(CVID.MS_Exactive_Plus, new TermInfo(CVID.MS_Exactive_Plus, @"MS", @"MS:1002526", @"Exactive Plus", @"Thermo Scientific Exactive Plus MS.", false));
            TermData.Add(CVID.MS_instrument_specific_scan_attribute, new TermInfo(CVID.MS_instrument_specific_scan_attribute, @"MS", @"MS:1002527", @"instrument specific scan attribute", @"Instrument specific scan properties that are associated with a value.", false));
            TermData.Add(CVID.MS_synchronous_prefilter_selection, new TermInfo(CVID.MS_synchronous_prefilter_selection, @"MS", @"MS:1002528", @"synchronous prefilter selection", @"Synchronous prefilter selection.", false));
            TermData.Add(CVID.MS_resolution_array, new TermInfo(CVID.MS_resolution_array, @"MS", @"MS:1002529", @"resolution array", @"A data array of resolution values.", false));
            TermData.Add(CVID.MS_baseline_array, new TermInfo(CVID.MS_baseline_array, @"MS", @"MS:1002530", @"baseline array", @"A data array of signal baseline values (the signal in the absence of analytes).", false));
            TermData.Add(CVID.MS_UIMF_format, new TermInfo(CVID.MS_UIMF_format, @"MS", @"MS:1002531", @"UIMF format", @"SQLite-based file format created at Pacific Northwest National Lab. It stores an intermediate analysis of ion-mobility mass spectrometry data.", false));
            TermData.Add(CVID.MS_UIMF_nativeID_format, new TermInfo(CVID.MS_UIMF_nativeID_format, @"MS", @"MS:1002532", @"UIMF nativeID format", @"Native format defined by frame=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger frameType=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_TripleTOF_6600, new TermInfo(CVID.MS_TripleTOF_6600, @"MS", @"MS:1002533", @"TripleTOF 6600", @"SCIEX TripleTOF 6600, a quadrupole - quadrupole - time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_ProLuCID_xcorr, new TermInfo(CVID.MS_ProLuCID_xcorr, @"MS", @"MS:1002534", @"ProLuCID:xcorr", @"The ProLuCID result 'XCorr'.", false));
            TermData.Add(CVID.MS_ProLuCID_deltacn, new TermInfo(CVID.MS_ProLuCID_deltacn, @"MS", @"MS:1002535", @"ProLuCID:deltacn", @"The ProLuCID result 'DeltaCn'.", false));
            TermData.Add(CVID.MS_D_Score, new TermInfo(CVID.MS_D_Score, @"MS", @"MS:1002536", @"D-Score", @"D-Score for PTM site location at the PSM-level.", false));
            TermData.Add(CVID.MS_MD_Score, new TermInfo(CVID.MS_MD_Score, @"MS", @"MS:1002537", @"MD-Score", @"MD-Score for PTM site location at the PSM-level.", false));
            TermData.Add(CVID.MS_PTM_localization_confidence_metric, new TermInfo(CVID.MS_PTM_localization_confidence_metric, @"MS", @"MS:1002538", @"PTM localization confidence metric", @"Localization confidence metric for a post translational modification (PTM).", false));
            TermData.Add(CVID.MS_PeptideShaker_PTM_confidence_type, new TermInfo(CVID.MS_PeptideShaker_PTM_confidence_type, @"MS", @"MS:1002539", @"PeptideShaker PTM confidence type", @"PeptideShaker quality criteria for the confidence of PTM localizations.", false));
            TermData.Add(CVID.MS_PeptideShaker_PSM_confidence_type, new TermInfo(CVID.MS_PeptideShaker_PSM_confidence_type, @"MS", @"MS:1002540", @"PeptideShaker PSM confidence type", @"PeptideShaker quality criteria for the confidence of PSM's.", false));
            TermData.Add(CVID.MS_PeptideShaker_peptide_confidence_type, new TermInfo(CVID.MS_PeptideShaker_peptide_confidence_type, @"MS", @"MS:1002541", @"PeptideShaker peptide confidence type", @"PeptideShaker quality criteria for the confidence of peptide identifications.", false));
            TermData.Add(CVID.MS_PeptideShaker_protein_confidence_type, new TermInfo(CVID.MS_PeptideShaker_protein_confidence_type, @"MS", @"MS:1002542", @"PeptideShaker protein confidence type", @"PeptideShaker quality criteria for the confidence of protein identifications.", false));
            TermData.Add(CVID.MS_xiFDR, new TermInfo(CVID.MS_xiFDR, @"MS", @"MS:1002543", @"xiFDR", @"Target/Decoy based FDR estimation for cross-linking peptide-identifications.", false));
            TermData.Add(CVID.MS_xi, new TermInfo(CVID.MS_xi, @"MS", @"MS:1002544", @"xi", @"Search engine for cross-linked peptides.", false));
            TermData.Add(CVID.MS_xi_score, new TermInfo(CVID.MS_xi_score, @"MS", @"MS:1002545", @"xi:score", @"The xi result 'Score'.", false));
            TermData.Add(CVID.MS_Skyline_mzQuantML_converter_, new TermInfo(CVID.MS_Skyline_mzQuantML_converter_, @"MS", @"MS:1002546", @"Skyline mzQuantML converter ", @"A software package to convert Skyline report to mzQuantML.", false));
            TermData.Add(CVID.MS_normalized_spectral_abundance_factor, new TermInfo(CVID.MS_normalized_spectral_abundance_factor, @"MS", @"MS:1002547", @"normalized spectral abundance factor", @"A normalized spectral abundance factor (NSAF).", false));
            TermData.Add(CVID.MS_distributed_normalized_spectral_abundance_factor, new TermInfo(CVID.MS_distributed_normalized_spectral_abundance_factor, @"MS", @"MS:1002548", @"distributed normalized spectral abundance factor", @"A distributed normalized spectral abundance factor (dNSAF).", false));
            TermData.Add(CVID.MS_PTM_localization_distinct_peptide_level_statistic, new TermInfo(CVID.MS_PTM_localization_distinct_peptide_level_statistic, @"MS", @"MS:1002549", @"PTM localization distinct peptide-level statistic", @"Statistic to convey the confidence of the localization of an amino acid modification on a peptide sequence.", false));
            TermData.Add(CVID.MS_peptide_phosphoRS_score, new TermInfo(CVID.MS_peptide_phosphoRS_score, @"MS", @"MS:1002550", @"peptide:phosphoRS score", @"phosphoRS score for PTM site location at the peptide-level.", false));
            TermData.Add(CVID.MS_peptide_Ascore, new TermInfo(CVID.MS_peptide_Ascore, @"MS", @"MS:1002551", @"peptide:Ascore", @"A-score for PTM site location at the peptide-level.", false));
            TermData.Add(CVID.MS_peptide_H_Score, new TermInfo(CVID.MS_peptide_H_Score, @"MS", @"MS:1002552", @"peptide:H-Score", @"H-Score for peptide phosphorylation site location at the peptide-level.", false));
            TermData.Add(CVID.MS_peptide_D_Score, new TermInfo(CVID.MS_peptide_D_Score, @"MS", @"MS:1002553", @"peptide:D-Score", @"D-Score for PTM site location at the peptide-level.", false));
            TermData.Add(CVID.MS_peptide_MD_Score, new TermInfo(CVID.MS_peptide_MD_Score, @"MS", @"MS:1002554", @"peptide:MD-Score", @"MD-Score for PTM site location at the peptide-level.", false));
            TermData.Add(CVID.MS_PTM_localization_score_threshold, new TermInfo(CVID.MS_PTM_localization_score_threshold, @"MS", @"MS:1002555", @"PTM localization score threshold", @"Threshold for PTM site location score.", false));
            TermData.Add(CVID.MS_Ascore_threshold, new TermInfo(CVID.MS_Ascore_threshold, @"MS", @"MS:1002556", @"Ascore threshold", @"Threshold for Ascore PTM site location score.", false));
            TermData.Add(CVID.MS_D_Score_threshold, new TermInfo(CVID.MS_D_Score_threshold, @"MS", @"MS:1002557", @"D-Score threshold", @"Threshold for D-score PTM site location score.", false));
            TermData.Add(CVID.MS_MD_Score_threshold, new TermInfo(CVID.MS_MD_Score_threshold, @"MS", @"MS:1002558", @"MD-Score threshold", @"Threshold for MD-score PTM site location score.", false));
            TermData.Add(CVID.MS_H_Score_threshold, new TermInfo(CVID.MS_H_Score_threshold, @"MS", @"MS:1002559", @"H-Score threshold", @"Threshold for H-score PTM site location score.", false));
            TermData.Add(CVID.MS_DeBunker_score_threshold, new TermInfo(CVID.MS_DeBunker_score_threshold, @"MS", @"MS:1002560", @"DeBunker:score threshold", @"Threshold for DeBunker PTM site location score.", false));
            TermData.Add(CVID.MS_Mascot_PTM_site_assignment_confidence_threshold, new TermInfo(CVID.MS_Mascot_PTM_site_assignment_confidence_threshold, @"MS", @"MS:1002561", @"Mascot:PTM site assignment confidence threshold", @"Threshold for Mascot PTM site assignment confidence.", false));
            TermData.Add(CVID.MS_MSQuant_PTM_score_threshold, new TermInfo(CVID.MS_MSQuant_PTM_score_threshold, @"MS", @"MS:1002562", @"MSQuant:PTM-score threshold", @"Threshold for MSQuant:PTM-score.", false));
            TermData.Add(CVID.MS_MaxQuant_PTM_Score_threshold, new TermInfo(CVID.MS_MaxQuant_PTM_Score_threshold, @"MS", @"MS:1002563", @"MaxQuant:PTM Score threshold", @"Threshold for MaxQuant:PTM Score.", false));
            TermData.Add(CVID.MS_MaxQuant_P_site_localization_probability_threshold, new TermInfo(CVID.MS_MaxQuant_P_site_localization_probability_threshold, @"MS", @"MS:1002564", @"MaxQuant:P-site localization probability threshold", @"Threshold for MaxQuant:P-site localization probability.", false));
            TermData.Add(CVID.MS_MaxQuant_PTM_Delta_Score_threshold, new TermInfo(CVID.MS_MaxQuant_PTM_Delta_Score_threshold, @"MS", @"MS:1002565", @"MaxQuant:PTM Delta Score threshold", @"Threshold for MaxQuant:PTM Delta Score.", false));
            TermData.Add(CVID.MS_MaxQuant_Phospho__STY__Probabilities_threshold, new TermInfo(CVID.MS_MaxQuant_Phospho__STY__Probabilities_threshold, @"MS", @"MS:1002566", @"MaxQuant:Phospho (STY) Probabilities threshold", @"Threshold for MaxQuant:Phospho (STY) Probabilities.", false));
            TermData.Add(CVID.MS_phosphoRS_score_threshold, new TermInfo(CVID.MS_phosphoRS_score_threshold, @"MS", @"MS:1002567", @"phosphoRS score threshold", @"Threshold for phosphoRS score.", false));
            TermData.Add(CVID.MS_phosphoRS_site_probability_threshold, new TermInfo(CVID.MS_phosphoRS_site_probability_threshold, @"MS", @"MS:1002568", @"phosphoRS site probability threshold", @"Threshold for phosphoRS site probability.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Number_of_Spectra_Processed_At_Once, new TermInfo(CVID.MS_ProteomeDiscoverer_Number_of_Spectra_Processed_At_Once, @"MS", @"MS:1002569", @"ProteomeDiscoverer:Number of Spectra Processed At Once", @"Number of spectra processed at once in a ProteomeDiscoverer search.", false));
            TermData.Add(CVID.MS_sequence_multiply_subsumable_protein, new TermInfo(CVID.MS_sequence_multiply_subsumable_protein, @"MS", @"MS:1002570", @"sequence multiply subsumable protein", @"A protein for which the matched peptide sequences are the same, or a subset of, the matched peptide sequences for two or more other proteins combined. These other proteins need not all be in the same group.", false));
            TermData.Add(CVID.MS_spectrum_multiply_subsumable_protein, new TermInfo(CVID.MS_spectrum_multiply_subsumable_protein, @"MS", @"MS:1002571", @"spectrum multiply subsumable protein", @"A protein for which the matched spectra are the same, or a subset of, the matched spectra for two or more other proteins combined. These other proteins need not all be in the same group.", false));
            TermData.Add(CVID.MS_protein_detection_statistical_threshold, new TermInfo(CVID.MS_protein_detection_statistical_threshold, @"MS", @"MS:1002572", @"protein detection statistical threshold", @"Estimated statistical threshold used for protein detection.", false));
            TermData.Add(CVID.MS_spectrum_identification_statistical_threshold, new TermInfo(CVID.MS_spectrum_identification_statistical_threshold, @"MS", @"MS:1002573", @"spectrum identification statistical threshold", @"Estimated statistical threshold used for spectrum identification.", false));
            TermData.Add(CVID.MS_ASAPRatio, new TermInfo(CVID.MS_ASAPRatio, @"MS", @"MS:1002574", @"ASAPRatio", @"A program in the TPP that calculates PSM, peptide, and protein-level abundances based on 2-channel isotope-labelled data such as ICAT, SILAC, etc.", false));
            TermData.Add(CVID.MS_Tide, new TermInfo(CVID.MS_Tide, @"MS", @"MS:1002575", @"Tide", @"Tide open-source sequence search program developed at the University of Washington.", false));
            TermData.Add(CVID.MS_Andromeda_result_format, new TermInfo(CVID.MS_Andromeda_result_format, @"MS", @"MS:1002576", @"Andromeda result format", @"Andromeda result file output format.", false));
            TermData.Add(CVID.MS_2000_QTRAP, new TermInfo(CVID.MS_2000_QTRAP, @"MS", @"MS:1002577", @"2000 QTRAP", @"SCIEX 2000 QTRAP.", false));
            TermData.Add(CVID.MS_2500_QTRAP, new TermInfo(CVID.MS_2500_QTRAP, @"MS", @"MS:1002578", @"2500 QTRAP", @"SCIEX 2500 QTRAP.", false));
            TermData.Add(CVID.MS_3500_QTRAP, new TermInfo(CVID.MS_3500_QTRAP, @"MS", @"MS:1002579", @"3500 QTRAP", @"SCIEX 3500 QTRAP.", false));
            TermData.Add(CVID.MS_QTRAP_4500, new TermInfo(CVID.MS_QTRAP_4500, @"MS", @"MS:1002580", @"QTRAP 4500", @"SCIEX QTRAP 4500.", false));
            TermData.Add(CVID.MS_QTRAP_6500, new TermInfo(CVID.MS_QTRAP_6500, @"MS", @"MS:1002581", @"QTRAP 6500", @"SCIEX QTRAP 6500.", false));
            TermData.Add(CVID.MS_QTRAP_6500_, new TermInfo(CVID.MS_QTRAP_6500_, @"MS", @"MS:1002582", @"QTRAP 6500+", @"SCIEX QTRAP 6500+.", false));
            TermData.Add(CVID.MS_TripleTOF_4600, new TermInfo(CVID.MS_TripleTOF_4600, @"MS", @"MS:1002583", @"TripleTOF 4600", @"SCIEX TripleTOF 4600 time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_TripleTOF_5600_, new TermInfo(CVID.MS_TripleTOF_5600_, @"MS", @"MS:1002584", @"TripleTOF 5600+", @"SCIEX TripleTOF 5600+ time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_API_100, new TermInfo(CVID.MS_API_100, @"MS", @"MS:1002585", @"API 100", @"Applied Biosystems/MDS SCIEX API 100 MS.", false));
            TermData.Add(CVID.MS_API_100LC, new TermInfo(CVID.MS_API_100LC, @"MS", @"MS:1002586", @"API 100LC", @"Applied Biosystems/MDS SCIEX API 100LC MS.", false));
            TermData.Add(CVID.MS_API_165, new TermInfo(CVID.MS_API_165, @"MS", @"MS:1002587", @"API 165", @"Applied Biosystems/MDS SCIEX API 165 MS.", false));
            TermData.Add(CVID.MS_API_300, new TermInfo(CVID.MS_API_300, @"MS", @"MS:1002588", @"API 300", @"Applied Biosystems/MDS SCIEX API 300 MS.", false));
            TermData.Add(CVID.MS_API_350, new TermInfo(CVID.MS_API_350, @"MS", @"MS:1002589", @"API 350", @"Applied Biosystems/MDS SCIEX API 350 MS.", false));
            TermData.Add(CVID.MS_API_365, new TermInfo(CVID.MS_API_365, @"MS", @"MS:1002590", @"API 365", @"Applied Biosystems/MDS SCIEX API 365 MS.", false));
            TermData.Add(CVID.MS_Triple_Quad_3500, new TermInfo(CVID.MS_Triple_Quad_3500, @"MS", @"MS:1002591", @"Triple Quad 3500", @"SCIEX Triple Quad 3500.", false));
            TermData.Add(CVID.MS_Triple_Quad_4500, new TermInfo(CVID.MS_Triple_Quad_4500, @"MS", @"MS:1002592", @"Triple Quad 4500", @"SCIEX Triple Quad 4500.", false));
            TermData.Add(CVID.MS_Triple_Quad_5500, new TermInfo(CVID.MS_Triple_Quad_5500, @"MS", @"MS:1002593", @"Triple Quad 5500", @"SCIEX Triple Quad 5500.", false));
            TermData.Add(CVID.MS_Triple_Quad_6500, new TermInfo(CVID.MS_Triple_Quad_6500, @"MS", @"MS:1002594", @"Triple Quad 6500", @"SCIEX Triple Quad 6500.", false));
            TermData.Add(CVID.MS_Triple_Quad_6500_, new TermInfo(CVID.MS_Triple_Quad_6500_, @"MS", @"MS:1002595", @"Triple Quad 6500+", @"SCIEX Triple Quad 6500+.", false));
            TermData.Add(CVID.MS_ProLuCID, new TermInfo(CVID.MS_ProLuCID, @"MS", @"MS:1002596", @"ProLuCID", @"The SEQUEST-like sequence search engine ProLuCID, developed in the Yates Lab at the Scripps Research Institute.", false));
            TermData.Add(CVID.MS_MS1_format, new TermInfo(CVID.MS_MS1_format, @"MS", @"MS:1002597", @"MS1 format", @"MS1 file format for MS1 spectral data.", false));
            TermData.Add(CVID.MS_DTASelect, new TermInfo(CVID.MS_DTASelect, @"MS", @"MS:1002598", @"DTASelect", @"Analysis software designed to reassemble the SEQUEST peptide identifications and to highlight the most significant matches.", false));
            TermData.Add(CVID.MS_splash_key, new TermInfo(CVID.MS_splash_key, @"MS", @"MS:1002599", @"splash key", @"Spectral Hash key, an unique identifier for spectra.", false));
            TermData.Add(CVID.MS_PRIDE_XML, new TermInfo(CVID.MS_PRIDE_XML, @"MS", @"MS:1002600", @"PRIDE XML", @"Internal data and submission format of the PRIDE database.", false));
            TermData.Add(CVID.MS_mzTab, new TermInfo(CVID.MS_mzTab, @"MS", @"MS:1002601", @"mzTab", @"Tabular result format for proteomics and metabolomics experiments.", false));
            TermData.Add(CVID.MS_sample_label, new TermInfo(CVID.MS_sample_label, @"MS", @"MS:1002602", @"sample label", @"Reagent used in labeled quantification methods.", false));
            TermData.Add(CVID.MS_ICAT_reagent, new TermInfo(CVID.MS_ICAT_reagent, @"MS", @"MS:1002603", @"ICAT reagent", @"Isotope coded affinity tag reagent.", false));
            TermData.Add(CVID.MS_ICAT_heavy_reagent, new TermInfo(CVID.MS_ICAT_heavy_reagent, @"MS", @"MS:1002604", @"ICAT heavy reagent", @"The name of the sample labelled with the heavy ICAT label.", false));
            TermData.Add(CVID.MS_ICAT_light_reagent, new TermInfo(CVID.MS_ICAT_light_reagent, @"MS", @"MS:1002605", @"ICAT light reagent", @"The name of the sample labelled with the light ICAT label.", false));
            TermData.Add(CVID.MS_ICPL_reagent, new TermInfo(CVID.MS_ICPL_reagent, @"MS", @"MS:1002606", @"ICPL reagent", @"Isotope coded protein labeling reagent.", false));
            TermData.Add(CVID.MS_ICPL_reagent_0, new TermInfo(CVID.MS_ICPL_reagent_0, @"MS", @"MS:1002607", @"ICPL reagent 0", @"The name of the sample labelled with the ICPL reagent 0.", false));
            TermData.Add(CVID.MS_ICPL_reagent_4, new TermInfo(CVID.MS_ICPL_reagent_4, @"MS", @"MS:1002608", @"ICPL reagent 4", @"The name of the sample labelled with the ICPL reagent 4.", false));
            TermData.Add(CVID.MS_ICPL_reagent_6, new TermInfo(CVID.MS_ICPL_reagent_6, @"MS", @"MS:1002609", @"ICPL reagent 6", @"The name of the sample labelled with the ICPL reagent 6.", false));
            TermData.Add(CVID.MS_ICPL_reagent_10, new TermInfo(CVID.MS_ICPL_reagent_10, @"MS", @"MS:1002610", @"ICPL reagent 10", @"The name of the sample labelled with the ICPL reagent 10.", false));
            TermData.Add(CVID.MS_SILAC_reagent, new TermInfo(CVID.MS_SILAC_reagent, @"MS", @"MS:1002611", @"SILAC reagent", @"Stable isotope labeling with amino acids in cell culture reagent.", false));
            TermData.Add(CVID.MS_SILAC_heavy_reagent, new TermInfo(CVID.MS_SILAC_heavy_reagent, @"MS", @"MS:1002612", @"SILAC heavy reagent", @"The name of the sample labelled with the heavy SILAC label.", false));
            TermData.Add(CVID.MS_SILAC_medium_reagent, new TermInfo(CVID.MS_SILAC_medium_reagent, @"MS", @"MS:1002613", @"SILAC medium reagent", @"The name of the sample labelled with the medium SILAC label.", false));
            TermData.Add(CVID.MS_SILAC_light_reagent, new TermInfo(CVID.MS_SILAC_light_reagent, @"MS", @"MS:1002614", @"SILAC light reagent", @"The name of the sample labelled with the light SILAC label.", false));
            TermData.Add(CVID.MS_TMT_reagent, new TermInfo(CVID.MS_TMT_reagent, @"MS", @"MS:1002615", @"TMT reagent", @"Tandem mass tag reagent used in TMT, glycoTMT, iodoTMT, aminoxyTMT or hydrazideTMT isobaric labeling.", false));
            TermData.Add(CVID.MS_TMT_reagent_126, new TermInfo(CVID.MS_TMT_reagent_126, @"MS", @"MS:1002616", @"TMT reagent 126", @"The name of the sample labelled with the TMT reagent 126.", false));
            TermData.Add(CVID.MS_TMT_reagent_127, new TermInfo(CVID.MS_TMT_reagent_127, @"MS", @"MS:1002617", @"TMT reagent 127", @"The name of the sample labelled with the TMT reagent 127.", false));
            TermData.Add(CVID.MS_TMT_reagent_128, new TermInfo(CVID.MS_TMT_reagent_128, @"MS", @"MS:1002618", @"TMT reagent 128", @"The name of the sample labelled with the TMT reagent 128.", false));
            TermData.Add(CVID.MS_TMT_reagent_129, new TermInfo(CVID.MS_TMT_reagent_129, @"MS", @"MS:1002619", @"TMT reagent 129", @"The name of the sample labelled with the TMT reagent 129.", false));
            TermData.Add(CVID.MS_TMT_reagent_130, new TermInfo(CVID.MS_TMT_reagent_130, @"MS", @"MS:1002620", @"TMT reagent 130", @"The name of the sample labelled with the TMT reagent 130.", false));
            TermData.Add(CVID.MS_TMT_reagent_131, new TermInfo(CVID.MS_TMT_reagent_131, @"MS", @"MS:1002621", @"TMT reagent 131", @"The name of the sample labelled with the TMT reagent 131.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent, new TermInfo(CVID.MS_iTRAQ_reagent, @"MS", @"MS:1002622", @"iTRAQ reagent", @"Isobaric tag for relative and absolute quantitation (iTRAQ or iTRAQH) reagent.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_113, new TermInfo(CVID.MS_iTRAQ_reagent_113, @"MS", @"MS:1002623", @"iTRAQ reagent 113", @"The name of the sample labelled with the iTRAQ reagent 113.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_114, new TermInfo(CVID.MS_iTRAQ_reagent_114, @"MS", @"MS:1002624", @"iTRAQ reagent 114", @"The name of the sample labelled with the iTRAQ reagent 114.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_115, new TermInfo(CVID.MS_iTRAQ_reagent_115, @"MS", @"MS:1002625", @"iTRAQ reagent 115", @"The name of the sample labelled with the iTRAQ reagent 115.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_116, new TermInfo(CVID.MS_iTRAQ_reagent_116, @"MS", @"MS:1002626", @"iTRAQ reagent 116", @"The name of the sample labelled with the iTRAQ reagent 116.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_117, new TermInfo(CVID.MS_iTRAQ_reagent_117, @"MS", @"MS:1002627", @"iTRAQ reagent 117", @"The name of the sample labelled with the iTRAQ reagent 117.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_118, new TermInfo(CVID.MS_iTRAQ_reagent_118, @"MS", @"MS:1002628", @"iTRAQ reagent 118", @"The name of the sample labelled with the iTRAQ reagent 118.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_119, new TermInfo(CVID.MS_iTRAQ_reagent_119, @"MS", @"MS:1002629", @"iTRAQ reagent 119", @"The name of the sample labelled with the iTRAQ reagent 119.", false));
            TermData.Add(CVID.MS_iTRAQ_reagent_121, new TermInfo(CVID.MS_iTRAQ_reagent_121, @"MS", @"MS:1002630", @"iTRAQ reagent 121", @"The name of the sample labelled with the iTRAQ reagent 121.", false));
            TermData.Add(CVID.MS_Electron_Transfer_Higher_Energy_Collision_Dissociation__EThcD_, new TermInfo(CVID.MS_Electron_Transfer_Higher_Energy_Collision_Dissociation__EThcD_, @"MS", @"MS:1002631", @"Electron-Transfer/Higher-Energy Collision Dissociation (EThcD)", @"A dissociation process combining electron-transfer and higher-energy collision dissociation (EThcD). It combines ETD (reaction time) followed by HCD (activation energy).", false));
            TermData.Add(CVID.MS_jPOST_dataset_identifier, new TermInfo(CVID.MS_jPOST_dataset_identifier, @"MS", @"MS:1002632", @"jPOST dataset identifier", @"Dataset identifier issued by the jPOST repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_jPOST_dataset_URI, new TermInfo(CVID.MS_jPOST_dataset_URI, @"MS", @"MS:1002633", @"jPOST dataset URI", @"URI that allows the access to one dataset in the jPOST repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_Q_Exactive_Plus, new TermInfo(CVID.MS_Q_Exactive_Plus, @"MS", @"MS:1002634", @"Q Exactive Plus", @"Thermo Scientific Q Exactive Plus.", false));
            TermData.Add(CVID.MS_proteogenomics_search, new TermInfo(CVID.MS_proteogenomics_search, @"MS", @"MS:1002635", @"proteogenomics search", @"Proteogenomics search performed.", false));
            TermData.Add(CVID.MS_proteogenomics_attribute, new TermInfo(CVID.MS_proteogenomics_attribute, @"MS", @"MS:1002636", @"proteogenomics attribute", @"Proteogenomics attribute.", false));
            TermData.Add(CVID.MS_chromosome_name, new TermInfo(CVID.MS_chromosome_name, @"MS", @"MS:1002637", @"chromosome name", @"The name or number of the chromosome to which a given peptide has been mapped.", false));
            TermData.Add(CVID.MS_chromosome_strand, new TermInfo(CVID.MS_chromosome_strand, @"MS", @"MS:1002638", @"chromosome strand", @"The strand (+ or -) to which the peptide has been mapped.", false));
            TermData.Add(CVID.MS_peptide_start_on_chromosome_OBSOLETE, new TermInfo(CVID.MS_peptide_start_on_chromosome_OBSOLETE, @"MS", @"MS:1002639", @"peptide start on chromosome", @"OBSOLETE The overall start position on the chromosome to which a peptide has been mapped i.e. the position of the first base of the first codon, using a zero-based counting system.", true));
            TermData.Add(CVID.MS_peptide_end_on_chromosome, new TermInfo(CVID.MS_peptide_end_on_chromosome, @"MS", @"MS:1002640", @"peptide end on chromosome", @"The overall end position on the chromosome to which a peptide has been mapped i.e. the position of the third base of the last codon, using a zero-based counting system.", false));
            TermData.Add(CVID.MS_peptide_exon_count, new TermInfo(CVID.MS_peptide_exon_count, @"MS", @"MS:1002641", @"peptide exon count", @"The number of exons to which the peptide has been mapped.", false));
            TermData.Add(CVID.MS_peptide_exon_nucleotide_sizes, new TermInfo(CVID.MS_peptide_exon_nucleotide_sizes, @"MS", @"MS:1002642", @"peptide exon nucleotide sizes", @"A comma separated list of the number of DNA bases within each exon to which a peptide has been mapped. Assuming standard operation of a search engine, the peptide exon sizes should sum to exactly three times the peptide length.", false));
            TermData.Add(CVID.MS_peptide_start_positions_on_chromosome, new TermInfo(CVID.MS_peptide_start_positions_on_chromosome, @"MS", @"MS:1002643", @"peptide start positions on chromosome", @"A comma separated list of start positions within exons to which the peptide has been mapped, relative to peptide-chromosome start, assuming a zero-based counting system. The first value MUST match the value in peptide start on chromosome.", false));
            TermData.Add(CVID.MS_genome_reference_version, new TermInfo(CVID.MS_genome_reference_version, @"MS", @"MS:1002644", @"genome reference version", @"The reference genome and versioning string as used for mapping. All coordinates are within this frame of reference.", false));
            TermData.Add(CVID.MS_MSDK, new TermInfo(CVID.MS_MSDK, @"MS", @"MS:1002645", @"MSDK", @"Mass Spectrometry Development Kit (MSDK) is a Java library of algorithms for processing of mass spectrometry data.", false));
            TermData.Add(CVID.MS_native_spectrum_identifier_format__combined_spectra, new TermInfo(CVID.MS_native_spectrum_identifier_format__combined_spectra, @"MS", @"MS:1002646", @"native spectrum identifier format, combined spectra", @"Describes how the native spectrum identifiers that have been combined prior to searching or interpretation are formated.", false));
            TermData.Add(CVID.MS_Thermo_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Thermo_nativeID_format__combined_spectra, @"MS", @"MS:1002647", @"Thermo nativeID format, combined spectra", @"Thermo comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_Waters_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Waters_nativeID_format__combined_spectra, @"MS", @"MS:1002648", @"Waters nativeID format, combined spectra", @"Waters comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_WIFF_nativeID_format__combined_spectra, new TermInfo(CVID.MS_WIFF_nativeID_format__combined_spectra, @"MS", @"MS:1002649", @"WIFF nativeID format, combined spectra", @"WIFF comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_Bruker_Agilent_YEP_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Bruker_Agilent_YEP_nativeID_format__combined_spectra, @"MS", @"MS:1002650", @"Bruker/Agilent YEP nativeID format, combined spectra", @"Bruker/Agilent comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_Bruker_BAF_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Bruker_BAF_nativeID_format__combined_spectra, @"MS", @"MS:1002651", @"Bruker BAF nativeID format, combined spectra", @"Bruker BAF comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_Bruker_FID_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Bruker_FID_nativeID_format__combined_spectra, @"MS", @"MS:1002652", @"Bruker FID nativeID format, combined spectra", @"Bruker FID comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_multiple_peak_list_nativeID_format__combined_spectra, new TermInfo(CVID.MS_multiple_peak_list_nativeID_format__combined_spectra, @"MS", @"MS:1002653", @"multiple peak list nativeID format, combined spectra", @"Comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_single_peak_list_nativeID_format__combined_spectra, new TermInfo(CVID.MS_single_peak_list_nativeID_format__combined_spectra, @"MS", @"MS:1002654", @"single peak list nativeID format, combined spectra", @"Comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_scan_number_only_nativeID_format__combined_spectra, new TermInfo(CVID.MS_scan_number_only_nativeID_format__combined_spectra, @"MS", @"MS:1002655", @"scan number only nativeID format, combined spectra", @"Comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_spectrum_identifier_nativeID_format__combined_spectra, new TermInfo(CVID.MS_spectrum_identifier_nativeID_format__combined_spectra, @"MS", @"MS:1002656", @"spectrum identifier nativeID format, combined spectra", @"Comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_mzML_unique_identifier__combined_spectra, new TermInfo(CVID.MS_mzML_unique_identifier__combined_spectra, @"MS", @"MS:1002657", @"mzML unique identifier, combined spectra", @"Comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_identification_parameter, new TermInfo(CVID.MS_identification_parameter, @"MS", @"MS:1002658", @"identification parameter", @"Identification parameter for the search engine run.", false));
            TermData.Add(CVID.MS_UniProtKB_text_sequence_format, new TermInfo(CVID.MS_UniProtKB_text_sequence_format, @"MS", @"MS:1002659", @"UniProtKB text sequence format", @"Text-based format used by UniProtKB for sequence entries.", false));
            TermData.Add(CVID.MS_UniProtKB_XML_sequence_format, new TermInfo(CVID.MS_UniProtKB_XML_sequence_format, @"MS", @"MS:1002660", @"UniProtKB XML sequence format", @"XML-based format used by UniProtKB for sequence entries.", false));
            TermData.Add(CVID.MS_Morpheus, new TermInfo(CVID.MS_Morpheus, @"MS", @"MS:1002661", @"Morpheus", @"Morpheus search engine.", false));
            TermData.Add(CVID.MS_Morpheus_Morpheus_score, new TermInfo(CVID.MS_Morpheus_Morpheus_score, @"MS", @"MS:1002662", @"Morpheus:Morpheus score", @"Morpheus score for PSMs.", false));
            TermData.Add(CVID.MS_Morpheus_summed_Morpheus_score, new TermInfo(CVID.MS_Morpheus_summed_Morpheus_score, @"MS", @"MS:1002663", @"Morpheus:summed Morpheus score", @"Summed Morpheus score for protein groups.", false));
            TermData.Add(CVID.MS_interaction_score_derived_from_cross_linking, new TermInfo(CVID.MS_interaction_score_derived_from_cross_linking, @"MS", @"MS:1002664", @"interaction score derived from cross-linking", @"Parent term for interaction scores derived from cross-linking.", false));
            TermData.Add(CVID.MS_regular_expression_for_interaction_scores_derived_from_cross_linking, new TermInfo(CVID.MS_regular_expression_for_interaction_scores_derived_from_cross_linking, @"MS", @"MS:1002665", @"regular expression for interaction scores derived from cross-linking", @"(", false));
            TermData.Add(CVID.MS_impact_II, new TermInfo(CVID.MS_impact_II, @"MS", @"MS:1002666", @"impact II", @"Bruker Daltonics' impact II.", false));
            TermData.Add(CVID.MS_impact_HD, new TermInfo(CVID.MS_impact_HD, @"MS", @"MS:1002667", @"impact HD", @"Bruker Daltonics' impact HD.", false));
            TermData.Add(CVID.MS_frag__iTRAQ_4plex_reporter_ion, new TermInfo(CVID.MS_frag__iTRAQ_4plex_reporter_ion, @"MS", @"MS:1002668", @"frag: iTRAQ 4plex reporter ion", @"Standard reporter ion for iTRAQ 4Plex. The value slot holds the integer mass of the iTRAQ 4Plex reporter ion, e.g. 114.", false));
            TermData.Add(CVID.MS_frag__iTRAQ_8plex_reporter_ion, new TermInfo(CVID.MS_frag__iTRAQ_8plex_reporter_ion, @"MS", @"MS:1002669", @"frag: iTRAQ 8plex reporter ion", @"Standard reporter ion for iTRAQ 8Plex. The value slot holds the integer mass of the iTRAQ 8Plex reporter ion, e.g. 113.", false));
            TermData.Add(CVID.MS_frag__TMT_reporter_ion, new TermInfo(CVID.MS_frag__TMT_reporter_ion, @"MS", @"MS:1002670", @"frag: TMT reporter ion", @"Standard reporter ion for TMT. The value slot holds the integer mass of the TMT reporter ion and can be suffixed with either N or C, indicating whether the mass difference is encoded at a Nitrogen or Carbon atom, e.g. 127N.", false));
            TermData.Add(CVID.MS_frag__TMT_ETD_reporter_ion, new TermInfo(CVID.MS_frag__TMT_ETD_reporter_ion, @"MS", @"MS:1002671", @"frag: TMT ETD reporter ion", @"Standard reporter ion for TMT with ETD fragmentation. The value slot holds the integer mass of the TMT ETD reporter ion and can be suffixed with either N or C, indicating whether the mass difference is encoded at a Nitrogen or Carbon atom, e.g. 127C.", false));
            TermData.Add(CVID.MS_no_modification_threshold, new TermInfo(CVID.MS_no_modification_threshold, @"MS", @"MS:1002672", @"no modification threshold", @"No statistical threshold for accepting or rejecting that a modification position.", false));
            TermData.Add(CVID.MS_OpenXQuest, new TermInfo(CVID.MS_OpenXQuest, @"MS", @"MS:1002673", @"OpenXQuest", @"Cross-Linking MS search engine.", false));
            TermData.Add(CVID.MS_X500R_QTOF, new TermInfo(CVID.MS_X500R_QTOF, @"MS", @"MS:1002674", @"X500R QTOF", @"SCIEX X500R QTOF, a quadrupole - quadrupole - time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_cross_linking_result_details, new TermInfo(CVID.MS_cross_linking_result_details, @"MS", @"MS:1002675", @"cross-linking result details", @"This subsection describes terms which can describe details of cross-linking results.", false));
            TermData.Add(CVID.MS_protein_pair_level_global_FDR, new TermInfo(CVID.MS_protein_pair_level_global_FDR, @"MS", @"MS:1002676", @"protein-pair-level global FDR", @"Estimation of the global false discovery rate of proteins-pairs in cross-linking experiments.", false));
            TermData.Add(CVID.MS_residue_pair_level_global_FDR, new TermInfo(CVID.MS_residue_pair_level_global_FDR, @"MS", @"MS:1002677", @"residue-pair-level global FDR", @"Estimation of the global false discovery rate of residue-pairs in cross-linking experiments.", false));
            TermData.Add(CVID.MS_supplemental_beam_type_collision_induced_dissociation, new TermInfo(CVID.MS_supplemental_beam_type_collision_induced_dissociation, @"MS", @"MS:1002678", @"supplemental beam-type collision-induced dissociation", @"A supplemental collision-induced dissociation process that occurs in a beam-type collision cell in addition to another primary type of dissociation.", false));
            TermData.Add(CVID.MS_supplemental_collision_induced_dissociation, new TermInfo(CVID.MS_supplemental_collision_induced_dissociation, @"MS", @"MS:1002679", @"supplemental collision-induced dissociation", @"The dissociation of an ion after supplemental collisional excitation.", false));
            TermData.Add(CVID.MS_supplemental_collision_energy, new TermInfo(CVID.MS_supplemental_collision_energy, @"MS", @"MS:1002680", @"supplemental collision energy", @"Energy for an ion experiencing supplemental collision with a stationary gas particle resulting in dissociation of the ion.", false));
            TermData.Add(CVID.MS_OpenXQuest_combined_score, new TermInfo(CVID.MS_OpenXQuest_combined_score, @"MS", @"MS:1002681", @"OpenXQuest:combined score", @"OpenXQuest's combined score for a cross-link spectrum match.", false));
            TermData.Add(CVID.MS_OpenXQuest_xcorr_xlink, new TermInfo(CVID.MS_OpenXQuest_xcorr_xlink, @"MS", @"MS:1002682", @"OpenXQuest:xcorr xlink", @"OpenXQuest's cross-correlation of cross-linked ions subscore.", false));
            TermData.Add(CVID.MS_OpenXQuest_xcorr_common, new TermInfo(CVID.MS_OpenXQuest_xcorr_common, @"MS", @"MS:1002683", @"OpenXQuest:xcorr common", @"OpenXQuest's cross-correlation of unlinked ions subscore.", false));
            TermData.Add(CVID.MS_OpenXQuest_match_odds, new TermInfo(CVID.MS_OpenXQuest_match_odds, @"MS", @"MS:1002684", @"OpenXQuest:match-odds", @"OpenXQuest's match-odds subscore.", false));
            TermData.Add(CVID.MS_OpenXQuest_intsum, new TermInfo(CVID.MS_OpenXQuest_intsum, @"MS", @"MS:1002685", @"OpenXQuest:intsum", @"OpenXQuest's sum of matched peak intensity subscore.", false));
            TermData.Add(CVID.MS_OpenXQuest_wTIC, new TermInfo(CVID.MS_OpenXQuest_wTIC, @"MS", @"MS:1002686", @"OpenXQuest:wTIC", @"OpenXQuest's weighted percent of total ion current subscore.", false));
            TermData.Add(CVID.MS_analysis_attribute, new TermInfo(CVID.MS_analysis_attribute, @"MS", @"MS:1002687", @"analysis attribute", @"Attribute of an item in the result of mass spectrometry proteomics data analysis.", false));
            TermData.Add(CVID.MS_PTM_localization_attribute, new TermInfo(CVID.MS_PTM_localization_attribute, @"MS", @"MS:1002688", @"PTM localization attribute", @"Statistic derived from a post-translational modification localization analysis.", false));
            TermData.Add(CVID.MS_PTM_localization_single_result_statistic, new TermInfo(CVID.MS_PTM_localization_single_result_statistic, @"MS", @"MS:1002689", @"PTM localization single result statistic", @"Statistic for a single item derived from a post-translational modification localization analysis.", false));
            TermData.Add(CVID.MS_PTM_localization_result_list_statistic, new TermInfo(CVID.MS_PTM_localization_result_list_statistic, @"MS", @"MS:1002690", @"PTM localization result list statistic", @"Statistic for all items derived from a post-translational modification localization analysis.", false));
            TermData.Add(CVID.MS_global_FLR, new TermInfo(CVID.MS_global_FLR, @"MS", @"MS:1002691", @"global FLR", @"Global false localization rate for all localizations in a dataset.", false));
            TermData.Add(CVID.MS_local_FLR_at_threshold, new TermInfo(CVID.MS_local_FLR_at_threshold, @"MS", @"MS:1002692", @"local FLR at threshold", @"Local false localization rate for the bottom item in list of localizations sorted from most to least confident.", false));
            TermData.Add(CVID.MS_identification_attribute, new TermInfo(CVID.MS_identification_attribute, @"MS", @"MS:1002693", @"identification attribute", @"Attribute of an identification item in the result of mass spectrometry proteomics data analysis.", false));
            TermData.Add(CVID.MS_single_identification_result_attribute, new TermInfo(CVID.MS_single_identification_result_attribute, @"MS", @"MS:1002694", @"single identification result attribute", @"Attribute of a single identification item (as opposed to a list) in the result of mass spectrometry proteomics data analysis.", false));
            TermData.Add(CVID.MS_frag__isobaric_label_ion, new TermInfo(CVID.MS_frag__isobaric_label_ion, @"MS", @"MS:1002695", @"frag: isobaric label ion", @"Fragment ion corresponding to an isobaric label artifact.", false));
            TermData.Add(CVID.MS_secondary_isotope_peak, new TermInfo(CVID.MS_secondary_isotope_peak, @"MS", @"MS:1002697", @"secondary isotope peak", @"Fragment ion is an isotopic peak other than that monoisotopic peak. This is used in conjuction with another ion type, such as frag: y ion.", false));
            TermData.Add(CVID.MS_protein_cluster_identification_attribute, new TermInfo(CVID.MS_protein_cluster_identification_attribute, @"MS", @"MS:1002698", @"protein cluster identification attribute", @"An attribute of the protein cluster concept as used in mzIdentML.", false));
            TermData.Add(CVID.MS_result_list_attribute, new TermInfo(CVID.MS_result_list_attribute, @"MS", @"MS:1002699", @"result list attribute", @"General property of an entire result list.", false));
            TermData.Add(CVID.MS_PSM_level_result_list_attribute, new TermInfo(CVID.MS_PSM_level_result_list_attribute, @"MS", @"MS:1002700", @"PSM-level result list attribute", @"General property of the list of all PSMs.", false));
            TermData.Add(CVID.MS_PSM_level_result_list_statistic, new TermInfo(CVID.MS_PSM_level_result_list_statistic, @"MS", @"MS:1002701", @"PSM-level result list statistic", @"Statistic pertaining to the full list of all PSMs.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_result_list_attribute, new TermInfo(CVID.MS_peptide_sequence_level_result_list_attribute, @"MS", @"MS:1002702", @"peptide sequence-level result list attribute", @"General property of all peptide sequences in the list.", false));
            TermData.Add(CVID.MS_peptide_sequence_level_result_list_statistic, new TermInfo(CVID.MS_peptide_sequence_level_result_list_statistic, @"MS", @"MS:1002703", @"peptide sequence-level result list statistic", @"Statistic pertaining to all peptide sequences in the list.", false));
            TermData.Add(CVID.MS_protein_level_result_list_attribute, new TermInfo(CVID.MS_protein_level_result_list_attribute, @"MS", @"MS:1002704", @"protein-level result list attribute", @"Attribute of an entire protein list.", false));
            TermData.Add(CVID.MS_protein_level_result_list_statistic, new TermInfo(CVID.MS_protein_level_result_list_statistic, @"MS", @"MS:1002705", @"protein-level result list statistic", @"A statistical metric of an entire protein list.", false));
            TermData.Add(CVID.MS_protein_group_level_result_list_statistic, new TermInfo(CVID.MS_protein_group_level_result_list_statistic, @"MS", @"MS:1002706", @"protein group-level result list statistic", @"Attrbiute of an entire list of protein groups.", false));
            TermData.Add(CVID.MS_Pegasus_BT, new TermInfo(CVID.MS_Pegasus_BT, @"MS", @"MS:1002719", @"Pegasus BT", @"LECO bench-top GC time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_MSPathFinder, new TermInfo(CVID.MS_MSPathFinder, @"MS", @"MS:1002720", @"MSPathFinder", @"PNNL top-down/bottom-up analysis software for identifying peptides and proteoforms in fragmentation mass spectra.", false));
            TermData.Add(CVID.MS_MSPathFinder_SpecEValue, new TermInfo(CVID.MS_MSPathFinder_SpecEValue, @"MS", @"MS:1002721", @"MSPathFinder:SpecEValue", @"MSPathFinder spectral E-value.", false));
            TermData.Add(CVID.MS_MSPathFinder_EValue, new TermInfo(CVID.MS_MSPathFinder_EValue, @"MS", @"MS:1002722", @"MSPathFinder:EValue", @"MSPathFinder E-value.", false));
            TermData.Add(CVID.MS_MSPathFinder_QValue, new TermInfo(CVID.MS_MSPathFinder_QValue, @"MS", @"MS:1002723", @"MSPathFinder:QValue", @"MSPathFinder Q-value.", false));
            TermData.Add(CVID.MS_MSPathFinder_PepQValue, new TermInfo(CVID.MS_MSPathFinder_PepQValue, @"MS", @"MS:1002724", @"MSPathFinder:PepQValue", @"MSPathFinder peptide-level Q-value.", false));
            TermData.Add(CVID.MS_MSPathFinder_RawScore, new TermInfo(CVID.MS_MSPathFinder_RawScore, @"MS", @"MS:1002725", @"MSPathFinder:RawScore", @"MSPathFinder raw score.", false));
            TermData.Add(CVID.MS_SYNAPT_G2_Si, new TermInfo(CVID.MS_SYNAPT_G2_Si, @"MS", @"MS:1002726", @"SYNAPT G2-Si", @"Waters Corporation SYNAPT G2-Si orthogonal acceleration time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_MALDI_SYNAPT_G2_Si, new TermInfo(CVID.MS_MALDI_SYNAPT_G2_Si, @"MS", @"MS:1002727", @"MALDI SYNAPT G2-Si", @"Waters Corporation MALDI SYNAPT G2-Si orthogonal acceleration time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_Vion_IMS_QTof, new TermInfo(CVID.MS_Vion_IMS_QTof, @"MS", @"MS:1002728", @"Vion IMS QTof", @"Waters Corporation Vion IMS QTof orthogonal acceleration time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_Xevo_G2_XS_Tof, new TermInfo(CVID.MS_Xevo_G2_XS_Tof, @"MS", @"MS:1002729", @"Xevo G2 XS Tof", @"Waters Corporation Xevo G2 XS Tof orthogonal acceleration time-of-flight mass spectrometer.", false));
            TermData.Add(CVID.MS_Xevo_TQ_XS, new TermInfo(CVID.MS_Xevo_TQ_XS, @"MS", @"MS:1002730", @"Xevo TQ-XS", @"Waters Corporation Xevo TQ-XS triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_Xevo_TQ_S_micro, new TermInfo(CVID.MS_Xevo_TQ_S_micro, @"MS", @"MS:1002731", @"Xevo TQ-S micro", @"Waters Corporation Xevo TQ-S micro triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_Orbitrap_Fusion_Lumos, new TermInfo(CVID.MS_Orbitrap_Fusion_Lumos, @"MS", @"MS:1002732", @"Orbitrap Fusion Lumos", @"Thermo Scientific Orbitrap Fusion Lumos mass spectrometer with Tribrid architecture consisting of quadrupole mass filter, linear ion trap and Orbitrap mass analyzers.", false));
            TermData.Add(CVID.MS_peptide_level_spectral_count, new TermInfo(CVID.MS_peptide_level_spectral_count, @"MS", @"MS:1002733", @"peptide-level spectral count", @"The number of MS2 spectra identified for a peptide sequence specified by the amino acid one-letter codes plus optional PTMs in spectral counting.", false));
            TermData.Add(CVID.MS_peptide_ion_level_spectral_count, new TermInfo(CVID.MS_peptide_ion_level_spectral_count, @"MS", @"MS:1002734", @"peptide ion-level spectral count", @"The number of MS2 spectra identified for a molecular ion defined by the peptide sequence represented by the amino acid one-letter codes, plus optional PTMs plus optional charged aducts plus the charge state, in spectral counting.", false));
            TermData.Add(CVID.MS_feature_level_quantification_datatype, new TermInfo(CVID.MS_feature_level_quantification_datatype, @"MS", @"MS:1002735", @"feature-level quantification datatype", @"The data type of the value reported in a QuantLayer for a feature.", false));
            TermData.Add(CVID.MS_PSM_level_quantification_datatype, new TermInfo(CVID.MS_PSM_level_quantification_datatype, @"MS", @"MS:1002736", @"PSM-level quantification datatype", @"The data type of the value reported in a QuantLayer for a PSM.", false));
            TermData.Add(CVID.MS_peptide_level_quantification_datatype, new TermInfo(CVID.MS_peptide_level_quantification_datatype, @"MS", @"MS:1002737", @"peptide-level quantification datatype", @"The data type of the value reported in a QuantLayer for a peptide.", false));
            TermData.Add(CVID.MS_protein_level_quantification_datatype, new TermInfo(CVID.MS_protein_level_quantification_datatype, @"MS", @"MS:1002738", @"protein-level quantification datatype", @"The data type of the value reported in a QuantLayer for a protein.", false));
            TermData.Add(CVID.MS_protein_group_level_quantification_datatype, new TermInfo(CVID.MS_protein_group_level_quantification_datatype, @"MS", @"MS:1002739", @"protein group-level quantification datatype", @"The data type of the value reported in a QuantLayer for a protein group.", false));
            TermData.Add(CVID.MS_unmapped_peptide, new TermInfo(CVID.MS_unmapped_peptide, @"MS", @"MS:1002740", @"unmapped peptide", @"Within the context of a proteogenomics approach, a peptide sequence that has not been mapped to a genomic location.", false));
            TermData.Add(CVID.MS_unmapped_protein, new TermInfo(CVID.MS_unmapped_protein, @"MS", @"MS:1002741", @"unmapped protein", @"Within the context of a proteogenomics approach, a protein sequence that has not been mapped to a genomic location.", false));
            TermData.Add(CVID.MS_noise_array, new TermInfo(CVID.MS_noise_array, @"MS", @"MS:1002742", @"noise array", @"A data array of noise values.", false));
            TermData.Add(CVID.MS_sampled_noise_m_z_array, new TermInfo(CVID.MS_sampled_noise_m_z_array, @"MS", @"MS:1002743", @"sampled noise m/z array", @"A data array of parallel, independent m/z values for a sampling of noise across a spectrum (typically much smaller than MS:1000514, the m/z array).", false));
            TermData.Add(CVID.MS_sampled_noise_intensity_array, new TermInfo(CVID.MS_sampled_noise_intensity_array, @"MS", @"MS:1002744", @"sampled noise intensity array", @"A data array of intensity values for the amplitude of noise variation superposed on the baseline (MS:1002745) across a spectrum (for use with MS:1002743, sampled noise m/z array).", false));
            TermData.Add(CVID.MS_sampled_noise_baseline_array, new TermInfo(CVID.MS_sampled_noise_baseline_array, @"MS", @"MS:1002745", @"sampled noise baseline array", @"A data array of baseline intensity values (the intensity in the absence of analytes) for a sampling of noise across a spectrum (for use with MS:1002743, sampled noise m/z array).", false));
            TermData.Add(CVID.MS_MS_Numpress_linear_prediction_compression_followed_by_zlib_compression, new TermInfo(CVID.MS_MS_Numpress_linear_prediction_compression_followed_by_zlib_compression, @"MS", @"MS:1002746", @"MS-Numpress linear prediction compression followed by zlib compression", @"Compression using MS-Numpress linear prediction compression and zlib.", false));
            TermData.Add(CVID.MS_MS_Numpress_positive_integer_compression_followed_by_zlib_compression, new TermInfo(CVID.MS_MS_Numpress_positive_integer_compression_followed_by_zlib_compression, @"MS", @"MS:1002747", @"MS-Numpress positive integer compression followed by zlib compression", @"Compression using MS-Numpress positive integer compression and zlib.", false));
            TermData.Add(CVID.MS_MS_Numpress_short_logged_float_compression_followed_by_zlib_compression, new TermInfo(CVID.MS_MS_Numpress_short_logged_float_compression_followed_by_zlib_compression, @"MS", @"MS:1002748", @"MS-Numpress short logged float compression followed by zlib compression", @"Compression using MS-Numpress short logged float compression and zlib.", false));
            TermData.Add(CVID.MS_Mascot_IntegratedSpectralLibrarySearch, new TermInfo(CVID.MS_Mascot_IntegratedSpectralLibrarySearch, @"MS", @"MS:1002749", @"Mascot:IntegratedSpectralLibrarySearch", @"Means that Mascot has integrated the search results of database and spectral library search into a single data set.", false));
            TermData.Add(CVID.MS_NIST_MSPepSearch, new TermInfo(CVID.MS_NIST_MSPepSearch, @"MS", @"MS:1002750", @"NIST MSPepSearch", @"Search tool of the NIST (National Institute of Standards and Technology) for spectral library searches.", false));
            TermData.Add(CVID.MS_NIST_MSP_format, new TermInfo(CVID.MS_NIST_MSP_format, @"MS", @"MS:1002751", @"NIST MSP format", @"MSP text format defined by the NIST.", false));
            TermData.Add(CVID.MS_database_type_spectral_library, new TermInfo(CVID.MS_database_type_spectral_library, @"MS", @"MS:1002752", @"database type spectral library", @"Database containing spectra.", false));
            TermData.Add(CVID.MS_value_between_0_and_1000_inclusive, new TermInfo(CVID.MS_value_between_0_and_1000_inclusive, @"MS", @"MS:1002753", @"value between 0 and 1000 inclusive", @"Value range for scores.", false));
            TermData.Add(CVID.MS_MSPepSearch_score, new TermInfo(CVID.MS_MSPepSearch_score, @"MS", @"MS:1002754", @"MSPepSearch:score", @"MSPepSearch score (0 for entirely dissimilar and 1000 for identical observed spectrum and library spectrum.", false));
            TermData.Add(CVID.MS_combined_ms_ms___spectral_library_search, new TermInfo(CVID.MS_combined_ms_ms___spectral_library_search, @"MS", @"MS:1002755", @"combined ms-ms + spectral library search", @"A combined MS2 (with fragment ions) and spectral library search.", false));
            TermData.Add(CVID.MS_iodoTMT_quantitation_analysis, new TermInfo(CVID.MS_iodoTMT_quantitation_analysis, @"MS", @"MS:1002756", @"iodoTMT quantitation analysis", @"Quantitation analysis using the Thermo Fisher sulfhydryl-reactive iodo tandem mass tag (iodoTMT) labelling workflow.", false));
            TermData.Add(CVID.MS_glyco_TMT_quantitation_analysis, new TermInfo(CVID.MS_glyco_TMT_quantitation_analysis, @"MS", @"MS:1002757", @"glyco-TMT quantitation analysis", @"Quantitation analysis using the Thermo Fisher carbonyl-reactive glyco-tandem mass tag (glyco-TMT) labelling workflow.", false));
            TermData.Add(CVID.MS_aminoxyTMT_quantitation_analysis, new TermInfo(CVID.MS_aminoxyTMT_quantitation_analysis, @"MS", @"MS:1002758", @"aminoxyTMT quantitation analysis", @"Quantitation analysis using the Thermo Fisher carbonyl-reactive aminoxy tandem mass tag (aminoxyTMT) labelling workflow.", false));
            TermData.Add(CVID.MS_hydrazideTMT_quantitation_analysis, new TermInfo(CVID.MS_hydrazideTMT_quantitation_analysis, @"MS", @"MS:1002759", @"hydrazideTMT quantitation analysis", @"Quantitation analysis using the Thermo Fisher carbonyl-reactive hydrazide tandem mass tag (hydrazide-TMT) labelling workflow.", false));
            TermData.Add(CVID.MS_iTRAQH_quantitation_analysis, new TermInfo(CVID.MS_iTRAQH_quantitation_analysis, @"MS", @"MS:1002760", @"iTRAQH quantitation analysis", @"Quantification analysis using the carbonyl-reactive isobaric tags for relative and absolute quantification hydrazide (iTRAQH) labelling workflow.", false));
            TermData.Add(CVID.MS_DiART_quantitation_analysis, new TermInfo(CVID.MS_DiART_quantitation_analysis, @"MS", @"MS:1002761", @"DiART quantitation analysis", @"Quantification analysis using the amine-reactive deuterium isobaric amine reactive tag (DiART) labelling workflow.", false));
            TermData.Add(CVID.MS_DiLeu_quantitation_analysis, new TermInfo(CVID.MS_DiLeu_quantitation_analysis, @"MS", @"MS:1002762", @"DiLeu quantitation analysis", @"Quantification analysis using the amine-reactive dimethyl leucine (DiLeu) tag labelling workflow.", false));
            TermData.Add(CVID.MS_TMT_reagent_127N, new TermInfo(CVID.MS_TMT_reagent_127N, @"MS", @"MS:1002763", @"TMT reagent 127N", @"The name of the sample labelled with the TMT reagent 127N.", false));
            TermData.Add(CVID.MS_TMT_reagent_127C, new TermInfo(CVID.MS_TMT_reagent_127C, @"MS", @"MS:1002764", @"TMT reagent 127C", @"The name of the sample labelled with the TMT reagent 127C.", false));
            TermData.Add(CVID.MS_TMT_reagent_128N, new TermInfo(CVID.MS_TMT_reagent_128N, @"MS", @"MS:1002765", @"TMT reagent 128N", @"The name of the sample labelled with the TMT reagent 128N.", false));
            TermData.Add(CVID.MS_TMT_reagent_128C, new TermInfo(CVID.MS_TMT_reagent_128C, @"MS", @"MS:1002766", @"TMT reagent 128C", @"The name of the sample labelled with the TMT reagent 128C.", false));
            TermData.Add(CVID.MS_TMT_reagent_129N, new TermInfo(CVID.MS_TMT_reagent_129N, @"MS", @"MS:1002767", @"TMT reagent 129N", @"The name of the sample labelled with the TMT reagent 129N.", false));
            TermData.Add(CVID.MS_TMT_reagent_129C, new TermInfo(CVID.MS_TMT_reagent_129C, @"MS", @"MS:1002768", @"TMT reagent 129C", @"The name of the sample labelled with the TMT reagent 129C.", false));
            TermData.Add(CVID.MS_TMT_reagent_130N, new TermInfo(CVID.MS_TMT_reagent_130N, @"MS", @"MS:1002769", @"TMT reagent 130N", @"The name of the sample labelled with the TMT reagent 130N.", false));
            TermData.Add(CVID.MS_TMT_reagent_130C, new TermInfo(CVID.MS_TMT_reagent_130C, @"MS", @"MS:1002770", @"TMT reagent 130C", @"The name of the sample labelled with the TMT reagent 130C.", false));
            TermData.Add(CVID.MS_DiART_reagent, new TermInfo(CVID.MS_DiART_reagent, @"MS", @"MS:1002771", @"DiART reagent", @"Deuterium isobaric amine reactive tag labeling reagent.", false));
            TermData.Add(CVID.MS_DiART_reagent_114, new TermInfo(CVID.MS_DiART_reagent_114, @"MS", @"MS:1002772", @"DiART reagent 114", @"The name of the sample labelled with the DiART reagent 114.", false));
            TermData.Add(CVID.MS_DiART_reagent_115, new TermInfo(CVID.MS_DiART_reagent_115, @"MS", @"MS:1002773", @"DiART reagent 115", @"The name of the sample labelled with the DiART reagent 115.", false));
            TermData.Add(CVID.MS_DiART_reagent_116, new TermInfo(CVID.MS_DiART_reagent_116, @"MS", @"MS:1002774", @"DiART reagent 116", @"The name of the sample labelled with the DiART reagent 116.", false));
            TermData.Add(CVID.MS_DiART_reagent_117, new TermInfo(CVID.MS_DiART_reagent_117, @"MS", @"MS:1002775", @"DiART reagent 117", @"The name of the sample labelled with the DiART reagent 117.", false));
            TermData.Add(CVID.MS_DiART_reagent_118, new TermInfo(CVID.MS_DiART_reagent_118, @"MS", @"MS:1002776", @"DiART reagent 118", @"The name of the sample labelled with the DiART reagent 118.", false));
            TermData.Add(CVID.MS_DiART_reagent_119, new TermInfo(CVID.MS_DiART_reagent_119, @"MS", @"MS:1002777", @"DiART reagent 119", @"The name of the sample labelled with the DiART reagent 119.", false));
            TermData.Add(CVID.MS_DiLeu_reagent, new TermInfo(CVID.MS_DiLeu_reagent, @"MS", @"MS:1002778", @"DiLeu reagent", @"Dimethyl leucine labeling reagent.", false));
            TermData.Add(CVID.MS_DiLeu_reagent_115, new TermInfo(CVID.MS_DiLeu_reagent_115, @"MS", @"MS:1002779", @"DiLeu reagent 115", @"The name of the sample labelled with the DiLeu reagent 115.", false));
            TermData.Add(CVID.MS_DiLeu_reagent_116, new TermInfo(CVID.MS_DiLeu_reagent_116, @"MS", @"MS:1002780", @"DiLeu reagent 116", @"The name of the sample labelled with the DiLeu reagent 116.", false));
            TermData.Add(CVID.MS_DiLeu_reagent_117, new TermInfo(CVID.MS_DiLeu_reagent_117, @"MS", @"MS:1002781", @"DiLeu reagent 117", @"The name of the sample labelled with the DiLeu reagent 117.", false));
            TermData.Add(CVID.MS_DiLeu_reagent_118, new TermInfo(CVID.MS_DiLeu_reagent_118, @"MS", @"MS:1002782", @"DiLeu reagent 118", @"The name of the sample labelled with the DiLeu reagent 118.", false));
            TermData.Add(CVID.MS_6550_iFunnel_Q_TOF_LC_MS, new TermInfo(CVID.MS_6550_iFunnel_Q_TOF_LC_MS, @"MS", @"MS:1002783", @"6550 iFunnel Q-TOF LC/MS", @"The 6550 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6550A_iFunnel_Q_TOF_LC_MS, new TermInfo(CVID.MS_6550A_iFunnel_Q_TOF_LC_MS, @"MS", @"MS:1002784", @"6550A iFunnel Q-TOF LC/MS", @"The 6550A Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6520B_Q_TOF_LC_MS, new TermInfo(CVID.MS_6520B_Q_TOF_LC_MS, @"MS", @"MS:1002785", @"6520B Q-TOF LC/MS", @"The 6520B Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6530A_Q_TOF_LC_MS, new TermInfo(CVID.MS_6530A_Q_TOF_LC_MS, @"MS", @"MS:1002786", @"6530A Q-TOF LC/MS", @"The 6530A Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6530B_Q_TOF_LC_MS, new TermInfo(CVID.MS_6530B_Q_TOF_LC_MS, @"MS", @"MS:1002787", @"6530B Q-TOF LC/MS", @"The 6530B Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6538_Q_TOF_LC_MS, new TermInfo(CVID.MS_6538_Q_TOF_LC_MS, @"MS", @"MS:1002788", @"6538 Q-TOF LC/MS", @"The 6538 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6540_Q_TOF_LC_MS, new TermInfo(CVID.MS_6540_Q_TOF_LC_MS, @"MS", @"MS:1002789", @"6540 Q-TOF LC/MS", @"The 6540 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6542_Q_TOF_LC_MS, new TermInfo(CVID.MS_6542_Q_TOF_LC_MS, @"MS", @"MS:1002790", @"6542 Q-TOF LC/MS", @"The 6542 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6545_Q_TOF_LC_MS, new TermInfo(CVID.MS_6545_Q_TOF_LC_MS, @"MS", @"MS:1002791", @"6545 Q-TOF LC/MS", @"The 6545 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6560_Q_TOF_LC_MS, new TermInfo(CVID.MS_6560_Q_TOF_LC_MS, @"MS", @"MS:1002792", @"6560 Q-TOF LC/MS", @"The 6560 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6570_Q_TOF_LC_MS, new TermInfo(CVID.MS_6570_Q_TOF_LC_MS, @"MS", @"MS:1002793", @"6570 Q-TOF LC/MS", @"The 6570 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6120B_Quadrupole_LC_MS, new TermInfo(CVID.MS_6120B_Quadrupole_LC_MS, @"MS", @"MS:1002794", @"6120B Quadrupole LC/MS", @"The 6120B Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers.", false));
            TermData.Add(CVID.MS_6150_Quadrupole_LC_MS, new TermInfo(CVID.MS_6150_Quadrupole_LC_MS, @"MS", @"MS:1002795", @"6150 Quadrupole LC/MS", @"The 6150 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers.", false));
            TermData.Add(CVID.MS_6224_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6224_Time_of_Flight_LC_MS, @"MS", @"MS:1002796", @"6224 Time-of-Flight LC/MS", @"The 6224 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6230A_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6230A_Time_of_Flight_LC_MS, @"MS", @"MS:1002797", @"6230A Time-of-Flight LC/MS", @"The 6230A Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6230B_Time_of_Flight_LC_MS, new TermInfo(CVID.MS_6230B_Time_of_Flight_LC_MS, @"MS", @"MS:1002798", @"6230B Time-of-Flight LC/MS", @"The 6230B Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer.", false));
            TermData.Add(CVID.MS_6430_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6430_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002799", @"6430 Triple Quadrupole LC/MS", @"The 6430 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_6495A_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6495A_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002800", @"6495A Triple Quadrupole LC/MS", @"The 6495A Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_6495B_Triple_Quadrupole_LC_MS, new TermInfo(CVID.MS_6495B_Triple_Quadrupole_LC_MS, @"MS", @"MS:1002801", @"6495B Triple Quadrupole LC/MS", @"The 6495B Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_7000A_Triple_Quadrupole_GC_MS, new TermInfo(CVID.MS_7000A_Triple_Quadrupole_GC_MS, @"MS", @"MS:1002802", @"7000A Triple Quadrupole GC/MS", @"The 7000A Quadrupole GC/MS system is a Agilent gas chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_7000B_Triple_Quadrupole_GC_MS, new TermInfo(CVID.MS_7000B_Triple_Quadrupole_GC_MS, @"MS", @"MS:1002803", @"7000B Triple Quadrupole GC/MS", @"The 7000B Quadrupole GC/MS system is a Agilent gas chromatography instrument combined with a Agilent triple quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_7800_Quadrupole_ICP_MS, new TermInfo(CVID.MS_7800_Quadrupole_ICP_MS, @"MS", @"MS:1002804", @"7800 Quadrupole ICP-MS", @"The 7800 Quadrupole ICP-MS system is a Agilent inductively couple plasma instrument combined with a Agilent quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_8800_Triple_Quadrupole_ICP_MS, new TermInfo(CVID.MS_8800_Triple_Quadrupole_ICP_MS, @"MS", @"MS:1002805", @"8800 Triple Quadrupole ICP-MS", @"The 8800 Quadrupole ICP-MS system is a Agilent inductively couple plasma instrument combined with a Agilent quadrupole mass spectrometer.", false));
            TermData.Add(CVID.MS_ion, new TermInfo(CVID.MS_ion, @"MS", @"MS:1002806", @"ion", @"Molecular entity having a net positive or negative electric charge.", false));
            TermData.Add(CVID.MS_positive_mode_adduct_ion, new TermInfo(CVID.MS_positive_mode_adduct_ion, @"MS", @"MS:1002807", @"positive mode adduct ion", @"Adduct ion with positive ionization.", false));
            TermData.Add(CVID.MS_negative_mode_adduct_ion, new TermInfo(CVID.MS_negative_mode_adduct_ion, @"MS", @"MS:1002808", @"negative mode adduct ion", @"Adduct ion with negative ionization.", false));
            TermData.Add(CVID.MS_adduct_ion_attribute, new TermInfo(CVID.MS_adduct_ion_attribute, @"MS", @"MS:1002809", @"adduct ion attribute", @"Nonphysical characteristic attributed to an adduct ion.", false));
            TermData.Add(CVID.MS_adduct_ion_X_m_z, new TermInfo(CVID.MS_adduct_ion_X_m_z, @"MS", @"MS:1002810", @"adduct ion X m/z", @"Theoretical m/z of the X component in the adduct M+X or M-X. This term was formerly called 'adduct ion mass', but it is not really a mass. It corresponds to the column mislabelled as 'mass' at https://fiehnlab.ucdavis.edu/staff/kind/Metabolomics/MS-Adduct-Calculator.", false));
            TermData.Add(CVID.MS_adduct_ion_isotope, new TermInfo(CVID.MS_adduct_ion_isotope, @"MS", @"MS:1002811", @"adduct ion isotope", @"Isotope of the matrix molecule M of an adduct formation.", false));
            TermData.Add(CVID.MS_Regular_expression_for_adduct_ion_formula, new TermInfo(CVID.MS_Regular_expression_for_adduct_ion_formula, @"MS", @"MS:1002812", @"Regular expression for adduct ion formula", @"(\", false));
            TermData.Add(CVID.MS_adduct_ion_formula, new TermInfo(CVID.MS_adduct_ion_formula, @"MS", @"MS:1002813", @"adduct ion formula", @"Adduct formation formula of the form M+X or M-X, as constrained by the provided regular expression.", false));
            TermData.Add(CVID.MS_volt_second_per_square_centimeter, new TermInfo(CVID.MS_volt_second_per_square_centimeter, @"MS", @"MS:1002814", @"volt-second per square centimeter", @"An electrical mobility unit that equals the speed", false));
            TermData.Add(CVID.MS_inverse_reduced_ion_mobility, new TermInfo(CVID.MS_inverse_reduced_ion_mobility, @"MS", @"MS:1002815", @"inverse reduced ion mobility", @"Ion mobility measurement for an ion or spectrum of ions as measured in an ion mobility mass spectrometer. This might refer to the central value of a bin into which all ions within a narrow range of mobilities have been aggregated.", false));
            TermData.Add(CVID.MS_mean_ion_mobility_array, new TermInfo(CVID.MS_mean_ion_mobility_array, @"MS", @"MS:1002816", @"mean ion mobility array", @"Array of drift times, averaged from a matrix of binned m/z and ion mobility values, corresponding to a spectrum of individual peaks encoded with an m/z array.", false));
            TermData.Add(CVID.MS_Bruker_TDF_format, new TermInfo(CVID.MS_Bruker_TDF_format, @"MS", @"MS:1002817", @"Bruker TDF format", @"Bruker TDF raw file format.", false));
            TermData.Add(CVID.MS_Bruker_TDF_nativeID_format, new TermInfo(CVID.MS_Bruker_TDF_nativeID_format, @"MS", @"MS:1002818", @"Bruker TDF nativeID format", @"Native format defined by frame=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_Bruker_TDF_nativeID_format__combined_spectra, new TermInfo(CVID.MS_Bruker_TDF_nativeID_format__combined_spectra, @"MS", @"MS:1002819", @"Bruker TDF nativeID format, combined spectra", @"Bruker TDF comma separated list of spectra that have been combined prior to searching or interpretation.", false));
            TermData.Add(CVID.MS_M_H_ion, new TermInfo(CVID.MS_M_H_ion, @"MS", @"MS:1002820", @"M+H ion", @"Adduct formed by protonation of a matrix molecule M, i.e. the addition of a matrix molecule M plus a proton.", false));
            TermData.Add(CVID.MS_M_H_ion1, new TermInfo(CVID.MS_M_H_ion1, @"MS", @"MS:1002821", @"M-H ion", @"Adduct formed by deprotonation of a matrix molecule M, i.e. the removal of a proton from a matrix molecule M.", false));
            TermData.Add(CVID.MS_OpenMS_file_format, new TermInfo(CVID.MS_OpenMS_file_format, @"MS", @"MS:1002822", @"OpenMS file format", @"File format developed by the OpenMS team.", false));
            TermData.Add(CVID.MS_idXML, new TermInfo(CVID.MS_idXML, @"MS", @"MS:1002823", @"idXML", @"OpenMS intermediate identification format.", false));
            TermData.Add(CVID.MS_featureXML, new TermInfo(CVID.MS_featureXML, @"MS", @"MS:1002824", @"featureXML", @"OpenMS feature file format.", false));
            TermData.Add(CVID.MS_consensusXML, new TermInfo(CVID.MS_consensusXML, @"MS", @"MS:1002825", @"consensusXML", @"OpenMS consensus map format.", false));
            TermData.Add(CVID.MS_MetaMorpheus, new TermInfo(CVID.MS_MetaMorpheus, @"MS", @"MS:1002826", @"MetaMorpheus", @"MetaMorpheus search engine.", false));
            TermData.Add(CVID.MS_MetaMorpheus_score, new TermInfo(CVID.MS_MetaMorpheus_score, @"MS", @"MS:1002827", @"MetaMorpheus:score", @"MetaMorpheus score for PSMs.", false));
            TermData.Add(CVID.MS_MetaMorpheus_protein_score, new TermInfo(CVID.MS_MetaMorpheus_protein_score, @"MS", @"MS:1002828", @"MetaMorpheus:protein score", @"MetaMorpheus score for protein groups.", false));
            TermData.Add(CVID.MS_XCMS_into, new TermInfo(CVID.MS_XCMS_into, @"MS", @"MS:1002829", @"XCMS:into", @"Feature intensity produced by XCMS findPeaks() from integrated peak intensity.", false));
            TermData.Add(CVID.MS_XCMS_intf, new TermInfo(CVID.MS_XCMS_intf, @"MS", @"MS:1002830", @"XCMS:intf", @"Feature intensity produced by XCMS findPeaks() from baseline corrected integrated peak intensity.", false));
            TermData.Add(CVID.MS_XCMS_maxo, new TermInfo(CVID.MS_XCMS_maxo, @"MS", @"MS:1002831", @"XCMS:maxo", @"Feature intensity produced by XCMS findPeaks() from maximum peak intensity.", false));
            TermData.Add(CVID.MS_XCMS_area, new TermInfo(CVID.MS_XCMS_area, @"MS", @"MS:1002832", @"XCMS:area", @"Feature intensity produced by XCMS findPeaks() from feature area that is not normalized by the scan rate.", false));
            TermData.Add(CVID.MS_alternating_polarity_mode, new TermInfo(CVID.MS_alternating_polarity_mode, @"MS", @"MS:1002833", @"alternating polarity mode", @"Polarities of the scans of a run are alternating, i.e. both positive and negative mode scans are acquired.", false));
            TermData.Add(CVID.MS_ProteomeDiscoverer_Delta_Score, new TermInfo(CVID.MS_ProteomeDiscoverer_Delta_Score, @"MS", @"MS:1002834", @"ProteomeDiscoverer:Delta Score", @"The Delta Score reported by Proteome Discoverer version 2.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_Classic, new TermInfo(CVID.MS_LTQ_Orbitrap_Classic, @"MS", @"MS:1002835", @"LTQ Orbitrap Classic", @"Thermo Fisher Scientific LTQ Orbitrap Classic.", false));
            TermData.Add(CVID.MS_iProX_dataset_identifier, new TermInfo(CVID.MS_iProX_dataset_identifier, @"MS", @"MS:1002836", @"iProX dataset identifier", @"Dataset identifier issued by the iProX repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_iProX_dataset_URI, new TermInfo(CVID.MS_iProX_dataset_URI, @"MS", @"MS:1002837", @"iProX dataset URI", @"URI that allows the access to one dataset in the iProX repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_mzMLb_format, new TermInfo(CVID.MS_mzMLb_format, @"MS", @"MS:1002838", @"mzMLb format", @"mzMLb file format, mzML encapsulated within HDF5.", false));
            TermData.Add(CVID.MS_Conversion_to_mzMLb, new TermInfo(CVID.MS_Conversion_to_mzMLb, @"MS", @"MS:1002839", @"Conversion to mzMLb", @"Conversion of a file format to Proteomics Standards Initiative mzMLb file format.", false));
            TermData.Add(CVID.MS_external_reference_data, new TermInfo(CVID.MS_external_reference_data, @"MS", @"MS:1002840", @"external reference data", @"Data belonging to an external reference.", false));
            TermData.Add(CVID.MS_external_HDF5_dataset, new TermInfo(CVID.MS_external_HDF5_dataset, @"MS", @"MS:1002841", @"external HDF5 dataset", @"The HDF5 dataset location containing the binary data, relative to the dataset containing the mzML. Also indicates that there is no data in the <binary> section of the BinaryDataArray.", false));
            TermData.Add(CVID.MS_external_offset, new TermInfo(CVID.MS_external_offset, @"MS", @"MS:1002842", @"external offset", @"The position in the external data where the array begins.", false));
            TermData.Add(CVID.MS_external_array_length, new TermInfo(CVID.MS_external_array_length, @"MS", @"MS:1002843", @"external array length", @"Describes how many fields an array contains.", false));
            TermData.Add(CVID.MS_Experiment_additional_parameter, new TermInfo(CVID.MS_Experiment_additional_parameter, @"MS", @"MS:1002844", @"Experiment additional parameter", @"Root node for terms relating to the description of an Experiment in relation to the PRIDE-XML element ExperimentCollection/Experiment/additional/cvParam.", false));
            TermData.Add(CVID.MS_Associated_file_URI, new TermInfo(CVID.MS_Associated_file_URI, @"MS", @"MS:1002845", @"Associated file URI", @"URI of one external file associated to the PRIDE experiment (maybe through a PX submission).", false));
            TermData.Add(CVID.MS_Associated_raw_file_URI, new TermInfo(CVID.MS_Associated_raw_file_URI, @"MS", @"MS:1002846", @"Associated raw file URI", @"URI of one raw data file associated to the PRIDE experiment (maybe through a PX submission).", false));
            TermData.Add(CVID.MS_ProteomeCentral_dataset_URI, new TermInfo(CVID.MS_ProteomeCentral_dataset_URI, @"MS", @"MS:1002847", @"ProteomeCentral dataset URI", @"URI associated to one PX submission in ProteomeCentral.", false));
            TermData.Add(CVID.MS_Result_file_URI, new TermInfo(CVID.MS_Result_file_URI, @"MS", @"MS:1002848", @"Result file URI", @"URI of one file labeled as 'Result', associated to one PX submission.", false));
            TermData.Add(CVID.MS_Search_engine_output_file_URI, new TermInfo(CVID.MS_Search_engine_output_file_URI, @"MS", @"MS:1002849", @"Search engine output file URI", @"URI of one search engine output file associated to one PX submission.", false));
            TermData.Add(CVID.MS_Peak_list_file_URI, new TermInfo(CVID.MS_Peak_list_file_URI, @"MS", @"MS:1002850", @"Peak list file URI", @"URI of one of one search engine output file associated to one PX submission.", false));
            TermData.Add(CVID.MS_Other_type_file_URI, new TermInfo(CVID.MS_Other_type_file_URI, @"MS", @"MS:1002851", @"Other type file URI", @"URI of one file labeled as 'Other', associated to one PX submission.", false));
            TermData.Add(CVID.MS_Dataset_FTP_location, new TermInfo(CVID.MS_Dataset_FTP_location, @"MS", @"MS:1002852", @"Dataset FTP location", @"FTP location of one entire PX data set.", false));
            TermData.Add(CVID.MS_Dataset_with_no_associated_published_manuscript, new TermInfo(CVID.MS_Dataset_with_no_associated_published_manuscript, @"MS", @"MS:1002853", @"Dataset with no associated published manuscript", @"A dataset which does not have an associated published manuscript.", false));
            TermData.Add(CVID.MS_Peer_reviewed_dataset, new TermInfo(CVID.MS_Peer_reviewed_dataset, @"MS", @"MS:1002854", @"Peer-reviewed dataset", @"Dataset has been peer-reviewed somehow.", false));
            TermData.Add(CVID.MS_Non_peer_reviewed_dataset, new TermInfo(CVID.MS_Non_peer_reviewed_dataset, @"MS", @"MS:1002855", @"Non peer-reviewed dataset", @"Dataset that has not been peer-reviewed by any means.", false));
            TermData.Add(CVID.MS_Supported_dataset_by_repository, new TermInfo(CVID.MS_Supported_dataset_by_repository, @"MS", @"MS:1002856", @"Supported dataset by repository", @"Dataset for which the identifications and/or spectra/traces are in formats that can be parsed by the hosting data repository such that internal references between identifications and spectra/traces are preserved and browsable at the repository. This is usually called a complete submission.", false));
            TermData.Add(CVID.MS_Unsupported_dataset_by_repository, new TermInfo(CVID.MS_Unsupported_dataset_by_repository, @"MS", @"MS:1002857", @"Unsupported dataset by repository", @"Dataset for which the identifications and/or spectra/traces are in formats that cannot be parsed by the hosting data repository and thus internal references between identifications and spectra/traces are not browsable at the repository. This is usually called a partial submission.", false));
            TermData.Add(CVID.MS_Dataset_with_its_publication_pending, new TermInfo(CVID.MS_Dataset_with_its_publication_pending, @"MS", @"MS:1002858", @"Dataset with its publication pending", @"A dataset which has an associated manuscript pending for publication.", false));
            TermData.Add(CVID.MS_Additional_associated_raw_file_URI, new TermInfo(CVID.MS_Additional_associated_raw_file_URI, @"MS", @"MS:1002859", @"Additional associated raw file URI", @"Additional URI of one raw data file associated to the PRIDE experiment (maybe through a PX submission). The URI is provided via an additional resource to PRIDE.", false));
            TermData.Add(CVID.MS_Gel_image_file_URI, new TermInfo(CVID.MS_Gel_image_file_URI, @"MS", @"MS:1002860", @"Gel image file URI", @"URI of one gel image file associated to one PX submission.", false));
            TermData.Add(CVID.MS_Reprocessed_complete_dataset, new TermInfo(CVID.MS_Reprocessed_complete_dataset, @"MS", @"MS:1002861", @"Reprocessed complete dataset", @"All the raw files included in the original dataset (or group of original datasets) have been reanalysed.", false));
            TermData.Add(CVID.MS_Reprocessed_subset_dataset, new TermInfo(CVID.MS_Reprocessed_subset_dataset, @"MS", @"MS:1002862", @"Reprocessed subset dataset", @"A subset of the raw files included in the original dataset (or group of original datasets) has been reanalysed.", false));
            TermData.Add(CVID.MS_Data_derived_from_previous_dataset, new TermInfo(CVID.MS_Data_derived_from_previous_dataset, @"MS", @"MS:1002863", @"Data derived from previous dataset", @"One dataset is a reanalysis of previously published data.", false));
            TermData.Add(CVID.MS_No_PTMs_are_included_in_the_dataset, new TermInfo(CVID.MS_No_PTMs_are_included_in_the_dataset, @"MS", @"MS:1002864", @"No PTMs are included in the dataset", @"No post-translational-modifications are been included in the identified peptides of one dataset.", false));
            TermData.Add(CVID.MS_Accepted_manuscript, new TermInfo(CVID.MS_Accepted_manuscript, @"MS", @"MS:1002865", @"Accepted manuscript", @"A dataset has one associated manuscript, which has been accepted but no PubMedID is available yet.", false));
            TermData.Add(CVID.MS_Reference, new TermInfo(CVID.MS_Reference, @"MS", @"MS:1002866", @"Reference", @"Literature reference associated with one dataset (including the authors, title, year and journal details). The value field can be used for the PubMedID, or to specify if one manuscript is just submitted or accepted, but it does not have a PubMedID yet.", false));
            TermData.Add(CVID.MS_Experimental_information_has_been_refined_since_this_experiment_was_originally_made_publicly_available, new TermInfo(CVID.MS_Experimental_information_has_been_refined_since_this_experiment_was_originally_made_publicly_available, @"MS", @"MS:1002867", @"Experimental information has been refined since this experiment was originally made publicly available", @"This means that the experimental information available has been improved, for instance precursor charges were added.", false));
            TermData.Add(CVID.MS_Original_data, new TermInfo(CVID.MS_Original_data, @"MS", @"MS:1002868", @"Original data", @"One dataset is not a reanalysis of previously published data.", false));
            TermData.Add(CVID.MS_mzR, new TermInfo(CVID.MS_mzR, @"MS", @"MS:1002869", @"mzR", @"Bioconductor package mzR for reading and writing mass spectrometry data files.", false));
            TermData.Add(CVID.MS_MSnbase, new TermInfo(CVID.MS_MSnbase, @"MS", @"MS:1002870", @"MSnbase", @"Bioconductor package MSnbase provides infrastructure for manipulation, processing and visualization of mass spectrometry and proteomics data, ranging from raw to quantitative and annotated data.", false));
            TermData.Add(CVID.MS_CAMERA, new TermInfo(CVID.MS_CAMERA, @"MS", @"MS:1002871", @"CAMERA", @"Bioconductor package CAMERA for annotation of peak lists generated by xcms, rule based annotation of isotopes and adducts, isotope validation, EIC correlation based tagging of unknown adducts and fragments.", false));
            TermData.Add(CVID.MS_Panorama_Public_dataset_identifier, new TermInfo(CVID.MS_Panorama_Public_dataset_identifier, @"MS", @"MS:1002872", @"Panorama Public dataset identifier", @"Dataset identifier issued by the Panorama Public repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_Panorama_Public_dataset_URI, new TermInfo(CVID.MS_Panorama_Public_dataset_URI, @"MS", @"MS:1002873", @"Panorama Public dataset URI", @"URI that allows the access to one dataset in the Panorama Public repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication.", false));
            TermData.Add(CVID.MS_TSQ_Altis, new TermInfo(CVID.MS_TSQ_Altis, @"MS", @"MS:1002874", @"TSQ Altis", @"Thermo Scientific TSQ Altis Triple Quadrupole MS.", false));
            TermData.Add(CVID.MS_TSQ_Quantis, new TermInfo(CVID.MS_TSQ_Quantis, @"MS", @"MS:1002875", @"TSQ Quantis", @"Thermo Scientific TSQ Quantis Triple Quadrupole MS.", false));
            TermData.Add(CVID.MS_TSQ_9000, new TermInfo(CVID.MS_TSQ_9000, @"MS", @"MS:1002876", @"TSQ 9000", @"Thermo Scientific TSQ 9000 Triple Quadrupole MS.", false));
            TermData.Add(CVID.MS_Q_Exactive_HF_X, new TermInfo(CVID.MS_Q_Exactive_HF_X, @"MS", @"MS:1002877", @"Q Exactive HF-X", @"Thermo Scientific Q Exactive HF-X Hybrid Quadrupole Orbitrap MS.", false));
            TermData.Add(CVID.MS_small_molecule_analysis_software, new TermInfo(CVID.MS_small_molecule_analysis_software, @"MS", @"MS:1002878", @"small molecule analysis software", @"Software for the analysis of small molecules.", false));
            TermData.Add(CVID.MS_Progenesis_QI, new TermInfo(CVID.MS_Progenesis_QI, @"MS", @"MS:1002879", @"Progenesis QI", @"Metabolomics analysis software for LC-MS data from Nonlinear Dynamics.", false));
            TermData.Add(CVID.MS_Compound_Discoverer, new TermInfo(CVID.MS_Compound_Discoverer, @"MS", @"MS:1002880", @"Compound Discoverer", @"Metabolomics analysis software from Thermo Fisher Scientific.", false));
            TermData.Add(CVID.MS_MyCompoundID, new TermInfo(CVID.MS_MyCompoundID, @"MS", @"MS:1002881", @"MyCompoundID", @"Metabolite identification tool MyCompoundID.", false));
            TermData.Add(CVID.MS_study_variable_average_function, new TermInfo(CVID.MS_study_variable_average_function, @"MS", @"MS:1002882", @"study variable average function", @"Function used to calculate the study variable quantification value.", false));
            TermData.Add(CVID.MS_median, new TermInfo(CVID.MS_median, @"MS", @"MS:1002883", @"median", @"Median function.", false));
            TermData.Add(CVID.MS_study_variable_variation_function, new TermInfo(CVID.MS_study_variable_variation_function, @"MS", @"MS:1002884", @"study variable variation function", @"Function used to calculate the study variable quantification variation value.", false));
            TermData.Add(CVID.MS_standard_error, new TermInfo(CVID.MS_standard_error, @"MS", @"MS:1002885", @"standard error", @"Standard error function.", false));
            TermData.Add(CVID.MS_small_molecule_quantification_datatype, new TermInfo(CVID.MS_small_molecule_quantification_datatype, @"MS", @"MS:1002886", @"small molecule quantification datatype", @"The value reported in a small molecule quantification.", false));
            TermData.Add(CVID.MS_Progenesis_QI_normalised_abundance, new TermInfo(CVID.MS_Progenesis_QI_normalised_abundance, @"MS", @"MS:1002887", @"Progenesis QI normalised abundance", @"The normalised abundance produced by Progenesis QI LC-MS.", false));
            TermData.Add(CVID.MS_small_molecule_confidence_measure, new TermInfo(CVID.MS_small_molecule_confidence_measure, @"MS", @"MS:1002888", @"small molecule confidence measure", @"The confidence score produced by a small molecule analysis software.", false));
            TermData.Add(CVID.MS_Progenesis_MetaScope_score, new TermInfo(CVID.MS_Progenesis_MetaScope_score, @"MS", @"MS:1002889", @"Progenesis MetaScope score", @"The confidence score produced by Progenesis QI.", false));
            TermData.Add(CVID.MS_fragmentation_score, new TermInfo(CVID.MS_fragmentation_score, @"MS", @"MS:1002890", @"fragmentation score", @"The fragmentation confidence score.", false));
            TermData.Add(CVID.MS_isotopic_fit_score, new TermInfo(CVID.MS_isotopic_fit_score, @"MS", @"MS:1002891", @"isotopic fit score", @"The isotopic fit confidence score.", false));
            TermData.Add(CVID.MS_ion_mobility_attribute, new TermInfo(CVID.MS_ion_mobility_attribute, @"MS", @"MS:1002892", @"ion mobility attribute", @"An attribute describing ion mobility searches.", false));
            TermData.Add(CVID.MS_ion_mobility_array, new TermInfo(CVID.MS_ion_mobility_array, @"MS", @"MS:1002893", @"ion mobility array", @"An array of ion mobility data.", false));
            TermData.Add(CVID.MS_InChIKey, new TermInfo(CVID.MS_InChIKey, @"MS", @"MS:1002894", @"InChIKey", @"Unique chemical structure identifier for chemical compounds.", false));
            TermData.Add(CVID.MS_small_molecule_identification_attribute, new TermInfo(CVID.MS_small_molecule_identification_attribute, @"MS", @"MS:1002895", @"small molecule identification attribute", @"Compound identification information.", false));
            TermData.Add(CVID.MS_compound_identification_confidence_level, new TermInfo(CVID.MS_compound_identification_confidence_level, @"MS", @"MS:1002896", @"compound identification confidence level", @"Confidence level for annotation of identified compounds as defined by the Metabolomics Standards Initiative (MSI). The value slot can have the values 'Level 0' until 'Level 4'.", false));
            TermData.Add(CVID.MS_isotopomer_peak_OBSOLETE, new TermInfo(CVID.MS_isotopomer_peak_OBSOLETE, @"MS", @"MS:1002897", @"isotopomer peak", @"OBSOLETE Identifies a peak when no de-isotoping has been performed. The value slot reports the isotopomer peak, e.g. '2H', '13C', '15N', '18O', '31P'.", true));
            TermData.Add(CVID.MS_Shimadzu_Biotech_QTOF_nativeID_format, new TermInfo(CVID.MS_Shimadzu_Biotech_QTOF_nativeID_format, @"MS", @"MS:1002898", @"Shimadzu Biotech QTOF nativeID format", @"Native format defined by scan=xsd:nonNegativeInteger.", false));
            TermData.Add(CVID.MS_msalign_format, new TermInfo(CVID.MS_msalign_format, @"MS", @"MS:1002899", @"msalign format", @"msalign file format.", false));
            TermData.Add(CVID.MS_feature_format, new TermInfo(CVID.MS_feature_format, @"MS", @"MS:1002900", @"feature format", @"TopFD feature file format.", false));
            TermData.Add(CVID.MS_TopPIC, new TermInfo(CVID.MS_TopPIC, @"MS", @"MS:1002901", @"TopPIC", @"TopPIC: a software tool for top-down mass spectrometry-based proteoform identification and characterization.", false));
            TermData.Add(CVID.MS_TopFD, new TermInfo(CVID.MS_TopFD, @"MS", @"MS:1002902", @"TopFD", @"Top-down mass spectral feature detection.", false));
            TermData.Add(CVID.MS_TopMG, new TermInfo(CVID.MS_TopMG, @"MS", @"MS:1002903", @"TopMG", @"A mass graph-based approach for the identification of modified proteoforms using top-down tandem mass spectra.", false));
            TermData.Add(CVID.MS_proteoform_level_identification_attribute, new TermInfo(CVID.MS_proteoform_level_identification_attribute, @"MS", @"MS:1002904", @"proteoform-level identification attribute", @"Proteoform level information.", false));
            TermData.Add(CVID.MS_proteoform_level_identification_statistic, new TermInfo(CVID.MS_proteoform_level_identification_statistic, @"MS", @"MS:1002905", @"proteoform-level identification statistic", @"Identification confidence metric for a proteoform.", false));
            TermData.Add(CVID.MS_search_engine_specific_score_for_proteoforms, new TermInfo(CVID.MS_search_engine_specific_score_for_proteoforms, @"MS", @"MS:1002906", @"search engine specific score for proteoforms", @"Search engine specific proteoform scores.", false));
            TermData.Add(CVID.MS_proteoform_level_global_FDR, new TermInfo(CVID.MS_proteoform_level_global_FDR, @"MS", @"MS:1002907", @"proteoform-level global FDR", @"Estimation of the global false discovery rate of proteoforms.", false));
            TermData.Add(CVID.MS_proteoform_level_local_FDR, new TermInfo(CVID.MS_proteoform_level_local_FDR, @"MS", @"MS:1002908", @"proteoform-level local FDR", @"Estimation of the local false discovery rate of proteoforms.", false));
            TermData.Add(CVID.MS_proteoform_level_statistical_threshold, new TermInfo(CVID.MS_proteoform_level_statistical_threshold, @"MS", @"MS:1002909", @"proteoform-level statistical threshold", @"Estimated statistical threshold at proteoform-level.", false));
            TermData.Add(CVID.MS_proteoform_level_global_FDR_threshold, new TermInfo(CVID.MS_proteoform_level_global_FDR_threshold, @"MS", @"MS:1002910", @"proteoform-level global FDR threshold", @"Threshold for the global false discovery rate of proteoforms.", false));
            TermData.Add(CVID.MS_proteoform_level_local_FDR_threshold, new TermInfo(CVID.MS_proteoform_level_local_FDR_threshold, @"MS", @"MS:1002911", @"proteoform-level local FDR threshold", @"Threshold for the local false discovery rate of proteoforms.", false));
            TermData.Add(CVID.MS_TopPIC_input_parameter, new TermInfo(CVID.MS_TopPIC_input_parameter, @"MS", @"MS:1002912", @"TopPIC input parameter", @"Search engine input parameters specific to TopPIC.", false));
            TermData.Add(CVID.MS_TopPIC_fixed_modification, new TermInfo(CVID.MS_TopPIC_fixed_modification, @"MS", @"MS:1002913", @"TopPIC:fixed modification", @"Fixed modifications for TopPIC searching.", false));
            TermData.Add(CVID.MS_TopPIC_N_term_form, new TermInfo(CVID.MS_TopPIC_N_term_form, @"MS", @"MS:1002914", @"TopPIC:N-term form", @"N-terminal forms of proteins allowed in TopPIC searching.", false));
            TermData.Add(CVID.MS_TopPIC_error_tolerance, new TermInfo(CVID.MS_TopPIC_error_tolerance, @"MS", @"MS:1002915", @"TopPIC:error tolerance", @"Error tolerance for precursor and fragment masses in PPM.", false));
            TermData.Add(CVID.MS_TopPIC_max_shift, new TermInfo(CVID.MS_TopPIC_max_shift, @"MS", @"MS:1002916", @"TopPIC:max shift", @"Maximum value of the mass shift (in Dalton) of an unexpected modification.", false));
            TermData.Add(CVID.MS_TopPIC_min_shift, new TermInfo(CVID.MS_TopPIC_min_shift, @"MS", @"MS:1002917", @"TopPIC:min shift", @"Minimum value of the mass shift (in Dalton) of an unexpected modification.", false));
            TermData.Add(CVID.MS_TopPIC_shift_num, new TermInfo(CVID.MS_TopPIC_shift_num, @"MS", @"MS:1002918", @"TopPIC:shift num", @"Maximum number of unexpected modifications in a proteoform spectrum match.", false));
            TermData.Add(CVID.MS_TopPIC_spectral_cutoff_type, new TermInfo(CVID.MS_TopPIC_spectral_cutoff_type, @"MS", @"MS:1002919", @"TopPIC:spectral cutoff type", @"Spectrum-level cutoff type for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopPIC_spectral_cutoff_value, new TermInfo(CVID.MS_TopPIC_spectral_cutoff_value, @"MS", @"MS:1002920", @"TopPIC:spectral cutoff value", @"Spectrum-level cutoff value for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopPIC_proteoform_level_cutoff_type, new TermInfo(CVID.MS_TopPIC_proteoform_level_cutoff_type, @"MS", @"MS:1002921", @"TopPIC:proteoform-level cutoff type", @"Proteoform-level cutoff type for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopPIC_proteoform_level_cutoff_value, new TermInfo(CVID.MS_TopPIC_proteoform_level_cutoff_value, @"MS", @"MS:1002922", @"TopPIC:proteoform-level cutoff value", @"Proteoform-level cutoff value for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopPIC_generating_function, new TermInfo(CVID.MS_TopPIC_generating_function, @"MS", @"MS:1002923", @"TopPIC:generating function", @"P-value and E-value estimation using generating function.", false));
            TermData.Add(CVID.MS_TopPIC_combined_spectrum_number, new TermInfo(CVID.MS_TopPIC_combined_spectrum_number, @"MS", @"MS:1002924", @"TopPIC:combined spectrum number", @"Number of combined spectra.", false));
            TermData.Add(CVID.MS_TopPIC_mod_file, new TermInfo(CVID.MS_TopPIC_mod_file, @"MS", @"MS:1002925", @"TopPIC:mod file", @"The text file containing the information of common PTMs.", false));
            TermData.Add(CVID.MS_TopPIC_thread_number, new TermInfo(CVID.MS_TopPIC_thread_number, @"MS", @"MS:1002926", @"TopPIC:thread number", @"Number of threads used in TopPIC.", false));
            TermData.Add(CVID.MS_TopPIC_use_TopFD_feature, new TermInfo(CVID.MS_TopPIC_use_TopFD_feature, @"MS", @"MS:1002927", @"TopPIC:use TopFD feature", @"Proteoform identification using TopFD feature file.", false));
            TermData.Add(CVID.MS_TopPIC_spectral_E_value, new TermInfo(CVID.MS_TopPIC_spectral_E_value, @"MS", @"MS:1002928", @"TopPIC:spectral E-value", @"TopPIC spectrum-level E-value.", false));
            TermData.Add(CVID.MS_TopPIC_spectral_FDR, new TermInfo(CVID.MS_TopPIC_spectral_FDR, @"MS", @"MS:1002929", @"TopPIC:spectral FDR", @"TopPIC spectrum-level FDR.", false));
            TermData.Add(CVID.MS_TopPIC_proteoform_level_FDR, new TermInfo(CVID.MS_TopPIC_proteoform_level_FDR, @"MS", @"MS:1002930", @"TopPIC:proteoform-level FDR", @"TopPIC proteoform-level FDR.", false));
            TermData.Add(CVID.MS_TopPIC_spectral_p_value, new TermInfo(CVID.MS_TopPIC_spectral_p_value, @"MS", @"MS:1002931", @"TopPIC:spectral p-value", @"TopPIC spectrum-level p-value.", false));
            TermData.Add(CVID.MS_TopPIC_MIScore, new TermInfo(CVID.MS_TopPIC_MIScore, @"MS", @"MS:1002932", @"TopPIC:MIScore", @"Modification identification score.", false));
            TermData.Add(CVID.MS_TopPIC_MIScore_threshold, new TermInfo(CVID.MS_TopPIC_MIScore_threshold, @"MS", @"MS:1002933", @"TopPIC:MIScore threshold", @"TopPIC:MIScore threshold.", false));
            TermData.Add(CVID.MS_TopMG_input_parameter, new TermInfo(CVID.MS_TopMG_input_parameter, @"MS", @"MS:1002934", @"TopMG input parameter", @"Search engine input parameters specific to TopMG.", false));
            TermData.Add(CVID.MS_TopMG_fixed_modification, new TermInfo(CVID.MS_TopMG_fixed_modification, @"MS", @"MS:1002935", @"TopMG:fixed modification", @"Fixed modifications for TopMG searching.", false));
            TermData.Add(CVID.MS_TopMG_N_term_form, new TermInfo(CVID.MS_TopMG_N_term_form, @"MS", @"MS:1002936", @"TopMG:N-term form", @"N-terminal forms of proteins allowed in TopMG searching.", false));
            TermData.Add(CVID.MS_TopMG_error_tolerance, new TermInfo(CVID.MS_TopMG_error_tolerance, @"MS", @"MS:1002937", @"TopMG:error tolerance", @"Error tolerance for precursor and fragment masses in PPM.", false));
            TermData.Add(CVID.MS_TopMG_max_shift, new TermInfo(CVID.MS_TopMG_max_shift, @"MS", @"MS:1002938", @"TopMG:max shift", @"Maximum value of the mass shift (in Dalton).", false));
            TermData.Add(CVID.MS_TopMG_spectral_cutoff_type, new TermInfo(CVID.MS_TopMG_spectral_cutoff_type, @"MS", @"MS:1002939", @"TopMG:spectral cutoff type", @"Spectrum-level cutoff type for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopMG_spectral_cutoff_value, new TermInfo(CVID.MS_TopMG_spectral_cutoff_value, @"MS", @"MS:1002940", @"TopMG:spectral cutoff value", @"Spectrum-level cutoff value for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopMG_proteoform_level_cutoff_type, new TermInfo(CVID.MS_TopMG_proteoform_level_cutoff_type, @"MS", @"MS:1002941", @"TopMG:proteoform-level cutoff type", @"Proteoform-level cutoff type for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopMG_proteoform_level_cutoff_value, new TermInfo(CVID.MS_TopMG_proteoform_level_cutoff_value, @"MS", @"MS:1002942", @"TopMG:proteoform-level cutoff value", @"Proteoform-level cutoff value for filtering identified proteoform spectrum matches.", false));
            TermData.Add(CVID.MS_TopMG_mod_file, new TermInfo(CVID.MS_TopMG_mod_file, @"MS", @"MS:1002943", @"TopMG:mod file", @"The text file containing the information of common PTMs.", false));
            TermData.Add(CVID.MS_TopMG_thread_number, new TermInfo(CVID.MS_TopMG_thread_number, @"MS", @"MS:1002944", @"TopMG:thread number", @"Number of threads used in TopMG.", false));
            TermData.Add(CVID.MS_TopMG_use_TopFD_feature, new TermInfo(CVID.MS_TopMG_use_TopFD_feature, @"MS", @"MS:1002945", @"TopMG:use TopFD feature", @"Proteoform identification using TopFD feature file.", false));
            TermData.Add(CVID.MS_TopMG_proteoform_graph_gap_size, new TermInfo(CVID.MS_TopMG_proteoform_graph_gap_size, @"MS", @"MS:1002946", @"TopMG:proteoform graph gap size", @"Gap size in constructing proteoform graph.", false));
            TermData.Add(CVID.MS_TopMG_variable_PTM_number, new TermInfo(CVID.MS_TopMG_variable_PTM_number, @"MS", @"MS:1002947", @"TopMG:variable PTM number", @"Maximum number of variable PTMs.", false));
            TermData.Add(CVID.MS_TopMG_variable_PTM_number_in_proteoform_graph_gap, new TermInfo(CVID.MS_TopMG_variable_PTM_number_in_proteoform_graph_gap, @"MS", @"MS:1002948", @"TopMG:variable PTM number in proteoform graph gap", @"Maximum number of variable PTMs in a proteoform graph gap.", false));
            TermData.Add(CVID.MS_TopMG_use_ASF_DIAGONAL, new TermInfo(CVID.MS_TopMG_use_ASF_DIAGONAL, @"MS", @"MS:1002949", @"TopMG:use ASF-DIAGONAL", @"Protein filtering using ASF-DIAGONAL method.", false));
            TermData.Add(CVID.MS_TopMG_spectral_E_value, new TermInfo(CVID.MS_TopMG_spectral_E_value, @"MS", @"MS:1002950", @"TopMG:spectral E-value", @"TopMG spectrum-level E-value.", false));
            TermData.Add(CVID.MS_TopMG_spectral_FDR, new TermInfo(CVID.MS_TopMG_spectral_FDR, @"MS", @"MS:1002951", @"TopMG:spectral FDR", @"TopMG spectrum-level FDR.", false));
            TermData.Add(CVID.MS_TopMG_proteoform_level_FDR, new TermInfo(CVID.MS_TopMG_proteoform_level_FDR, @"MS", @"MS:1002952", @"TopMG:proteoform-level FDR", @"TopMG proteoform-level FDR.", false));
            TermData.Add(CVID.MS_TopMG_spectral_p_value, new TermInfo(CVID.MS_TopMG_spectral_p_value, @"MS", @"MS:1002953", @"TopMG:spectral p-value", @"TopMG spectrum-level p-value.", false));
            TermData.Add(CVID.MS_collisional_cross_sectional_area, new TermInfo(CVID.MS_collisional_cross_sectional_area, @"MS", @"MS:1002954", @"collisional cross sectional area", @"Structural molecular descriptor for the effective interaction area between the ion and neutral gas measured in ion mobility mass spectrometry.", false));
            TermData.Add(CVID.MS_hr_ms_compound_identification_confidence_level, new TermInfo(CVID.MS_hr_ms_compound_identification_confidence_level, @"MS", @"MS:1002955", @"hr-ms compound identification confidence level", @"Refined High Resolution mass spectrometry confidence level for annotation of identified compounds as proposed by Schymanski et al. The value slot can have the values 'Level 1', 'Level 2', 'Level 2a', 'Level 2b', 'Level 3', 'Level 4', and 'Level 5'.", false));
            TermData.Add(CVID.MS_isotopic_ion_MS_peak, new TermInfo(CVID.MS_isotopic_ion_MS_peak, @"MS", @"MS:1002956", @"isotopic ion MS peak", @"A mass spectrometry peak that represents one or more isotopic ions. The value slot contains a description of the represented isotope set, e.g. 'M+1 peak'.", false));
            TermData.Add(CVID.MS_isotopomer_MS_peak, new TermInfo(CVID.MS_isotopomer_MS_peak, @"MS", @"MS:1002957", @"isotopomer MS peak", @"The described isotopomer mass spectrometric signal. The value slot contains a description of the represented isotopomer, e.g. '13C peak', '15N peak', '2H peak', '18O peak' or '31P peak'.", false));
            TermData.Add(CVID.MS_isotopologue_MS_peak, new TermInfo(CVID.MS_isotopologue_MS_peak, @"MS", @"MS:1002958", @"isotopologue MS peak", @"The described isotopologue mass spectrometric signal. The value slot contains a description of the represented isotopologue, e.g. '13C1 peak' or '15N1 peak'.", false));
            TermData.Add(CVID.MS_isomer, new TermInfo(CVID.MS_isomer, @"MS", @"MS:1002959", @"isomer", @"One of several species (or molecular entities) that have the same atomic composition (molecular formula) but different line formulae or different stereochemical formulae.", false));
            TermData.Add(CVID.MS_isotopomer, new TermInfo(CVID.MS_isotopomer, @"MS", @"MS:1002960", @"isotopomer", @"An isomer that differs from another only in the spatial distribution of the constitutive isotopic atoms.", false));
            TermData.Add(CVID.MS_isotopologue, new TermInfo(CVID.MS_isotopologue, @"MS", @"MS:1002961", @"isotopologue", @"A molecular entity that differs only in isotopic composition (number of isotopic substitutions).", false));
            TermData.Add(CVID.MS_mean, new TermInfo(CVID.MS_mean, @"MS", @"MS:1002962", @"mean", @"The arithmetic mean.", false));
            TermData.Add(CVID.MS_variation_coefficient, new TermInfo(CVID.MS_variation_coefficient, @"MS", @"MS:1002963", @"variation coefficient", @"The coefficient of variation.", false));
            TermData.Add(CVID.MS_lipidomics_analysis_software, new TermInfo(CVID.MS_lipidomics_analysis_software, @"MS", @"MS:1002964", @"lipidomics analysis software", @"Lipidomics analysis software.", false));
            TermData.Add(CVID.MS_Lipid_Data_Analyzer, new TermInfo(CVID.MS_Lipid_Data_Analyzer, @"MS", @"MS:1002965", @"Lipid Data Analyzer", @"Lipid Data Analyzer software for lipid quantification.", false));
            TermData.Add(CVID.MS_chrom_format, new TermInfo(CVID.MS_chrom_format, @"MS", @"MS:1002966", @"chrom format", @"The Lipid Data Analyzer native chrom format.", false));
            TermData.Add(CVID.MS_LipidHunter, new TermInfo(CVID.MS_LipidHunter, @"MS", @"MS:1002967", @"LipidHunter", @"Software for identification of phospholipids by high-throughput processing of LC-MS and shotgun lipidomics datasets.", false));
            TermData.Add(CVID.MS_LipidXplorer, new TermInfo(CVID.MS_LipidXplorer, @"MS", @"MS:1002968", @"LipidXplorer", @"Software for consensual cross-platform lipidomics.", false));
            TermData.Add(CVID.MS_LipidMatch, new TermInfo(CVID.MS_LipidMatch, @"MS", @"MS:1002969", @"LipidMatch", @"An automated workflow for rule-based lipid identification using untargeted high-resolution tandem mass spectrometry data.", false));
            TermData.Add(CVID.MS_Greazy, new TermInfo(CVID.MS_Greazy, @"MS", @"MS:1002970", @"Greazy", @"Open-source software for automated phospholipid tandem mass spectrometry identification.", false));
            TermData.Add(CVID.MS_LipidBlast, new TermInfo(CVID.MS_LipidBlast, @"MS", @"MS:1002971", @"LipidBlast", @"LC-MS-based lipidomics and automated identification of lipids using the LipidBlast in-silico MS/MS library.", false));
            TermData.Add(CVID.MS_Lipid_Pro, new TermInfo(CVID.MS_Lipid_Pro, @"MS", @"MS:1002972", @"Lipid-Pro", @"A computational lipid identification solution for untargeted lipidomics on data-independent acquisition tandem mass spectrometry platforms.", false));
            TermData.Add(CVID.MS_LipidFinder, new TermInfo(CVID.MS_LipidFinder, @"MS", @"MS:1002973", @"LipidFinder", @"A computational workflow for the discovery of lipids for the identification of eicosanoid-phosphoinositides in platelets.", false));
            TermData.Add(CVID.MS_LipiDex, new TermInfo(CVID.MS_LipiDex, @"MS", @"MS:1002974", @"LipiDex", @"An integrated software package for high-confidence lipid identification.", false));
            TermData.Add(CVID.MS_LIQUID, new TermInfo(CVID.MS_LIQUID, @"MS", @"MS:1002975", @"LIQUID", @"An-open source software for identifying lipids in LC-MS/MS-based lipidomics data.", false));
            TermData.Add(CVID.MS_ALEX, new TermInfo(CVID.MS_ALEX, @"MS", @"MS:1002976", @"ALEX", @"Analysis of lipid experiments, a calculator for m/z values of intact lipid molecules (MS1).", false));
            TermData.Add(CVID.MS_ALEX123, new TermInfo(CVID.MS_ALEX123, @"MS", @"MS:1002977", @"ALEX123", @"Analysis of lipid experiments 123, a calculator with m/z values of intact lipid molecules (MS1) and their fragment ions at the MS2 and MS3 level.", false));
            TermData.Add(CVID.MS_LIMSA, new TermInfo(CVID.MS_LIMSA, @"MS", @"MS:1002978", @"LIMSA", @"Software tool for the quantitative analysis of mass spectrometric lipidome data.", false));
            TermData.Add(CVID.MS_LOBSTAHS, new TermInfo(CVID.MS_LOBSTAHS, @"MS", @"MS:1002979", @"LOBSTAHS", @"Adduct-Based lipidomics software for the discovery and identification of oxidative stress biomarkers.", false));
            TermData.Add(CVID.MS_LipidQA, new TermInfo(CVID.MS_LipidQA, @"MS", @"MS:1002980", @"LipidQA", @"Lipid qualitative/quantitative analysis software for identification and quantitation of complex lipid molecular species.", false));
            TermData.Add(CVID.MS_Proline, new TermInfo(CVID.MS_Proline, @"MS", @"MS:1002981", @"Proline", @"The Proline software suite for mass spectrometry based proteomics.", false));
            TermData.Add(CVID.MS_PepNovo, new TermInfo(CVID.MS_PepNovo, @"MS", @"MS:1002982", @"PepNovo", @"PepNovo tool for de novo peptide sequencing.", false));
            TermData.Add(CVID.MS_pNovo, new TermInfo(CVID.MS_pNovo, @"MS", @"MS:1002983", @"pNovo", @"pNovo tool for de novo peptide sequencing and identification using HCD spectra.", false));
            TermData.Add(CVID.MS_Novor, new TermInfo(CVID.MS_Novor, @"MS", @"MS:1002984", @"Novor", @"Novor real-time peptide de novo sequencing software tool.", false));
            TermData.Add(CVID.MS_in_gel_digestion, new TermInfo(CVID.MS_in_gel_digestion, @"MS", @"MS:1002985", @"in-gel digestion", @"Digestion of proteins separated by gel electrophoresis for mass spectrometric characterization of proteins and proteomes.", false));
            TermData.Add(CVID.MS_in_solution_digestion, new TermInfo(CVID.MS_in_solution_digestion, @"MS", @"MS:1002986", @"in-solution digestion", @"Digestion of proteins in solution for mass spectrometric characterization of proteins and proteomes.", false));
            TermData.Add(CVID.MS_IdentiPy, new TermInfo(CVID.MS_IdentiPy, @"MS", @"MS:1002987", @"IdentiPy", @"IdentiPy.", false));
            TermData.Add(CVID.MS_IdentiPy_RHNS, new TermInfo(CVID.MS_IdentiPy_RHNS, @"MS", @"MS:1002988", @"IdentiPy:RHNS", @"The IdentiPy result 'RHNS'.", false));
            TermData.Add(CVID.MS_IdentiPy_hyperscore, new TermInfo(CVID.MS_IdentiPy_hyperscore, @"MS", @"MS:1002989", @"IdentiPy:hyperscore", @"The IdentiPy result 'hyperscore'.", false));
            TermData.Add(CVID.MS_ms_deisotope, new TermInfo(CVID.MS_ms_deisotope, @"MS", @"MS:1002990", @"ms_deisotope", @"ms_deisotope, a library for deisotoping and charge state deconvolution of mass spectra.", false));
            TermData.Add(CVID.MS_python_psims, new TermInfo(CVID.MS_python_psims, @"MS", @"MS:1002991", @"python-psims", @"python-psims, a library for generating mzML and mzIdentML.", false));
            TermData.Add(CVID.MS_Andromeda_PEP, new TermInfo(CVID.MS_Andromeda_PEP, @"MS", @"MS:1002995", @"Andromeda:PEP", @"Posterior error probability of the best identified peptide of the Andromeda search engine.", false));
            TermData.Add(CVID.MS_Andromeda_apl_file_format, new TermInfo(CVID.MS_Andromeda_apl_file_format, @"MS", @"MS:1002996", @"Andromeda:apl file format", @"Peak list file format of the Andromeda search engine.", false));
            TermData.Add(CVID.MS_ProteomeXchange_dataset_identifier_reanalysis_number, new TermInfo(CVID.MS_ProteomeXchange_dataset_identifier_reanalysis_number, @"MS", @"MS:1002997", @"ProteomeXchange dataset identifier reanalysis number", @"Index number of a reanalysis within a ProteomeXchange reprocessed dataset identifier container (RPXD).", false));
            TermData.Add(CVID.MS_LCMS_9030, new TermInfo(CVID.MS_LCMS_9030, @"MS", @"MS:1002998", @"LCMS-9030", @"Shimadzu Scientific Instruments LCMS-9030 Q-TOF MS.", false));
            TermData.Add(CVID.MS_LCMS_8060, new TermInfo(CVID.MS_LCMS_8060, @"MS", @"MS:1002999", @"LCMS-8060", @"Shimadzu Scientific Instruments LCMS-8060 MS.", false));
            TermData.Add(CVID.MS_LCMS_8050, new TermInfo(CVID.MS_LCMS_8050, @"MS", @"MS:1003000", @"LCMS-8050", @"Shimadzu Scientific Instruments LCMS-8050 MS.", false));
            TermData.Add(CVID.MS_LCMS_8045, new TermInfo(CVID.MS_LCMS_8045, @"MS", @"MS:1003001", @"LCMS-8045", @"Shimadzu Scientific Instruments LCMS-8045 MS.", false));
            TermData.Add(CVID.MS_LCMS_8040, new TermInfo(CVID.MS_LCMS_8040, @"MS", @"MS:1003002", @"LCMS-8040", @"Shimadzu Scientific Instruments LCMS-8040 MS.", false));
            TermData.Add(CVID.MS_LCMS_2020, new TermInfo(CVID.MS_LCMS_2020, @"MS", @"MS:1003003", @"LCMS-2020", @"Shimadzu Scientific Instruments LCMS-2020.", false));
            TermData.Add(CVID.MS_maXis_II, new TermInfo(CVID.MS_maXis_II, @"MS", @"MS:1003004", @"maXis II", @"Bruker Daltonics' maXis II.", false));
            TermData.Add(CVID.MS_timsTOF_Pro, new TermInfo(CVID.MS_timsTOF_Pro, @"MS", @"MS:1003005", @"timsTOF Pro", @"Bruker Daltonics' timsTOF Pro.", false));
            TermData.Add(CVID.MS_mean_inverse_reduced_ion_mobility_array, new TermInfo(CVID.MS_mean_inverse_reduced_ion_mobility_array, @"MS", @"MS:1003006", @"mean inverse reduced ion mobility array", @"Array of inverse reduced ion mobilities, averaged from a matrix of binned m/z and ion mobility values, corresponding to a spectrum of individual peaks encoded with an m/z array.", false));
            TermData.Add(CVID.MS_raw_ion_mobility_array, new TermInfo(CVID.MS_raw_ion_mobility_array, @"MS", @"MS:1003007", @"raw ion mobility array", @"Array of raw drift times.", false));
            TermData.Add(CVID.MS_raw_inverse_reduced_ion_mobility_array, new TermInfo(CVID.MS_raw_inverse_reduced_ion_mobility_array, @"MS", @"MS:1003008", @"raw inverse reduced ion mobility array", @"Array of raw inverse reduced ion mobilities.", false));
            TermData.Add(CVID.MS_Shimadzu_Biotech_LCD_format, new TermInfo(CVID.MS_Shimadzu_Biotech_LCD_format, @"MS", @"MS:1003009", @"Shimadzu Biotech LCD format", @"Shimadzu Biotech LCD file format.", false));
            TermData.Add(CVID.MS_LPPtiger, new TermInfo(CVID.MS_LPPtiger, @"MS", @"MS:1003010", @"LPPtiger", @"Software for lipidome-specific prediction and identification of oxidized phospholipids from LC-MS datasets.", false));
            TermData.Add(CVID.MS_pFind, new TermInfo(CVID.MS_pFind, @"MS", @"MS:1003011", @"pFind", @"Sequence-tag-based search engine pFind.", false));
            TermData.Add(CVID.MS_KSDP_score, new TermInfo(CVID.MS_KSDP_score, @"MS", @"MS:1003012", @"KSDP score", @"Kernel mass spectral dot product scoring function.", false));
            TermData.Add(CVID.MS_i3tms, new TermInfo(CVID.MS_i3tms, @"MS", @"MS:1003013", @"i3tms", @"i3-tms search engine and data-analysis software.", false));
            TermData.Add(CVID.MS_MSFragger, new TermInfo(CVID.MS_MSFragger, @"MS", @"MS:1003014", @"MSFragger", @"A database search-based peptide identification tool.", false));
            TermData.Add(CVID.MS_razor_peptide, new TermInfo(CVID.MS_razor_peptide, @"MS", @"MS:1003015", @"razor peptide", @"Peptide that is shared between protein groups and assigned to the protein group with the largest number of identified peptides.", false));
            TermData.Add(CVID.MS_ProteinProphet_peptide_weight, new TermInfo(CVID.MS_ProteinProphet_peptide_weight, @"MS", @"MS:1003016", @"ProteinProphet:peptide weight", @"Fraction of peptide evidence attributable to a protein or a set of indistinguishable proteins.", false));
            TermData.Add(CVID.MS_ProteinProphet_peptide_group_weight, new TermInfo(CVID.MS_ProteinProphet_peptide_group_weight, @"MS", @"MS:1003017", @"ProteinProphet:peptide group weight", @"Fraction of peptide evidence attributable to a group of proteins.", false));
            TermData.Add(CVID.MS_Philosopher, new TermInfo(CVID.MS_Philosopher, @"MS", @"MS:1003018", @"Philosopher", @"General proteomics processing toolkit for shotgun proteomics.", false));
            TermData.Add(CVID.MS_pressure_chromatogram, new TermInfo(CVID.MS_pressure_chromatogram, @"MS", @"MS:1003019", @"pressure chromatogram", @"Representation of chromatographic pressure versus time.", false));
            TermData.Add(CVID.MS_flow_rate_chromatogram, new TermInfo(CVID.MS_flow_rate_chromatogram, @"MS", @"MS:1003020", @"flow rate chromatogram", @"Representation of the chromatographic flow rate versus time.", false));
            TermData.Add(CVID.MS_Fixed_modification, new TermInfo(CVID.MS_Fixed_modification, @"MS", @"MS:1003021", @"Fixed modification", @"Post-translational modification which is assumed to be present at each instance of a residue type.", false));
            TermData.Add(CVID.MS_Variable_modification, new TermInfo(CVID.MS_Variable_modification, @"MS", @"MS:1003022", @"Variable modification", @"Post-translational modification which may or may not be present at a residue type.", false));
            TermData.Add(CVID.MS_OpenPepXL, new TermInfo(CVID.MS_OpenPepXL, @"MS", @"MS:1003023", @"OpenPepXL", @"Cross-Linking MS search engine.", false));
            TermData.Add(CVID.MS_OpenPepXL_score, new TermInfo(CVID.MS_OpenPepXL_score, @"MS", @"MS:1003024", @"OpenPepXL:score", @"The OpenPepXL score for a cross-link spectrum match.", false));
            TermData.Add(CVID.MS_named_element, new TermInfo(CVID.MS_named_element, @"MS", @"MS:1003025", @"named element", @"A named element that is an attribute in a proteomics standards file.", false));
            TermData.Add(CVID.MS_named_element_in_mzIdentML, new TermInfo(CVID.MS_named_element_in_mzIdentML, @"MS", @"MS:1003026", @"named element in mzIdentML", @"A named element that is an attribute in a mzIdentML file.", false));
            TermData.Add(CVID.MS_named_element_in_mzML, new TermInfo(CVID.MS_named_element_in_mzML, @"MS", @"MS:1003027", @"named element in mzML", @"A named element that is an attribute in a mzML file.", false));
            TermData.Add(CVID.MS_Orbitrap_Exploris_480, new TermInfo(CVID.MS_Orbitrap_Exploris_480, @"MS", @"MS:1003028", @"Orbitrap Exploris 480", @"Thermo Scientific Orbitrap Exploris 480 Quadrupole Orbitrap MS.", false));
            TermData.Add(CVID.MS_Orbitrap_Eclipse, new TermInfo(CVID.MS_Orbitrap_Eclipse, @"MS", @"MS:1003029", @"Orbitrap Eclipse", @"Thermo Scientific Orbitrap Eclipse mass spectrometer with Tribrid architecture consisting of quadrupole mass filter, linear ion trap and Orbitrap mass analyzers.", false));
            TermData.Add(CVID.MS_Mascot_MinNumSigUniqueSeqs, new TermInfo(CVID.MS_Mascot_MinNumSigUniqueSeqs, @"MS", @"MS:1003030", @"Mascot:MinNumSigUniqueSeqs", @"Minimum number of significant unique sequences required in a protein hit. The setting is only relevant if the protein grouping strategy is 'family clustering'.", false));
            TermData.Add(CVID.MS_CPTAC_accession_number, new TermInfo(CVID.MS_CPTAC_accession_number, @"MS", @"MS:1003031", @"CPTAC accession number", @"Main identifier of a CPTAC dataset.", false));
            TermData.Add(CVID.MS_compound_identification_confidence_code_in_MS_DIAL, new TermInfo(CVID.MS_compound_identification_confidence_code_in_MS_DIAL, @"MS", @"MS:1003032", @"compound identification confidence code in MS-DIAL", @"The confidence code to describe the confidence of annotated compounds as defined by the MS-DIAL program.", false));
            TermData.Add(CVID.MS_molecular_entity_attribute, new TermInfo(CVID.MS_molecular_entity_attribute, @"MS", @"MS:1003033", @"molecular entity attribute", @"Non-inherent characteristic attributed to a molecular entity.", false));
            TermData.Add(CVID.MS_atom, new TermInfo(CVID.MS_atom, @"MS", @"MS:1003034", @"atom", @"Smallest constituent unit of ordinary matter that constitutes a chemical element.", false));
            TermData.Add(CVID.MS_small_molecule, new TermInfo(CVID.MS_small_molecule, @"MS", @"MS:1003035", @"small molecule", @"Low molecular weight (< 900 daltons) organic compound that may regulate a biological process.", false));
            TermData.Add(CVID.MS_metabolite, new TermInfo(CVID.MS_metabolite, @"MS", @"MS:1003036", @"metabolite", @"Small molecule that is the intermediate end product of metabolism.", false));
            TermData.Add(CVID.MS_ribonucleotide, new TermInfo(CVID.MS_ribonucleotide, @"MS", @"MS:1003037", @"ribonucleotide", @"Nucleotide containing ribose as its pentose component.", false));
            TermData.Add(CVID.MS_deoxyribonucleotide, new TermInfo(CVID.MS_deoxyribonucleotide, @"MS", @"MS:1003038", @"deoxyribonucleotide", @"Monomer, or single unit, of DNA, or deoxyribonucleic acid.", false));
            TermData.Add(CVID.MS_amino_acid, new TermInfo(CVID.MS_amino_acid, @"MS", @"MS:1003039", @"amino acid", @"Organic molecule that contains amine (-NH2) and carboxyl (-COOH) functional groups, along with a side chain (R group) that is specific to each amino acid.", false));
            TermData.Add(CVID.MS_monosaccharide, new TermInfo(CVID.MS_monosaccharide, @"MS", @"MS:1003040", @"monosaccharide", @"Simplest form of sugar and the most basic units of carbohydrate that cannot be further hydrolyzed to a simpler molecule.", false));
            TermData.Add(CVID.MS_nucleic_acid, new TermInfo(CVID.MS_nucleic_acid, @"MS", @"MS:1003041", @"nucleic acid", @"Molecule composed of a chain of nucleotides.", false));
            TermData.Add(CVID.MS_polysaccharide, new TermInfo(CVID.MS_polysaccharide, @"MS", @"MS:1003042", @"polysaccharide", @"Polymeric carbohydrate molecules composed of long chains of monosaccharide units bound together by glycosidic linkages.", false));
            TermData.Add(CVID.MS_number_of_residues, new TermInfo(CVID.MS_number_of_residues, @"MS", @"MS:1003043", @"number of residues", @"Number of amino acid residues in a peptide, commonly referred to as the peptide length.", false));
            TermData.Add(CVID.MS_number_of_missed_cleavages, new TermInfo(CVID.MS_number_of_missed_cleavages, @"MS", @"MS:1003044", @"number of missed cleavages", @"Number of amino acid residue bonds that should have been cleaved by the cleavage agent used, but were not.", false));
            TermData.Add(CVID.MS_peptide_to_protein_mapping, new TermInfo(CVID.MS_peptide_to_protein_mapping, @"MS", @"MS:1003045", @"peptide-to-protein mapping", @"Process of mapping a peptide sequence to a protein sequence.", false));
            TermData.Add(CVID.MS_peptide_to_protein_mapping_attribute, new TermInfo(CVID.MS_peptide_to_protein_mapping_attribute, @"MS", @"MS:1003046", @"peptide-to-protein mapping attribute", @"Nonphysical characteristic attributed to the result of peptide-to-protein mapping.", false));
            TermData.Add(CVID.MS_protein_sequence_offset, new TermInfo(CVID.MS_protein_sequence_offset, @"MS", @"MS:1003047", @"protein sequence offset", @"Offset in number of residues from the n terminus of the protein at which the peptide begins. Use 1 when the first residue of the peptide sequence is the first residue of the protein sequence.", false));
            TermData.Add(CVID.MS_number_of_enzymatic_termini, new TermInfo(CVID.MS_number_of_enzymatic_termini, @"MS", @"MS:1003048", @"number of enzymatic termini", @"Total number of termini that match standard rules for the cleavage agent, 2 when both termini match cleavage agent rules, 1 when only one terminus does, and 0 if neither terminus matches cleavage agent rules.", false));
            TermData.Add(CVID.MS_peptidoform, new TermInfo(CVID.MS_peptidoform, @"MS", @"MS:1003049", @"peptidoform", @"Peptide that contains zero or more mass modifications on the termini or side chains of its amino acid residues, and may be differentiated from other peptidoforms with the same peptide sequence but different mass modification configurations.", false));
            TermData.Add(CVID.MS_peptidoform_attribute, new TermInfo(CVID.MS_peptidoform_attribute, @"MS", @"MS:1003050", @"peptidoform attribute", @"Non-inherent characteristic attributed to a peptidoform.", false));
            TermData.Add(CVID.MS_peptidoform_ion, new TermInfo(CVID.MS_peptidoform_ion, @"MS", @"MS:1003051", @"peptidoform ion", @"Peptidoform that has formed an adduct with an ion, thereby rendering it potentially detectable with a mass spectrometer. Commonly called a 'precursor' or 'precursor ion' or 'parent ion'.", false));
            TermData.Add(CVID.MS_peptidoform_ion_property, new TermInfo(CVID.MS_peptidoform_ion_property, @"MS", @"MS:1003052", @"peptidoform ion property", @"Inherent or measurable characteristic of a peptidoform ion.", false));
            TermData.Add(CVID.MS_theoretical_monoisotopic_m_z, new TermInfo(CVID.MS_theoretical_monoisotopic_m_z, @"MS", @"MS:1003053", @"theoretical monoisotopic m/z", @"Mass-to-charge ratio of a peptidoform ion composed of the most common isotope of each atom computed from the putative knowledge of its molecular constituents.", false));
            TermData.Add(CVID.MS_theoretical_average_m_z, new TermInfo(CVID.MS_theoretical_average_m_z, @"MS", @"MS:1003054", @"theoretical average m/z", @"Mass-to-charge ratio of a peptidoform ion computed from the putative knowledge of its molecular constituents, averaged over the distribution of naturally occurring isotopes.", false));
            TermData.Add(CVID.MS_adduct, new TermInfo(CVID.MS_adduct, @"MS", @"MS:1003055", @"adduct", @"Product of a direct addition of two or more distinct molecules, resulting in a single reaction product containing all atoms of all components. The resultant is considered a distinct molecular species.", false));
            TermData.Add(CVID.MS_adduct_ion_property, new TermInfo(CVID.MS_adduct_ion_property, @"MS", @"MS:1003056", @"adduct ion property", @"Physical measurable characteristic of an adduct ion.", false));
            TermData.Add(CVID.MS_scan_number, new TermInfo(CVID.MS_scan_number, @"MS", @"MS:1003057", @"scan number", @"Ordinal number of the scan indicating its order of acquisition within a mass spectrometry acquisition run.", false));
            TermData.Add(CVID.MS_spectrum_property, new TermInfo(CVID.MS_spectrum_property, @"MS", @"MS:1003058", @"spectrum property", @"Inherent or measurable characteristic of a spectrum.", false));
            TermData.Add(CVID.MS_number_of_peaks, new TermInfo(CVID.MS_number_of_peaks, @"MS", @"MS:1003059", @"number of peaks", @"Number of peaks or features in a spectrum. For a peak-picked spectrum, this will correspond to the number of data points. For a non-peak-picked spectrum, this corresponds to the number of features discernable in the spectrum, which will be fewer than the number of data points.", false));
            TermData.Add(CVID.MS_number_of_data_points, new TermInfo(CVID.MS_number_of_data_points, @"MS", @"MS:1003060", @"number of data points", @"Number of data points in a spectrum. For a peak-picked spectrum, this will correspond to the number of peaks. For a non-peak-picked spectrum, this corresponds to the number of values in the data array, which are not all peaks.", false));
            TermData.Add(CVID.MS_spectrum_name, new TermInfo(CVID.MS_spectrum_name, @"MS", @"MS:1003061", @"spectrum name", @"Label attached to a spectrum uniquely naming it within a collection of spectra, often in a spectral library. It is often a string combination of peptide sequence, charge, mass modifications, collision energy, but will obviously be different for small molecules or unidentified spectra. It must be unique within a collection.", false));
            TermData.Add(CVID.MS_spectrum_index, new TermInfo(CVID.MS_spectrum_index, @"MS", @"MS:1003062", @"spectrum index", @"Integer index value associated with a spectrum within a collection of spectra, often in a spectral library. By custom, index counters should begin with 0.", false));
            TermData.Add(CVID.MS_universal_spectrum_identifier, new TermInfo(CVID.MS_universal_spectrum_identifier, @"MS", @"MS:1003063", @"universal spectrum identifier", @"PSI universal spectrum identifier (USI) multipart key that uniquely identifies a spectrum available in a ProteomeXchange datasets or spectral library.", false));
            TermData.Add(CVID.MS_spectrum_aggregation_attribute, new TermInfo(CVID.MS_spectrum_aggregation_attribute, @"MS", @"MS:1003064", @"spectrum aggregation attribute", @"Non-inherent characteristic attributed to spectrum aggregation.", false));
            TermData.Add(CVID.MS_spectrum_aggregation_type, new TermInfo(CVID.MS_spectrum_aggregation_type, @"MS", @"MS:1003065", @"spectrum aggregation type", @"Categorization of a spectrum based on its type of aggregation (e.g., individual spectrum, consensus spectrum, best replicate spectrum, etc.).", false));
            TermData.Add(CVID.MS_singleton_spectrum, new TermInfo(CVID.MS_singleton_spectrum, @"MS", @"MS:1003066", @"singleton spectrum", @"Spectrum that is not the result of some aggregation process.", false));
            TermData.Add(CVID.MS_consensus_spectrum, new TermInfo(CVID.MS_consensus_spectrum, @"MS", @"MS:1003067", @"consensus spectrum", @"Spectrum that is the result of merging several replicate spectra to form a spectrum that is more representative of its class and ideally less noisy that any of its source replicates.", false));
            TermData.Add(CVID.MS_best_replicate_spectrum, new TermInfo(CVID.MS_best_replicate_spectrum, @"MS", @"MS:1003068", @"best replicate spectrum", @"Spectrum that is considered the most representative from a pool of replicate spectra.", false));
            TermData.Add(CVID.MS_number_of_replicate_spectra_available, new TermInfo(CVID.MS_number_of_replicate_spectra_available, @"MS", @"MS:1003069", @"number of replicate spectra available", @"Number of replicate spectra available for use during the aggregation process.", false));
            TermData.Add(CVID.MS_number_of_replicate_spectra_used, new TermInfo(CVID.MS_number_of_replicate_spectra_used, @"MS", @"MS:1003070", @"number of replicate spectra used", @"Number of replicate spectra used during the aggregation process. This is generally applicable when there are many replicates available, but some are discarded as being low S/N, blended, or otherwise unsuitable, and the remaining set is then used for merging via a consensus algorithm.", false));
            TermData.Add(CVID.MS_spectrum_origin_attribute, new TermInfo(CVID.MS_spectrum_origin_attribute, @"MS", @"MS:1003071", @"spectrum origin attribute", @"Non-inherent characteristic attributed to spectrum aggregation.", false));
            TermData.Add(CVID.MS_spectrum_origin_type, new TermInfo(CVID.MS_spectrum_origin_type, @"MS", @"MS:1003072", @"spectrum origin type", @"Categorization of a spectrum based on its origin (e.g., observed spectrum, predicted spectrum, demultiplexed spectrum, etc.).", false));
            TermData.Add(CVID.MS_observed_spectrum, new TermInfo(CVID.MS_observed_spectrum, @"MS", @"MS:1003073", @"observed spectrum", @"Spectrum that originates from an analysis attempt of a single analyte species on an instrument.", false));
            TermData.Add(CVID.MS_predicted_spectrum, new TermInfo(CVID.MS_predicted_spectrum, @"MS", @"MS:1003074", @"predicted spectrum", @"Spectrum that originates from a compututational algorithm that attempts to predict spectra.", false));
            TermData.Add(CVID.MS_demultiplexed_spectrum, new TermInfo(CVID.MS_demultiplexed_spectrum, @"MS", @"MS:1003075", @"demultiplexed spectrum", @"Spectrum that originates from an attempted extraction of a single ion spieces from a multiplexed spectrum that contains multiple ion species.", false));
            TermData.Add(CVID.MS_uninterpreted_spectrum, new TermInfo(CVID.MS_uninterpreted_spectrum, @"MS", @"MS:1003076", @"uninterpreted spectrum", @"Spectrum provided in the form of plain numerical values without any information pertaining to the interpretation of features.", false));
            TermData.Add(CVID.MS_interpreted_spectrum, new TermInfo(CVID.MS_interpreted_spectrum, @"MS", @"MS:1003077", @"interpreted spectrum", @"Spectrum provided in a form where specific features of the spectrum are interpreted to provide putative explanations for some feature.", false));
            TermData.Add(CVID.MS_interpreted_spectrum_attribute, new TermInfo(CVID.MS_interpreted_spectrum_attribute, @"MS", @"MS:1003078", @"interpreted spectrum attribute", @"Non-inherent characteristic attributed to an interpreted spectrum.", false));
            TermData.Add(CVID.MS_total_unassigned_intensity_fraction, new TermInfo(CVID.MS_total_unassigned_intensity_fraction, @"MS", @"MS:1003079", @"total unassigned intensity fraction", @"Fraction of intensity summed from all unassigned peaks divided by the intensity summed from all peaks in the spectrum.", false));
            TermData.Add(CVID.MS_top_20_peak_unassigned_intensity_fraction, new TermInfo(CVID.MS_top_20_peak_unassigned_intensity_fraction, @"MS", @"MS:1003080", @"top 20 peak unassigned intensity fraction", @"Fraction of intensity summed from unassigned peaks among the top 20 divided by the intensity summed from all top 20 peaks in the spectrum.", false));
            TermData.Add(CVID.MS_unidentified_modification_monoisotopic_mass_delta, new TermInfo(CVID.MS_unidentified_modification_monoisotopic_mass_delta, @"MS", @"MS:1003081", @"unidentified modification monoisotopic mass delta", @"Monoisotopic mass delta in Daltons of an amino acid residue modification whose atomic composition or molecular identity has not been determined. This term should not be used for modifications of known molecular identity such as those available in Unimod, RESID or PSI-MOD. This term MUST NOT be used inside the <Modification> element in mzIdentML.", false));
            TermData.Add(CVID.MS_MS_DIAL, new TermInfo(CVID.MS_MS_DIAL, @"MS", @"MS:1003082", @"MS-DIAL", @"Data processing software for untargeted metabolomics and lipidomics that supports multiple instruments and MS vendors.", false));
            TermData.Add(CVID.MS_raw_data_file, new TermInfo(CVID.MS_raw_data_file, @"MS", @"MS:1003083", @"raw data file", @"Data file that contains original data as generated by an instrument, although not necessarily in the original data format (i.e. an original raw file converted to a different format is still a raw data file).", false));
            TermData.Add(CVID.MS_processed_data_file, new TermInfo(CVID.MS_processed_data_file, @"MS", @"MS:1003084", @"processed data file", @"File that contains data that has been substantially processed or transformed from what was originally acquired by an instrument.", false));
            TermData.Add(CVID.MS_previous_MSn_1_scan_precursor_intensity, new TermInfo(CVID.MS_previous_MSn_1_scan_precursor_intensity, @"MS", @"MS:1003085", @"previous MSn-1 scan precursor intensity", @"Intensity of the precursor ion in the previous MSn-1 scan (prior in time to the referencing MSn scan). For an MS2 scan, this means the MS1 precursor intensity. It is unspecified on whether this is an apex (across m/z) intensity, integrated (across m/z) intensity, a centroided peak intensity of unknown origin, or even summed across several isotopes.", false));
            TermData.Add(CVID.MS_precursor_apex_intensity, new TermInfo(CVID.MS_precursor_apex_intensity, @"MS", @"MS:1003086", @"precursor apex intensity", @"Intensity of the precursor ion current as measured by its apex point over time and m/z. It is unspecified whether this is the intensity of the selected isotope or the most intense isotope.", false));
            TermData.Add(CVID.MS_supported_by_repository_but_incomplete_data_and_or_metadata, new TermInfo(CVID.MS_supported_by_repository_but_incomplete_data_and_or_metadata, @"MS", @"MS:1003087", @"supported by repository but incomplete data and/or metadata", @"Dataset for which the identifications and/or spectra/traces are in formats that can be parsed by the hosting data repository such that internal references between identifications and spectra/traces are preserved and browsable at the repository. However, some metadata is not properly described due to lack of CV terms or some auxiliary data, such as data used to create a spectral library or a sequence search database crucial to the analysis, is not available.", false));
            TermData.Add(CVID.MS_truncation_and_zlib_compression, new TermInfo(CVID.MS_truncation_and_zlib_compression, @"MS", @"MS:1003088", @"truncation and zlib compression", @"Data array compression using mantissa bit truncation followed by zlib compression.", false));
            TermData.Add(CVID.MS_truncation__delta_prediction_and_zlib_compression, new TermInfo(CVID.MS_truncation__delta_prediction_and_zlib_compression, @"MS", @"MS:1003089", @"truncation, delta prediction and zlib compression", @"Data array compression using mantissa bit truncation, delta prediction and zlib compression.", false));
            TermData.Add(CVID.MS_truncation__linear_prediction_and_zlib_compression, new TermInfo(CVID.MS_truncation__linear_prediction_and_zlib_compression, @"MS", @"MS:1003090", @"truncation, linear prediction and zlib compression", @"Data array compression using mantissa bit truncation, linear prediction and zlib compression.", false));
            TermData.Add(CVID.MS_binary_data_compression_parameter, new TermInfo(CVID.MS_binary_data_compression_parameter, @"MS", @"MS:1003091", @"binary data compression parameter", @"Settable parameter for a binary data compression event.", false));
            TermData.Add(CVID.MS_number_of_mantissa_bits_truncated, new TermInfo(CVID.MS_number_of_mantissa_bits_truncated, @"MS", @"MS:1003092", @"number of mantissa bits truncated", @"Number of extraneous mantissa bits truncated to improve subsequent compression.", false));
            TermData.Add(CVID.MS_Lys_N, new TermInfo(CVID.MS_Lys_N, @"MS", @"MS:1003093", @"Lys-N", @"Metalloendopeptidase found in the mushroom Grifola frondosa that cleaves proteins on the amino side of lysine residues.", false));
            TermData.Add(CVID.MS_Orbitrap_Exploris_240, new TermInfo(CVID.MS_Orbitrap_Exploris_240, @"MS", @"MS:1003094", @"Orbitrap Exploris 240", @"Thermo Scientific Orbitrap Exploris 240 Quadrupole Orbitrap MS.", false));
            TermData.Add(CVID.MS_Orbitrap_Exploris_120, new TermInfo(CVID.MS_Orbitrap_Exploris_120, @"MS", @"MS:1003095", @"Orbitrap Exploris 120", @"Thermo Scientific Orbitrap Exploris 120 Quadrupole Orbitrap MS.", false));
            TermData.Add(CVID.MS_LTQ_Orbitrap_Velos_Pro, new TermInfo(CVID.MS_LTQ_Orbitrap_Velos_Pro, @"MS", @"MS:1003096", @"LTQ Orbitrap Velos Pro", @"Thermo Scientific LTQ Orbitrap Velos Pro, often just referred to as the Orbitrap Velos Pro.", false));
            TermData.Add(CVID.MS_MaxQuant_protein_group_level_score, new TermInfo(CVID.MS_MaxQuant_protein_group_level_score, @"MS", @"MS:1003097", @"MaxQuant protein group-level score", @"The probability based MaxQuant protein group score.", false));
            TermData.Add(CVID.MS_Andromeda_peptide_PEP, new TermInfo(CVID.MS_Andromeda_peptide_PEP, @"MS", @"MS:1003098", @"Andromeda peptide PEP", @"Peptide probability from Andromeda.", false));
            TermData.Add(CVID.MS_MaxQuant_DIA_peptide_PEP, new TermInfo(CVID.MS_MaxQuant_DIA_peptide_PEP, @"MS", @"MS:1003099", @"MaxQuant-DIA peptide PEP", @"Peptide probability from MaxQuant-DIA algorithm.", false));
            TermData.Add(CVID.MS_MaxQuant_DIA_score, new TermInfo(CVID.MS_MaxQuant_DIA_score, @"MS", @"MS:1003100", @"MaxQuant-DIA score", @"PSM evidence score from MaxQuant-DIA algorithm.", false));
            TermData.Add(CVID.MS_MaxQuant_DIA_PEP, new TermInfo(CVID.MS_MaxQuant_DIA_PEP, @"MS", @"MS:1003101", @"MaxQuant-DIA PEP", @"PSM evidence PEP probability from MaxQuant-DIA algorithm.", false));
            TermData.Add(CVID.MS_NIST_msp_comment, new TermInfo(CVID.MS_NIST_msp_comment, @"MS", @"MS:1003102", @"NIST msp comment", @"Term for a comment field withing the NIST msp file format", false));
            TermData.Add(CVID.MS_ion_interpretation_format, new TermInfo(CVID.MS_ion_interpretation_format, @"MS", @"MS:1003103", @"ion interpretation format", @"Interpretation format used for annotating individual spectrum ion peaks.", false));
            TermData.Add(CVID.MS_peptide_ion_interpretation_format, new TermInfo(CVID.MS_peptide_ion_interpretation_format, @"MS", @"MS:1003104", @"peptide ion interpretation format", @"Interpretation format designed primarily for peptides, with allowances for generic chemical formulas and other miscellaneous named ions.", false));
            TermData.Add(CVID.MS_cross_linked_peptide_ion_interpretation_format, new TermInfo(CVID.MS_cross_linked_peptide_ion_interpretation_format, @"MS", @"MS:1003105", @"cross-linked peptide ion interpretation format", @"Interpretation format designed specifically for cross-linked peptide ion peaks.", false));
            TermData.Add(CVID.MS_glycan_ion_interpretation_format, new TermInfo(CVID.MS_glycan_ion_interpretation_format, @"MS", @"MS:1003106", @"glycan ion interpretation format", @"Interpretation format designed specifically for glycan ion peaks.", false));
            TermData.Add(CVID.MS_lipid_ion_interpretation_format, new TermInfo(CVID.MS_lipid_ion_interpretation_format, @"MS", @"MS:1003107", @"lipid ion interpretation format", @"Interpretation format designed specifically for lipid ion peaks.", false));
            TermData.Add(CVID.MS_PatternLab, new TermInfo(CVID.MS_PatternLab, @"MS", @"MS:1003108", @"PatternLab", @"PatternLab for Proteomics is an integrated computational environment for analyzing shotgun proteomic data.", false));
            TermData.Add(CVID.MS_SIM_XL, new TermInfo(CVID.MS_SIM_XL, @"MS", @"MS:1003109", @"SIM-XL", @"Identifying cross-linked peptides in complex protein mixtures", false));
            TermData.Add(CVID.MS_SIM_XL_score, new TermInfo(CVID.MS_SIM_XL_score, @"MS", @"MS:1003110", @"SIM-XL score", @"SIM-XL identification search engine score", false));
            TermData.Add(CVID.MS_QUIN_XL, new TermInfo(CVID.MS_QUIN_XL, @"MS", @"MS:1003111", @"QUIN-XL", @"Quantification of cross-linked peptides in complex protein mixtures", false));
            TermData.Add(CVID.MS_Orbitrap_ID_X, new TermInfo(CVID.MS_Orbitrap_ID_X, @"MS", @"MS:1003112", @"Orbitrap ID-X", @"Thermo Scientific Orbitrap ID-X mass spectrometer with Tribrid architecture consisting of quadrupole mass filter, linear ion trap and Orbitrap mass analyzers.", false));
            TermData.Add(CVID.MS_OpenMS_ConsensusID_PEP, new TermInfo(CVID.MS_OpenMS_ConsensusID_PEP, @"MS", @"MS:1003113", @"OpenMS:ConsensusID PEP", @"The OpenMS ConsesusID tool posterior error probability", false));
            TermData.Add(CVID.MS_OpenMS_Best_PSM_Score, new TermInfo(CVID.MS_OpenMS_Best_PSM_Score, @"MS", @"MS:1003114", @"OpenMS:Best PSM Score", @"The score of the best PSM selected by the underlying identification tool", false));
            TermData.Add(CVID.MS_OpenMS_Target_decoy_PSM_q_value, new TermInfo(CVID.MS_OpenMS_Target_decoy_PSM_q_value, @"MS", @"MS:1003115", @"OpenMS:Target-decoy PSM q-value", @"The OpenMS Target-decoy q-values at PSM level", false));
            TermData.Add(CVID.MS_OpenMS_Target_decoy_peptide_q_value, new TermInfo(CVID.MS_OpenMS_Target_decoy_peptide_q_value, @"MS", @"MS:1003116", @"OpenMS:Target-decoy peptide q-value", @"The OpenMS Target-decoy q-values at peptide sequence level", false));
            TermData.Add(CVID.MS_OpenMS_Target_decoy_protein_q_value, new TermInfo(CVID.MS_OpenMS_Target_decoy_protein_q_value, @"MS", @"MS:1003117", @"OpenMS:Target-decoy protein q-value", @"The OpenMS Target-decoy q-values at protein level", false));
            TermData.Add(CVID.MS_EPIFANY, new TermInfo(CVID.MS_EPIFANY, @"MS", @"MS:1003118", @"EPIFANY", @"A Method for Efficient High-Confidence Protein Inference. The tool is part of the OpenMS framework", false));
            TermData.Add(CVID.MS_EPIFANY_Protein_posterior_probability, new TermInfo(CVID.MS_EPIFANY_Protein_posterior_probability, @"MS", @"MS:1003119", @"EPIFANY:Protein posterior probability", @"Protein Posterior probability calculated by EPIFANY protein inference algorithm", false));
            TermData.Add(CVID.MS_OpenMS_LFQ_intensity, new TermInfo(CVID.MS_OpenMS_LFQ_intensity, @"MS", @"MS:1003120", @"OpenMS:LFQ intensity", @"The data type LFQ intensity produced by OpenMS.", false));
            TermData.Add(CVID.MS_OpenMS_LFQ_spectral_count, new TermInfo(CVID.MS_OpenMS_LFQ_spectral_count, @"MS", @"MS:1003121", @"OpenMS:LFQ spectral count", @"The data type LFQ spectral count produced by OpenMS.", false));
            TermData.Add(CVID.MS_rapifleX, new TermInfo(CVID.MS_rapifleX, @"MS", @"MS:1003122", @"rapifleX", @"Bruker Daltonics' rapiflex: MALDI TOF/TOF.", false));
            TermData.Add(CVID.MS_Bruker_Daltonics_timsTOF_series, new TermInfo(CVID.MS_Bruker_Daltonics_timsTOF_series, @"MS", @"MS:1003123", @"Bruker Daltonics timsTOF series", @"Bruker Daltonics timsTOF series", false));
            TermData.Add(CVID.MS_timsTOF_fleX, new TermInfo(CVID.MS_timsTOF_fleX, @"MS", @"MS:1003124", @"timsTOF fleX", @"Bruker Daltonics' timsTOF fleX", false));
            TermData.Add(CVID.MS_ProSight_spectral_Q_value, new TermInfo(CVID.MS_ProSight_spectral_Q_value, @"MS", @"MS:1003125", @"ProSight:spectral Q-value", @"ProSight spectrum-level Q-value.", false));
            TermData.Add(CVID.MS_ProSight_spectral_P_score, new TermInfo(CVID.MS_ProSight_spectral_P_score, @"MS", @"MS:1003126", @"ProSight:spectral P-score", @"ProSight spectrum-level P-score.", false));
            TermData.Add(CVID.MS_ProSight_spectral_E_value, new TermInfo(CVID.MS_ProSight_spectral_E_value, @"MS", @"MS:1003127", @"ProSight:spectral E-value", @"ProSight spectrum-level E-value.", false));
            TermData.Add(CVID.MS_ProSight_spectral_C_score, new TermInfo(CVID.MS_ProSight_spectral_C_score, @"MS", @"MS:1003128", @"ProSight:spectral C-score", @"ProSight spectrum-level C-score.", false));
            TermData.Add(CVID.MS_proteoform_level_Q_value, new TermInfo(CVID.MS_proteoform_level_Q_value, @"MS", @"MS:1003129", @"proteoform-level Q-value", @"Estimation of the Q-value for proteoforms.", false));
            TermData.Add(CVID.MS_ProSight_proteoform_Q_value, new TermInfo(CVID.MS_ProSight_proteoform_Q_value, @"MS", @"MS:1003130", @"ProSight:proteoform Q-value", @"ProSight proteoform-level Q-value.", false));
            TermData.Add(CVID.MS_isoform_level_identification_attribute, new TermInfo(CVID.MS_isoform_level_identification_attribute, @"MS", @"MS:1003131", @"isoform-level identification attribute", @"Isoform level information.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 4</summary>
        private static void PopulateTermData_MS_Part4()
        {
            TermData.Add(CVID.MS_isoform_level_identification_statistic, new TermInfo(CVID.MS_isoform_level_identification_statistic, @"MS", @"MS:1003132", @"isoform-level identification statistic", @"Identification confidence metric for a isoform.", false));
            TermData.Add(CVID.MS_isoform_level_Q_value, new TermInfo(CVID.MS_isoform_level_Q_value, @"MS", @"MS:1003133", @"isoform-level Q-value", @"Estimation of the Q-value for isoforms.", false));
            TermData.Add(CVID.MS_ProSight_isoform_Q_value, new TermInfo(CVID.MS_ProSight_isoform_Q_value, @"MS", @"MS:1003134", @"ProSight:isoform Q-value", @"ProSight isoform-level Q-value.", false));
            TermData.Add(CVID.MS_ProSight_protein_Q_value, new TermInfo(CVID.MS_ProSight_protein_Q_value, @"MS", @"MS:1003135", @"ProSight:protein Q-value", @"ProSight protein-level Q-value.", false));
            TermData.Add(CVID.MS_ProSight_input_parameter, new TermInfo(CVID.MS_ProSight_input_parameter, @"MS", @"MS:1003136", @"ProSight input parameter", @"Search engine input parameters specific to ProSight.", false));
            TermData.Add(CVID.MS_TDPortal_input_parameter, new TermInfo(CVID.MS_TDPortal_input_parameter, @"MS", @"MS:1003137", @"TDPortal input parameter", @"Search engine input parameters specific to TDPortal.", false));
            TermData.Add(CVID.MS_ProSight_Run_delta_m_mode, new TermInfo(CVID.MS_ProSight_Run_delta_m_mode, @"MS", @"MS:1003138", @"ProSight:Run delta m mode", @"If true, runs delta m mode in ProSight.", false));
            TermData.Add(CVID.MS_ProSight_Run_Subsequence_Search_mode, new TermInfo(CVID.MS_ProSight_Run_Subsequence_Search_mode, @"MS", @"MS:1003139", @"ProSight:Run Subsequence Search mode", @"If true, runs Subsequence Search mode in ProSight.", false));
            TermData.Add(CVID.MS_ProSight_Run_Annotated_Proteoform_Search_mode, new TermInfo(CVID.MS_ProSight_Run_Annotated_Proteoform_Search_mode, @"MS", @"MS:1003140", @"ProSight:Run Annotated Proteoform Search mode", @"If true, runs Annotated Proteoform Search mode in ProSight.", false));
            TermData.Add(CVID.MS_ProSight, new TermInfo(CVID.MS_ProSight, @"MS", @"MS:1003141", @"ProSight", @"ProSight: Database search engine for top-down proteomics.", false));
            TermData.Add(CVID.MS_TDPortal, new TermInfo(CVID.MS_TDPortal, @"MS", @"MS:1003142", @"TDPortal", @"TDPortal: Database search engine for top-down proteomics.", false));
            TermData.Add(CVID.MS_mass_array, new TermInfo(CVID.MS_mass_array, @"MS", @"MS:1003143", @"mass array", @"A data array of mass values.", false));
            TermData.Add(CVID.MS_Triple_Quad_7500, new TermInfo(CVID.MS_Triple_Quad_7500, @"MS", @"MS:1003144", @"Triple Quad 7500", @"SCIEX Triple Quad 7500.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 1</summary>
        private static void PopulateTermData_PEFF_Part1()
        {
            TermData.Add(CVID.PEFF_PEFF_CV_term, new TermInfo(CVID.PEFF_PEFF_CV_term, @"MS", @"PEFF:0000001", @"PEFF CV term", @"PSI Extended FASTA Format controlled vocabulary term.", false));
            TermData.Add(CVID.PEFF_PEFF_file_header_section_term, new TermInfo(CVID.PEFF_PEFF_file_header_section_term, @"MS", @"PEFF:0000002", @"PEFF file header section term", @"CV term that may appear in a PEFF file header section.", false));
            TermData.Add(CVID.PEFF_PEFF_file_sequence_entry_term, new TermInfo(CVID.PEFF_PEFF_file_sequence_entry_term, @"MS", @"PEFF:0000003", @"PEFF file sequence entry term", @"CV term that may appear in a description line of a PEFF file individual sequence entry.", false));
            TermData.Add(CVID.PEFF_DbName, new TermInfo(CVID.PEFF_DbName, @"MS", @"PEFF:0000008", @"DbName", @"PEFF keyword for the sequence database name.", false));
            TermData.Add(CVID.PEFF_Prefix, new TermInfo(CVID.PEFF_Prefix, @"MS", @"PEFF:0000009", @"Prefix", @"PEFF keyword for the sequence database prefix.", false));
            TermData.Add(CVID.PEFF_DbDescription, new TermInfo(CVID.PEFF_DbDescription, @"MS", @"PEFF:0000010", @"DbDescription", @"PEFF keyword for the sequence database short description.", false));
            TermData.Add(CVID.PEFF_Decoy, new TermInfo(CVID.PEFF_Decoy, @"MS", @"PEFF:0000011", @"Decoy", @"PEFF keyword for the specifying whether the sequence database is a decoy database.", false));
            TermData.Add(CVID.PEFF_DbSource, new TermInfo(CVID.PEFF_DbSource, @"MS", @"PEFF:0000012", @"DbSource", @"PEFF keyword for the source of the database file.", false));
            TermData.Add(CVID.PEFF_DbVersion, new TermInfo(CVID.PEFF_DbVersion, @"MS", @"PEFF:0000013", @"DbVersion", @"PEFF keyword for the database version (release date) according to database provider.", false));
            TermData.Add(CVID.PEFF_DbDate_OBSOLETE, new TermInfo(CVID.PEFF_DbDate_OBSOLETE, @"MS", @"PEFF:0000014", @"DbDate", @"OBSOLETE PEFF keyword for the database date (release or file date of the source) according to database provider.", true));
            TermData.Add(CVID.PEFF_NumberOfEntries, new TermInfo(CVID.PEFF_NumberOfEntries, @"MS", @"PEFF:0000015", @"NumberOfEntries", @"PEFF keyword for the sumber of sequence entries in the database.", false));
            TermData.Add(CVID.PEFF_Conversion, new TermInfo(CVID.PEFF_Conversion, @"MS", @"PEFF:0000016", @"Conversion", @"PEFF keyword for the description of the conversion from original format to this current one.", false));
            TermData.Add(CVID.PEFF_SequenceType, new TermInfo(CVID.PEFF_SequenceType, @"MS", @"PEFF:0000017", @"SequenceType", @"PEFF keyword for the molecular type of the sequences.", false));
            TermData.Add(CVID.PEFF_SpecificKey, new TermInfo(CVID.PEFF_SpecificKey, @"MS", @"PEFF:0000018", @"SpecificKey", @"PEFF keyword for database specific keywords not included in the current controlled vocabulary.", false));
            TermData.Add(CVID.PEFF_SpecificValue, new TermInfo(CVID.PEFF_SpecificValue, @"MS", @"PEFF:0000019", @"SpecificValue", @"PEFF keyword for the specific values for a custom key.", false));
            TermData.Add(CVID.PEFF_DatabaseDescription, new TermInfo(CVID.PEFF_DatabaseDescription, @"MS", @"PEFF:0000020", @"DatabaseDescription", @"PEFF keyword for the short description of the PEFF file.", false));
            TermData.Add(CVID.PEFF_GeneralComment, new TermInfo(CVID.PEFF_GeneralComment, @"MS", @"PEFF:0000021", @"GeneralComment", @"PEFF keyword for a general comment.", false));
            TermData.Add(CVID.PEFF_ProteoformDb, new TermInfo(CVID.PEFF_ProteoformDb, @"MS", @"PEFF:0000022", @"ProteoformDb", @"PEFF keyword that when set to 'true' indicates that the database contains complete proteoforms.", false));
            TermData.Add(CVID.PEFF_OptionalTagDef, new TermInfo(CVID.PEFF_OptionalTagDef, @"MS", @"PEFF:0000023", @"OptionalTagDef", @"PEFF keyword for the short tag (abbreviation) and longer definition used to annotate a sequence annotation (such as variant or modification) in the OptionalTag location.", false));
            TermData.Add(CVID.PEFF_HasAnnotationIdentifiers, new TermInfo(CVID.PEFF_HasAnnotationIdentifiers, @"MS", @"PEFF:0000024", @"HasAnnotationIdentifiers", @"PEFF keyword that when set to 'true' indicates that entries in the database have identifiers for each annotation.", false));
            TermData.Add(CVID.PEFF_DbUniqueId_OBSOLETE, new TermInfo(CVID.PEFF_DbUniqueId_OBSOLETE, @"MS", @"PEFF:0001001", @"DbUniqueId", @"OBSOLETE Sequence database unique identifier.", true));
            TermData.Add(CVID.PEFF_PName, new TermInfo(CVID.PEFF_PName, @"MS", @"PEFF:0001002", @"PName", @"PEFF keyword for the protein full name.", false));
            TermData.Add(CVID.PEFF_NcbiTaxId, new TermInfo(CVID.PEFF_NcbiTaxId, @"MS", @"PEFF:0001003", @"NcbiTaxId", @"PEFF keyword for the NCBI taxonomy identifier.", false));
            TermData.Add(CVID.PEFF_TaxName, new TermInfo(CVID.PEFF_TaxName, @"MS", @"PEFF:0001004", @"TaxName", @"PEFF keyword for the taxonomy name (latin or common name).", false));
            TermData.Add(CVID.PEFF_GName, new TermInfo(CVID.PEFF_GName, @"MS", @"PEFF:0001005", @"GName", @"PEFF keyword for the gene name.", false));
            TermData.Add(CVID.PEFF_Length, new TermInfo(CVID.PEFF_Length, @"MS", @"PEFF:0001006", @"Length", @"PEFF keyword for the sequence length.", false));
            TermData.Add(CVID.PEFF_SV, new TermInfo(CVID.PEFF_SV, @"MS", @"PEFF:0001007", @"SV", @"PEFF keyword for the sequence version.", false));
            TermData.Add(CVID.PEFF_EV, new TermInfo(CVID.PEFF_EV, @"MS", @"PEFF:0001008", @"EV", @"PEFF keyword for the entry version.", false));
            TermData.Add(CVID.PEFF_PE, new TermInfo(CVID.PEFF_PE, @"MS", @"PEFF:0001009", @"PE", @"PEFF keyword for the Protein Evidence; A UniProtKB code 1-5.", false));
            TermData.Add(CVID.PEFF_Processed, new TermInfo(CVID.PEFF_Processed, @"MS", @"PEFF:0001010", @"Processed", @"PEFF keyword for information on how the full length original protein sequence can be processed into shorter components such as signal peptides and chains.", false));
            TermData.Add(CVID.PEFF_Variant_OBSOLETE, new TermInfo(CVID.PEFF_Variant_OBSOLETE, @"MS", @"PEFF:0001011", @"Variant", @"OBSOLETE Sequence variation (substitution, insertion, deletion).", true));
            TermData.Add(CVID.PEFF_ModResPsi, new TermInfo(CVID.PEFF_ModResPsi, @"MS", @"PEFF:0001012", @"ModResPsi", @"PEFF keyword for the modified residue with PSI-MOD identifier.", false));
            TermData.Add(CVID.PEFF_ModRes, new TermInfo(CVID.PEFF_ModRes, @"MS", @"PEFF:0001013", @"ModRes", @"PEFF keyword for the modified residue without aPSI-MOD or UniMod identifier.", false));
            TermData.Add(CVID.PEFF_AltAC, new TermInfo(CVID.PEFF_AltAC, @"MS", @"PEFF:0001014", @"AltAC", @"PEFF keyword for the Alternative Accession Code.", false));
            TermData.Add(CVID.PEFF_SeqStatus, new TermInfo(CVID.PEFF_SeqStatus, @"MS", @"PEFF:0001015", @"SeqStatus", @"PEFF keyword for the sequence status. Complete or Fragment.", false));
            TermData.Add(CVID.PEFF_CC, new TermInfo(CVID.PEFF_CC, @"MS", @"PEFF:0001016", @"CC", @"PEFF keyword for the entry associated comment.", false));
            TermData.Add(CVID.PEFF_KW, new TermInfo(CVID.PEFF_KW, @"MS", @"PEFF:0001017", @"KW", @"PEFF keyword for the entry associated keyword(s).", false));
            TermData.Add(CVID.PEFF_GO, new TermInfo(CVID.PEFF_GO, @"MS", @"PEFF:0001018", @"GO", @"PEFF keyword for the Gene Ontology code.", false));
            TermData.Add(CVID.PEFF_XRef, new TermInfo(CVID.PEFF_XRef, @"MS", @"PEFF:0001019", @"XRef", @"PEFF keyword for the cross-reference to an external resource.", false));
            TermData.Add(CVID.PEFF_mature_protein, new TermInfo(CVID.PEFF_mature_protein, @"MS", @"PEFF:0001020", @"mature protein", @"Portion of a newly synthesized protein that contributes to a final structure after other components such as signal peptides are removed.", false));
            TermData.Add(CVID.PEFF_signal_peptide, new TermInfo(CVID.PEFF_signal_peptide, @"MS", @"PEFF:0001021", @"signal peptide", @"Short peptide present at the N-terminus of a newly synthesized protein that is cleaved off and is not part of the final mature protein.", false));
            TermData.Add(CVID.PEFF_transit_peptide, new TermInfo(CVID.PEFF_transit_peptide, @"MS", @"PEFF:0001022", @"transit peptide", @"Short peptide present at the N-terminus of a newly synthesized protein that helps the protein through the membrane of its destination organelle.", false));
            TermData.Add(CVID.PEFF_Conflict, new TermInfo(CVID.PEFF_Conflict, @"MS", @"PEFF:0001023", @"Conflict", @"PEFF keyword for the sequence conflict; a UniProtKB term.", false));
            TermData.Add(CVID.PEFF_Crc64, new TermInfo(CVID.PEFF_Crc64, @"MS", @"PEFF:0001024", @"Crc64", @"PEFF keyword for the Sequence checksum in crc64.", false));
            TermData.Add(CVID.PEFF_Domain, new TermInfo(CVID.PEFF_Domain, @"MS", @"PEFF:0001025", @"Domain", @"PEFF keyword for the sequence range of a domain.", false));
            TermData.Add(CVID.PEFF_ID, new TermInfo(CVID.PEFF_ID, @"MS", @"PEFF:0001026", @"ID", @"PEFF keyword for the UniProtKB specific Protein identifier ID; a UniProtKB term.", false));
            TermData.Add(CVID.PEFF_ModResUnimod, new TermInfo(CVID.PEFF_ModResUnimod, @"MS", @"PEFF:0001027", @"ModResUnimod", @"PEFF keyword for the modified residue with UniMod identifier.", false));
            TermData.Add(CVID.PEFF_VariantSimple, new TermInfo(CVID.PEFF_VariantSimple, @"MS", @"PEFF:0001028", @"VariantSimple", @"PEFF keyword for the simple sequence variation of a single amino acid change. A change to a stop codon is permitted with a * symbol. More complex variations must be encoded with the VariantComplex term.", false));
            TermData.Add(CVID.PEFF_VariantComplex, new TermInfo(CVID.PEFF_VariantComplex, @"MS", @"PEFF:0001029", @"VariantComplex", @"PEFF keyword for a sequence variation that is more complex than a single amino acid change or change to a stop codon.", false));
            TermData.Add(CVID.PEFF_Proteoform, new TermInfo(CVID.PEFF_Proteoform, @"MS", @"PEFF:0001030", @"Proteoform", @"PEFF keyword for the proteoforms of this protein, constructed as a set of annotation identifiers.", false));
            TermData.Add(CVID.PEFF_DisulfideBond, new TermInfo(CVID.PEFF_DisulfideBond, @"MS", @"PEFF:0001031", @"DisulfideBond", @"PEFF keyword for the disulfide bonds in this protein, constructed as a sets of annotation identifiers of two half-cystine modifications.", false));
            TermData.Add(CVID.PEFF_PEFF_molecule_processing_keyword, new TermInfo(CVID.PEFF_PEFF_molecule_processing_keyword, @"MS", @"PEFF:0001032", @"PEFF molecule processing keyword", @"PEFF keyword describing the type of processing event being described.", false));
            TermData.Add(CVID.PEFF_Comment, new TermInfo(CVID.PEFF_Comment, @"MS", @"PEFF:0001033", @"Comment", @"PEFF keyword for the individual protein entry comment. It is discouraged to put parsable information here. This is only for free-text commentary.", false));
            TermData.Add(CVID.PEFF_propeptide, new TermInfo(CVID.PEFF_propeptide, @"MS", @"PEFF:0001034", @"propeptide", @"Short peptide that is cleaved off a newly synthesized protein and generally immediately degraded in the process of protein maturation, and is not a signal peptide or transit peptide.", false));
            TermData.Add(CVID.PEFF_initiator_methionine, new TermInfo(CVID.PEFF_initiator_methionine, @"MS", @"PEFF:0001035", @"initiator methionine", @"N-terminal methionine residue of a protein that can be co-translationally cleaved.", false));
            TermData.Add(CVID.PEFF_regular_expression_for_a_value_in_a_key_value_pair_of_a_PEFF_description_line_describing_one_sequence_position_followed_by_one_PEFF_term_name_and_one_optional_comment, new TermInfo(CVID.PEFF_regular_expression_for_a_value_in_a_key_value_pair_of_a_PEFF_description_line_describing_one_sequence_position_followed_by_one_PEFF_term_name_and_one_optional_comment, @"MS", @"PEFF:1002001", @"regular expression for a value in a key-value pair of a PEFF description line describing one sequence position followed by one PEFF term name and one optional comment", @"(", false));
            TermData.Add(CVID.PEFF_regular_expression_for_PEFF_molecular_sequence_type, new TermInfo(CVID.PEFF_regular_expression_for_PEFF_molecular_sequence_type, @"MS", @"PEFF:1002002", @"regular expression for PEFF molecular sequence type", @"(AA|NA|DNA|cDNA|RNA|RNAi|tRNA|rRNA|siRNA|mDNA|mRNA|snoRNA|ncRNA|EST|", false));
            TermData.Add(CVID.PEFF_regular_expression_for_PEFF_sequence_status, new TermInfo(CVID.PEFF_regular_expression_for_PEFF_sequence_status, @"MS", @"PEFF:1002003", @"regular expression for PEFF sequence status", @"(Complete|Fragment|", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 1</summary>
        private static void PopulateTermData_UNIMOD_Part1()
        {
            TermData.Add(CVID.UNIMOD_unimod_root_node, new TermInfo(CVID.UNIMOD_unimod_root_node, @"UNIMOD", @"UNIMOD:0", @"unimod root node", @"The root node of the unimod modifications ontology.", false));
            TermData.Add(CVID.UNIMOD_Acetyl, new TermInfo(CVID.UNIMOD_Acetyl, @"UNIMOD", @"UNIMOD:1", @"Acetyl", @"Acetylation.", false));
            TermData.Add(CVID.UNIMOD_Amidated, new TermInfo(CVID.UNIMOD_Amidated, @"UNIMOD", @"UNIMOD:2", @"Amidated", @"Amidation.", false));
            TermData.Add(CVID.UNIMOD_Biotin, new TermInfo(CVID.UNIMOD_Biotin, @"UNIMOD", @"UNIMOD:3", @"Biotin", @"Biotinylation.", false));
            TermData.Add(CVID.UNIMOD_Carbamidomethyl, new TermInfo(CVID.UNIMOD_Carbamidomethyl, @"UNIMOD", @"UNIMOD:4", @"Carbamidomethyl", @"Iodoacetamide derivative.", false));
            TermData.Add(CVID.UNIMOD_Carbamyl, new TermInfo(CVID.UNIMOD_Carbamyl, @"UNIMOD", @"UNIMOD:5", @"Carbamyl", @"Carbamylation.", false));
            TermData.Add(CVID.UNIMOD_Carboxymethyl, new TermInfo(CVID.UNIMOD_Carboxymethyl, @"UNIMOD", @"UNIMOD:6", @"Carboxymethyl", @"Iodoacetic acid derivative.", false));
            TermData.Add(CVID.UNIMOD_Deamidated, new TermInfo(CVID.UNIMOD_Deamidated, @"UNIMOD", @"UNIMOD:7", @"Deamidated", @"Deamidation.", false));
            TermData.Add(CVID.UNIMOD_ICAT_G, new TermInfo(CVID.UNIMOD_ICAT_G, @"UNIMOD", @"UNIMOD:8", @"ICAT-G", @"Gygi ICAT(TM) d0.", false));
            TermData.Add(CVID.UNIMOD_ICAT_G_2H_8_, new TermInfo(CVID.UNIMOD_ICAT_G_2H_8_, @"UNIMOD", @"UNIMOD:9", @"ICAT-G:2H(8)", @"Gygi ICAT(TM) d8.", false));
            TermData.Add(CVID.UNIMOD_Met__Hse, new TermInfo(CVID.UNIMOD_Met__Hse, @"UNIMOD", @"UNIMOD:10", @"Met->Hse", @"Homoserine.", false));
            TermData.Add(CVID.UNIMOD_Met__Hsl, new TermInfo(CVID.UNIMOD_Met__Hsl, @"UNIMOD", @"UNIMOD:11", @"Met->Hsl", @"Homoserine lactone.", false));
            TermData.Add(CVID.UNIMOD_ICAT_D_2H_8_, new TermInfo(CVID.UNIMOD_ICAT_D_2H_8_, @"UNIMOD", @"UNIMOD:12", @"ICAT-D:2H(8)", @"Applied Biosystems original ICAT(TM) d8.", false));
            TermData.Add(CVID.UNIMOD_ICAT_D, new TermInfo(CVID.UNIMOD_ICAT_D, @"UNIMOD", @"UNIMOD:13", @"ICAT-D", @"Applied Biosystems original ICAT(TM) d0.", false));
            TermData.Add(CVID.UNIMOD_NIPCAM, new TermInfo(CVID.UNIMOD_NIPCAM, @"UNIMOD", @"UNIMOD:17", @"NIPCAM", @"N-isopropylcarboxamidomethyl.", false));
            TermData.Add(CVID.UNIMOD_PEO_Iodoacetyl_LC_Biotin, new TermInfo(CVID.UNIMOD_PEO_Iodoacetyl_LC_Biotin, @"UNIMOD", @"UNIMOD:20", @"PEO-Iodoacetyl-LC-Biotin", @"Biotinyl-iodoacetamidyl-3,6-dioxaoctanediamine.", false));
            TermData.Add(CVID.UNIMOD_Phospho, new TermInfo(CVID.UNIMOD_Phospho, @"UNIMOD", @"UNIMOD:21", @"Phospho", @"Phosphorylation.", false));
            TermData.Add(CVID.UNIMOD_Dehydrated, new TermInfo(CVID.UNIMOD_Dehydrated, @"UNIMOD", @"UNIMOD:23", @"Dehydrated", @"Dehydration.", false));
            TermData.Add(CVID.UNIMOD_Propionamide, new TermInfo(CVID.UNIMOD_Propionamide, @"UNIMOD", @"UNIMOD:24", @"Propionamide", @"Acrylamide adduct.", false));
            TermData.Add(CVID.UNIMOD_Pyridylacetyl, new TermInfo(CVID.UNIMOD_Pyridylacetyl, @"UNIMOD", @"UNIMOD:25", @"Pyridylacetyl", @"Pyridylacetyl.", false));
            TermData.Add(CVID.UNIMOD_Pyro_carbamidomethyl, new TermInfo(CVID.UNIMOD_Pyro_carbamidomethyl, @"UNIMOD", @"UNIMOD:26", @"Pyro-carbamidomethyl", @"S-carbamoylmethylcysteine cyclization (N-terminus).", false));
            TermData.Add(CVID.UNIMOD_Glu__pyro_Glu, new TermInfo(CVID.UNIMOD_Glu__pyro_Glu, @"UNIMOD", @"UNIMOD:27", @"Glu->pyro-Glu", @"Pyro-glu from E.", false));
            TermData.Add(CVID.UNIMOD_Gln__pyro_Glu, new TermInfo(CVID.UNIMOD_Gln__pyro_Glu, @"UNIMOD", @"UNIMOD:28", @"Gln->pyro-Glu", @"Pyro-glu from Q.", false));
            TermData.Add(CVID.UNIMOD_SMA, new TermInfo(CVID.UNIMOD_SMA, @"UNIMOD", @"UNIMOD:29", @"SMA", @"N-Succinimidyl-2-morpholine acetate.", false));
            TermData.Add(CVID.UNIMOD_Cation_Na, new TermInfo(CVID.UNIMOD_Cation_Na, @"UNIMOD", @"UNIMOD:30", @"Cation:Na", @"Sodium adduct.", false));
            TermData.Add(CVID.UNIMOD_Pyridylethyl, new TermInfo(CVID.UNIMOD_Pyridylethyl, @"UNIMOD", @"UNIMOD:31", @"Pyridylethyl", @"S-pyridylethylation.", false));
            TermData.Add(CVID.UNIMOD_Methyl, new TermInfo(CVID.UNIMOD_Methyl, @"UNIMOD", @"UNIMOD:34", @"Methyl", @"Methylation.", false));
            TermData.Add(CVID.UNIMOD_Oxidation, new TermInfo(CVID.UNIMOD_Oxidation, @"UNIMOD", @"UNIMOD:35", @"Oxidation", @"Oxidation or Hydroxylation.", false));
            TermData.Add(CVID.UNIMOD_Dimethyl, new TermInfo(CVID.UNIMOD_Dimethyl, @"UNIMOD", @"UNIMOD:36", @"Dimethyl", @"Di-Methylation.", false));
            TermData.Add(CVID.UNIMOD_Trimethyl, new TermInfo(CVID.UNIMOD_Trimethyl, @"UNIMOD", @"UNIMOD:37", @"Trimethyl", @"Tri-Methylation.", false));
            TermData.Add(CVID.UNIMOD_Methylthio, new TermInfo(CVID.UNIMOD_Methylthio, @"UNIMOD", @"UNIMOD:39", @"Methylthio", @"Beta-methylthiolation.", false));
            TermData.Add(CVID.UNIMOD_Sulfo, new TermInfo(CVID.UNIMOD_Sulfo, @"UNIMOD", @"UNIMOD:40", @"Sulfo", @"O-Sulfonation.", false));
            TermData.Add(CVID.UNIMOD_Hex, new TermInfo(CVID.UNIMOD_Hex, @"UNIMOD", @"UNIMOD:41", @"Hex", @"Hexose.", false));
            TermData.Add(CVID.UNIMOD_Lipoyl, new TermInfo(CVID.UNIMOD_Lipoyl, @"UNIMOD", @"UNIMOD:42", @"Lipoyl", @"Lipoyl.", false));
            TermData.Add(CVID.UNIMOD_HexNAc, new TermInfo(CVID.UNIMOD_HexNAc, @"UNIMOD", @"UNIMOD:43", @"HexNAc", @"N-Acetylhexosamine.", false));
            TermData.Add(CVID.UNIMOD_Farnesyl, new TermInfo(CVID.UNIMOD_Farnesyl, @"UNIMOD", @"UNIMOD:44", @"Farnesyl", @"Farnesylation.", false));
            TermData.Add(CVID.UNIMOD_Myristoyl, new TermInfo(CVID.UNIMOD_Myristoyl, @"UNIMOD", @"UNIMOD:45", @"Myristoyl", @"Myristoylation.", false));
            TermData.Add(CVID.UNIMOD_PyridoxalPhosphate, new TermInfo(CVID.UNIMOD_PyridoxalPhosphate, @"UNIMOD", @"UNIMOD:46", @"PyridoxalPhosphate", @"Pyridoxal phosphate.", false));
            TermData.Add(CVID.UNIMOD_Palmitoyl, new TermInfo(CVID.UNIMOD_Palmitoyl, @"UNIMOD", @"UNIMOD:47", @"Palmitoyl", @"Palmitoylation.", false));
            TermData.Add(CVID.UNIMOD_GeranylGeranyl, new TermInfo(CVID.UNIMOD_GeranylGeranyl, @"UNIMOD", @"UNIMOD:48", @"GeranylGeranyl", @"Geranyl-geranyl.", false));
            TermData.Add(CVID.UNIMOD_Phosphopantetheine, new TermInfo(CVID.UNIMOD_Phosphopantetheine, @"UNIMOD", @"UNIMOD:49", @"Phosphopantetheine", @"Phosphopantetheine.", false));
            TermData.Add(CVID.UNIMOD_FAD, new TermInfo(CVID.UNIMOD_FAD, @"UNIMOD", @"UNIMOD:50", @"FAD", @"Flavin adenine dinucleotide.", false));
            TermData.Add(CVID.UNIMOD_Tripalmitate, new TermInfo(CVID.UNIMOD_Tripalmitate, @"UNIMOD", @"UNIMOD:51", @"Tripalmitate", @"N-acyl diglyceride cysteine.", false));
            TermData.Add(CVID.UNIMOD_Guanidinyl, new TermInfo(CVID.UNIMOD_Guanidinyl, @"UNIMOD", @"UNIMOD:52", @"Guanidinyl", @"Guanidination.", false));
            TermData.Add(CVID.UNIMOD_HNE, new TermInfo(CVID.UNIMOD_HNE, @"UNIMOD", @"UNIMOD:53", @"HNE", @"4-hydroxynonenal (HNE).", false));
            TermData.Add(CVID.UNIMOD_Glucuronyl, new TermInfo(CVID.UNIMOD_Glucuronyl, @"UNIMOD", @"UNIMOD:54", @"Glucuronyl", @"Hexuronic acid.", false));
            TermData.Add(CVID.UNIMOD_Glutathione, new TermInfo(CVID.UNIMOD_Glutathione, @"UNIMOD", @"UNIMOD:55", @"Glutathione", @"Glutathione disulfide.", false));
            TermData.Add(CVID.UNIMOD_Acetyl_2H_3_, new TermInfo(CVID.UNIMOD_Acetyl_2H_3_, @"UNIMOD", @"UNIMOD:56", @"Acetyl:2H(3)", @"Acetate labeling reagent (N-term & K) (heavy form, +3amu).", false));
            TermData.Add(CVID.UNIMOD_Propionyl, new TermInfo(CVID.UNIMOD_Propionyl, @"UNIMOD", @"UNIMOD:58", @"Propionyl", @"Propionate labeling reagent light form (N-term & K).", false));
            TermData.Add(CVID.UNIMOD_Propionyl_13C_3_, new TermInfo(CVID.UNIMOD_Propionyl_13C_3_, @"UNIMOD", @"UNIMOD:59", @"Propionyl:13C(3)", @"Propionate labeling reagent heavy form (+3amu), N-term & K.", false));
            TermData.Add(CVID.UNIMOD_GIST_Quat, new TermInfo(CVID.UNIMOD_GIST_Quat, @"UNIMOD", @"UNIMOD:60", @"GIST-Quat", @"Quaternary amine labeling reagent light form (N-term & K).", false));
            TermData.Add(CVID.UNIMOD_GIST_Quat_2H_3_, new TermInfo(CVID.UNIMOD_GIST_Quat_2H_3_, @"UNIMOD", @"UNIMOD:61", @"GIST-Quat:2H(3)", @"Quaternary amine labeling reagent heavy (+3amu) form, N-term & K.", false));
            TermData.Add(CVID.UNIMOD_GIST_Quat_2H_6_, new TermInfo(CVID.UNIMOD_GIST_Quat_2H_6_, @"UNIMOD", @"UNIMOD:62", @"GIST-Quat:2H(6)", @"Quaternary amine labeling reagent heavy form (+6amu), N-term & K.", false));
            TermData.Add(CVID.UNIMOD_GIST_Quat_2H_9_, new TermInfo(CVID.UNIMOD_GIST_Quat_2H_9_, @"UNIMOD", @"UNIMOD:63", @"GIST-Quat:2H(9)", @"Quaternary amine labeling reagent heavy form (+9amu), N-term & K.", false));
            TermData.Add(CVID.UNIMOD_Succinyl, new TermInfo(CVID.UNIMOD_Succinyl, @"UNIMOD", @"UNIMOD:64", @"Succinyl", @"Succinic anhydride labeling reagent light form (N-term & K).", false));
            TermData.Add(CVID.UNIMOD_Succinyl_2H_4_, new TermInfo(CVID.UNIMOD_Succinyl_2H_4_, @"UNIMOD", @"UNIMOD:65", @"Succinyl:2H(4)", @"Succinic anhydride labeling reagent, heavy form (+4amu, 4H2), N-term & K.", false));
            TermData.Add(CVID.UNIMOD_Succinyl_13C_4_, new TermInfo(CVID.UNIMOD_Succinyl_13C_4_, @"UNIMOD", @"UNIMOD:66", @"Succinyl:13C(4)", @"Succinic anhydride labeling reagent, heavy form (+4amu, 4C13), N-term & K.", false));
            TermData.Add(CVID.UNIMOD_Iminobiotin, new TermInfo(CVID.UNIMOD_Iminobiotin, @"UNIMOD", @"UNIMOD:89", @"Iminobiotin", @"Iminobiotinylation.", false));
            TermData.Add(CVID.UNIMOD_ESP, new TermInfo(CVID.UNIMOD_ESP, @"UNIMOD", @"UNIMOD:90", @"ESP", @"ESP-Tag light d0.", false));
            TermData.Add(CVID.UNIMOD_ESP_2H_10_, new TermInfo(CVID.UNIMOD_ESP_2H_10_, @"UNIMOD", @"UNIMOD:91", @"ESP:2H(10)", @"ESP-Tag heavy d10.", false));
            TermData.Add(CVID.UNIMOD_NHS_LC_Biotin, new TermInfo(CVID.UNIMOD_NHS_LC_Biotin, @"UNIMOD", @"UNIMOD:92", @"NHS-LC-Biotin", @"NHS-LC-Biotin.", false));
            TermData.Add(CVID.UNIMOD_EDT_maleimide_PEO_biotin, new TermInfo(CVID.UNIMOD_EDT_maleimide_PEO_biotin, @"UNIMOD", @"UNIMOD:93", @"EDT-maleimide-PEO-biotin", @"EDT-maleimide-PEO-biotin.", false));
            TermData.Add(CVID.UNIMOD_IMID, new TermInfo(CVID.UNIMOD_IMID, @"UNIMOD", @"UNIMOD:94", @"IMID", @"IMID d0.", false));
            TermData.Add(CVID.UNIMOD_IMID_2H_4_, new TermInfo(CVID.UNIMOD_IMID_2H_4_, @"UNIMOD", @"UNIMOD:95", @"IMID:2H(4)", @"IMID d4.", false));
            TermData.Add(CVID.UNIMOD_Propionamide_2H_3_, new TermInfo(CVID.UNIMOD_Propionamide_2H_3_, @"UNIMOD", @"UNIMOD:97", @"Propionamide:2H(3)", @"Acrylamide d3.", false));
            TermData.Add(CVID.UNIMOD_ICAT_C, new TermInfo(CVID.UNIMOD_ICAT_C, @"UNIMOD", @"UNIMOD:105", @"ICAT-C", @"Applied Biosystems cleavable ICAT(TM) light.", false));
            TermData.Add(CVID.UNIMOD_ICAT_C_13C_9_, new TermInfo(CVID.UNIMOD_ICAT_C_13C_9_, @"UNIMOD", @"UNIMOD:106", @"ICAT-C:13C(9)", @"Applied Biosystems cleavable ICAT(TM) heavy.", false));
            TermData.Add(CVID.UNIMOD_FormylMet, new TermInfo(CVID.UNIMOD_FormylMet, @"UNIMOD", @"UNIMOD:107", @"FormylMet", @"Addition of N-formyl met.", false));
            TermData.Add(CVID.UNIMOD_Nethylmaleimide, new TermInfo(CVID.UNIMOD_Nethylmaleimide, @"UNIMOD", @"UNIMOD:108", @"Nethylmaleimide", @"N-ethylmaleimide on cysteines.", false));
            TermData.Add(CVID.UNIMOD_OxLysBiotinRed, new TermInfo(CVID.UNIMOD_OxLysBiotinRed, @"UNIMOD", @"UNIMOD:112", @"OxLysBiotinRed", @"Oxidized lysine biotinylated with biotin-LC-hydrazide, reduced.", false));
            TermData.Add(CVID.UNIMOD_OxLysBiotin, new TermInfo(CVID.UNIMOD_OxLysBiotin, @"UNIMOD", @"UNIMOD:113", @"OxLysBiotin", @"Oxidized lysine biotinylated with biotin-LC-hydrazide.", false));
            TermData.Add(CVID.UNIMOD_OxProBiotinRed, new TermInfo(CVID.UNIMOD_OxProBiotinRed, @"UNIMOD", @"UNIMOD:114", @"OxProBiotinRed", @"Oxidized proline biotinylated with biotin-LC-hydrazide, reduced.", false));
            TermData.Add(CVID.UNIMOD_OxProBiotin, new TermInfo(CVID.UNIMOD_OxProBiotin, @"UNIMOD", @"UNIMOD:115", @"OxProBiotin", @"Oxidized Proline biotinylated with biotin-LC-hydrazide.", false));
            TermData.Add(CVID.UNIMOD_OxArgBiotin, new TermInfo(CVID.UNIMOD_OxArgBiotin, @"UNIMOD", @"UNIMOD:116", @"OxArgBiotin", @"Oxidized arginine biotinylated with biotin-LC-hydrazide.", false));
            TermData.Add(CVID.UNIMOD_OxArgBiotinRed, new TermInfo(CVID.UNIMOD_OxArgBiotinRed, @"UNIMOD", @"UNIMOD:117", @"OxArgBiotinRed", @"Oxidized arginine biotinylated with biotin-LC-hydrazide, reduced.", false));
            TermData.Add(CVID.UNIMOD_EDT_iodoacetyl_PEO_biotin, new TermInfo(CVID.UNIMOD_EDT_iodoacetyl_PEO_biotin, @"UNIMOD", @"UNIMOD:118", @"EDT-iodoacetyl-PEO-biotin", @"EDT-iodo-PEO-biotin.", false));
            TermData.Add(CVID.UNIMOD_IBTP, new TermInfo(CVID.UNIMOD_IBTP, @"UNIMOD", @"UNIMOD:119", @"IBTP", @"Thio Ether Formation - BTP Adduct.", false));
            TermData.Add(CVID.UNIMOD_GG, new TermInfo(CVID.UNIMOD_GG, @"UNIMOD", @"UNIMOD:121", @"GG", @"Ubiquitinylation residue.", false));
            TermData.Add(CVID.UNIMOD_Formyl, new TermInfo(CVID.UNIMOD_Formyl, @"UNIMOD", @"UNIMOD:122", @"Formyl", @"Formylation.", false));
            TermData.Add(CVID.UNIMOD_ICAT_H, new TermInfo(CVID.UNIMOD_ICAT_H, @"UNIMOD", @"UNIMOD:123", @"ICAT-H", @"N-iodoacetyl, p-chlorobenzyl-12C6-glucamine.", false));
            TermData.Add(CVID.UNIMOD_ICAT_H_13C_6_, new TermInfo(CVID.UNIMOD_ICAT_H_13C_6_, @"UNIMOD", @"UNIMOD:124", @"ICAT-H:13C(6)", @"N-iodoacetyl, p-chlorobenzyl-13C6-glucamine.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DTSSP_88_, new TermInfo(CVID.UNIMOD_Xlink_DTSSP_88_, @"UNIMOD", @"UNIMOD:126", @"Xlink:DTSSP[88]", @"Cleaved and reduced DSP/DTSSP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Fluoro, new TermInfo(CVID.UNIMOD_Fluoro, @"UNIMOD", @"UNIMOD:127", @"Fluoro", @"Fluorination.", false));
            TermData.Add(CVID.UNIMOD_Fluorescein, new TermInfo(CVID.UNIMOD_Fluorescein, @"UNIMOD", @"UNIMOD:128", @"Fluorescein", @"5-Iodoacetamidofluorescein (Molecular Probe, Eugene, OR).", false));
            TermData.Add(CVID.UNIMOD_Iodo, new TermInfo(CVID.UNIMOD_Iodo, @"UNIMOD", @"UNIMOD:129", @"Iodo", @"Iodination.", false));
            TermData.Add(CVID.UNIMOD_Diiodo, new TermInfo(CVID.UNIMOD_Diiodo, @"UNIMOD", @"UNIMOD:130", @"Diiodo", @"Di-Iodination.", false));
            TermData.Add(CVID.UNIMOD_Triiodo, new TermInfo(CVID.UNIMOD_Triiodo, @"UNIMOD", @"UNIMOD:131", @"Triiodo", @"Tri-Iodination.", false));
            TermData.Add(CVID.UNIMOD_Myristoleyl, new TermInfo(CVID.UNIMOD_Myristoleyl, @"UNIMOD", @"UNIMOD:134", @"Myristoleyl", @"(cis-delta 5)-tetradecaenoyl.", false));
            TermData.Add(CVID.UNIMOD_Myristoyl_Delta_H__4_, new TermInfo(CVID.UNIMOD_Myristoyl_Delta_H__4_, @"UNIMOD", @"UNIMOD:135", @"Myristoyl+Delta:H(-4)", @"(cis,cis-delta 5, delta 8)-tetradecadienoyl.", false));
            TermData.Add(CVID.UNIMOD_Benzoyl, new TermInfo(CVID.UNIMOD_Benzoyl, @"UNIMOD", @"UNIMOD:136", @"Benzoyl", @"Labeling reagent light form (N-term & K).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_2_, @"UNIMOD", @"UNIMOD:137", @"Hex(5)HexNAc(2)", @"N-linked glycan core.", false));
            TermData.Add(CVID.UNIMOD_Dansyl, new TermInfo(CVID.UNIMOD_Dansyl, @"UNIMOD", @"UNIMOD:139", @"Dansyl", @"5-dimethylaminonaphthalene-1-sulfonyl.", false));
            TermData.Add(CVID.UNIMOD_a_type_ion, new TermInfo(CVID.UNIMOD_a_type_ion, @"UNIMOD", @"UNIMOD:140", @"a-type-ion", @"ISD a-series (C-Term).", false));
            TermData.Add(CVID.UNIMOD_Amidine, new TermInfo(CVID.UNIMOD_Amidine, @"UNIMOD", @"UNIMOD:141", @"Amidine", @"Amidination of lysines or N-terminal amines with methyl acetimidate.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_dHex_1_, new TermInfo(CVID.UNIMOD_HexNAc_1_dHex_1_, @"UNIMOD", @"UNIMOD:142", @"HexNAc(1)dHex(1)", @"HexNAc1dHex1.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_, new TermInfo(CVID.UNIMOD_HexNAc_2_, @"UNIMOD", @"UNIMOD:143", @"HexNAc(2)", @"HexNAc2.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_, new TermInfo(CVID.UNIMOD_Hex_3_, @"UNIMOD", @"UNIMOD:144", @"Hex(3)", @"Hex3.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_dHex_2_, new TermInfo(CVID.UNIMOD_HexNAc_1_dHex_2_, @"UNIMOD", @"UNIMOD:145", @"HexNAc(1)dHex(2)", @"HexNAc1dHex2.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_, @"UNIMOD", @"UNIMOD:146", @"Hex(1)HexNAc(1)dHex(1)", @"Hex1HexNAc1dHex1.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_dHex_1_, new TermInfo(CVID.UNIMOD_HexNAc_2_dHex_1_, @"UNIMOD", @"UNIMOD:147", @"HexNAc(2)dHex(1)", @"HexNAc2dHex1.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_, @"UNIMOD", @"UNIMOD:148", @"Hex(1)HexNAc(2)", @"Hex1HexNAc2.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_, @"UNIMOD", @"UNIMOD:149", @"Hex(1)HexNAc(1)NeuAc(1)", @"Hex1HexNAc1NeuAc1.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_dHex_2_, new TermInfo(CVID.UNIMOD_HexNAc_2_dHex_2_, @"UNIMOD", @"UNIMOD:150", @"HexNAc(2)dHex(2)", @"HexNAc2dHex2.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:151", @"Hex(1)HexNAc(2)Pent(1)", @"Hex1HexNAc2Pent1.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_, @"UNIMOD", @"UNIMOD:152", @"Hex(1)HexNAc(2)dHex(1)", @"Hex1HexNAc2dHex1.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_, @"UNIMOD", @"UNIMOD:153", @"Hex(2)HexNAc(2)", @"Hex2HexNAc2.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_1_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_1_Pent_1_, @"UNIMOD", @"UNIMOD:154", @"Hex(3)HexNAc(1)Pent(1)", @"Hex3HexNAc1Pent1.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_Pent_1_, @"UNIMOD", @"UNIMOD:155", @"Hex(1)HexNAc(2)dHex(1)Pent(1)", @"Hex1HexNAc2dHex1Pent1.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_2_, @"UNIMOD", @"UNIMOD:156", @"Hex(1)HexNAc(2)dHex(2)", @"Hex1HexNAc2dHex2.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:157", @"Hex(2)HexNAc(2)Pent(1)", @"Hex2HexNAc2Pent1.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_dHex_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_dHex_1_, @"UNIMOD", @"UNIMOD:158", @"Hex(2)HexNAc(2)dHex(1)", @"Hex2HexNAc2dHex1.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_2_, @"UNIMOD", @"UNIMOD:159", @"Hex(3)HexNAc(2)", @"Hex3HexNAc2.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_, @"UNIMOD", @"UNIMOD:160", @"Hex(1)HexNAc(1)NeuAc(2)", @"Hex HexNAc NeuAc(2) ---OR--- Hex HexNAc(3) HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_2_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_2_Phos_1_, @"UNIMOD", @"UNIMOD:161", @"Hex(3)HexNAc(2)Phos(1)", @"Hex(3) HexNAc(2) Phos.", false));
            TermData.Add(CVID.UNIMOD_Delta_S__1_Se_1_, new TermInfo(CVID.UNIMOD_Delta_S__1_Se_1_, @"UNIMOD", @"UNIMOD:162", @"Delta:S(-1)Se(1)", @"Selenium replaces sulfur.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_1_N__1_18O_1_, new TermInfo(CVID.UNIMOD_Delta_H_1_N__1_18O_1_, @"UNIMOD", @"UNIMOD:170", @"Delta:H(1)N(-1)18O(1)", @"Glycosylated asparagine 18O labeling.", false));
            TermData.Add(CVID.UNIMOD_NBS_13C_6_, new TermInfo(CVID.UNIMOD_NBS_13C_6_, @"UNIMOD", @"UNIMOD:171", @"NBS:13C(6)", @"Shimadzu NBS-13C.", false));
            TermData.Add(CVID.UNIMOD_NBS, new TermInfo(CVID.UNIMOD_NBS, @"UNIMOD", @"UNIMOD:172", @"NBS", @"Shimadzu NBS-12C.", false));
            TermData.Add(CVID.UNIMOD_BHT, new TermInfo(CVID.UNIMOD_BHT, @"UNIMOD", @"UNIMOD:176", @"BHT", @"Michael addition of BHT quinone methide to Cysteine and Lysine.", false));
            TermData.Add(CVID.UNIMOD_DAET, new TermInfo(CVID.UNIMOD_DAET, @"UNIMOD", @"UNIMOD:178", @"DAET", @"Phosphorylation to amine thiol.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_9_, new TermInfo(CVID.UNIMOD_Label_13C_9_, @"UNIMOD", @"UNIMOD:184", @"Label:13C(9)", @"13C(9) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_9__Phospho, new TermInfo(CVID.UNIMOD_Label_13C_9__Phospho, @"UNIMOD", @"UNIMOD:185", @"Label:13C(9)+Phospho", @"C13 label (Phosphotyrosine).", false));
            TermData.Add(CVID.UNIMOD_HPG, new TermInfo(CVID.UNIMOD_HPG, @"UNIMOD", @"UNIMOD:186", @"HPG", @"Hydroxyphenylglyoxal arginine.", false));
            TermData.Add(CVID.UNIMOD_2HPG, new TermInfo(CVID.UNIMOD_2HPG, @"UNIMOD", @"UNIMOD:187", @"2HPG", @"Bis(hydroxphenylglyoxal) arginine.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_, new TermInfo(CVID.UNIMOD_Label_13C_6_, @"UNIMOD", @"UNIMOD:188", @"Label:13C(6)", @"13C(6) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_18O_2_, new TermInfo(CVID.UNIMOD_Label_18O_2_, @"UNIMOD", @"UNIMOD:193", @"Label:18O(2)", @"O18 label at both C-terminal oxygens.", false));
            TermData.Add(CVID.UNIMOD_AccQTag, new TermInfo(CVID.UNIMOD_AccQTag, @"UNIMOD", @"UNIMOD:194", @"AccQTag", @"6-aminoquinolyl-N-hydroxysuccinimidyl carbamate.", false));
            TermData.Add(CVID.UNIMOD_QAT, new TermInfo(CVID.UNIMOD_QAT, @"UNIMOD", @"UNIMOD:195", @"QAT", @"APTA-d0.", false));
            TermData.Add(CVID.UNIMOD_QAT_2H_3_, new TermInfo(CVID.UNIMOD_QAT_2H_3_, @"UNIMOD", @"UNIMOD:196", @"QAT:2H(3)", @"APTA d3.", false));
            TermData.Add(CVID.UNIMOD_EQAT, new TermInfo(CVID.UNIMOD_EQAT, @"UNIMOD", @"UNIMOD:197", @"EQAT", @"EAPTA d0.", false));
            TermData.Add(CVID.UNIMOD_EQAT_2H_5_, new TermInfo(CVID.UNIMOD_EQAT_2H_5_, @"UNIMOD", @"UNIMOD:198", @"EQAT:2H(5)", @"EAPTA d5.", false));
            TermData.Add(CVID.UNIMOD_Dimethyl_2H_4_, new TermInfo(CVID.UNIMOD_Dimethyl_2H_4_, @"UNIMOD", @"UNIMOD:199", @"Dimethyl:2H(4)", @"DiMethyl-CHD2.", false));
            TermData.Add(CVID.UNIMOD_Ethanedithiol, new TermInfo(CVID.UNIMOD_Ethanedithiol, @"UNIMOD", @"UNIMOD:200", @"Ethanedithiol", @"EDT.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_6_C_6_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_6_C_6_O_1_, @"UNIMOD", @"UNIMOD:205", @"Delta:H(6)C(6)O(1)", @"Acrolein addition +94.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_3_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_3_O_1_, @"UNIMOD", @"UNIMOD:206", @"Delta:H(4)C(3)O(1)", @"Acrolein addition +56.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_2_C_3_, new TermInfo(CVID.UNIMOD_Delta_H_2_C_3_, @"UNIMOD", @"UNIMOD:207", @"Delta:H(2)C(3)", @"Acrolein addition +38.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_6_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_6_, @"UNIMOD", @"UNIMOD:208", @"Delta:H(4)C(6)", @"Acrolein addition +76.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_8_C_6_O_2_, new TermInfo(CVID.UNIMOD_Delta_H_8_C_6_O_2_, @"UNIMOD", @"UNIMOD:209", @"Delta:H(8)C(6)O(2)", @"Acrolein addition +112.", false));
            TermData.Add(CVID.UNIMOD_NEIAA, new TermInfo(CVID.UNIMOD_NEIAA, @"UNIMOD", @"UNIMOD:211", @"NEIAA", @"N-ethyl iodoacetamide-d0.", false));
            TermData.Add(CVID.UNIMOD_NEIAA_2H_5_, new TermInfo(CVID.UNIMOD_NEIAA_2H_5_, @"UNIMOD", @"UNIMOD:212", @"NEIAA:2H(5)", @"N-ethyl iodoacetamide-d5.", false));
            TermData.Add(CVID.UNIMOD_ADP_Ribosyl, new TermInfo(CVID.UNIMOD_ADP_Ribosyl, @"UNIMOD", @"UNIMOD:213", @"ADP-Ribosyl", @"ADP Ribose addition.", false));
            TermData.Add(CVID.UNIMOD_iTRAQ4plex, new TermInfo(CVID.UNIMOD_iTRAQ4plex, @"UNIMOD", @"UNIMOD:214", @"iTRAQ4plex", @"Representative mass and accurate mass for 116 & 117.", false));
            TermData.Add(CVID.UNIMOD_IGBP, new TermInfo(CVID.UNIMOD_IGBP, @"UNIMOD", @"UNIMOD:243", @"IGBP", @"Light IDBEST tag for quantitation.", false));
            TermData.Add(CVID.UNIMOD_Crotonaldehyde, new TermInfo(CVID.UNIMOD_Crotonaldehyde, @"UNIMOD", @"UNIMOD:253", @"Crotonaldehyde", @"Crotonaldehyde.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_2_C_2_, new TermInfo(CVID.UNIMOD_Delta_H_2_C_2_, @"UNIMOD", @"UNIMOD:254", @"Delta:H(2)C(2)", @"Acetaldehyde +26.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_2_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_2_, @"UNIMOD", @"UNIMOD:255", @"Delta:H(4)C(2)", @"Acetaldehyde +28.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_3_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_3_, @"UNIMOD", @"UNIMOD:256", @"Delta:H(4)C(3)", @"Propionaldehyde +40.", false));
            TermData.Add(CVID.UNIMOD_Label_18O_1_, new TermInfo(CVID.UNIMOD_Label_18O_1_, @"UNIMOD", @"UNIMOD:258", @"Label:18O(1)", @"O18 Labeling.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_2_, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_2_, @"UNIMOD", @"UNIMOD:259", @"Label:13C(6)15N(2)", @"13C(6) 15N(2) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Thiophospho, new TermInfo(CVID.UNIMOD_Thiophospho, @"UNIMOD", @"UNIMOD:260", @"Thiophospho", @"Thiophosphorylation.", false));
            TermData.Add(CVID.UNIMOD_SPITC, new TermInfo(CVID.UNIMOD_SPITC, @"UNIMOD", @"UNIMOD:261", @"SPITC", @"4-sulfophenyl isothiocyanate.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_3_, new TermInfo(CVID.UNIMOD_Label_2H_3_, @"UNIMOD", @"UNIMOD:262", @"Label:2H(3)", @"Trideuteration.", false));
            TermData.Add(CVID.UNIMOD_PET, new TermInfo(CVID.UNIMOD_PET, @"UNIMOD", @"UNIMOD:264", @"PET", @"Phosphorylation to pyridyl thiol.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_4_, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_4_, @"UNIMOD", @"UNIMOD:267", @"Label:13C(6)15N(4)", @"13C(6) 15N(4) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_5_15N_1_, new TermInfo(CVID.UNIMOD_Label_13C_5_15N_1_, @"UNIMOD", @"UNIMOD:268", @"Label:13C(5)15N(1)", @"13C(5) 15N(1) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_9_15N_1_, new TermInfo(CVID.UNIMOD_Label_13C_9_15N_1_, @"UNIMOD", @"UNIMOD:269", @"Label:13C(9)15N(1)", @"13C(9) 15N(1) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Cytopiloyne, new TermInfo(CVID.UNIMOD_Cytopiloyne, @"UNIMOD", @"UNIMOD:270", @"Cytopiloyne", @"Nucleophilic addtion to cytopiloyne.", false));
            TermData.Add(CVID.UNIMOD_Cytopiloyne_water, new TermInfo(CVID.UNIMOD_Cytopiloyne_water, @"UNIMOD", @"UNIMOD:271", @"Cytopiloyne+water", @"Nucleophilic addition to cytopiloyne+H2O.", false));
            TermData.Add(CVID.UNIMOD_CAF, new TermInfo(CVID.UNIMOD_CAF, @"UNIMOD", @"UNIMOD:272", @"CAF", @"Sulfonation of N-terminus.", false));
            TermData.Add(CVID.UNIMOD_Nitrosyl, new TermInfo(CVID.UNIMOD_Nitrosyl, @"UNIMOD", @"UNIMOD:275", @"Nitrosyl", @"Nitrosylation.", false));
            TermData.Add(CVID.UNIMOD_AEBS, new TermInfo(CVID.UNIMOD_AEBS, @"UNIMOD", @"UNIMOD:276", @"AEBS", @"Aminoethylbenzenesulfonylation.", false));
            TermData.Add(CVID.UNIMOD_Ethanolyl, new TermInfo(CVID.UNIMOD_Ethanolyl, @"UNIMOD", @"UNIMOD:278", @"Ethanolyl", @"Ethanolation.", false));
            TermData.Add(CVID.UNIMOD_Ethyl, new TermInfo(CVID.UNIMOD_Ethyl, @"UNIMOD", @"UNIMOD:280", @"Ethyl", @"Ethylation.", false));
            TermData.Add(CVID.UNIMOD_CoenzymeA, new TermInfo(CVID.UNIMOD_CoenzymeA, @"UNIMOD", @"UNIMOD:281", @"CoenzymeA", @"Cysteine modified Coenzyme A.", false));
            TermData.Add(CVID.UNIMOD_Methyl_2H_2_, new TermInfo(CVID.UNIMOD_Methyl_2H_2_, @"UNIMOD", @"UNIMOD:284", @"Methyl:2H(2)", @"Deuterium Methylation of Lysine.", false));
            TermData.Add(CVID.UNIMOD_SulfanilicAcid, new TermInfo(CVID.UNIMOD_SulfanilicAcid, @"UNIMOD", @"UNIMOD:285", @"SulfanilicAcid", @"Light Sulfanilic Acid (SA) C12.", false));
            TermData.Add(CVID.UNIMOD_SulfanilicAcid_13C_6_, new TermInfo(CVID.UNIMOD_SulfanilicAcid_13C_6_, @"UNIMOD", @"UNIMOD:286", @"SulfanilicAcid:13C(6)", @"Heavy Sulfanilic Acid (SA) C13.", false));
            TermData.Add(CVID.UNIMOD_Trp__Oxolactone, new TermInfo(CVID.UNIMOD_Trp__Oxolactone, @"UNIMOD", @"UNIMOD:288", @"Trp->Oxolactone", @"Tryptophan oxidation to oxolactone.", false));
            TermData.Add(CVID.UNIMOD_Biotin_PEO_Amine, new TermInfo(CVID.UNIMOD_Biotin_PEO_Amine, @"UNIMOD", @"UNIMOD:289", @"Biotin-PEO-Amine", @"Biotin polyethyleneoxide amine.", false));
            TermData.Add(CVID.UNIMOD_Biotin_HPDP, new TermInfo(CVID.UNIMOD_Biotin_HPDP, @"UNIMOD", @"UNIMOD:290", @"Biotin-HPDP", @"Pierce EZ-Link Biotin-HPDP.", false));
            TermData.Add(CVID.UNIMOD_Delta_Hg_1_, new TermInfo(CVID.UNIMOD_Delta_Hg_1_, @"UNIMOD", @"UNIMOD:291", @"Delta:Hg(1)", @"Mercury Mercaptan.", false));
            TermData.Add(CVID.UNIMOD_IodoU_AMP, new TermInfo(CVID.UNIMOD_IodoU_AMP, @"UNIMOD", @"UNIMOD:292", @"IodoU-AMP", @"(Iodo)-uracil MP.", false));
            TermData.Add(CVID.UNIMOD_CAMthiopropanoyl, new TermInfo(CVID.UNIMOD_CAMthiopropanoyl, @"UNIMOD", @"UNIMOD:293", @"CAMthiopropanoyl", @"3-(carbamidomethylthio)propanoyl.", false));
            TermData.Add(CVID.UNIMOD_IED_Biotin, new TermInfo(CVID.UNIMOD_IED_Biotin, @"UNIMOD", @"UNIMOD:294", @"IED-Biotin", @"Biotinoyl-iodoacetyl-ethylenediamine.", false));
            TermData.Add(CVID.UNIMOD_dHex, new TermInfo(CVID.UNIMOD_dHex, @"UNIMOD", @"UNIMOD:295", @"dHex", @"Fucose.", false));
            TermData.Add(CVID.UNIMOD_Methyl_2H_3_, new TermInfo(CVID.UNIMOD_Methyl_2H_3_, @"UNIMOD", @"UNIMOD:298", @"Methyl:2H(3)", @"Deuterated methyl ester.", false));
            TermData.Add(CVID.UNIMOD_Carboxy, new TermInfo(CVID.UNIMOD_Carboxy, @"UNIMOD", @"UNIMOD:299", @"Carboxy", @"Carboxylation.", false));
            TermData.Add(CVID.UNIMOD_Bromobimane, new TermInfo(CVID.UNIMOD_Bromobimane, @"UNIMOD", @"UNIMOD:301", @"Bromobimane", @"Monobromobimane derivative.", false));
            TermData.Add(CVID.UNIMOD_Menadione, new TermInfo(CVID.UNIMOD_Menadione, @"UNIMOD", @"UNIMOD:302", @"Menadione", @"Menadione quinone derivative.", false));
            TermData.Add(CVID.UNIMOD_DeStreak, new TermInfo(CVID.UNIMOD_DeStreak, @"UNIMOD", @"UNIMOD:303", @"DeStreak", @"Cysteine mercaptoethanol.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_, @"UNIMOD", @"UNIMOD:305", @"dHex(1)Hex(3)HexNAc(4)", @"Fucosylated biantennary (-2 galactose).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_, @"UNIMOD", @"UNIMOD:307", @"dHex(1)Hex(4)HexNAc(4)", @"DHex Hex(4) HexNAc(4) ---OR--- Hex(4) HexNAc(4) Pent Me.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_, @"UNIMOD", @"UNIMOD:308", @"dHex(1)Hex(5)HexNAc(4)", @"Fucosylated biantennary.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_4_, @"UNIMOD", @"UNIMOD:309", @"Hex(3)HexNAc(4)", @"Biantennary (-2 galactose).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_, @"UNIMOD", @"UNIMOD:310", @"Hex(4)HexNAc(4)", @"Biantennary (-1 galactose).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_, @"UNIMOD", @"UNIMOD:311", @"Hex(5)HexNAc(4)", @"Biantennary.", false));
            TermData.Add(CVID.UNIMOD_Cysteinyl, new TermInfo(CVID.UNIMOD_Cysteinyl, @"UNIMOD", @"UNIMOD:312", @"Cysteinyl", @"Cysteinylation.", false));
            TermData.Add(CVID.UNIMOD_Lys_loss, new TermInfo(CVID.UNIMOD_Lys_loss, @"UNIMOD", @"UNIMOD:313", @"Lys-loss", @"Loss of C-terminal K from Heavy Chain of MAb.", false));
            TermData.Add(CVID.UNIMOD_Nmethylmaleimide, new TermInfo(CVID.UNIMOD_Nmethylmaleimide, @"UNIMOD", @"UNIMOD:314", @"Nmethylmaleimide", @"Nmethylmaleimide.", false));
            TermData.Add(CVID.UNIMOD_DimethylpyrroleAdduct, new TermInfo(CVID.UNIMOD_DimethylpyrroleAdduct, @"UNIMOD", @"UNIMOD:316", @"DimethylpyrroleAdduct", @"2,5-dimethypyrrole.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_2_C_5_, new TermInfo(CVID.UNIMOD_Delta_H_2_C_5_, @"UNIMOD", @"UNIMOD:318", @"Delta:H(2)C(5)", @"MDA adduct +62.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_2_C_3_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_2_C_3_O_1_, @"UNIMOD", @"UNIMOD:319", @"Delta:H(2)C(3)O(1)", @"MDA adduct +54.", false));
            TermData.Add(CVID.UNIMOD_Nethylmaleimide_water, new TermInfo(CVID.UNIMOD_Nethylmaleimide_water, @"UNIMOD", @"UNIMOD:320", @"Nethylmaleimide+water", @"Nethylmaleimidehydrolysis.", false));
            TermData.Add(CVID.UNIMOD_Xlink_B10621, new TermInfo(CVID.UNIMOD_Xlink_B10621, @"UNIMOD", @"UNIMOD:323", @"Xlink:B10621", @"Bis-((N-iodoacetyl)piperazinyl)sulfonerhodamine.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DTBP_87_, new TermInfo(CVID.UNIMOD_Xlink_DTBP_87_, @"UNIMOD", @"UNIMOD:324", @"Xlink:DTBP[87]", @"Cleaved and reduced DTBP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_FP_Biotin, new TermInfo(CVID.UNIMOD_FP_Biotin, @"UNIMOD", @"UNIMOD:325", @"FP-Biotin", @"10-ethoxyphosphinyl-N-(biotinamidopentyl)decanamide.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_2_O__1_S_1_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_2_O__1_S_1_, @"UNIMOD", @"UNIMOD:327", @"Delta:H(4)C(2)O(-1)S(1)", @"S-Ethylcystine from Serine.", false));
            TermData.Add(CVID.UNIMOD_Methyl_2H_3_13C_1_, new TermInfo(CVID.UNIMOD_Methyl_2H_3_13C_1_, @"UNIMOD", @"UNIMOD:329", @"Methyl:2H(3)13C(1)", @"Monomethylation.", false));
            TermData.Add(CVID.UNIMOD_Dimethyl_2H_6_13C_2_, new TermInfo(CVID.UNIMOD_Dimethyl_2H_6_13C_2_, @"UNIMOD", @"UNIMOD:330", @"Dimethyl:2H(6)13C(2)", @"Dimethylation.", false));
            TermData.Add(CVID.UNIMOD_Thiophos_S_S_biotin, new TermInfo(CVID.UNIMOD_Thiophos_S_S_biotin, @"UNIMOD", @"UNIMOD:332", @"Thiophos-S-S-biotin", @"Thiophosphate labeled with biotin-HPDP.", false));
            TermData.Add(CVID.UNIMOD_Can_FP_biotin, new TermInfo(CVID.UNIMOD_Can_FP_biotin, @"UNIMOD", @"UNIMOD:333", @"Can-FP-biotin", @"6-N-biotinylaminohexyl isopropyl phosphate.", false));
            TermData.Add(CVID.UNIMOD_HNE_Delta_H_2_, new TermInfo(CVID.UNIMOD_HNE_Delta_H_2_, @"UNIMOD", @"UNIMOD:335", @"HNE+Delta:H(2)", @"Reduced 4-Hydroxynonenal.", false));
            TermData.Add(CVID.UNIMOD_Methylamine, new TermInfo(CVID.UNIMOD_Methylamine, @"UNIMOD", @"UNIMOD:337", @"Methylamine", @"Michael addition with methylamine.", false));
            TermData.Add(CVID.UNIMOD_Bromo, new TermInfo(CVID.UNIMOD_Bromo, @"UNIMOD", @"UNIMOD:340", @"Bromo", @"Bromination.", false));
            TermData.Add(CVID.UNIMOD_Amino, new TermInfo(CVID.UNIMOD_Amino, @"UNIMOD", @"UNIMOD:342", @"Amino", @"Tyrosine oxidation to 2-aminotyrosine.", false));
            TermData.Add(CVID.UNIMOD_Argbiotinhydrazide, new TermInfo(CVID.UNIMOD_Argbiotinhydrazide, @"UNIMOD", @"UNIMOD:343", @"Argbiotinhydrazide", @"Oxidized Arginine biotinylated with biotin hydrazide.", false));
            TermData.Add(CVID.UNIMOD_Arg__GluSA, new TermInfo(CVID.UNIMOD_Arg__GluSA, @"UNIMOD", @"UNIMOD:344", @"Arg->GluSA", @"Arginine oxidation to glutamic semialdehyde.", false));
            TermData.Add(CVID.UNIMOD_Trioxidation, new TermInfo(CVID.UNIMOD_Trioxidation, @"UNIMOD", @"UNIMOD:345", @"Trioxidation", @"Cysteine oxidation to cysteic acid.", false));
            TermData.Add(CVID.UNIMOD_His__Asn, new TermInfo(CVID.UNIMOD_His__Asn, @"UNIMOD", @"UNIMOD:348", @"His->Asn", @"His->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Asp, new TermInfo(CVID.UNIMOD_His__Asp, @"UNIMOD", @"UNIMOD:349", @"His->Asp", @"His->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Hydroxykynurenin, new TermInfo(CVID.UNIMOD_Trp__Hydroxykynurenin, @"UNIMOD", @"UNIMOD:350", @"Trp->Hydroxykynurenin", @"Tryptophan oxidation to hydroxykynurenin.", false));
            TermData.Add(CVID.UNIMOD_Trp__Kynurenin, new TermInfo(CVID.UNIMOD_Trp__Kynurenin, @"UNIMOD", @"UNIMOD:351", @"Trp->Kynurenin", @"Tryptophan oxidation to kynurenin.", false));
            TermData.Add(CVID.UNIMOD_Lys__Allysine, new TermInfo(CVID.UNIMOD_Lys__Allysine, @"UNIMOD", @"UNIMOD:352", @"Lys->Allysine", @"Lysine oxidation to aminoadipic semialdehyde.", false));
            TermData.Add(CVID.UNIMOD_Lysbiotinhydrazide, new TermInfo(CVID.UNIMOD_Lysbiotinhydrazide, @"UNIMOD", @"UNIMOD:353", @"Lysbiotinhydrazide", @"Oxidized Lysine biotinylated with biotin hydrazide.", false));
            TermData.Add(CVID.UNIMOD_Nitro, new TermInfo(CVID.UNIMOD_Nitro, @"UNIMOD", @"UNIMOD:354", @"Nitro", @"Oxidation to nitro.", false));
            TermData.Add(CVID.UNIMOD_probiotinhydrazide, new TermInfo(CVID.UNIMOD_probiotinhydrazide, @"UNIMOD", @"UNIMOD:357", @"probiotinhydrazide", @"Oxidized proline biotinylated with biotin hydrazide.", false));
            TermData.Add(CVID.UNIMOD_Pro__pyro_Glu, new TermInfo(CVID.UNIMOD_Pro__pyro_Glu, @"UNIMOD", @"UNIMOD:359", @"Pro->pyro-Glu", @"Proline oxidation to pyroglutamic acid.", false));
            TermData.Add(CVID.UNIMOD_Pro__Pyrrolidinone, new TermInfo(CVID.UNIMOD_Pro__Pyrrolidinone, @"UNIMOD", @"UNIMOD:360", @"Pro->Pyrrolidinone", @"Proline oxidation to pyrrolidinone.", false));
            TermData.Add(CVID.UNIMOD_Thrbiotinhydrazide, new TermInfo(CVID.UNIMOD_Thrbiotinhydrazide, @"UNIMOD", @"UNIMOD:361", @"Thrbiotinhydrazide", @"Oxidized Threonine biotinylated with biotin hydrazide.", false));
            TermData.Add(CVID.UNIMOD_Diisopropylphosphate, new TermInfo(CVID.UNIMOD_Diisopropylphosphate, @"UNIMOD", @"UNIMOD:362", @"Diisopropylphosphate", @"O-Diisopropylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_Isopropylphospho, new TermInfo(CVID.UNIMOD_Isopropylphospho, @"UNIMOD", @"UNIMOD:363", @"Isopropylphospho", @"O-Isopropylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_ICPL_13C_6_, new TermInfo(CVID.UNIMOD_ICPL_13C_6_, @"UNIMOD", @"UNIMOD:364", @"ICPL:13C(6)", @"Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, heavy form.", false));
            TermData.Add(CVID.UNIMOD_ICPL, new TermInfo(CVID.UNIMOD_ICPL, @"UNIMOD", @"UNIMOD:365", @"ICPL", @"Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, light form.", false));
            TermData.Add(CVID.UNIMOD_Deamidated_18O_1_, new TermInfo(CVID.UNIMOD_Deamidated_18O_1_, @"UNIMOD", @"UNIMOD:366", @"Deamidated:18O(1)", @"Deamidation in presence of O18.", false));
            TermData.Add(CVID.UNIMOD_Cys__Dha, new TermInfo(CVID.UNIMOD_Cys__Dha, @"UNIMOD", @"UNIMOD:368", @"Cys->Dha", @"Dehydroalanine (from Cysteine).", false));
            TermData.Add(CVID.UNIMOD_Pro__Pyrrolidone, new TermInfo(CVID.UNIMOD_Pro__Pyrrolidone, @"UNIMOD", @"UNIMOD:369", @"Pro->Pyrrolidone", @"Pyrrolidone from Proline.", false));
            TermData.Add(CVID.UNIMOD_HMVK, new TermInfo(CVID.UNIMOD_HMVK, @"UNIMOD", @"UNIMOD:371", @"HMVK", @"Michael addition of hydroxymethylvinyl ketone to cysteine.", false));
            TermData.Add(CVID.UNIMOD_Arg__Orn, new TermInfo(CVID.UNIMOD_Arg__Orn, @"UNIMOD", @"UNIMOD:372", @"Arg->Orn", @"Ornithine from Arginine.", false));
            TermData.Add(CVID.UNIMOD_Dehydro, new TermInfo(CVID.UNIMOD_Dehydro, @"UNIMOD", @"UNIMOD:374", @"Dehydro", @"Half of a disulfide bridge.", false));
            TermData.Add(CVID.UNIMOD_Diphthamide, new TermInfo(CVID.UNIMOD_Diphthamide, @"UNIMOD", @"UNIMOD:375", @"Diphthamide", @"Diphthamide.", false));
            TermData.Add(CVID.UNIMOD_Hydroxyfarnesyl, new TermInfo(CVID.UNIMOD_Hydroxyfarnesyl, @"UNIMOD", @"UNIMOD:376", @"Hydroxyfarnesyl", @"Hydroxyfarnesyl.", false));
            TermData.Add(CVID.UNIMOD_Diacylglycerol, new TermInfo(CVID.UNIMOD_Diacylglycerol, @"UNIMOD", @"UNIMOD:377", @"Diacylglycerol", @"Diacylglycerol.", false));
            TermData.Add(CVID.UNIMOD_Carboxyethyl, new TermInfo(CVID.UNIMOD_Carboxyethyl, @"UNIMOD", @"UNIMOD:378", @"Carboxyethyl", @"Carboxyethyl.", false));
            TermData.Add(CVID.UNIMOD_Hypusine, new TermInfo(CVID.UNIMOD_Hypusine, @"UNIMOD", @"UNIMOD:379", @"Hypusine", @"Hypusine.", false));
            TermData.Add(CVID.UNIMOD_Retinylidene, new TermInfo(CVID.UNIMOD_Retinylidene, @"UNIMOD", @"UNIMOD:380", @"Retinylidene", @"Retinal.", false));
            TermData.Add(CVID.UNIMOD_Lys__AminoadipicAcid, new TermInfo(CVID.UNIMOD_Lys__AminoadipicAcid, @"UNIMOD", @"UNIMOD:381", @"Lys->AminoadipicAcid", @"Alpha-amino adipic acid.", false));
            TermData.Add(CVID.UNIMOD_Cys__PyruvicAcid, new TermInfo(CVID.UNIMOD_Cys__PyruvicAcid, @"UNIMOD", @"UNIMOD:382", @"Cys->PyruvicAcid", @"Pyruvic acid from N-term cys.", false));
            TermData.Add(CVID.UNIMOD_Ammonia_loss, new TermInfo(CVID.UNIMOD_Ammonia_loss, @"UNIMOD", @"UNIMOD:385", @"Ammonia-loss", @"Loss of ammonia.", false));
            TermData.Add(CVID.UNIMOD_Phycocyanobilin, new TermInfo(CVID.UNIMOD_Phycocyanobilin, @"UNIMOD", @"UNIMOD:387", @"Phycocyanobilin", @"Phycocyanobilin.", false));
            TermData.Add(CVID.UNIMOD_Phycoerythrobilin, new TermInfo(CVID.UNIMOD_Phycoerythrobilin, @"UNIMOD", @"UNIMOD:388", @"Phycoerythrobilin", @"Phycoerythrobilin.", false));
            TermData.Add(CVID.UNIMOD_Phytochromobilin, new TermInfo(CVID.UNIMOD_Phytochromobilin, @"UNIMOD", @"UNIMOD:389", @"Phytochromobilin", @"Phytochromobilin.", false));
            TermData.Add(CVID.UNIMOD_Heme, new TermInfo(CVID.UNIMOD_Heme, @"UNIMOD", @"UNIMOD:390", @"Heme", @"Heme.", false));
            TermData.Add(CVID.UNIMOD_Molybdopterin, new TermInfo(CVID.UNIMOD_Molybdopterin, @"UNIMOD", @"UNIMOD:391", @"Molybdopterin", @"Molybdopterin.", false));
            TermData.Add(CVID.UNIMOD_Quinone, new TermInfo(CVID.UNIMOD_Quinone, @"UNIMOD", @"UNIMOD:392", @"Quinone", @"Quinone.", false));
            TermData.Add(CVID.UNIMOD_Glucosylgalactosyl, new TermInfo(CVID.UNIMOD_Glucosylgalactosyl, @"UNIMOD", @"UNIMOD:393", @"Glucosylgalactosyl", @"Glucosylgalactosyl hydroxylysine.", false));
            TermData.Add(CVID.UNIMOD_GPIanchor, new TermInfo(CVID.UNIMOD_GPIanchor, @"UNIMOD", @"UNIMOD:394", @"GPIanchor", @"Glycosylphosphatidylinositol.", false));
            TermData.Add(CVID.UNIMOD_PhosphoribosyldephosphoCoA, new TermInfo(CVID.UNIMOD_PhosphoribosyldephosphoCoA, @"UNIMOD", @"UNIMOD:395", @"PhosphoribosyldephosphoCoA", @"Phosphoribosyl dephospho-coenzyme A.", false));
            TermData.Add(CVID.UNIMOD_GlycerylPE, new TermInfo(CVID.UNIMOD_GlycerylPE, @"UNIMOD", @"UNIMOD:396", @"GlycerylPE", @"Glycerylphosphorylethanolamine.", false));
            TermData.Add(CVID.UNIMOD_Triiodothyronine, new TermInfo(CVID.UNIMOD_Triiodothyronine, @"UNIMOD", @"UNIMOD:397", @"Triiodothyronine", @"Triiodo.", false));
            TermData.Add(CVID.UNIMOD_Thyroxine, new TermInfo(CVID.UNIMOD_Thyroxine, @"UNIMOD", @"UNIMOD:398", @"Thyroxine", @"Tetraiodo.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Dha, new TermInfo(CVID.UNIMOD_Tyr__Dha, @"UNIMOD", @"UNIMOD:400", @"Tyr->Dha", @"Dehydroalanine (from Tyrosine).", false));
            TermData.Add(CVID.UNIMOD_Didehydro, new TermInfo(CVID.UNIMOD_Didehydro, @"UNIMOD", @"UNIMOD:401", @"Didehydro", @"2-amino-3-oxo-butanoic_acid.", false));
            TermData.Add(CVID.UNIMOD_Cys__Oxoalanine, new TermInfo(CVID.UNIMOD_Cys__Oxoalanine, @"UNIMOD", @"UNIMOD:402", @"Cys->Oxoalanine", @"Oxoalanine.", false));
            TermData.Add(CVID.UNIMOD_Ser__LacticAcid, new TermInfo(CVID.UNIMOD_Ser__LacticAcid, @"UNIMOD", @"UNIMOD:403", @"Ser->LacticAcid", @"Lactic acid from N-term Ser.", false));
            TermData.Add(CVID.UNIMOD_Phosphoadenosine, new TermInfo(CVID.UNIMOD_Phosphoadenosine, @"UNIMOD", @"UNIMOD:405", @"Phosphoadenosine", @"AMP.", false));
            TermData.Add(CVID.UNIMOD_Hydroxycinnamyl, new TermInfo(CVID.UNIMOD_Hydroxycinnamyl, @"UNIMOD", @"UNIMOD:407", @"Hydroxycinnamyl", @"Hydroxycinnamyl.", false));
            TermData.Add(CVID.UNIMOD_Glycosyl, new TermInfo(CVID.UNIMOD_Glycosyl, @"UNIMOD", @"UNIMOD:408", @"Glycosyl", @"Glycosyl-L-hydroxyproline.", false));
            TermData.Add(CVID.UNIMOD_FMNH, new TermInfo(CVID.UNIMOD_FMNH, @"UNIMOD", @"UNIMOD:409", @"FMNH", @"Flavin mononucleotide.", false));
            TermData.Add(CVID.UNIMOD_Archaeol, new TermInfo(CVID.UNIMOD_Archaeol, @"UNIMOD", @"UNIMOD:410", @"Archaeol", @"S-diphytanylglycerol diether.", false));
            TermData.Add(CVID.UNIMOD_Phenylisocyanate, new TermInfo(CVID.UNIMOD_Phenylisocyanate, @"UNIMOD", @"UNIMOD:411", @"Phenylisocyanate", @"Phenyl isocyanate.", false));
            TermData.Add(CVID.UNIMOD_Phenylisocyanate_2H_5_, new TermInfo(CVID.UNIMOD_Phenylisocyanate_2H_5_, @"UNIMOD", @"UNIMOD:412", @"Phenylisocyanate:2H(5)", @"D5-phenyl isocyanate.", false));
            TermData.Add(CVID.UNIMOD_Phosphoguanosine, new TermInfo(CVID.UNIMOD_Phosphoguanosine, @"UNIMOD", @"UNIMOD:413", @"Phosphoguanosine", @"Phospho-guanosine.", false));
            TermData.Add(CVID.UNIMOD_Hydroxymethyl, new TermInfo(CVID.UNIMOD_Hydroxymethyl, @"UNIMOD", @"UNIMOD:414", @"Hydroxymethyl", @"Hydroxymethyl.", false));
            TermData.Add(CVID.UNIMOD_MolybdopterinGD_Delta_S__1_Se_1_, new TermInfo(CVID.UNIMOD_MolybdopterinGD_Delta_S__1_Se_1_, @"UNIMOD", @"UNIMOD:415", @"MolybdopterinGD+Delta:S(-1)Se(1)", @"L-selenocysteinyl molybdenum bis(molybdopterin guanine dinucleotide).", false));
            TermData.Add(CVID.UNIMOD_Dipyrrolylmethanemethyl, new TermInfo(CVID.UNIMOD_Dipyrrolylmethanemethyl, @"UNIMOD", @"UNIMOD:416", @"Dipyrrolylmethanemethyl", @"Dipyrrolylmethanemethyl.", false));
            TermData.Add(CVID.UNIMOD_PhosphoUridine, new TermInfo(CVID.UNIMOD_PhosphoUridine, @"UNIMOD", @"UNIMOD:417", @"PhosphoUridine", @"Uridine phosphodiester.", false));
            TermData.Add(CVID.UNIMOD_Glycerophospho, new TermInfo(CVID.UNIMOD_Glycerophospho, @"UNIMOD", @"UNIMOD:419", @"Glycerophospho", @"Glycerophospho.", false));
            TermData.Add(CVID.UNIMOD_Carboxy__Thiocarboxy, new TermInfo(CVID.UNIMOD_Carboxy__Thiocarboxy, @"UNIMOD", @"UNIMOD:420", @"Carboxy->Thiocarboxy", @"Thiocarboxylic acid.", false));
            TermData.Add(CVID.UNIMOD_Sulfide, new TermInfo(CVID.UNIMOD_Sulfide, @"UNIMOD", @"UNIMOD:421", @"Sulfide", @"Persulfide.", false));
            TermData.Add(CVID.UNIMOD_PyruvicAcidIminyl, new TermInfo(CVID.UNIMOD_PyruvicAcidIminyl, @"UNIMOD", @"UNIMOD:422", @"PyruvicAcidIminyl", @"N-pyruvic acid 2-iminyl.", false));
            TermData.Add(CVID.UNIMOD_Delta_Se_1_, new TermInfo(CVID.UNIMOD_Delta_Se_1_, @"UNIMOD", @"UNIMOD:423", @"Delta:Se(1)", @"Selenyl.", false));
            TermData.Add(CVID.UNIMOD_MolybdopterinGD, new TermInfo(CVID.UNIMOD_MolybdopterinGD, @"UNIMOD", @"UNIMOD:424", @"MolybdopterinGD", @"Molybdenum bis(molybdopterin guanine dinucleotide).", false));
            TermData.Add(CVID.UNIMOD_Dioxidation, new TermInfo(CVID.UNIMOD_Dioxidation, @"UNIMOD", @"UNIMOD:425", @"Dioxidation", @"Dihydroxy.", false));
            TermData.Add(CVID.UNIMOD_Octanoyl, new TermInfo(CVID.UNIMOD_Octanoyl, @"UNIMOD", @"UNIMOD:426", @"Octanoyl", @"Octanoyl.", false));
            TermData.Add(CVID.UNIMOD_PhosphoHexNAc, new TermInfo(CVID.UNIMOD_PhosphoHexNAc, @"UNIMOD", @"UNIMOD:428", @"PhosphoHexNAc", @"N-acetylglucosamine-1-phosphoryl.", false));
            TermData.Add(CVID.UNIMOD_PhosphoHex, new TermInfo(CVID.UNIMOD_PhosphoHex, @"UNIMOD", @"UNIMOD:429", @"PhosphoHex", @"Phosphoglycosyl-D-mannose-1-phosphoryl.", false));
            TermData.Add(CVID.UNIMOD_Palmitoleyl, new TermInfo(CVID.UNIMOD_Palmitoleyl, @"UNIMOD", @"UNIMOD:431", @"Palmitoleyl", @"Palmitoleyl.", false));
            TermData.Add(CVID.UNIMOD_Cholesterol, new TermInfo(CVID.UNIMOD_Cholesterol, @"UNIMOD", @"UNIMOD:432", @"Cholesterol", @"Cholesterol ester.", false));
            TermData.Add(CVID.UNIMOD_Didehydroretinylidene, new TermInfo(CVID.UNIMOD_Didehydroretinylidene, @"UNIMOD", @"UNIMOD:433", @"Didehydroretinylidene", @"3,4-didehydroretinylidene.", false));
            TermData.Add(CVID.UNIMOD_CHDH, new TermInfo(CVID.UNIMOD_CHDH, @"UNIMOD", @"UNIMOD:434", @"CHDH", @"Cis-14-hydroxy-10,13-dioxo-7-heptadecenoic ester.", false));
            TermData.Add(CVID.UNIMOD_Methylpyrroline, new TermInfo(CVID.UNIMOD_Methylpyrroline, @"UNIMOD", @"UNIMOD:435", @"Methylpyrroline", @"4-methyl-delta-1-pyrroline-5-carboxyl.", false));
            TermData.Add(CVID.UNIMOD_Hydroxyheme, new TermInfo(CVID.UNIMOD_Hydroxyheme, @"UNIMOD", @"UNIMOD:436", @"Hydroxyheme", @"Hydroxyheme.", false));
            TermData.Add(CVID.UNIMOD_MicrocinC7, new TermInfo(CVID.UNIMOD_MicrocinC7, @"UNIMOD", @"UNIMOD:437", @"MicrocinC7", @"(3-aminopropyl)(L-aspartyl-1-amino)phosphoryl-5-adenosine.", false));
            TermData.Add(CVID.UNIMOD_Cyano, new TermInfo(CVID.UNIMOD_Cyano, @"UNIMOD", @"UNIMOD:438", @"Cyano", @"Cyano.", false));
            TermData.Add(CVID.UNIMOD_Diironsubcluster, new TermInfo(CVID.UNIMOD_Diironsubcluster, @"UNIMOD", @"UNIMOD:439", @"Diironsubcluster", @"Hydrogenase diiron subcluster.", false));
            TermData.Add(CVID.UNIMOD_Amidino, new TermInfo(CVID.UNIMOD_Amidino, @"UNIMOD", @"UNIMOD:440", @"Amidino", @"Amidino.", false));
            TermData.Add(CVID.UNIMOD_FMN, new TermInfo(CVID.UNIMOD_FMN, @"UNIMOD", @"UNIMOD:442", @"FMN", @"O3-(riboflavin phosphoryl).", false));
            TermData.Add(CVID.UNIMOD_FMNC, new TermInfo(CVID.UNIMOD_FMNC, @"UNIMOD", @"UNIMOD:443", @"FMNC", @"S-(4a-FMN).", false));
            TermData.Add(CVID.UNIMOD_CuSMo, new TermInfo(CVID.UNIMOD_CuSMo, @"UNIMOD", @"UNIMOD:444", @"CuSMo", @"Copper sulfido molybdopterin cytosine dinuncleotide.", false));
            TermData.Add(CVID.UNIMOD_Hydroxytrimethyl, new TermInfo(CVID.UNIMOD_Hydroxytrimethyl, @"UNIMOD", @"UNIMOD:445", @"Hydroxytrimethyl", @"5-hydroxy-N6,N6,N6-trimethyl.", false));
            TermData.Add(CVID.UNIMOD_Deoxy, new TermInfo(CVID.UNIMOD_Deoxy, @"UNIMOD", @"UNIMOD:447", @"Deoxy", @"Reduction.", false));
            TermData.Add(CVID.UNIMOD_Microcin, new TermInfo(CVID.UNIMOD_Microcin, @"UNIMOD", @"UNIMOD:448", @"Microcin", @"Microcin E492 siderophore ester from serine.", false));
            TermData.Add(CVID.UNIMOD_Decanoyl, new TermInfo(CVID.UNIMOD_Decanoyl, @"UNIMOD", @"UNIMOD:449", @"Decanoyl", @"Lipid.", false));
            TermData.Add(CVID.UNIMOD_Glu, new TermInfo(CVID.UNIMOD_Glu, @"UNIMOD", @"UNIMOD:450", @"Glu", @"Monoglutamyl.", false));
            TermData.Add(CVID.UNIMOD_GluGlu, new TermInfo(CVID.UNIMOD_GluGlu, @"UNIMOD", @"UNIMOD:451", @"GluGlu", @"Diglutamyl.", false));
            TermData.Add(CVID.UNIMOD_GluGluGlu, new TermInfo(CVID.UNIMOD_GluGluGlu, @"UNIMOD", @"UNIMOD:452", @"GluGluGlu", @"Triglutamyl.", false));
            TermData.Add(CVID.UNIMOD_GluGluGluGlu, new TermInfo(CVID.UNIMOD_GluGluGluGlu, @"UNIMOD", @"UNIMOD:453", @"GluGluGluGlu", @"Tetraglutamyl.", false));
            TermData.Add(CVID.UNIMOD_HexN, new TermInfo(CVID.UNIMOD_HexN, @"UNIMOD", @"UNIMOD:454", @"HexN", @"Hexosamine.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DMP_154_, new TermInfo(CVID.UNIMOD_Xlink_DMP_154_, @"UNIMOD", @"UNIMOD:455", @"Xlink:DMP[154]", @"Free monolink of DMP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_NDA, new TermInfo(CVID.UNIMOD_NDA, @"UNIMOD", @"UNIMOD:457", @"NDA", @"Naphthalene-2,3-dicarboxaldehyde.", false));
            TermData.Add(CVID.UNIMOD_SPITC_13C_6_, new TermInfo(CVID.UNIMOD_SPITC_13C_6_, @"UNIMOD", @"UNIMOD:464", @"SPITC:13C(6)", @"4-sulfophenyl isothiocyanate (Heavy C13).", false));
            TermData.Add(CVID.UNIMOD_AEC_MAEC, new TermInfo(CVID.UNIMOD_AEC_MAEC, @"UNIMOD", @"UNIMOD:472", @"AEC-MAEC", @"Aminoethylcysteine.", false));
            TermData.Add(CVID.UNIMOD_TMAB, new TermInfo(CVID.UNIMOD_TMAB, @"UNIMOD", @"UNIMOD:476", @"TMAB", @"4-trimethyllammoniumbutyryl-.", false));
            TermData.Add(CVID.UNIMOD_TMAB_2H_9_, new TermInfo(CVID.UNIMOD_TMAB_2H_9_, @"UNIMOD", @"UNIMOD:477", @"TMAB:2H(9)", @"D9-4-trimethyllammoniumbutyryl-.", false));
            TermData.Add(CVID.UNIMOD_FTC, new TermInfo(CVID.UNIMOD_FTC, @"UNIMOD", @"UNIMOD:478", @"FTC", @"Fluorescein-5-thiosemicarbazide.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_4_, new TermInfo(CVID.UNIMOD_Label_2H_4_, @"UNIMOD", @"UNIMOD:481", @"Label:2H(4)", @"4,4,5,5-D4 Lysine.", false));
            TermData.Add(CVID.UNIMOD_DHP, new TermInfo(CVID.UNIMOD_DHP, @"UNIMOD", @"UNIMOD:488", @"DHP", @"Dehydropyrrolizidine alkaloid (dehydroretronecine) on cysteines.", false));
            TermData.Add(CVID.UNIMOD_Hep, new TermInfo(CVID.UNIMOD_Hep, @"UNIMOD", @"UNIMOD:490", @"Hep", @"Heptose.", false));
            TermData.Add(CVID.UNIMOD_BADGE, new TermInfo(CVID.UNIMOD_BADGE, @"UNIMOD", @"UNIMOD:493", @"BADGE", @"Bisphenol A diglycidyl ether derivative.", false));
            TermData.Add(CVID.UNIMOD_CyDye_Cy3, new TermInfo(CVID.UNIMOD_CyDye_Cy3, @"UNIMOD", @"UNIMOD:494", @"CyDye-Cy3", @"Cy3 CyDye DIGE Fluor saturation dye.", false));
            TermData.Add(CVID.UNIMOD_CyDye_Cy5, new TermInfo(CVID.UNIMOD_CyDye_Cy5, @"UNIMOD", @"UNIMOD:495", @"CyDye-Cy5", @"Cy5 CyDye DIGE Fluor saturation dye.", false));
            TermData.Add(CVID.UNIMOD_BHTOH, new TermInfo(CVID.UNIMOD_BHTOH, @"UNIMOD", @"UNIMOD:498", @"BHTOH", @"Michael addition of t-butyl hydroxylated BHT (BHTOH) to C, H or K.", false));
            TermData.Add(CVID.UNIMOD_IGBP_13C_2_, new TermInfo(CVID.UNIMOD_IGBP_13C_2_, @"UNIMOD", @"UNIMOD:499", @"IGBP:13C(2)", @"Heavy IDBEST tag for quantitation.", false));
            TermData.Add(CVID.UNIMOD_Nmethylmaleimide_water, new TermInfo(CVID.UNIMOD_Nmethylmaleimide_water, @"UNIMOD", @"UNIMOD:500", @"Nmethylmaleimide+water", @"Nmethylmaleimidehydrolysis.", false));
            TermData.Add(CVID.UNIMOD_PyMIC, new TermInfo(CVID.UNIMOD_PyMIC, @"UNIMOD", @"UNIMOD:501", @"PyMIC", @"3-methyl-2-pyridyl isocyanate.", false));
            TermData.Add(CVID.UNIMOD_LG_lactam_K, new TermInfo(CVID.UNIMOD_LG_lactam_K, @"UNIMOD", @"UNIMOD:503", @"LG-lactam-K", @"Levuglandinyl - lysine lactam adduct.", false));
            TermData.Add(CVID.UNIMOD_LG_Hlactam_K, new TermInfo(CVID.UNIMOD_LG_Hlactam_K, @"UNIMOD", @"UNIMOD:504", @"LG-Hlactam-K", @"Levuglandinyl - lysine hydroxylactam adduct.", false));
            TermData.Add(CVID.UNIMOD_LG_lactam_R, new TermInfo(CVID.UNIMOD_LG_lactam_R, @"UNIMOD", @"UNIMOD:505", @"LG-lactam-R", @"Levuglandinyl - arginine lactam adduct.", false));
            TermData.Add(CVID.UNIMOD_LG_Hlactam_R, new TermInfo(CVID.UNIMOD_LG_Hlactam_R, @"UNIMOD", @"UNIMOD:506", @"LG-Hlactam-R", @"Levuglandinyl - arginine hydroxylactam adduct.", false));
            TermData.Add(CVID.UNIMOD_Dimethyl_2H_4_13C_2_, new TermInfo(CVID.UNIMOD_Dimethyl_2H_4_13C_2_, @"UNIMOD", @"UNIMOD:510", @"Dimethyl:2H(4)13C(2)", @"DiMethyl-C13HD2.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_, new TermInfo(CVID.UNIMOD_Hex_2_, @"UNIMOD", @"UNIMOD:512", @"Hex(2)", @"Lactosylation.", false));
            TermData.Add(CVID.UNIMOD_C8_QAT, new TermInfo(CVID.UNIMOD_C8_QAT, @"UNIMOD", @"UNIMOD:513", @"C8-QAT", @"", false));
            TermData.Add(CVID.UNIMOD_PropylNAGthiazoline, new TermInfo(CVID.UNIMOD_PropylNAGthiazoline, @"UNIMOD", @"UNIMOD:514", @"PropylNAGthiazoline", @"Propyl-1,2-dideoxy-2\'-methyl-alpha-D-glucopyranoso-", false));
            TermData.Add(CVID.UNIMOD_FNEM, new TermInfo(CVID.UNIMOD_FNEM, @"UNIMOD", @"UNIMOD:515", @"FNEM", @"Fluorescein-5-maleimide.", false));
            TermData.Add(CVID.UNIMOD_Diethyl, new TermInfo(CVID.UNIMOD_Diethyl, @"UNIMOD", @"UNIMOD:518", @"Diethyl", @"Diethylation, analogous to Dimethylation.", false));
            TermData.Add(CVID.UNIMOD_BisANS, new TermInfo(CVID.UNIMOD_BisANS, @"UNIMOD", @"UNIMOD:519", @"BisANS", @"4,4\'-dianilino-1,1\'-binaphthyl-5,5\'-disulfonic acid.", false));
            TermData.Add(CVID.UNIMOD_Piperidine, new TermInfo(CVID.UNIMOD_Piperidine, @"UNIMOD", @"UNIMOD:520", @"Piperidine", @"Piperidination.", false));
            TermData.Add(CVID.UNIMOD_Maleimide_PEO2_Biotin, new TermInfo(CVID.UNIMOD_Maleimide_PEO2_Biotin, @"UNIMOD", @"UNIMOD:522", @"Maleimide-PEO2-Biotin", @"Maleimide-Biotin.", false));
            TermData.Add(CVID.UNIMOD_Sulfo_NHS_LC_LC_Biotin, new TermInfo(CVID.UNIMOD_Sulfo_NHS_LC_LC_Biotin, @"UNIMOD", @"UNIMOD:523", @"Sulfo-NHS-LC-LC-Biotin", @"Biot_LC_LC.", false));
            TermData.Add(CVID.UNIMOD_CLIP_TRAQ_2, new TermInfo(CVID.UNIMOD_CLIP_TRAQ_2, @"UNIMOD", @"UNIMOD:525", @"CLIP_TRAQ_2", @"CLIP_TRAQ_2.", false));
            TermData.Add(CVID.UNIMOD_Dethiomethyl, new TermInfo(CVID.UNIMOD_Dethiomethyl, @"UNIMOD", @"UNIMOD:526", @"Dethiomethyl", @"Prompt loss of side chain from oxidised Met.", false));
            TermData.Add(CVID.UNIMOD_Methyl_Deamidated, new TermInfo(CVID.UNIMOD_Methyl_Deamidated, @"UNIMOD", @"UNIMOD:528", @"Methyl+Deamidated", @"Deamidation followed by a methylation.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_5_C_2_, new TermInfo(CVID.UNIMOD_Delta_H_5_C_2_, @"UNIMOD", @"UNIMOD:529", @"Delta:H(5)C(2)", @"Dimethylation of proline residue.", false));
            TermData.Add(CVID.UNIMOD_Cation_K, new TermInfo(CVID.UNIMOD_Cation_K, @"UNIMOD", @"UNIMOD:530", @"Cation:K", @"Replacement of proton by potassium.", false));
            TermData.Add(CVID.UNIMOD_Cation_Cu_I_, new TermInfo(CVID.UNIMOD_Cation_Cu_I_, @"UNIMOD", @"UNIMOD:531", @"Cation:Cu[I]", @"Replacement of proton by copper.", false));
            TermData.Add(CVID.UNIMOD_iTRAQ4plex114, new TermInfo(CVID.UNIMOD_iTRAQ4plex114, @"UNIMOD", @"UNIMOD:532", @"iTRAQ4plex114", @"Accurate mass for 114.", false));
            TermData.Add(CVID.UNIMOD_iTRAQ4plex115, new TermInfo(CVID.UNIMOD_iTRAQ4plex115, @"UNIMOD", @"UNIMOD:533", @"iTRAQ4plex115", @"Accurate mass for 115.", false));
            TermData.Add(CVID.UNIMOD_Dibromo, new TermInfo(CVID.UNIMOD_Dibromo, @"UNIMOD", @"UNIMOD:534", @"Dibromo", @"Dibromo.", false));
            TermData.Add(CVID.UNIMOD_LRGG, new TermInfo(CVID.UNIMOD_LRGG, @"UNIMOD", @"UNIMOD:535", @"LRGG", @"Ubiquitination.", false));
            TermData.Add(CVID.UNIMOD_CLIP_TRAQ_3, new TermInfo(CVID.UNIMOD_CLIP_TRAQ_3, @"UNIMOD", @"UNIMOD:536", @"CLIP_TRAQ_3", @"CLIP_TRAQ_3.", false));
            TermData.Add(CVID.UNIMOD_CLIP_TRAQ_4, new TermInfo(CVID.UNIMOD_CLIP_TRAQ_4, @"UNIMOD", @"UNIMOD:537", @"CLIP_TRAQ_4", @"CLIP_TRAQ_4.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Cayman_10141, new TermInfo(CVID.UNIMOD_Biotin_Cayman_10141, @"UNIMOD", @"UNIMOD:538", @"Biotin:Cayman-10141", @"Was 15dB-biotin.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Cayman_10013, new TermInfo(CVID.UNIMOD_Biotin_Cayman_10013, @"UNIMOD", @"UNIMOD:539", @"Biotin:Cayman-10013", @"Was PGA1-biotin.", false));
            TermData.Add(CVID.UNIMOD_Ala__Ser, new TermInfo(CVID.UNIMOD_Ala__Ser, @"UNIMOD", @"UNIMOD:540", @"Ala->Ser", @"Ala->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Thr, new TermInfo(CVID.UNIMOD_Ala__Thr, @"UNIMOD", @"UNIMOD:541", @"Ala->Thr", @"Ala->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Asp, new TermInfo(CVID.UNIMOD_Ala__Asp, @"UNIMOD", @"UNIMOD:542", @"Ala->Asp", @"Ala->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Pro, new TermInfo(CVID.UNIMOD_Ala__Pro, @"UNIMOD", @"UNIMOD:543", @"Ala->Pro", @"Ala->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Gly, new TermInfo(CVID.UNIMOD_Ala__Gly, @"UNIMOD", @"UNIMOD:544", @"Ala->Gly", @"Ala->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Glu, new TermInfo(CVID.UNIMOD_Ala__Glu, @"UNIMOD", @"UNIMOD:545", @"Ala->Glu", @"Ala->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Val, new TermInfo(CVID.UNIMOD_Ala__Val, @"UNIMOD", @"UNIMOD:546", @"Ala->Val", @"Ala->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Phe, new TermInfo(CVID.UNIMOD_Cys__Phe, @"UNIMOD", @"UNIMOD:547", @"Cys->Phe", @"Cys->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Ser, new TermInfo(CVID.UNIMOD_Cys__Ser, @"UNIMOD", @"UNIMOD:548", @"Cys->Ser", @"Cys->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Trp, new TermInfo(CVID.UNIMOD_Cys__Trp, @"UNIMOD", @"UNIMOD:549", @"Cys->Trp", @"Cys->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Tyr, new TermInfo(CVID.UNIMOD_Cys__Tyr, @"UNIMOD", @"UNIMOD:550", @"Cys->Tyr", @"Cys->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Arg, new TermInfo(CVID.UNIMOD_Cys__Arg, @"UNIMOD", @"UNIMOD:551", @"Cys->Arg", @"Cys->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Gly, new TermInfo(CVID.UNIMOD_Cys__Gly, @"UNIMOD", @"UNIMOD:552", @"Cys->Gly", @"Cys->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Ala, new TermInfo(CVID.UNIMOD_Asp__Ala, @"UNIMOD", @"UNIMOD:553", @"Asp->Ala", @"Asp->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__His, new TermInfo(CVID.UNIMOD_Asp__His, @"UNIMOD", @"UNIMOD:554", @"Asp->His", @"Asp->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Asn, new TermInfo(CVID.UNIMOD_Asp__Asn, @"UNIMOD", @"UNIMOD:555", @"Asp->Asn", @"Asp->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Gly, new TermInfo(CVID.UNIMOD_Asp__Gly, @"UNIMOD", @"UNIMOD:556", @"Asp->Gly", @"Asp->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Tyr, new TermInfo(CVID.UNIMOD_Asp__Tyr, @"UNIMOD", @"UNIMOD:557", @"Asp->Tyr", @"Asp->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Glu, new TermInfo(CVID.UNIMOD_Asp__Glu, @"UNIMOD", @"UNIMOD:558", @"Asp->Glu", @"Asp->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Val, new TermInfo(CVID.UNIMOD_Asp__Val, @"UNIMOD", @"UNIMOD:559", @"Asp->Val", @"Asp->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Ala, new TermInfo(CVID.UNIMOD_Glu__Ala, @"UNIMOD", @"UNIMOD:560", @"Glu->Ala", @"Glu->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Gln, new TermInfo(CVID.UNIMOD_Glu__Gln, @"UNIMOD", @"UNIMOD:561", @"Glu->Gln", @"Glu->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Asp, new TermInfo(CVID.UNIMOD_Glu__Asp, @"UNIMOD", @"UNIMOD:562", @"Glu->Asp", @"Glu->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Lys, new TermInfo(CVID.UNIMOD_Glu__Lys, @"UNIMOD", @"UNIMOD:563", @"Glu->Lys", @"Glu->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Gly, new TermInfo(CVID.UNIMOD_Glu__Gly, @"UNIMOD", @"UNIMOD:564", @"Glu->Gly", @"Glu->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Val, new TermInfo(CVID.UNIMOD_Glu__Val, @"UNIMOD", @"UNIMOD:565", @"Glu->Val", @"Glu->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Ser, new TermInfo(CVID.UNIMOD_Phe__Ser, @"UNIMOD", @"UNIMOD:566", @"Phe->Ser", @"Phe->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Cys, new TermInfo(CVID.UNIMOD_Phe__Cys, @"UNIMOD", @"UNIMOD:567", @"Phe->Cys", @"Phe->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Xle, new TermInfo(CVID.UNIMOD_Phe__Xle, @"UNIMOD", @"UNIMOD:568", @"Phe->Xle", @"Phe->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Tyr, new TermInfo(CVID.UNIMOD_Phe__Tyr, @"UNIMOD", @"UNIMOD:569", @"Phe->Tyr", @"Phe->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Val, new TermInfo(CVID.UNIMOD_Phe__Val, @"UNIMOD", @"UNIMOD:570", @"Phe->Val", @"Phe->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Ala, new TermInfo(CVID.UNIMOD_Gly__Ala, @"UNIMOD", @"UNIMOD:571", @"Gly->Ala", @"Gly->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Ser, new TermInfo(CVID.UNIMOD_Gly__Ser, @"UNIMOD", @"UNIMOD:572", @"Gly->Ser", @"Gly->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Trp, new TermInfo(CVID.UNIMOD_Gly__Trp, @"UNIMOD", @"UNIMOD:573", @"Gly->Trp", @"Gly->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Glu, new TermInfo(CVID.UNIMOD_Gly__Glu, @"UNIMOD", @"UNIMOD:574", @"Gly->Glu", @"Gly->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Val, new TermInfo(CVID.UNIMOD_Gly__Val, @"UNIMOD", @"UNIMOD:575", @"Gly->Val", @"Gly->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Asp, new TermInfo(CVID.UNIMOD_Gly__Asp, @"UNIMOD", @"UNIMOD:576", @"Gly->Asp", @"Gly->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Cys, new TermInfo(CVID.UNIMOD_Gly__Cys, @"UNIMOD", @"UNIMOD:577", @"Gly->Cys", @"Gly->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Arg, new TermInfo(CVID.UNIMOD_Gly__Arg, @"UNIMOD", @"UNIMOD:578", @"Gly->Arg", @"Gly->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Pro, new TermInfo(CVID.UNIMOD_His__Pro, @"UNIMOD", @"UNIMOD:580", @"His->Pro", @"His->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Tyr, new TermInfo(CVID.UNIMOD_His__Tyr, @"UNIMOD", @"UNIMOD:581", @"His->Tyr", @"His->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Gln, new TermInfo(CVID.UNIMOD_His__Gln, @"UNIMOD", @"UNIMOD:582", @"His->Gln", @"His->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Arg, new TermInfo(CVID.UNIMOD_His__Arg, @"UNIMOD", @"UNIMOD:584", @"His->Arg", @"His->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Xle, new TermInfo(CVID.UNIMOD_His__Xle, @"UNIMOD", @"UNIMOD:585", @"His->Xle", @"His->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Thr, new TermInfo(CVID.UNIMOD_Xle__Thr, @"UNIMOD", @"UNIMOD:588", @"Xle->Thr", @"Leu/Ile->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Asn, new TermInfo(CVID.UNIMOD_Xle__Asn, @"UNIMOD", @"UNIMOD:589", @"Xle->Asn", @"Leu/Ile->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Lys, new TermInfo(CVID.UNIMOD_Xle__Lys, @"UNIMOD", @"UNIMOD:590", @"Xle->Lys", @"Leu/Ile->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Thr, new TermInfo(CVID.UNIMOD_Lys__Thr, @"UNIMOD", @"UNIMOD:594", @"Lys->Thr", @"Lys->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Asn, new TermInfo(CVID.UNIMOD_Lys__Asn, @"UNIMOD", @"UNIMOD:595", @"Lys->Asn", @"Lys->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Glu, new TermInfo(CVID.UNIMOD_Lys__Glu, @"UNIMOD", @"UNIMOD:596", @"Lys->Glu", @"Lys->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Gln, new TermInfo(CVID.UNIMOD_Lys__Gln, @"UNIMOD", @"UNIMOD:597", @"Lys->Gln", @"Lys->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Met, new TermInfo(CVID.UNIMOD_Lys__Met, @"UNIMOD", @"UNIMOD:598", @"Lys->Met", @"Lys->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Arg, new TermInfo(CVID.UNIMOD_Lys__Arg, @"UNIMOD", @"UNIMOD:599", @"Lys->Arg", @"Lys->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Xle, new TermInfo(CVID.UNIMOD_Lys__Xle, @"UNIMOD", @"UNIMOD:600", @"Lys->Xle", @"Lys->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Ser, new TermInfo(CVID.UNIMOD_Xle__Ser, @"UNIMOD", @"UNIMOD:601", @"Xle->Ser", @"Leu/Ile->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Phe, new TermInfo(CVID.UNIMOD_Xle__Phe, @"UNIMOD", @"UNIMOD:602", @"Xle->Phe", @"Leu/Ile->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Trp, new TermInfo(CVID.UNIMOD_Xle__Trp, @"UNIMOD", @"UNIMOD:603", @"Xle->Trp", @"Leu/Ile->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Pro, new TermInfo(CVID.UNIMOD_Xle__Pro, @"UNIMOD", @"UNIMOD:604", @"Xle->Pro", @"Leu/Ile->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Val, new TermInfo(CVID.UNIMOD_Xle__Val, @"UNIMOD", @"UNIMOD:605", @"Xle->Val", @"Leu/Ile->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__His, new TermInfo(CVID.UNIMOD_Xle__His, @"UNIMOD", @"UNIMOD:606", @"Xle->His", @"Leu/Ile->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Gln, new TermInfo(CVID.UNIMOD_Xle__Gln, @"UNIMOD", @"UNIMOD:607", @"Xle->Gln", @"Leu/Ile->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Met, new TermInfo(CVID.UNIMOD_Xle__Met, @"UNIMOD", @"UNIMOD:608", @"Xle->Met", @"Leu/Ile->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Arg, new TermInfo(CVID.UNIMOD_Xle__Arg, @"UNIMOD", @"UNIMOD:609", @"Xle->Arg", @"Leu/Ile->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Thr, new TermInfo(CVID.UNIMOD_Met__Thr, @"UNIMOD", @"UNIMOD:610", @"Met->Thr", @"Met->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Arg, new TermInfo(CVID.UNIMOD_Met__Arg, @"UNIMOD", @"UNIMOD:611", @"Met->Arg", @"Met->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Lys, new TermInfo(CVID.UNIMOD_Met__Lys, @"UNIMOD", @"UNIMOD:613", @"Met->Lys", @"Met->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Xle, new TermInfo(CVID.UNIMOD_Met__Xle, @"UNIMOD", @"UNIMOD:614", @"Met->Xle", @"Met->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Val, new TermInfo(CVID.UNIMOD_Met__Val, @"UNIMOD", @"UNIMOD:615", @"Met->Val", @"Met->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Ser, new TermInfo(CVID.UNIMOD_Asn__Ser, @"UNIMOD", @"UNIMOD:616", @"Asn->Ser", @"Asn->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Thr, new TermInfo(CVID.UNIMOD_Asn__Thr, @"UNIMOD", @"UNIMOD:617", @"Asn->Thr", @"Asn->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Lys, new TermInfo(CVID.UNIMOD_Asn__Lys, @"UNIMOD", @"UNIMOD:618", @"Asn->Lys", @"Asn->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Tyr, new TermInfo(CVID.UNIMOD_Asn__Tyr, @"UNIMOD", @"UNIMOD:619", @"Asn->Tyr", @"Asn->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__His, new TermInfo(CVID.UNIMOD_Asn__His, @"UNIMOD", @"UNIMOD:620", @"Asn->His", @"Asn->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Asp, new TermInfo(CVID.UNIMOD_Asn__Asp, @"UNIMOD", @"UNIMOD:621", @"Asn->Asp", @"Asn->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Xle, new TermInfo(CVID.UNIMOD_Asn__Xle, @"UNIMOD", @"UNIMOD:622", @"Asn->Xle", @"Asn->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Ser, new TermInfo(CVID.UNIMOD_Pro__Ser, @"UNIMOD", @"UNIMOD:623", @"Pro->Ser", @"Pro->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Ala, new TermInfo(CVID.UNIMOD_Pro__Ala, @"UNIMOD", @"UNIMOD:624", @"Pro->Ala", @"Pro->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__His, new TermInfo(CVID.UNIMOD_Pro__His, @"UNIMOD", @"UNIMOD:625", @"Pro->His", @"Pro->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Gln, new TermInfo(CVID.UNIMOD_Pro__Gln, @"UNIMOD", @"UNIMOD:626", @"Pro->Gln", @"Pro->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Thr, new TermInfo(CVID.UNIMOD_Pro__Thr, @"UNIMOD", @"UNIMOD:627", @"Pro->Thr", @"Pro->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Arg, new TermInfo(CVID.UNIMOD_Pro__Arg, @"UNIMOD", @"UNIMOD:628", @"Pro->Arg", @"Pro->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Xle, new TermInfo(CVID.UNIMOD_Pro__Xle, @"UNIMOD", @"UNIMOD:629", @"Pro->Xle", @"Pro->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Pro, new TermInfo(CVID.UNIMOD_Gln__Pro, @"UNIMOD", @"UNIMOD:630", @"Gln->Pro", @"Gln->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Lys, new TermInfo(CVID.UNIMOD_Gln__Lys, @"UNIMOD", @"UNIMOD:631", @"Gln->Lys", @"Gln->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Glu, new TermInfo(CVID.UNIMOD_Gln__Glu, @"UNIMOD", @"UNIMOD:632", @"Gln->Glu", @"Gln->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__His, new TermInfo(CVID.UNIMOD_Gln__His, @"UNIMOD", @"UNIMOD:633", @"Gln->His", @"Gln->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Arg, new TermInfo(CVID.UNIMOD_Gln__Arg, @"UNIMOD", @"UNIMOD:634", @"Gln->Arg", @"Gln->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Xle, new TermInfo(CVID.UNIMOD_Gln__Xle, @"UNIMOD", @"UNIMOD:635", @"Gln->Xle", @"Gln->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Ser, new TermInfo(CVID.UNIMOD_Arg__Ser, @"UNIMOD", @"UNIMOD:636", @"Arg->Ser", @"Arg->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Trp, new TermInfo(CVID.UNIMOD_Arg__Trp, @"UNIMOD", @"UNIMOD:637", @"Arg->Trp", @"Arg->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Thr, new TermInfo(CVID.UNIMOD_Arg__Thr, @"UNIMOD", @"UNIMOD:638", @"Arg->Thr", @"Arg->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Pro, new TermInfo(CVID.UNIMOD_Arg__Pro, @"UNIMOD", @"UNIMOD:639", @"Arg->Pro", @"Arg->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Lys, new TermInfo(CVID.UNIMOD_Arg__Lys, @"UNIMOD", @"UNIMOD:640", @"Arg->Lys", @"Arg->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__His, new TermInfo(CVID.UNIMOD_Arg__His, @"UNIMOD", @"UNIMOD:641", @"Arg->His", @"Arg->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Gln, new TermInfo(CVID.UNIMOD_Arg__Gln, @"UNIMOD", @"UNIMOD:642", @"Arg->Gln", @"Arg->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Met, new TermInfo(CVID.UNIMOD_Arg__Met, @"UNIMOD", @"UNIMOD:643", @"Arg->Met", @"Arg->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Cys, new TermInfo(CVID.UNIMOD_Arg__Cys, @"UNIMOD", @"UNIMOD:644", @"Arg->Cys", @"Arg->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Xle, new TermInfo(CVID.UNIMOD_Arg__Xle, @"UNIMOD", @"UNIMOD:645", @"Arg->Xle", @"Arg->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Gly, new TermInfo(CVID.UNIMOD_Arg__Gly, @"UNIMOD", @"UNIMOD:646", @"Arg->Gly", @"Arg->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Phe, new TermInfo(CVID.UNIMOD_Ser__Phe, @"UNIMOD", @"UNIMOD:647", @"Ser->Phe", @"Ser->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Ala, new TermInfo(CVID.UNIMOD_Ser__Ala, @"UNIMOD", @"UNIMOD:648", @"Ser->Ala", @"Ser->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Trp, new TermInfo(CVID.UNIMOD_Ser__Trp, @"UNIMOD", @"UNIMOD:649", @"Ser->Trp", @"Ser->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Thr, new TermInfo(CVID.UNIMOD_Ser__Thr, @"UNIMOD", @"UNIMOD:650", @"Ser->Thr", @"Ser->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Asn, new TermInfo(CVID.UNIMOD_Ser__Asn, @"UNIMOD", @"UNIMOD:651", @"Ser->Asn", @"Ser->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Pro, new TermInfo(CVID.UNIMOD_Ser__Pro, @"UNIMOD", @"UNIMOD:652", @"Ser->Pro", @"Ser->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Tyr, new TermInfo(CVID.UNIMOD_Ser__Tyr, @"UNIMOD", @"UNIMOD:653", @"Ser->Tyr", @"Ser->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Cys, new TermInfo(CVID.UNIMOD_Ser__Cys, @"UNIMOD", @"UNIMOD:654", @"Ser->Cys", @"Ser->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Arg, new TermInfo(CVID.UNIMOD_Ser__Arg, @"UNIMOD", @"UNIMOD:655", @"Ser->Arg", @"Ser->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Xle, new TermInfo(CVID.UNIMOD_Ser__Xle, @"UNIMOD", @"UNIMOD:656", @"Ser->Xle", @"Ser->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Gly, new TermInfo(CVID.UNIMOD_Ser__Gly, @"UNIMOD", @"UNIMOD:657", @"Ser->Gly", @"Ser->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Ser, new TermInfo(CVID.UNIMOD_Thr__Ser, @"UNIMOD", @"UNIMOD:658", @"Thr->Ser", @"Thr->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Ala, new TermInfo(CVID.UNIMOD_Thr__Ala, @"UNIMOD", @"UNIMOD:659", @"Thr->Ala", @"Thr->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Asn, new TermInfo(CVID.UNIMOD_Thr__Asn, @"UNIMOD", @"UNIMOD:660", @"Thr->Asn", @"Thr->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Lys, new TermInfo(CVID.UNIMOD_Thr__Lys, @"UNIMOD", @"UNIMOD:661", @"Thr->Lys", @"Thr->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Pro, new TermInfo(CVID.UNIMOD_Thr__Pro, @"UNIMOD", @"UNIMOD:662", @"Thr->Pro", @"Thr->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Met, new TermInfo(CVID.UNIMOD_Thr__Met, @"UNIMOD", @"UNIMOD:663", @"Thr->Met", @"Thr->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Xle, new TermInfo(CVID.UNIMOD_Thr__Xle, @"UNIMOD", @"UNIMOD:664", @"Thr->Xle", @"Thr->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Arg, new TermInfo(CVID.UNIMOD_Thr__Arg, @"UNIMOD", @"UNIMOD:665", @"Thr->Arg", @"Thr->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Phe, new TermInfo(CVID.UNIMOD_Val__Phe, @"UNIMOD", @"UNIMOD:666", @"Val->Phe", @"Val->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Ala, new TermInfo(CVID.UNIMOD_Val__Ala, @"UNIMOD", @"UNIMOD:667", @"Val->Ala", @"Val->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Glu, new TermInfo(CVID.UNIMOD_Val__Glu, @"UNIMOD", @"UNIMOD:668", @"Val->Glu", @"Val->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Met, new TermInfo(CVID.UNIMOD_Val__Met, @"UNIMOD", @"UNIMOD:669", @"Val->Met", @"Val->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Asp, new TermInfo(CVID.UNIMOD_Val__Asp, @"UNIMOD", @"UNIMOD:670", @"Val->Asp", @"Val->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Xle, new TermInfo(CVID.UNIMOD_Val__Xle, @"UNIMOD", @"UNIMOD:671", @"Val->Xle", @"Val->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Gly, new TermInfo(CVID.UNIMOD_Val__Gly, @"UNIMOD", @"UNIMOD:672", @"Val->Gly", @"Val->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Ser, new TermInfo(CVID.UNIMOD_Trp__Ser, @"UNIMOD", @"UNIMOD:673", @"Trp->Ser", @"Trp->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Cys, new TermInfo(CVID.UNIMOD_Trp__Cys, @"UNIMOD", @"UNIMOD:674", @"Trp->Cys", @"Trp->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Arg, new TermInfo(CVID.UNIMOD_Trp__Arg, @"UNIMOD", @"UNIMOD:675", @"Trp->Arg", @"Trp->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Gly, new TermInfo(CVID.UNIMOD_Trp__Gly, @"UNIMOD", @"UNIMOD:676", @"Trp->Gly", @"Trp->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Xle, new TermInfo(CVID.UNIMOD_Trp__Xle, @"UNIMOD", @"UNIMOD:677", @"Trp->Xle", @"Trp->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Phe, new TermInfo(CVID.UNIMOD_Tyr__Phe, @"UNIMOD", @"UNIMOD:678", @"Tyr->Phe", @"Tyr->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Ser, new TermInfo(CVID.UNIMOD_Tyr__Ser, @"UNIMOD", @"UNIMOD:679", @"Tyr->Ser", @"Tyr->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Asn, new TermInfo(CVID.UNIMOD_Tyr__Asn, @"UNIMOD", @"UNIMOD:680", @"Tyr->Asn", @"Tyr->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__His, new TermInfo(CVID.UNIMOD_Tyr__His, @"UNIMOD", @"UNIMOD:681", @"Tyr->His", @"Tyr->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Asp, new TermInfo(CVID.UNIMOD_Tyr__Asp, @"UNIMOD", @"UNIMOD:682", @"Tyr->Asp", @"Tyr->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Cys, new TermInfo(CVID.UNIMOD_Tyr__Cys, @"UNIMOD", @"UNIMOD:683", @"Tyr->Cys", @"Tyr->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_BDMAPP, new TermInfo(CVID.UNIMOD_BDMAPP, @"UNIMOD", @"UNIMOD:684", @"BDMAPP", @"Mass Defect Tag on lysine e-amino.", false));
            TermData.Add(CVID.UNIMOD_NA_LNO2, new TermInfo(CVID.UNIMOD_NA_LNO2, @"UNIMOD", @"UNIMOD:685", @"NA-LNO2", @"Nitroalkylation by Nitro Linoleic Acid.", false));
            TermData.Add(CVID.UNIMOD_NA_OA_NO2, new TermInfo(CVID.UNIMOD_NA_OA_NO2, @"UNIMOD", @"UNIMOD:686", @"NA-OA-NO2", @"Nitroalkylation by Nitro Oleic Acid.", false));
            TermData.Add(CVID.UNIMOD_ICPL_2H_4_, new TermInfo(CVID.UNIMOD_ICPL_2H_4_, @"UNIMOD", @"UNIMOD:687", @"ICPL:2H(4)", @"Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, medium form.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_1_, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_1_, @"UNIMOD", @"UNIMOD:695", @"Label:13C(6)15N(1)", @"13C(6) 15N(1) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_9_13C_6_15N_2_, new TermInfo(CVID.UNIMOD_Label_2H_9_13C_6_15N_2_, @"UNIMOD", @"UNIMOD:696", @"Label:2H(9)13C(6)15N(2)", @"13C(6) 15N(2) (D)9 SILAC label.", false));
            TermData.Add(CVID.UNIMOD_NIC, new TermInfo(CVID.UNIMOD_NIC, @"UNIMOD", @"UNIMOD:697", @"NIC", @"Nicotinic Acid.", false));
            TermData.Add(CVID.UNIMOD_dNIC, new TermInfo(CVID.UNIMOD_dNIC, @"UNIMOD", @"UNIMOD:698", @"dNIC", @"Deuterated Nicotinic Acid.", false));
            TermData.Add(CVID.UNIMOD_HNE_Delta_H_2_O, new TermInfo(CVID.UNIMOD_HNE_Delta_H_2_O, @"UNIMOD", @"UNIMOD:720", @"HNE-Delta:H(2)O", @"Dehydrated 4-hydroxynonenal.", false));
            TermData.Add(CVID.UNIMOD_4_ONE, new TermInfo(CVID.UNIMOD_4_ONE, @"UNIMOD", @"UNIMOD:721", @"4-ONE", @"4-Oxononenal (ONE).", false));
            TermData.Add(CVID.UNIMOD_O_Dimethylphosphate, new TermInfo(CVID.UNIMOD_O_Dimethylphosphate, @"UNIMOD", @"UNIMOD:723", @"O-Dimethylphosphate", @"O-Dimethylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_O_Methylphosphate, new TermInfo(CVID.UNIMOD_O_Methylphosphate, @"UNIMOD", @"UNIMOD:724", @"O-Methylphosphate", @"O-Methylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_Diethylphosphate, new TermInfo(CVID.UNIMOD_Diethylphosphate, @"UNIMOD", @"UNIMOD:725", @"Diethylphosphate", @"O-Diethylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_Ethylphosphate, new TermInfo(CVID.UNIMOD_Ethylphosphate, @"UNIMOD", @"UNIMOD:726", @"Ethylphosphate", @"O-Ethylphosphorylation.", false));
            TermData.Add(CVID.UNIMOD_O_pinacolylmethylphosphonate, new TermInfo(CVID.UNIMOD_O_pinacolylmethylphosphonate, @"UNIMOD", @"UNIMOD:727", @"O-pinacolylmethylphosphonate", @"O-pinacolylmethylphosphonylation.", false));
            TermData.Add(CVID.UNIMOD_Methylphosphonate, new TermInfo(CVID.UNIMOD_Methylphosphonate, @"UNIMOD", @"UNIMOD:728", @"Methylphosphonate", @"Methylphosphonylation.", false));
            TermData.Add(CVID.UNIMOD_O_Isopropylmethylphosphonate, new TermInfo(CVID.UNIMOD_O_Isopropylmethylphosphonate, @"UNIMOD", @"UNIMOD:729", @"O-Isopropylmethylphosphonate", @"O-Isopropylmethylphosphonylation.", false));
            TermData.Add(CVID.UNIMOD_iTRAQ8plex, new TermInfo(CVID.UNIMOD_iTRAQ8plex, @"UNIMOD", @"UNIMOD:730", @"iTRAQ8plex", @"Representative mass and accurate mass for 113, 114, 116 & 117.", false));
            TermData.Add(CVID.UNIMOD_iTRAQ8plex_13C_6_15N_2_, new TermInfo(CVID.UNIMOD_iTRAQ8plex_13C_6_15N_2_, @"UNIMOD", @"UNIMOD:731", @"iTRAQ8plex:13C(6)15N(2)", @"Accurate mass for 115, 118, 119 & 121.", false));
            TermData.Add(CVID.UNIMOD_Ethanolamine, new TermInfo(CVID.UNIMOD_Ethanolamine, @"UNIMOD", @"UNIMOD:734", @"Ethanolamine", @"Carboxyl modification with ethanolamine.", false));
            TermData.Add(CVID.UNIMOD_BEMAD_ST, new TermInfo(CVID.UNIMOD_BEMAD_ST, @"UNIMOD", @"UNIMOD:735", @"BEMAD_ST", @"Beta elimination of modified S or T followed by Michael addition of DTT.", false));
            TermData.Add(CVID.UNIMOD_BEMAD_C, new TermInfo(CVID.UNIMOD_BEMAD_C, @"UNIMOD", @"UNIMOD:736", @"BEMAD_C", @"Beta elimination of alkylated Cys followed by Michael addition of DTT.", false));
            TermData.Add(CVID.UNIMOD_TMT6plex, new TermInfo(CVID.UNIMOD_TMT6plex, @"UNIMOD", @"UNIMOD:737", @"TMT6plex", @"Sixplex Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_TMT2plex, new TermInfo(CVID.UNIMOD_TMT2plex, @"UNIMOD", @"UNIMOD:738", @"TMT2plex", @"Duplex Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_TMT, new TermInfo(CVID.UNIMOD_TMT, @"UNIMOD", @"UNIMOD:739", @"TMT", @"Native Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_ExacTagThiol, new TermInfo(CVID.UNIMOD_ExacTagThiol, @"UNIMOD", @"UNIMOD:740", @"ExacTagThiol", @"ExacTag Thiol label mass for 2-4-7-10 plex.", false));
            TermData.Add(CVID.UNIMOD_ExacTagAmine, new TermInfo(CVID.UNIMOD_ExacTagAmine, @"UNIMOD", @"UNIMOD:741", @"ExacTagAmine", @"ExacTag Amine label mass for 2-4-7-10 plex.", false));
            TermData.Add(CVID.UNIMOD_4_ONE_Delta_H__2_O__1_, new TermInfo(CVID.UNIMOD_4_ONE_Delta_H__2_O__1_, @"UNIMOD", @"UNIMOD:743", @"4-ONE+Delta:H(-2)O(-1)", @"Dehydrated 4-Oxononenal Michael adduct.", false));
            TermData.Add(CVID.UNIMOD_NO_SMX_SEMD, new TermInfo(CVID.UNIMOD_NO_SMX_SEMD, @"UNIMOD", @"UNIMOD:744", @"NO_SMX_SEMD", @"Nitroso Sulfamethoxazole Sulphenamide thiol adduct.", false));
            TermData.Add(CVID.UNIMOD_NO_SMX_SMCT, new TermInfo(CVID.UNIMOD_NO_SMX_SMCT, @"UNIMOD", @"UNIMOD:745", @"NO_SMX_SMCT", @"Nitroso Sulfamethoxazole semimercaptal thiol adduct.", false));
            TermData.Add(CVID.UNIMOD_NO_SMX_SIMD, new TermInfo(CVID.UNIMOD_NO_SMX_SIMD, @"UNIMOD", @"UNIMOD:746", @"NO_SMX_SIMD", @"Nitroso Sulfamethoxazole Sulfinamide thiol adduct.", false));
            TermData.Add(CVID.UNIMOD_Malonyl, new TermInfo(CVID.UNIMOD_Malonyl, @"UNIMOD", @"UNIMOD:747", @"Malonyl", @"Malonylation.", false));
            TermData.Add(CVID.UNIMOD_3sulfo, new TermInfo(CVID.UNIMOD_3sulfo, @"UNIMOD", @"UNIMOD:748", @"3sulfo", @"Derivatization by N-term modification using 3-Sulfobenzoic succinimidyl ester.", false));
            TermData.Add(CVID.UNIMOD_trifluoro, new TermInfo(CVID.UNIMOD_trifluoro, @"UNIMOD", @"UNIMOD:750", @"trifluoro", @"Trifluoroleucine replacement of leucine.", false));
            TermData.Add(CVID.UNIMOD_TNBS, new TermInfo(CVID.UNIMOD_TNBS, @"UNIMOD", @"UNIMOD:751", @"TNBS", @"Tri nitro benzene.", false));
            TermData.Add(CVID.UNIMOD_IDEnT, new TermInfo(CVID.UNIMOD_IDEnT, @"UNIMOD", @"UNIMOD:762", @"IDEnT", @"Isotope Distribution Encoded Tag.", false));
            TermData.Add(CVID.UNIMOD_BEMAD_ST_2H_6_, new TermInfo(CVID.UNIMOD_BEMAD_ST_2H_6_, @"UNIMOD", @"UNIMOD:763", @"BEMAD_ST:2H(6)", @"Beta elimination of modified S or T followed by Michael addition of labelled DTT.", false));
            TermData.Add(CVID.UNIMOD_BEMAD_C_2H_6_, new TermInfo(CVID.UNIMOD_BEMAD_C_2H_6_, @"UNIMOD", @"UNIMOD:764", @"BEMAD_C:2H(6)", @"Beta elimination of alkylated Cys followed by Michael addition of labelled DTT.", false));
            TermData.Add(CVID.UNIMOD_Met_loss, new TermInfo(CVID.UNIMOD_Met_loss, @"UNIMOD", @"UNIMOD:765", @"Met-loss", @"Removal of initiator methionine from protein N-terminus.", false));
            TermData.Add(CVID.UNIMOD_Met_loss_Acetyl, new TermInfo(CVID.UNIMOD_Met_loss_Acetyl, @"UNIMOD", @"UNIMOD:766", @"Met-loss+Acetyl", @"Removal of initiator methionine from protein N-terminus, then acetylation of the new N-terminus.", false));
            TermData.Add(CVID.UNIMOD_Menadione_HQ, new TermInfo(CVID.UNIMOD_Menadione_HQ, @"UNIMOD", @"UNIMOD:767", @"Menadione-HQ", @"Menadione hydroquinone derivative.", false));
            TermData.Add(CVID.UNIMOD_Methyl_Acetyl_2H_3_, new TermInfo(CVID.UNIMOD_Methyl_Acetyl_2H_3_, @"UNIMOD", @"UNIMOD:768", @"Methyl+Acetyl:2H(3)", @"Mono-methylated lysine labelled with Acetyl_heavy.", false));
            TermData.Add(CVID.UNIMOD_lapachenole, new TermInfo(CVID.UNIMOD_lapachenole, @"UNIMOD", @"UNIMOD:771", @"lapachenole", @"Lapachenole photochemically added to cysteine.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_5_, new TermInfo(CVID.UNIMOD_Label_13C_5_, @"UNIMOD", @"UNIMOD:772", @"Label:13C(5)", @"13C(5) Silac label.", false));
            TermData.Add(CVID.UNIMOD_maleimide, new TermInfo(CVID.UNIMOD_maleimide, @"UNIMOD", @"UNIMOD:773", @"maleimide", @"Maleimide.", false));
            TermData.Add(CVID.UNIMOD_Biotin_phenacyl, new TermInfo(CVID.UNIMOD_Biotin_phenacyl, @"UNIMOD", @"UNIMOD:774", @"Biotin-phenacyl", @"Alkylation by biotinylated form of phenacyl bromide.", false));
            TermData.Add(CVID.UNIMOD_Carboxymethyl_13C_2_, new TermInfo(CVID.UNIMOD_Carboxymethyl_13C_2_, @"UNIMOD", @"UNIMOD:775", @"Carboxymethyl:13C(2)", @"Iodoacetic acid derivative w/ 13C label.", false));
            TermData.Add(CVID.UNIMOD_NEM_2H_5_, new TermInfo(CVID.UNIMOD_NEM_2H_5_, @"UNIMOD", @"UNIMOD:776", @"NEM:2H(5)", @"D5 N-ethylmaleimide on cysteines.", false));
            TermData.Add(CVID.UNIMOD_AEC_MAEC_2H_4_, new TermInfo(CVID.UNIMOD_AEC_MAEC_2H_4_, @"UNIMOD", @"UNIMOD:792", @"AEC-MAEC:2H(4)", @"Deuterium cysteamine modification to S or T.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:793", @"Hex(1)HexNAc(1)", @"Hex1HexNAc1.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6__GG, new TermInfo(CVID.UNIMOD_Label_13C_6__GG, @"UNIMOD", @"UNIMOD:799", @"Label:13C(6)+GG", @"13C6 labeled ubiquitinylation residue.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21345, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21345, @"UNIMOD", @"UNIMOD:800", @"Biotin:Thermo-21345", @"Was PentylamineBiotin.", false));
            TermData.Add(CVID.UNIMOD_Pentylamine, new TermInfo(CVID.UNIMOD_Pentylamine, @"UNIMOD", @"UNIMOD:801", @"Pentylamine", @"Labeling transglutaminase substrate on glutamine side chain.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21360, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21360, @"UNIMOD", @"UNIMOD:811", @"Biotin:Thermo-21360", @"Was Biotin-PEO4-hydrazide.", false));
            TermData.Add(CVID.UNIMOD_Cy3b_maleimide, new TermInfo(CVID.UNIMOD_Cy3b_maleimide, @"UNIMOD", @"UNIMOD:821", @"Cy3b-maleimide", @"Fluorescent dye that labels cysteines.", false));
            TermData.Add(CVID.UNIMOD_Gly_loss_Amide, new TermInfo(CVID.UNIMOD_Gly_loss_Amide, @"UNIMOD", @"UNIMOD:822", @"Gly-loss+Amide", @"Enzymatic glycine removal leaving an amidated C-terminus.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BMOE, new TermInfo(CVID.UNIMOD_Xlink_BMOE, @"UNIMOD", @"UNIMOD:824", @"Xlink:BMOE", @"Intact or monolink BMOE crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DFDNB, new TermInfo(CVID.UNIMOD_Xlink_DFDNB, @"UNIMOD", @"UNIMOD:825", @"Xlink:DFDNB", @"Intact DFDNB crosslinker.", false));
            TermData.Add(CVID.UNIMOD_TMPP_Ac, new TermInfo(CVID.UNIMOD_TMPP_Ac, @"UNIMOD", @"UNIMOD:827", @"TMPP-Ac", @"Tris(2,4,6-trimethoxyphenyl)phosphonium acetic acid N-hydroxysuccinimide ester derivative.", false));
            TermData.Add(CVID.UNIMOD_Dihydroxyimidazolidine, new TermInfo(CVID.UNIMOD_Dihydroxyimidazolidine, @"UNIMOD", @"UNIMOD:830", @"Dihydroxyimidazolidine", @"Dihydroxy methylglyoxal adduct.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_4__Acetyl, new TermInfo(CVID.UNIMOD_Label_2H_4__Acetyl, @"UNIMOD", @"UNIMOD:834", @"Label:2H(4)+Acetyl", @"Acetyl 4,4,5,5-D4 Lysine.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6__Acetyl, new TermInfo(CVID.UNIMOD_Label_13C_6__Acetyl, @"UNIMOD", @"UNIMOD:835", @"Label:13C(6)+Acetyl", @"Acetyl 13C(6) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_2__Acetyl, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_2__Acetyl, @"UNIMOD", @"UNIMOD:836", @"Label:13C(6)15N(2)+Acetyl", @"Acetyl_13C(6) 15N(2) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Arg__Npo, new TermInfo(CVID.UNIMOD_Arg__Npo, @"UNIMOD", @"UNIMOD:837", @"Arg->Npo", @"Arginine replacement by Nitropyrimidyl ornithine.", false));
            TermData.Add(CVID.UNIMOD_EQIGG, new TermInfo(CVID.UNIMOD_EQIGG, @"UNIMOD", @"UNIMOD:846", @"EQIGG", @"Sumo mutant Smt3-WT tail following trypsin digestion.", false));
            TermData.Add(CVID.UNIMOD_Arg2PG, new TermInfo(CVID.UNIMOD_Arg2PG, @"UNIMOD", @"UNIMOD:848", @"Arg2PG", @"Adduct of phenylglyoxal with Arg.", false));
            TermData.Add(CVID.UNIMOD_cGMP, new TermInfo(CVID.UNIMOD_cGMP, @"UNIMOD", @"UNIMOD:849", @"cGMP", @"S-guanylation.", false));
            TermData.Add(CVID.UNIMOD_cGMP_RMP_loss, new TermInfo(CVID.UNIMOD_cGMP_RMP_loss, @"UNIMOD", @"UNIMOD:851", @"cGMP+RMP-loss", @"S-guanylation-2.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_4__GG, new TermInfo(CVID.UNIMOD_Label_2H_4__GG, @"UNIMOD", @"UNIMOD:853", @"Label:2H(4)+GG", @"Ubiquitination 2H4 lysine.", false));
            TermData.Add(CVID.UNIMOD_MG_H1, new TermInfo(CVID.UNIMOD_MG_H1, @"UNIMOD", @"UNIMOD:859", @"MG-H1", @"Methylglyoxal-derived hydroimidazolone.", false));
            TermData.Add(CVID.UNIMOD_G_H1, new TermInfo(CVID.UNIMOD_G_H1, @"UNIMOD", @"UNIMOD:860", @"G-H1", @"Glyoxal-derived hydroimiadazolone.", false));
            TermData.Add(CVID.UNIMOD_ZGB, new TermInfo(CVID.UNIMOD_ZGB, @"UNIMOD", @"UNIMOD:861", @"ZGB", @"NHS ester linked Green Fluorescent Bodipy Dye.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_1_2H_3_, new TermInfo(CVID.UNIMOD_Label_13C_1_2H_3_, @"UNIMOD", @"UNIMOD:862", @"Label:13C(1)2H(3)", @"SILAC.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_2__GG, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_2__GG, @"UNIMOD", @"UNIMOD:864", @"Label:13C(6)15N(2)+GG", @"13C(6) 15N(2) Lysine glygly.", false));
            TermData.Add(CVID.UNIMOD_ICPL_13C_6_2H_4_, new TermInfo(CVID.UNIMOD_ICPL_13C_6_2H_4_, @"UNIMOD", @"UNIMOD:866", @"ICPL:13C(6)2H(4)", @"Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, +10 Da form.", false));
            TermData.Add(CVID.UNIMOD_QEQTGG, new TermInfo(CVID.UNIMOD_QEQTGG, @"UNIMOD", @"UNIMOD:876", @"QEQTGG", @"SUMOylation by SUMO-1.", false));
            TermData.Add(CVID.UNIMOD_QQQTGG, new TermInfo(CVID.UNIMOD_QQQTGG, @"UNIMOD", @"UNIMOD:877", @"QQQTGG", @"SUMOylation by SUMO-2/3.", false));
            TermData.Add(CVID.UNIMOD_Bodipy, new TermInfo(CVID.UNIMOD_Bodipy, @"UNIMOD", @"UNIMOD:878", @"Bodipy", @"Bodipy modifications onto cysteine.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21325, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21325, @"UNIMOD", @"UNIMOD:884", @"Biotin:Thermo-21325", @"Was ChromoBiotin.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_1_2H_3__Oxidation, new TermInfo(CVID.UNIMOD_Label_13C_1_2H_3__Oxidation, @"UNIMOD", @"UNIMOD:885", @"Label:13C(1)2H(3)+Oxidation", @"Oxidised methionine 13C(1)2H(3) SILAC label.", false));
            TermData.Add(CVID.UNIMOD_HydroxymethylOP, new TermInfo(CVID.UNIMOD_HydroxymethylOP, @"UNIMOD", @"UNIMOD:886", @"HydroxymethylOP", @"2-ammonio-6-", false));
            TermData.Add(CVID.UNIMOD_MDCC, new TermInfo(CVID.UNIMOD_MDCC, @"UNIMOD", @"UNIMOD:887", @"MDCC", @"Covalent linkage of maleimidyl coumarin probe (Molecular Probes D-10253).", false));
            TermData.Add(CVID.UNIMOD_mTRAQ, new TermInfo(CVID.UNIMOD_mTRAQ, @"UNIMOD", @"UNIMOD:888", @"mTRAQ", @"MTRAQ light.", false));
            TermData.Add(CVID.UNIMOD_mTRAQ_13C_3_15N_1_, new TermInfo(CVID.UNIMOD_mTRAQ_13C_3_15N_1_, @"UNIMOD", @"UNIMOD:889", @"mTRAQ:13C(3)15N(1)", @"MTRAQ medium.", false));
            TermData.Add(CVID.UNIMOD_DyLight_maleimide, new TermInfo(CVID.UNIMOD_DyLight_maleimide, @"UNIMOD", @"UNIMOD:890", @"DyLight-maleimide", @"Thiol-reactive dye for fluorescence labelling of proteins.", false));
            TermData.Add(CVID.UNIMOD_Methyl_PEO12_Maleimide, new TermInfo(CVID.UNIMOD_Methyl_PEO12_Maleimide, @"UNIMOD", @"UNIMOD:891", @"Methyl-PEO12-Maleimide", @"Methyl-PEO12-Maleimide.", false));
            TermData.Add(CVID.UNIMOD_CarbamidomethylDTT, new TermInfo(CVID.UNIMOD_CarbamidomethylDTT, @"UNIMOD", @"UNIMOD:893", @"CarbamidomethylDTT", @"Carbamidomethylated DTT modification of cysteine.", false));
            TermData.Add(CVID.UNIMOD_CarboxymethylDTT, new TermInfo(CVID.UNIMOD_CarboxymethylDTT, @"UNIMOD", @"UNIMOD:894", @"CarboxymethylDTT", @"Carboxymethylated DTT modification of cysteine.", false));
            TermData.Add(CVID.UNIMOD_Biotin_PEG_PRA, new TermInfo(CVID.UNIMOD_Biotin_PEG_PRA, @"UNIMOD", @"UNIMOD:895", @"Biotin-PEG-PRA", @"Biotin polyethyleneoxide (n=3) alkyne.", false));
            TermData.Add(CVID.UNIMOD_Met__Aha, new TermInfo(CVID.UNIMOD_Met__Aha, @"UNIMOD", @"UNIMOD:896", @"Met->Aha", @"Methionine replacement by azido homoalanine.", false));
            TermData.Add(CVID.UNIMOD_Label_15N_4_, new TermInfo(CVID.UNIMOD_Label_15N_4_, @"UNIMOD", @"UNIMOD:897", @"Label:15N(4)", @"SILAC 15N(4).", false));
            TermData.Add(CVID.UNIMOD_pyrophospho, new TermInfo(CVID.UNIMOD_pyrophospho, @"UNIMOD", @"UNIMOD:898", @"pyrophospho", @"Pyrophosphorylation of Ser/Thr.", false));
            TermData.Add(CVID.UNIMOD_Met__Hpg, new TermInfo(CVID.UNIMOD_Met__Hpg, @"UNIMOD", @"UNIMOD:899", @"Met->Hpg", @"Methionine replacement by homopropargylglycine.", false));
            TermData.Add(CVID.UNIMOD_4AcAllylGal, new TermInfo(CVID.UNIMOD_4AcAllylGal, @"UNIMOD", @"UNIMOD:901", @"4AcAllylGal", @"2,3,4,6-tetra-O-Acetyl-1-allyl-alpha-D-galactopyranoside modification of cysteine.", false));
            TermData.Add(CVID.UNIMOD_DimethylArsino, new TermInfo(CVID.UNIMOD_DimethylArsino, @"UNIMOD", @"UNIMOD:902", @"DimethylArsino", @"Reaction with dimethylarsinous (AsIII) acid.", false));
            TermData.Add(CVID.UNIMOD_Lys__CamCys, new TermInfo(CVID.UNIMOD_Lys__CamCys, @"UNIMOD", @"UNIMOD:903", @"Lys->CamCys", @"Lys->Cys substitution and carbamidomethylation.", false));
            TermData.Add(CVID.UNIMOD_Phe__CamCys, new TermInfo(CVID.UNIMOD_Phe__CamCys, @"UNIMOD", @"UNIMOD:904", @"Phe->CamCys", @"Phe->Cys substitution and carbamidomethylation.", false));
            TermData.Add(CVID.UNIMOD_Leu__MetOx, new TermInfo(CVID.UNIMOD_Leu__MetOx, @"UNIMOD", @"UNIMOD:905", @"Leu->MetOx", @"Leu->Met substitution and sulfoxidation.", false));
            TermData.Add(CVID.UNIMOD_Lys__MetOx, new TermInfo(CVID.UNIMOD_Lys__MetOx, @"UNIMOD", @"UNIMOD:906", @"Lys->MetOx", @"Lys->Met substitution and sulfoxidation.", false));
            TermData.Add(CVID.UNIMOD_Galactosyl, new TermInfo(CVID.UNIMOD_Galactosyl, @"UNIMOD", @"UNIMOD:907", @"Galactosyl", @"Gluconoylation.", false));
            TermData.Add(CVID.UNIMOD_Xlink_SMCC_321_, new TermInfo(CVID.UNIMOD_Xlink_SMCC_321_, @"UNIMOD", @"UNIMOD:908", @"Xlink:SMCC[321]", @"Monolink of SMCC terminated with 3-(dimethylamino)-1-propylamine.", false));
            TermData.Add(CVID.UNIMOD_Bacillosamine, new TermInfo(CVID.UNIMOD_Bacillosamine, @"UNIMOD", @"UNIMOD:910", @"Bacillosamine", @"2,4-diacetamido-2,4,6-trideoxyglucopyranose.", false));
            TermData.Add(CVID.UNIMOD_MTSL, new TermInfo(CVID.UNIMOD_MTSL, @"UNIMOD", @"UNIMOD:911", @"MTSL", @"Cys modification by (1-oxyl-2,2,5,5-tetramethyl-3-pyrroline-3-methyl)methanesulfonate (MTSL).", false));
            TermData.Add(CVID.UNIMOD_HNE_BAHAH, new TermInfo(CVID.UNIMOD_HNE_BAHAH, @"UNIMOD", @"UNIMOD:912", @"HNE-BAHAH", @"4-hydroxy-2-nonenal and biotinamidohexanoic acid hydrazide, reduced.", false));
            TermData.Add(CVID.UNIMOD_Methylmalonylation, new TermInfo(CVID.UNIMOD_Methylmalonylation, @"UNIMOD", @"UNIMOD:914", @"Methylmalonylation", @"Methylmalonylation on Serine.", false));
            TermData.Add(CVID.UNIMOD_Ethoxyformyl, new TermInfo(CVID.UNIMOD_Ethoxyformyl, @"UNIMOD", @"UNIMOD:915", @"Ethoxyformyl", @"Ethoxyformylation.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_4_15N_2__GG, new TermInfo(CVID.UNIMOD_Label_13C_4_15N_2__GG, @"UNIMOD", @"UNIMOD:923", @"Label:13C(4)15N(2)+GG", @"13C(4) 15N(2) Lysine glygly.", false));
            TermData.Add(CVID.UNIMOD_ethylamino, new TermInfo(CVID.UNIMOD_ethylamino, @"UNIMOD", @"UNIMOD:926", @"ethylamino", @"Ethyl amino.", false));
            TermData.Add(CVID.UNIMOD_MercaptoEthanol, new TermInfo(CVID.UNIMOD_MercaptoEthanol, @"UNIMOD", @"UNIMOD:928", @"MercaptoEthanol", @"2-OH-ethyl thio-Ser.", false));
            TermData.Add(CVID.UNIMOD_Ethyl_Deamidated, new TermInfo(CVID.UNIMOD_Ethyl_Deamidated, @"UNIMOD", @"UNIMOD:931", @"Ethyl+Deamidated", @"Deamidation followed by esterification with ethanol.", false));
            TermData.Add(CVID.UNIMOD_VFQQQTGG, new TermInfo(CVID.UNIMOD_VFQQQTGG, @"UNIMOD", @"UNIMOD:932", @"VFQQQTGG", @"SUMOylation by SUMO-2/3 (formic acid cleavage).", false));
            TermData.Add(CVID.UNIMOD_VIEVYQEQTGG, new TermInfo(CVID.UNIMOD_VIEVYQEQTGG, @"UNIMOD", @"UNIMOD:933", @"VIEVYQEQTGG", @"SUMOylation by SUMO-1 (formic acid cleavage).", false));
            TermData.Add(CVID.UNIMOD_AMTzHexNAc2, new TermInfo(CVID.UNIMOD_AMTzHexNAc2, @"UNIMOD", @"UNIMOD:934", @"AMTzHexNAc2", @"Photocleavable Biotin + GalNAz on O-GlcNAc.", false));
            TermData.Add(CVID.UNIMOD_Atto495Maleimide, new TermInfo(CVID.UNIMOD_Atto495Maleimide, @"UNIMOD", @"UNIMOD:935", @"Atto495Maleimide", @"High molecular absorption maleimide label for proteins.", false));
            TermData.Add(CVID.UNIMOD_Chlorination, new TermInfo(CVID.UNIMOD_Chlorination, @"UNIMOD", @"UNIMOD:936", @"Chlorination", @"Chlorination of tyrosine residues.", false));
            TermData.Add(CVID.UNIMOD_dichlorination, new TermInfo(CVID.UNIMOD_dichlorination, @"UNIMOD", @"UNIMOD:937", @"dichlorination", @"Dichlorination.", false));
            TermData.Add(CVID.UNIMOD_AROD, new TermInfo(CVID.UNIMOD_AROD, @"UNIMOD", @"UNIMOD:938", @"AROD", @"Cysteine modifier.", false));
            TermData.Add(CVID.UNIMOD_Cys__methylaminoAla, new TermInfo(CVID.UNIMOD_Cys__methylaminoAla, @"UNIMOD", @"UNIMOD:939", @"Cys->methylaminoAla", @"Carbamidomethylated Cys that undergoes beta-elimination and Michael addition of methylamine.", false));
            TermData.Add(CVID.UNIMOD_Cys__ethylaminoAla, new TermInfo(CVID.UNIMOD_Cys__ethylaminoAla, @"UNIMOD", @"UNIMOD:940", @"Cys->ethylaminoAla", @"Carbamidomethylated Cys that undergoes beta-elimination and Michael addition of ethylamine.", false));
            TermData.Add(CVID.UNIMOD_DNPS, new TermInfo(CVID.UNIMOD_DNPS, @"UNIMOD", @"UNIMOD:941", @"DNPS", @"2,4-Dinitrobenzenesulfenyl.", false));
            TermData.Add(CVID.UNIMOD_SulfoGMBS, new TermInfo(CVID.UNIMOD_SulfoGMBS, @"UNIMOD", @"UNIMOD:942", @"SulfoGMBS", @"High molecular absorption label for proteins.", false));
            TermData.Add(CVID.UNIMOD_DimethylamineGMBS, new TermInfo(CVID.UNIMOD_DimethylamineGMBS, @"UNIMOD", @"UNIMOD:943", @"DimethylamineGMBS", @"Modified GMBS X linker.", false));
            TermData.Add(CVID.UNIMOD_Label_15N_2_2H_9_, new TermInfo(CVID.UNIMOD_Label_15N_2_2H_9_, @"UNIMOD", @"UNIMOD:944", @"Label:15N(2)2H(9)", @"SILAC label.", false));
            TermData.Add(CVID.UNIMOD_LG_anhydrolactam, new TermInfo(CVID.UNIMOD_LG_anhydrolactam, @"UNIMOD", @"UNIMOD:946", @"LG-anhydrolactam", @"Levuglandinyl-lysine anhydrolactam adduct.", false));
            TermData.Add(CVID.UNIMOD_LG_pyrrole, new TermInfo(CVID.UNIMOD_LG_pyrrole, @"UNIMOD", @"UNIMOD:947", @"LG-pyrrole", @"Levuglandinyl-lysine pyrrole adduct.", false));
            TermData.Add(CVID.UNIMOD_LG_anhyropyrrole, new TermInfo(CVID.UNIMOD_LG_anhyropyrrole, @"UNIMOD", @"UNIMOD:948", @"LG-anhyropyrrole", @"Levuglandinyl-lysine anhyropyrrole adduct.", false));
            TermData.Add(CVID.UNIMOD_3_deoxyglucosone, new TermInfo(CVID.UNIMOD_3_deoxyglucosone, @"UNIMOD", @"UNIMOD:949", @"3-deoxyglucosone", @"Condensation product of 3-deoxyglucosone.", false));
            TermData.Add(CVID.UNIMOD_Cation_Li, new TermInfo(CVID.UNIMOD_Cation_Li, @"UNIMOD", @"UNIMOD:950", @"Cation:Li", @"Replacement of proton by lithium.", false));
            TermData.Add(CVID.UNIMOD_Cation_Ca_II_, new TermInfo(CVID.UNIMOD_Cation_Ca_II_, @"UNIMOD", @"UNIMOD:951", @"Cation:Ca[II]", @"Replacement of 2 protons by calcium.", false));
            TermData.Add(CVID.UNIMOD_Cation_Fe_II_, new TermInfo(CVID.UNIMOD_Cation_Fe_II_, @"UNIMOD", @"UNIMOD:952", @"Cation:Fe[II]", @"Replacement of 2 protons by iron.", false));
            TermData.Add(CVID.UNIMOD_Cation_Ni_II_, new TermInfo(CVID.UNIMOD_Cation_Ni_II_, @"UNIMOD", @"UNIMOD:953", @"Cation:Ni[II]", @"Replacement of 2 protons by nickel.", false));
            TermData.Add(CVID.UNIMOD_Cation_Zn_II_, new TermInfo(CVID.UNIMOD_Cation_Zn_II_, @"UNIMOD", @"UNIMOD:954", @"Cation:Zn[II]", @"Replacement of 2 protons by zinc.", false));
            TermData.Add(CVID.UNIMOD_Cation_Ag, new TermInfo(CVID.UNIMOD_Cation_Ag, @"UNIMOD", @"UNIMOD:955", @"Cation:Ag", @"Replacement of proton by silver.", false));
            TermData.Add(CVID.UNIMOD_Cation_Mg_II_, new TermInfo(CVID.UNIMOD_Cation_Mg_II_, @"UNIMOD", @"UNIMOD:956", @"Cation:Mg[II]", @"Replacement of 2 protons by magnesium.", false));
            TermData.Add(CVID.UNIMOD_2_succinyl, new TermInfo(CVID.UNIMOD_2_succinyl, @"UNIMOD", @"UNIMOD:957", @"2-succinyl", @"S-(2-succinyl) cysteine.", false));
            TermData.Add(CVID.UNIMOD_Propargylamine, new TermInfo(CVID.UNIMOD_Propargylamine, @"UNIMOD", @"UNIMOD:958", @"Propargylamine", @"Propargylamine.", false));
            TermData.Add(CVID.UNIMOD_Phosphopropargyl, new TermInfo(CVID.UNIMOD_Phosphopropargyl, @"UNIMOD", @"UNIMOD:959", @"Phosphopropargyl", @"Phospho-propargylamine.", false));
            TermData.Add(CVID.UNIMOD_SUMO2135, new TermInfo(CVID.UNIMOD_SUMO2135, @"UNIMOD", @"UNIMOD:960", @"SUMO2135", @"SUMOylation by SUMO-1 after tryptic cleavage.", false));
            TermData.Add(CVID.UNIMOD_SUMO3549, new TermInfo(CVID.UNIMOD_SUMO3549, @"UNIMOD", @"UNIMOD:961", @"SUMO3549", @"SUMOylation by SUMO-2/3 after tryptic cleavage.", false));
            TermData.Add(CVID.UNIMOD_thioacylPA, new TermInfo(CVID.UNIMOD_thioacylPA, @"UNIMOD", @"UNIMOD:967", @"thioacylPA", @"Membrane protein extraction.", false));
            TermData.Add(CVID.UNIMOD_maleimide3, new TermInfo(CVID.UNIMOD_maleimide3, @"UNIMOD", @"UNIMOD:971", @"maleimide3", @"Maleimide-3-saccharide.", false));
            TermData.Add(CVID.UNIMOD_maleimide5, new TermInfo(CVID.UNIMOD_maleimide5, @"UNIMOD", @"UNIMOD:972", @"maleimide5", @"Maleimide-5-saccharide.", false));
            TermData.Add(CVID.UNIMOD_Puromycin, new TermInfo(CVID.UNIMOD_Puromycin, @"UNIMOD", @"UNIMOD:973", @"Puromycin", @"Puromycin.", false));
            TermData.Add(CVID.UNIMOD_Carbofuran, new TermInfo(CVID.UNIMOD_Carbofuran, @"UNIMOD", @"UNIMOD:977", @"Carbofuran", @"2,3-dihydro-2,2-dimethyl-7-benzofuranol N-methyl carbamate.", false));
            TermData.Add(CVID.UNIMOD_BITC, new TermInfo(CVID.UNIMOD_BITC, @"UNIMOD", @"UNIMOD:978", @"BITC", @"Benzyl isothiocyanate.", false));
            TermData.Add(CVID.UNIMOD_PEITC, new TermInfo(CVID.UNIMOD_PEITC, @"UNIMOD", @"UNIMOD:979", @"PEITC", @"Phenethyl isothiocyanate.", false));
            TermData.Add(CVID.UNIMOD_glucosone, new TermInfo(CVID.UNIMOD_glucosone, @"UNIMOD", @"UNIMOD:981", @"glucosone", @"Condensation product of glucosone.", false));
            TermData.Add(CVID.UNIMOD_cysTMT, new TermInfo(CVID.UNIMOD_cysTMT, @"UNIMOD", @"UNIMOD:984", @"cysTMT", @"Native cysteine-reactive Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_cysTMT6plex, new TermInfo(CVID.UNIMOD_cysTMT6plex, @"UNIMOD", @"UNIMOD:985", @"cysTMT6plex", @"Cysteine-reactive Sixplex Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6__Dimethyl, new TermInfo(CVID.UNIMOD_Label_13C_6__Dimethyl, @"UNIMOD", @"UNIMOD:986", @"Label:13C(6)+Dimethyl", @"Dimethyl 13C(6) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_2__Dimethyl, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_2__Dimethyl, @"UNIMOD", @"UNIMOD:987", @"Label:13C(6)15N(2)+Dimethyl", @"Dimethyl 13C(6)15N(2) Silac label.", false));
            TermData.Add(CVID.UNIMOD_Ammonium, new TermInfo(CVID.UNIMOD_Ammonium, @"UNIMOD", @"UNIMOD:989", @"Ammonium", @"Replacement of proton with ammonium ion.", false));
            TermData.Add(CVID.UNIMOD_ISD_z_2_ion, new TermInfo(CVID.UNIMOD_ISD_z_2_ion, @"UNIMOD", @"UNIMOD:991", @"ISD_z+2_ion", @"ISD (z+2)-series.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Sigma_B1267, new TermInfo(CVID.UNIMOD_Biotin_Sigma_B1267, @"UNIMOD", @"UNIMOD:993", @"Biotin:Sigma-B1267", @"Was Biotin-maleimide.", false));
            TermData.Add(CVID.UNIMOD_Label_15N_1_, new TermInfo(CVID.UNIMOD_Label_15N_1_, @"UNIMOD", @"UNIMOD:994", @"Label:15N(1)", @"15N(1).", false));
            TermData.Add(CVID.UNIMOD_Label_15N_2_, new TermInfo(CVID.UNIMOD_Label_15N_2_, @"UNIMOD", @"UNIMOD:995", @"Label:15N(2)", @"15N(2).", false));
            TermData.Add(CVID.UNIMOD_Label_15N_3_, new TermInfo(CVID.UNIMOD_Label_15N_3_, @"UNIMOD", @"UNIMOD:996", @"Label:15N(3)", @"15N(3).", false));
            TermData.Add(CVID.UNIMOD_sulfo_amino, new TermInfo(CVID.UNIMOD_sulfo_amino, @"UNIMOD", @"UNIMOD:997", @"sulfo+amino", @"Aminotyrosine with sulfation.", false));
            TermData.Add(CVID.UNIMOD_AHA_Alkyne, new TermInfo(CVID.UNIMOD_AHA_Alkyne, @"UNIMOD", @"UNIMOD:1000", @"AHA-Alkyne", @"Azidohomoalanine (AHA) bound to propargylglycine-NH2 (alkyne).", false));
            TermData.Add(CVID.UNIMOD_AHA_Alkyne_KDDDD, new TermInfo(CVID.UNIMOD_AHA_Alkyne_KDDDD, @"UNIMOD", @"UNIMOD:1001", @"AHA-Alkyne-KDDDD", @"Azidohomoalanine (AHA) bound to DDDDK-propargylglycine-NH2 (alkyne).", false));
            TermData.Add(CVID.UNIMOD_EGCG1, new TermInfo(CVID.UNIMOD_EGCG1, @"UNIMOD", @"UNIMOD:1002", @"EGCG1", @"(-)-epigallocatechin-3-gallate.", false));
            TermData.Add(CVID.UNIMOD_EGCG2, new TermInfo(CVID.UNIMOD_EGCG2, @"UNIMOD", @"UNIMOD:1003", @"EGCG2", @"(-)-dehydroepigallocatechin.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_4__Methyl, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_4__Methyl, @"UNIMOD", @"UNIMOD:1004", @"Label:13C(6)15N(4)+Methyl", @"Monomethylated Arg13C(6) 15N(4).", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl, @"UNIMOD", @"UNIMOD:1005", @"Label:13C(6)15N(4)+Dimethyl", @"Dimethylated Arg13C(6) 15N(4).", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_4__Methyl_2H_3_13C_1_, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_4__Methyl_2H_3_13C_1_, @"UNIMOD", @"UNIMOD:1006", @"Label:13C(6)15N(4)+Methyl:2H(3)13C(1)", @"2H(3) 13C(1) monomethylated Arg13C(6) 15N(4).", false));
            TermData.Add(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl_2H_6_13C_2_, new TermInfo(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl_2H_6_13C_2_, @"UNIMOD", @"UNIMOD:1007", @"Label:13C(6)15N(4)+Dimethyl:2H(6)13C(2)", @"2H(6) 13C(2) Dimethylated Arg13C(6) 15N(4).", false));
            TermData.Add(CVID.UNIMOD_Cys__CamSec, new TermInfo(CVID.UNIMOD_Cys__CamSec, @"UNIMOD", @"UNIMOD:1008", @"Cys->CamSec", @"Sec Iodoacetamide derivative.", false));
            TermData.Add(CVID.UNIMOD_Thiazolidine, new TermInfo(CVID.UNIMOD_Thiazolidine, @"UNIMOD", @"UNIMOD:1009", @"Thiazolidine", @"Formaldehyde adduct.", false));
            TermData.Add(CVID.UNIMOD_DEDGFLYMVYASQETFG, new TermInfo(CVID.UNIMOD_DEDGFLYMVYASQETFG, @"UNIMOD", @"UNIMOD:1010", @"DEDGFLYMVYASQETFG", @"Addition of DEDGFLYMVYASQETFG.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Invitrogen_M1602, new TermInfo(CVID.UNIMOD_Biotin_Invitrogen_M1602, @"UNIMOD", @"UNIMOD:1012", @"Biotin:Invitrogen-M1602", @"Nalpha-(3-maleimidylpropionyl)biocytin.", false));
            TermData.Add(CVID.UNIMOD_glycidamide, new TermInfo(CVID.UNIMOD_glycidamide, @"UNIMOD", @"UNIMOD:1014", @"glycidamide", @"Glycidamide adduct.", false));
            TermData.Add(CVID.UNIMOD_Ahx2_Hsl, new TermInfo(CVID.UNIMOD_Ahx2_Hsl, @"UNIMOD", @"UNIMOD:1015", @"Ahx2+Hsl", @"C-terminal homoserine lactone and two aminohexanoic acids.", false));
            TermData.Add(CVID.UNIMOD_DMPO, new TermInfo(CVID.UNIMOD_DMPO, @"UNIMOD", @"UNIMOD:1017", @"DMPO", @"DMPO spin-trap nitrone adduct.", false));
            TermData.Add(CVID.UNIMOD_ICDID, new TermInfo(CVID.UNIMOD_ICDID, @"UNIMOD", @"UNIMOD:1018", @"ICDID", @"Isotope-Coded Dimedone light form.", false));
            TermData.Add(CVID.UNIMOD_ICDID_2H_6_, new TermInfo(CVID.UNIMOD_ICDID_2H_6_, @"UNIMOD", @"UNIMOD:1019", @"ICDID:2H(6)", @"Isotope-Coded Dimedone heavy form.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSS_156_, new TermInfo(CVID.UNIMOD_Xlink_DSS_156_, @"UNIMOD", @"UNIMOD:1020", @"Xlink:DSS[156]", @"Water-quenched monolink of DSS/BS3 crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_EGS_244_, new TermInfo(CVID.UNIMOD_Xlink_EGS_244_, @"UNIMOD", @"UNIMOD:1021", @"Xlink:EGS[244]", @"Water quenched monolink of EGS cross-linker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DST_132_, new TermInfo(CVID.UNIMOD_Xlink_DST_132_, @"UNIMOD", @"UNIMOD:1022", @"Xlink:DST[132]", @"Water quenched monolink of DST crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DTSSP_192_, new TermInfo(CVID.UNIMOD_Xlink_DTSSP_192_, @"UNIMOD", @"UNIMOD:1023", @"Xlink:DTSSP[192]", @"Water quenched monolink of DSP/DTSSP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_SMCC_237_, new TermInfo(CVID.UNIMOD_Xlink_SMCC_237_, @"UNIMOD", @"UNIMOD:1024", @"Xlink:SMCC[237]", @"Water quenched monolink of SMCC.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DMP_140_, new TermInfo(CVID.UNIMOD_Xlink_DMP_140_, @"UNIMOD", @"UNIMOD:1027", @"Xlink:DMP[140]", @"Water quenched monolink of DMP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_EGS_115_, new TermInfo(CVID.UNIMOD_Xlink_EGS_115_, @"UNIMOD", @"UNIMOD:1028", @"Xlink:EGS[115]", @"Cleavage product of EGS protein crosslinks by hydroylamine treatment.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_88310, new TermInfo(CVID.UNIMOD_Biotin_Thermo_88310, @"UNIMOD", @"UNIMOD:1031", @"Biotin:Thermo-88310", @"Desthiobiotin modification of lysine.", false));
            TermData.Add(CVID.UNIMOD_2_nitrobenzyl, new TermInfo(CVID.UNIMOD_2_nitrobenzyl, @"UNIMOD", @"UNIMOD:1032", @"2-nitrobenzyl", @"Tyrosine caged with 2-nitrobenzyl (ONB).", false));
            TermData.Add(CVID.UNIMOD_Cys__SecNEM, new TermInfo(CVID.UNIMOD_Cys__SecNEM, @"UNIMOD", @"UNIMOD:1033", @"Cys->SecNEM", @"N-ethylmaleimide on selenocysteines.", false));
            TermData.Add(CVID.UNIMOD_Cys__SecNEM_2H_5_, new TermInfo(CVID.UNIMOD_Cys__SecNEM_2H_5_, @"UNIMOD", @"UNIMOD:1034", @"Cys->SecNEM:2H(5)", @"D5 N-ethylmaleimide on selenocysteines.", false));
            TermData.Add(CVID.UNIMOD_Thiadiazole, new TermInfo(CVID.UNIMOD_Thiadiazole, @"UNIMOD", @"UNIMOD:1035", @"Thiadiazole", @"Thiadiazolydation of Cys.", false));
            TermData.Add(CVID.UNIMOD_Withaferin, new TermInfo(CVID.UNIMOD_Withaferin, @"UNIMOD", @"UNIMOD:1036", @"Withaferin", @"Modification of cystein by withaferin.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_88317, new TermInfo(CVID.UNIMOD_Biotin_Thermo_88317, @"UNIMOD", @"UNIMOD:1037", @"Biotin:Thermo-88317", @"Desthiobiotin fluorophosphonate.", false));
            TermData.Add(CVID.UNIMOD_TAMRA_FP, new TermInfo(CVID.UNIMOD_TAMRA_FP, @"UNIMOD", @"UNIMOD:1038", @"TAMRA-FP", @"TAMRA fluorophosphonate modification of serine.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21901_H2O, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21901_H2O, @"UNIMOD", @"UNIMOD:1039", @"Biotin:Thermo-21901+H2O", @"Maleimide-Biotin + Water.", false));
            TermData.Add(CVID.UNIMOD_Deoxyhypusine, new TermInfo(CVID.UNIMOD_Deoxyhypusine, @"UNIMOD", @"UNIMOD:1041", @"Deoxyhypusine", @"Deoxyhypusine.", false));
            TermData.Add(CVID.UNIMOD_Acetyldeoxyhypusine, new TermInfo(CVID.UNIMOD_Acetyldeoxyhypusine, @"UNIMOD", @"UNIMOD:1042", @"Acetyldeoxyhypusine", @"Acetyldeoxyhypusine.", false));
            TermData.Add(CVID.UNIMOD_Acetylhypusine, new TermInfo(CVID.UNIMOD_Acetylhypusine, @"UNIMOD", @"UNIMOD:1043", @"Acetylhypusine", @"Acetylhypusine.", false));
            TermData.Add(CVID.UNIMOD_Ala__Cys, new TermInfo(CVID.UNIMOD_Ala__Cys, @"UNIMOD", @"UNIMOD:1044", @"Ala->Cys", @"Ala->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Phe, new TermInfo(CVID.UNIMOD_Ala__Phe, @"UNIMOD", @"UNIMOD:1045", @"Ala->Phe", @"Ala->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__His, new TermInfo(CVID.UNIMOD_Ala__His, @"UNIMOD", @"UNIMOD:1046", @"Ala->His", @"Ala->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Xle, new TermInfo(CVID.UNIMOD_Ala__Xle, @"UNIMOD", @"UNIMOD:1047", @"Ala->Xle", @"Ala->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Lys, new TermInfo(CVID.UNIMOD_Ala__Lys, @"UNIMOD", @"UNIMOD:1048", @"Ala->Lys", @"Ala->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Met, new TermInfo(CVID.UNIMOD_Ala__Met, @"UNIMOD", @"UNIMOD:1049", @"Ala->Met", @"Ala->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Asn, new TermInfo(CVID.UNIMOD_Ala__Asn, @"UNIMOD", @"UNIMOD:1050", @"Ala->Asn", @"Ala->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Gln, new TermInfo(CVID.UNIMOD_Ala__Gln, @"UNIMOD", @"UNIMOD:1051", @"Ala->Gln", @"Ala->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Arg, new TermInfo(CVID.UNIMOD_Ala__Arg, @"UNIMOD", @"UNIMOD:1052", @"Ala->Arg", @"Ala->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Trp, new TermInfo(CVID.UNIMOD_Ala__Trp, @"UNIMOD", @"UNIMOD:1053", @"Ala->Trp", @"Ala->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Ala__Tyr, new TermInfo(CVID.UNIMOD_Ala__Tyr, @"UNIMOD", @"UNIMOD:1054", @"Ala->Tyr", @"Ala->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Ala, new TermInfo(CVID.UNIMOD_Cys__Ala, @"UNIMOD", @"UNIMOD:1055", @"Cys->Ala", @"Cys->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Asp, new TermInfo(CVID.UNIMOD_Cys__Asp, @"UNIMOD", @"UNIMOD:1056", @"Cys->Asp", @"Cys->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Glu, new TermInfo(CVID.UNIMOD_Cys__Glu, @"UNIMOD", @"UNIMOD:1057", @"Cys->Glu", @"Cys->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__His, new TermInfo(CVID.UNIMOD_Cys__His, @"UNIMOD", @"UNIMOD:1058", @"Cys->His", @"Cys->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Xle, new TermInfo(CVID.UNIMOD_Cys__Xle, @"UNIMOD", @"UNIMOD:1059", @"Cys->Xle", @"Cys->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Lys, new TermInfo(CVID.UNIMOD_Cys__Lys, @"UNIMOD", @"UNIMOD:1060", @"Cys->Lys", @"Cys->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Met, new TermInfo(CVID.UNIMOD_Cys__Met, @"UNIMOD", @"UNIMOD:1061", @"Cys->Met", @"Cys->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Asn, new TermInfo(CVID.UNIMOD_Cys__Asn, @"UNIMOD", @"UNIMOD:1062", @"Cys->Asn", @"Cys->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Pro, new TermInfo(CVID.UNIMOD_Cys__Pro, @"UNIMOD", @"UNIMOD:1063", @"Cys->Pro", @"Cys->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Gln, new TermInfo(CVID.UNIMOD_Cys__Gln, @"UNIMOD", @"UNIMOD:1064", @"Cys->Gln", @"Cys->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Thr, new TermInfo(CVID.UNIMOD_Cys__Thr, @"UNIMOD", @"UNIMOD:1065", @"Cys->Thr", @"Cys->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Cys__Val, new TermInfo(CVID.UNIMOD_Cys__Val, @"UNIMOD", @"UNIMOD:1066", @"Cys->Val", @"Cys->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Cys, new TermInfo(CVID.UNIMOD_Asp__Cys, @"UNIMOD", @"UNIMOD:1067", @"Asp->Cys", @"Asp->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Phe, new TermInfo(CVID.UNIMOD_Asp__Phe, @"UNIMOD", @"UNIMOD:1068", @"Asp->Phe", @"Asp->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Xle, new TermInfo(CVID.UNIMOD_Asp__Xle, @"UNIMOD", @"UNIMOD:1069", @"Asp->Xle", @"Asp->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Lys, new TermInfo(CVID.UNIMOD_Asp__Lys, @"UNIMOD", @"UNIMOD:1070", @"Asp->Lys", @"Asp->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Met, new TermInfo(CVID.UNIMOD_Asp__Met, @"UNIMOD", @"UNIMOD:1071", @"Asp->Met", @"Asp->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Pro, new TermInfo(CVID.UNIMOD_Asp__Pro, @"UNIMOD", @"UNIMOD:1072", @"Asp->Pro", @"Asp->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Gln, new TermInfo(CVID.UNIMOD_Asp__Gln, @"UNIMOD", @"UNIMOD:1073", @"Asp->Gln", @"Asp->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Arg, new TermInfo(CVID.UNIMOD_Asp__Arg, @"UNIMOD", @"UNIMOD:1074", @"Asp->Arg", @"Asp->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Ser, new TermInfo(CVID.UNIMOD_Asp__Ser, @"UNIMOD", @"UNIMOD:1075", @"Asp->Ser", @"Asp->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Thr, new TermInfo(CVID.UNIMOD_Asp__Thr, @"UNIMOD", @"UNIMOD:1076", @"Asp->Thr", @"Asp->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Asp__Trp, new TermInfo(CVID.UNIMOD_Asp__Trp, @"UNIMOD", @"UNIMOD:1077", @"Asp->Trp", @"Asp->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Cys, new TermInfo(CVID.UNIMOD_Glu__Cys, @"UNIMOD", @"UNIMOD:1078", @"Glu->Cys", @"Glu->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Phe, new TermInfo(CVID.UNIMOD_Glu__Phe, @"UNIMOD", @"UNIMOD:1079", @"Glu->Phe", @"Glu->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__His, new TermInfo(CVID.UNIMOD_Glu__His, @"UNIMOD", @"UNIMOD:1080", @"Glu->His", @"Glu->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Xle, new TermInfo(CVID.UNIMOD_Glu__Xle, @"UNIMOD", @"UNIMOD:1081", @"Glu->Xle", @"Glu->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Met, new TermInfo(CVID.UNIMOD_Glu__Met, @"UNIMOD", @"UNIMOD:1082", @"Glu->Met", @"Glu->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Asn, new TermInfo(CVID.UNIMOD_Glu__Asn, @"UNIMOD", @"UNIMOD:1083", @"Glu->Asn", @"Glu->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Pro, new TermInfo(CVID.UNIMOD_Glu__Pro, @"UNIMOD", @"UNIMOD:1084", @"Glu->Pro", @"Glu->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Arg, new TermInfo(CVID.UNIMOD_Glu__Arg, @"UNIMOD", @"UNIMOD:1085", @"Glu->Arg", @"Glu->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Ser, new TermInfo(CVID.UNIMOD_Glu__Ser, @"UNIMOD", @"UNIMOD:1086", @"Glu->Ser", @"Glu->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Thr, new TermInfo(CVID.UNIMOD_Glu__Thr, @"UNIMOD", @"UNIMOD:1087", @"Glu->Thr", @"Glu->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Trp, new TermInfo(CVID.UNIMOD_Glu__Trp, @"UNIMOD", @"UNIMOD:1088", @"Glu->Trp", @"Glu->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Glu__Tyr, new TermInfo(CVID.UNIMOD_Glu__Tyr, @"UNIMOD", @"UNIMOD:1089", @"Glu->Tyr", @"Glu->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Ala, new TermInfo(CVID.UNIMOD_Phe__Ala, @"UNIMOD", @"UNIMOD:1090", @"Phe->Ala", @"Phe->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Asp, new TermInfo(CVID.UNIMOD_Phe__Asp, @"UNIMOD", @"UNIMOD:1091", @"Phe->Asp", @"Phe->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Glu, new TermInfo(CVID.UNIMOD_Phe__Glu, @"UNIMOD", @"UNIMOD:1092", @"Phe->Glu", @"Phe->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Gly, new TermInfo(CVID.UNIMOD_Phe__Gly, @"UNIMOD", @"UNIMOD:1093", @"Phe->Gly", @"Phe->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__His, new TermInfo(CVID.UNIMOD_Phe__His, @"UNIMOD", @"UNIMOD:1094", @"Phe->His", @"Phe->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Lys, new TermInfo(CVID.UNIMOD_Phe__Lys, @"UNIMOD", @"UNIMOD:1095", @"Phe->Lys", @"Phe->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Met, new TermInfo(CVID.UNIMOD_Phe__Met, @"UNIMOD", @"UNIMOD:1096", @"Phe->Met", @"Phe->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Asn, new TermInfo(CVID.UNIMOD_Phe__Asn, @"UNIMOD", @"UNIMOD:1097", @"Phe->Asn", @"Phe->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Pro, new TermInfo(CVID.UNIMOD_Phe__Pro, @"UNIMOD", @"UNIMOD:1098", @"Phe->Pro", @"Phe->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Gln, new TermInfo(CVID.UNIMOD_Phe__Gln, @"UNIMOD", @"UNIMOD:1099", @"Phe->Gln", @"Phe->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Arg, new TermInfo(CVID.UNIMOD_Phe__Arg, @"UNIMOD", @"UNIMOD:1100", @"Phe->Arg", @"Phe->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Thr, new TermInfo(CVID.UNIMOD_Phe__Thr, @"UNIMOD", @"UNIMOD:1101", @"Phe->Thr", @"Phe->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Phe__Trp, new TermInfo(CVID.UNIMOD_Phe__Trp, @"UNIMOD", @"UNIMOD:1102", @"Phe->Trp", @"Phe->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Phe, new TermInfo(CVID.UNIMOD_Gly__Phe, @"UNIMOD", @"UNIMOD:1103", @"Gly->Phe", @"Gly->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__His, new TermInfo(CVID.UNIMOD_Gly__His, @"UNIMOD", @"UNIMOD:1104", @"Gly->His", @"Gly->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Xle, new TermInfo(CVID.UNIMOD_Gly__Xle, @"UNIMOD", @"UNIMOD:1105", @"Gly->Xle", @"Gly->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Lys, new TermInfo(CVID.UNIMOD_Gly__Lys, @"UNIMOD", @"UNIMOD:1106", @"Gly->Lys", @"Gly->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Met, new TermInfo(CVID.UNIMOD_Gly__Met, @"UNIMOD", @"UNIMOD:1107", @"Gly->Met", @"Gly->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Asn, new TermInfo(CVID.UNIMOD_Gly__Asn, @"UNIMOD", @"UNIMOD:1108", @"Gly->Asn", @"Gly->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Pro, new TermInfo(CVID.UNIMOD_Gly__Pro, @"UNIMOD", @"UNIMOD:1109", @"Gly->Pro", @"Gly->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Gln, new TermInfo(CVID.UNIMOD_Gly__Gln, @"UNIMOD", @"UNIMOD:1110", @"Gly->Gln", @"Gly->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Thr, new TermInfo(CVID.UNIMOD_Gly__Thr, @"UNIMOD", @"UNIMOD:1111", @"Gly->Thr", @"Gly->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Gly__Tyr, new TermInfo(CVID.UNIMOD_Gly__Tyr, @"UNIMOD", @"UNIMOD:1112", @"Gly->Tyr", @"Gly->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Ala, new TermInfo(CVID.UNIMOD_His__Ala, @"UNIMOD", @"UNIMOD:1113", @"His->Ala", @"His->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Cys, new TermInfo(CVID.UNIMOD_His__Cys, @"UNIMOD", @"UNIMOD:1114", @"His->Cys", @"His->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Glu, new TermInfo(CVID.UNIMOD_His__Glu, @"UNIMOD", @"UNIMOD:1115", @"His->Glu", @"His->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Phe, new TermInfo(CVID.UNIMOD_His__Phe, @"UNIMOD", @"UNIMOD:1116", @"His->Phe", @"His->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Gly, new TermInfo(CVID.UNIMOD_His__Gly, @"UNIMOD", @"UNIMOD:1117", @"His->Gly", @"His->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Lys, new TermInfo(CVID.UNIMOD_His__Lys, @"UNIMOD", @"UNIMOD:1119", @"His->Lys", @"His->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Met, new TermInfo(CVID.UNIMOD_His__Met, @"UNIMOD", @"UNIMOD:1120", @"His->Met", @"His->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Ser, new TermInfo(CVID.UNIMOD_His__Ser, @"UNIMOD", @"UNIMOD:1121", @"His->Ser", @"His->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Thr, new TermInfo(CVID.UNIMOD_His__Thr, @"UNIMOD", @"UNIMOD:1122", @"His->Thr", @"His->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Val, new TermInfo(CVID.UNIMOD_His__Val, @"UNIMOD", @"UNIMOD:1123", @"His->Val", @"His->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_His__Trp, new TermInfo(CVID.UNIMOD_His__Trp, @"UNIMOD", @"UNIMOD:1124", @"His->Trp", @"His->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Ala, new TermInfo(CVID.UNIMOD_Xle__Ala, @"UNIMOD", @"UNIMOD:1125", @"Xle->Ala", @"Leu/Ile->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Cys, new TermInfo(CVID.UNIMOD_Xle__Cys, @"UNIMOD", @"UNIMOD:1126", @"Xle->Cys", @"Leu/Ile->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Asp, new TermInfo(CVID.UNIMOD_Xle__Asp, @"UNIMOD", @"UNIMOD:1127", @"Xle->Asp", @"Leu/Ile->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Glu, new TermInfo(CVID.UNIMOD_Xle__Glu, @"UNIMOD", @"UNIMOD:1128", @"Xle->Glu", @"Leu/Ile->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Gly, new TermInfo(CVID.UNIMOD_Xle__Gly, @"UNIMOD", @"UNIMOD:1129", @"Xle->Gly", @"Leu/Ile->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Xle__Tyr, new TermInfo(CVID.UNIMOD_Xle__Tyr, @"UNIMOD", @"UNIMOD:1130", @"Xle->Tyr", @"Leu/Ile->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Ala, new TermInfo(CVID.UNIMOD_Lys__Ala, @"UNIMOD", @"UNIMOD:1131", @"Lys->Ala", @"Lys->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Cys, new TermInfo(CVID.UNIMOD_Lys__Cys, @"UNIMOD", @"UNIMOD:1132", @"Lys->Cys", @"Lys->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Asp, new TermInfo(CVID.UNIMOD_Lys__Asp, @"UNIMOD", @"UNIMOD:1133", @"Lys->Asp", @"Lys->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Phe, new TermInfo(CVID.UNIMOD_Lys__Phe, @"UNIMOD", @"UNIMOD:1134", @"Lys->Phe", @"Lys->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Gly, new TermInfo(CVID.UNIMOD_Lys__Gly, @"UNIMOD", @"UNIMOD:1135", @"Lys->Gly", @"Lys->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__His, new TermInfo(CVID.UNIMOD_Lys__His, @"UNIMOD", @"UNIMOD:1136", @"Lys->His", @"Lys->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Pro, new TermInfo(CVID.UNIMOD_Lys__Pro, @"UNIMOD", @"UNIMOD:1137", @"Lys->Pro", @"Lys->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Ser, new TermInfo(CVID.UNIMOD_Lys__Ser, @"UNIMOD", @"UNIMOD:1138", @"Lys->Ser", @"Lys->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Val, new TermInfo(CVID.UNIMOD_Lys__Val, @"UNIMOD", @"UNIMOD:1139", @"Lys->Val", @"Lys->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Trp, new TermInfo(CVID.UNIMOD_Lys__Trp, @"UNIMOD", @"UNIMOD:1140", @"Lys->Trp", @"Lys->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Lys__Tyr, new TermInfo(CVID.UNIMOD_Lys__Tyr, @"UNIMOD", @"UNIMOD:1141", @"Lys->Tyr", @"Lys->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Ala, new TermInfo(CVID.UNIMOD_Met__Ala, @"UNIMOD", @"UNIMOD:1142", @"Met->Ala", @"Met->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Cys, new TermInfo(CVID.UNIMOD_Met__Cys, @"UNIMOD", @"UNIMOD:1143", @"Met->Cys", @"Met->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Asp, new TermInfo(CVID.UNIMOD_Met__Asp, @"UNIMOD", @"UNIMOD:1144", @"Met->Asp", @"Met->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Glu, new TermInfo(CVID.UNIMOD_Met__Glu, @"UNIMOD", @"UNIMOD:1145", @"Met->Glu", @"Met->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Phe, new TermInfo(CVID.UNIMOD_Met__Phe, @"UNIMOD", @"UNIMOD:1146", @"Met->Phe", @"Met->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Gly, new TermInfo(CVID.UNIMOD_Met__Gly, @"UNIMOD", @"UNIMOD:1147", @"Met->Gly", @"Met->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__His, new TermInfo(CVID.UNIMOD_Met__His, @"UNIMOD", @"UNIMOD:1148", @"Met->His", @"Met->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Asn, new TermInfo(CVID.UNIMOD_Met__Asn, @"UNIMOD", @"UNIMOD:1149", @"Met->Asn", @"Met->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Pro, new TermInfo(CVID.UNIMOD_Met__Pro, @"UNIMOD", @"UNIMOD:1150", @"Met->Pro", @"Met->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Gln, new TermInfo(CVID.UNIMOD_Met__Gln, @"UNIMOD", @"UNIMOD:1151", @"Met->Gln", @"Met->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Ser, new TermInfo(CVID.UNIMOD_Met__Ser, @"UNIMOD", @"UNIMOD:1152", @"Met->Ser", @"Met->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Trp, new TermInfo(CVID.UNIMOD_Met__Trp, @"UNIMOD", @"UNIMOD:1153", @"Met->Trp", @"Met->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Met__Tyr, new TermInfo(CVID.UNIMOD_Met__Tyr, @"UNIMOD", @"UNIMOD:1154", @"Met->Tyr", @"Met->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Ala, new TermInfo(CVID.UNIMOD_Asn__Ala, @"UNIMOD", @"UNIMOD:1155", @"Asn->Ala", @"Asn->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Cys, new TermInfo(CVID.UNIMOD_Asn__Cys, @"UNIMOD", @"UNIMOD:1156", @"Asn->Cys", @"Asn->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Glu, new TermInfo(CVID.UNIMOD_Asn__Glu, @"UNIMOD", @"UNIMOD:1157", @"Asn->Glu", @"Asn->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Phe, new TermInfo(CVID.UNIMOD_Asn__Phe, @"UNIMOD", @"UNIMOD:1158", @"Asn->Phe", @"Asn->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Gly, new TermInfo(CVID.UNIMOD_Asn__Gly, @"UNIMOD", @"UNIMOD:1159", @"Asn->Gly", @"Asn->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Met, new TermInfo(CVID.UNIMOD_Asn__Met, @"UNIMOD", @"UNIMOD:1160", @"Asn->Met", @"Asn->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Pro, new TermInfo(CVID.UNIMOD_Asn__Pro, @"UNIMOD", @"UNIMOD:1161", @"Asn->Pro", @"Asn->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Gln, new TermInfo(CVID.UNIMOD_Asn__Gln, @"UNIMOD", @"UNIMOD:1162", @"Asn->Gln", @"Asn->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Arg, new TermInfo(CVID.UNIMOD_Asn__Arg, @"UNIMOD", @"UNIMOD:1163", @"Asn->Arg", @"Asn->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Val, new TermInfo(CVID.UNIMOD_Asn__Val, @"UNIMOD", @"UNIMOD:1164", @"Asn->Val", @"Asn->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Asn__Trp, new TermInfo(CVID.UNIMOD_Asn__Trp, @"UNIMOD", @"UNIMOD:1165", @"Asn->Trp", @"Asn->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Cys, new TermInfo(CVID.UNIMOD_Pro__Cys, @"UNIMOD", @"UNIMOD:1166", @"Pro->Cys", @"Pro->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Asp, new TermInfo(CVID.UNIMOD_Pro__Asp, @"UNIMOD", @"UNIMOD:1167", @"Pro->Asp", @"Pro->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Glu, new TermInfo(CVID.UNIMOD_Pro__Glu, @"UNIMOD", @"UNIMOD:1168", @"Pro->Glu", @"Pro->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Phe, new TermInfo(CVID.UNIMOD_Pro__Phe, @"UNIMOD", @"UNIMOD:1169", @"Pro->Phe", @"Pro->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Gly, new TermInfo(CVID.UNIMOD_Pro__Gly, @"UNIMOD", @"UNIMOD:1170", @"Pro->Gly", @"Pro->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Lys, new TermInfo(CVID.UNIMOD_Pro__Lys, @"UNIMOD", @"UNIMOD:1171", @"Pro->Lys", @"Pro->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Met, new TermInfo(CVID.UNIMOD_Pro__Met, @"UNIMOD", @"UNIMOD:1172", @"Pro->Met", @"Pro->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Asn, new TermInfo(CVID.UNIMOD_Pro__Asn, @"UNIMOD", @"UNIMOD:1173", @"Pro->Asn", @"Pro->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Val, new TermInfo(CVID.UNIMOD_Pro__Val, @"UNIMOD", @"UNIMOD:1174", @"Pro->Val", @"Pro->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Trp, new TermInfo(CVID.UNIMOD_Pro__Trp, @"UNIMOD", @"UNIMOD:1175", @"Pro->Trp", @"Pro->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Pro__Tyr, new TermInfo(CVID.UNIMOD_Pro__Tyr, @"UNIMOD", @"UNIMOD:1176", @"Pro->Tyr", @"Pro->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Ala, new TermInfo(CVID.UNIMOD_Gln__Ala, @"UNIMOD", @"UNIMOD:1177", @"Gln->Ala", @"Gln->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Cys, new TermInfo(CVID.UNIMOD_Gln__Cys, @"UNIMOD", @"UNIMOD:1178", @"Gln->Cys", @"Gln->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Asp, new TermInfo(CVID.UNIMOD_Gln__Asp, @"UNIMOD", @"UNIMOD:1179", @"Gln->Asp", @"Gln->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Phe, new TermInfo(CVID.UNIMOD_Gln__Phe, @"UNIMOD", @"UNIMOD:1180", @"Gln->Phe", @"Gln->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Gly, new TermInfo(CVID.UNIMOD_Gln__Gly, @"UNIMOD", @"UNIMOD:1181", @"Gln->Gly", @"Gln->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Met, new TermInfo(CVID.UNIMOD_Gln__Met, @"UNIMOD", @"UNIMOD:1182", @"Gln->Met", @"Gln->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Asn, new TermInfo(CVID.UNIMOD_Gln__Asn, @"UNIMOD", @"UNIMOD:1183", @"Gln->Asn", @"Gln->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Ser, new TermInfo(CVID.UNIMOD_Gln__Ser, @"UNIMOD", @"UNIMOD:1184", @"Gln->Ser", @"Gln->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Thr, new TermInfo(CVID.UNIMOD_Gln__Thr, @"UNIMOD", @"UNIMOD:1185", @"Gln->Thr", @"Gln->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Val, new TermInfo(CVID.UNIMOD_Gln__Val, @"UNIMOD", @"UNIMOD:1186", @"Gln->Val", @"Gln->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Trp, new TermInfo(CVID.UNIMOD_Gln__Trp, @"UNIMOD", @"UNIMOD:1187", @"Gln->Trp", @"Gln->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Gln__Tyr, new TermInfo(CVID.UNIMOD_Gln__Tyr, @"UNIMOD", @"UNIMOD:1188", @"Gln->Tyr", @"Gln->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Ala, new TermInfo(CVID.UNIMOD_Arg__Ala, @"UNIMOD", @"UNIMOD:1189", @"Arg->Ala", @"Arg->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Asp, new TermInfo(CVID.UNIMOD_Arg__Asp, @"UNIMOD", @"UNIMOD:1190", @"Arg->Asp", @"Arg->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Glu, new TermInfo(CVID.UNIMOD_Arg__Glu, @"UNIMOD", @"UNIMOD:1191", @"Arg->Glu", @"Arg->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Asn, new TermInfo(CVID.UNIMOD_Arg__Asn, @"UNIMOD", @"UNIMOD:1192", @"Arg->Asn", @"Arg->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Val, new TermInfo(CVID.UNIMOD_Arg__Val, @"UNIMOD", @"UNIMOD:1193", @"Arg->Val", @"Arg->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Tyr, new TermInfo(CVID.UNIMOD_Arg__Tyr, @"UNIMOD", @"UNIMOD:1194", @"Arg->Tyr", @"Arg->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Arg__Phe, new TermInfo(CVID.UNIMOD_Arg__Phe, @"UNIMOD", @"UNIMOD:1195", @"Arg->Phe", @"Arg->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Asp, new TermInfo(CVID.UNIMOD_Ser__Asp, @"UNIMOD", @"UNIMOD:1196", @"Ser->Asp", @"Ser->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Glu, new TermInfo(CVID.UNIMOD_Ser__Glu, @"UNIMOD", @"UNIMOD:1197", @"Ser->Glu", @"Ser->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__His, new TermInfo(CVID.UNIMOD_Ser__His, @"UNIMOD", @"UNIMOD:1198", @"Ser->His", @"Ser->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Lys, new TermInfo(CVID.UNIMOD_Ser__Lys, @"UNIMOD", @"UNIMOD:1199", @"Ser->Lys", @"Ser->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Met, new TermInfo(CVID.UNIMOD_Ser__Met, @"UNIMOD", @"UNIMOD:1200", @"Ser->Met", @"Ser->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Gln, new TermInfo(CVID.UNIMOD_Ser__Gln, @"UNIMOD", @"UNIMOD:1201", @"Ser->Gln", @"Ser->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Ser__Val, new TermInfo(CVID.UNIMOD_Ser__Val, @"UNIMOD", @"UNIMOD:1202", @"Ser->Val", @"Ser->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Cys, new TermInfo(CVID.UNIMOD_Thr__Cys, @"UNIMOD", @"UNIMOD:1203", @"Thr->Cys", @"Thr->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Asp, new TermInfo(CVID.UNIMOD_Thr__Asp, @"UNIMOD", @"UNIMOD:1204", @"Thr->Asp", @"Thr->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Glu, new TermInfo(CVID.UNIMOD_Thr__Glu, @"UNIMOD", @"UNIMOD:1205", @"Thr->Glu", @"Thr->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Phe, new TermInfo(CVID.UNIMOD_Thr__Phe, @"UNIMOD", @"UNIMOD:1206", @"Thr->Phe", @"Thr->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Gly, new TermInfo(CVID.UNIMOD_Thr__Gly, @"UNIMOD", @"UNIMOD:1207", @"Thr->Gly", @"Thr->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__His, new TermInfo(CVID.UNIMOD_Thr__His, @"UNIMOD", @"UNIMOD:1208", @"Thr->His", @"Thr->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Gln, new TermInfo(CVID.UNIMOD_Thr__Gln, @"UNIMOD", @"UNIMOD:1209", @"Thr->Gln", @"Thr->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Val, new TermInfo(CVID.UNIMOD_Thr__Val, @"UNIMOD", @"UNIMOD:1210", @"Thr->Val", @"Thr->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Trp, new TermInfo(CVID.UNIMOD_Thr__Trp, @"UNIMOD", @"UNIMOD:1211", @"Thr->Trp", @"Thr->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Thr__Tyr, new TermInfo(CVID.UNIMOD_Thr__Tyr, @"UNIMOD", @"UNIMOD:1212", @"Thr->Tyr", @"Thr->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Cys, new TermInfo(CVID.UNIMOD_Val__Cys, @"UNIMOD", @"UNIMOD:1213", @"Val->Cys", @"Val->Cys substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__His, new TermInfo(CVID.UNIMOD_Val__His, @"UNIMOD", @"UNIMOD:1214", @"Val->His", @"Val->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Lys, new TermInfo(CVID.UNIMOD_Val__Lys, @"UNIMOD", @"UNIMOD:1215", @"Val->Lys", @"Val->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Asn, new TermInfo(CVID.UNIMOD_Val__Asn, @"UNIMOD", @"UNIMOD:1216", @"Val->Asn", @"Val->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Pro, new TermInfo(CVID.UNIMOD_Val__Pro, @"UNIMOD", @"UNIMOD:1217", @"Val->Pro", @"Val->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Gln, new TermInfo(CVID.UNIMOD_Val__Gln, @"UNIMOD", @"UNIMOD:1218", @"Val->Gln", @"Val->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Arg, new TermInfo(CVID.UNIMOD_Val__Arg, @"UNIMOD", @"UNIMOD:1219", @"Val->Arg", @"Val->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Ser, new TermInfo(CVID.UNIMOD_Val__Ser, @"UNIMOD", @"UNIMOD:1220", @"Val->Ser", @"Val->Ser substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Thr, new TermInfo(CVID.UNIMOD_Val__Thr, @"UNIMOD", @"UNIMOD:1221", @"Val->Thr", @"Val->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Trp, new TermInfo(CVID.UNIMOD_Val__Trp, @"UNIMOD", @"UNIMOD:1222", @"Val->Trp", @"Val->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Val__Tyr, new TermInfo(CVID.UNIMOD_Val__Tyr, @"UNIMOD", @"UNIMOD:1223", @"Val->Tyr", @"Val->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Ala, new TermInfo(CVID.UNIMOD_Trp__Ala, @"UNIMOD", @"UNIMOD:1224", @"Trp->Ala", @"Trp->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Asp, new TermInfo(CVID.UNIMOD_Trp__Asp, @"UNIMOD", @"UNIMOD:1225", @"Trp->Asp", @"Trp->Asp substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Glu, new TermInfo(CVID.UNIMOD_Trp__Glu, @"UNIMOD", @"UNIMOD:1226", @"Trp->Glu", @"Trp->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Phe, new TermInfo(CVID.UNIMOD_Trp__Phe, @"UNIMOD", @"UNIMOD:1227", @"Trp->Phe", @"Trp->Phe substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__His, new TermInfo(CVID.UNIMOD_Trp__His, @"UNIMOD", @"UNIMOD:1228", @"Trp->His", @"Trp->His substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Lys, new TermInfo(CVID.UNIMOD_Trp__Lys, @"UNIMOD", @"UNIMOD:1229", @"Trp->Lys", @"Trp->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Met, new TermInfo(CVID.UNIMOD_Trp__Met, @"UNIMOD", @"UNIMOD:1230", @"Trp->Met", @"Trp->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Asn, new TermInfo(CVID.UNIMOD_Trp__Asn, @"UNIMOD", @"UNIMOD:1231", @"Trp->Asn", @"Trp->Asn substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Pro, new TermInfo(CVID.UNIMOD_Trp__Pro, @"UNIMOD", @"UNIMOD:1232", @"Trp->Pro", @"Trp->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Gln, new TermInfo(CVID.UNIMOD_Trp__Gln, @"UNIMOD", @"UNIMOD:1233", @"Trp->Gln", @"Trp->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Thr, new TermInfo(CVID.UNIMOD_Trp__Thr, @"UNIMOD", @"UNIMOD:1234", @"Trp->Thr", @"Trp->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Val, new TermInfo(CVID.UNIMOD_Trp__Val, @"UNIMOD", @"UNIMOD:1235", @"Trp->Val", @"Trp->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Trp__Tyr, new TermInfo(CVID.UNIMOD_Trp__Tyr, @"UNIMOD", @"UNIMOD:1236", @"Trp->Tyr", @"Trp->Tyr substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Ala, new TermInfo(CVID.UNIMOD_Tyr__Ala, @"UNIMOD", @"UNIMOD:1237", @"Tyr->Ala", @"Tyr->Ala substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Glu, new TermInfo(CVID.UNIMOD_Tyr__Glu, @"UNIMOD", @"UNIMOD:1238", @"Tyr->Glu", @"Tyr->Glu substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Gly, new TermInfo(CVID.UNIMOD_Tyr__Gly, @"UNIMOD", @"UNIMOD:1239", @"Tyr->Gly", @"Tyr->Gly substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Lys, new TermInfo(CVID.UNIMOD_Tyr__Lys, @"UNIMOD", @"UNIMOD:1240", @"Tyr->Lys", @"Tyr->Lys substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Met, new TermInfo(CVID.UNIMOD_Tyr__Met, @"UNIMOD", @"UNIMOD:1241", @"Tyr->Met", @"Tyr->Met substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Pro, new TermInfo(CVID.UNIMOD_Tyr__Pro, @"UNIMOD", @"UNIMOD:1242", @"Tyr->Pro", @"Tyr->Pro substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Gln, new TermInfo(CVID.UNIMOD_Tyr__Gln, @"UNIMOD", @"UNIMOD:1243", @"Tyr->Gln", @"Tyr->Gln substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Arg, new TermInfo(CVID.UNIMOD_Tyr__Arg, @"UNIMOD", @"UNIMOD:1244", @"Tyr->Arg", @"Tyr->Arg substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Thr, new TermInfo(CVID.UNIMOD_Tyr__Thr, @"UNIMOD", @"UNIMOD:1245", @"Tyr->Thr", @"Tyr->Thr substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Val, new TermInfo(CVID.UNIMOD_Tyr__Val, @"UNIMOD", @"UNIMOD:1246", @"Tyr->Val", @"Tyr->Val substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Trp, new TermInfo(CVID.UNIMOD_Tyr__Trp, @"UNIMOD", @"UNIMOD:1247", @"Tyr->Trp", @"Tyr->Trp substitution.", false));
            TermData.Add(CVID.UNIMOD_Tyr__Xle, new TermInfo(CVID.UNIMOD_Tyr__Xle, @"UNIMOD", @"UNIMOD:1248", @"Tyr->Xle", @"Tyr->Leu/Ile substitution.", false));
            TermData.Add(CVID.UNIMOD_AHA_SS, new TermInfo(CVID.UNIMOD_AHA_SS, @"UNIMOD", @"UNIMOD:1249", @"AHA-SS", @"Azidohomoalanine coupled to reductively cleaved tag.", false));
            TermData.Add(CVID.UNIMOD_AHA_SS_CAM, new TermInfo(CVID.UNIMOD_AHA_SS_CAM, @"UNIMOD", @"UNIMOD:1250", @"AHA-SS_CAM", @"Carbamidomethylated form of reductively cleaved tag coupled to azidohomoalanine.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_33033, new TermInfo(CVID.UNIMOD_Biotin_Thermo_33033, @"UNIMOD", @"UNIMOD:1251", @"Biotin:Thermo-33033", @"Sulfo-SBED Label Photoreactive Biotin Crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_33033_H, new TermInfo(CVID.UNIMOD_Biotin_Thermo_33033_H, @"UNIMOD", @"UNIMOD:1252", @"Biotin:Thermo-33033-H", @"Sulfo-SBED Label Photoreactive Biotin Crosslinker minus Hydrogen.", false));
            TermData.Add(CVID.UNIMOD_2_monomethylsuccinyl, new TermInfo(CVID.UNIMOD_2_monomethylsuccinyl, @"UNIMOD", @"UNIMOD:1253", @"2-monomethylsuccinyl", @"S-(2-monomethylsuccinyl) cysteine.", false));
            TermData.Add(CVID.UNIMOD_Saligenin, new TermInfo(CVID.UNIMOD_Saligenin, @"UNIMOD", @"UNIMOD:1254", @"Saligenin", @"O-toluene.", false));
            TermData.Add(CVID.UNIMOD_Cresylphosphate, new TermInfo(CVID.UNIMOD_Cresylphosphate, @"UNIMOD", @"UNIMOD:1255", @"Cresylphosphate", @"O-toluyl-phosphorylation.", false));
            TermData.Add(CVID.UNIMOD_CresylSaligeninPhosphate, new TermInfo(CVID.UNIMOD_CresylSaligeninPhosphate, @"UNIMOD", @"UNIMOD:1256", @"CresylSaligeninPhosphate", @"Cresyl-Saligenin-phosphorylation.", false));
            TermData.Add(CVID.UNIMOD_Ub_Br2, new TermInfo(CVID.UNIMOD_Ub_Br2, @"UNIMOD", @"UNIMOD:1257", @"Ub-Br2", @"Ub Bromide probe addition.", false));
            TermData.Add(CVID.UNIMOD_Ub_VME, new TermInfo(CVID.UNIMOD_Ub_VME, @"UNIMOD", @"UNIMOD:1258", @"Ub-VME", @"Ubiquitin vinylmethylester.", false));
            TermData.Add(CVID.UNIMOD_Ub_amide, new TermInfo(CVID.UNIMOD_Ub_amide, @"UNIMOD", @"UNIMOD:1260", @"Ub-amide", @"Ub amide probe addition.", false));
            TermData.Add(CVID.UNIMOD_Ub_fluorescein, new TermInfo(CVID.UNIMOD_Ub_fluorescein, @"UNIMOD", @"UNIMOD:1261", @"Ub-fluorescein", @"Ub Fluorescein probe addition.", false));
            TermData.Add(CVID.UNIMOD_2_dimethylsuccinyl, new TermInfo(CVID.UNIMOD_2_dimethylsuccinyl, @"UNIMOD", @"UNIMOD:1262", @"2-dimethylsuccinyl", @"S-(2-dimethylsuccinyl) cysteine.", false));
            TermData.Add(CVID.UNIMOD_Gly, new TermInfo(CVID.UNIMOD_Gly, @"UNIMOD", @"UNIMOD:1263", @"Gly", @"Addition of Glycine.", false));
            TermData.Add(CVID.UNIMOD_pupylation, new TermInfo(CVID.UNIMOD_pupylation, @"UNIMOD", @"UNIMOD:1264", @"pupylation", @"Addition of GGE.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_4_, new TermInfo(CVID.UNIMOD_Label_13C_4_, @"UNIMOD", @"UNIMOD:1266", @"Label:13C(4)", @"13C4 Methionine label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_4__Oxidation, new TermInfo(CVID.UNIMOD_Label_13C_4__Oxidation, @"UNIMOD", @"UNIMOD:1267", @"Label:13C(4)+Oxidation", @"Oxidised 13C4 labelled Methionine.", false));
            TermData.Add(CVID.UNIMOD_HCysThiolactone, new TermInfo(CVID.UNIMOD_HCysThiolactone, @"UNIMOD", @"UNIMOD:1270", @"HCysThiolactone", @"N-Homocysteine thiolactone.", false));
            TermData.Add(CVID.UNIMOD_HCysteinyl, new TermInfo(CVID.UNIMOD_HCysteinyl, @"UNIMOD", @"UNIMOD:1271", @"HCysteinyl", @"S-homocysteinylation.", false));
            TermData.Add(CVID.UNIMOD_UgiJoullie, new TermInfo(CVID.UNIMOD_UgiJoullie, @"UNIMOD", @"UNIMOD:1276", @"UgiJoullie", @"Side reaction of HisTag.", false));
            TermData.Add(CVID.UNIMOD_Dipyridyl, new TermInfo(CVID.UNIMOD_Dipyridyl, @"UNIMOD", @"UNIMOD:1277", @"Dipyridyl", @"Cys modified with dipy ligand.", false));
            TermData.Add(CVID.UNIMOD_Furan, new TermInfo(CVID.UNIMOD_Furan, @"UNIMOD", @"UNIMOD:1278", @"Furan", @"Chemical modification of the iodinated sites of thyroglobulin by Suzuki reaction.", false));
            TermData.Add(CVID.UNIMOD_Difuran, new TermInfo(CVID.UNIMOD_Difuran, @"UNIMOD", @"UNIMOD:1279", @"Difuran", @"Chemical modification of the diiodinated sites of thyroglobulin by Suzuki reaction.", false));
            TermData.Add(CVID.UNIMOD_BMP_piperidinol, new TermInfo(CVID.UNIMOD_BMP_piperidinol, @"UNIMOD", @"UNIMOD:1281", @"BMP-piperidinol", @"1-methyl-3-benzoyl-4-hydroxy-4-phenylpiperidine.", false));
            TermData.Add(CVID.UNIMOD_UgiJoullieProGly, new TermInfo(CVID.UNIMOD_UgiJoullieProGly, @"UNIMOD", @"UNIMOD:1282", @"UgiJoullieProGly", @"Side reaction of PG with Side chain of aspartic or glutamic acid.", false));
            TermData.Add(CVID.UNIMOD_UgiJoullieProGlyProGly, new TermInfo(CVID.UNIMOD_UgiJoullieProGlyProGly, @"UNIMOD", @"UNIMOD:1283", @"UgiJoullieProGlyProGly", @"Side reaction of PGPG with Side chain of aspartic or glutamic acid.", false));
            TermData.Add(CVID.UNIMOD_IMEHex_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_IMEHex_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1286", @"IMEHex(2)NeuAc(1)", @"Glycosylation with IME linked Hex(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Arg_loss, new TermInfo(CVID.UNIMOD_Arg_loss, @"UNIMOD", @"UNIMOD:1287", @"Arg-loss", @"Loss of arginine due to transpeptidation.", false));
            TermData.Add(CVID.UNIMOD_Arg, new TermInfo(CVID.UNIMOD_Arg, @"UNIMOD", @"UNIMOD:1288", @"Arg", @"Addition of arginine due to transpeptidation.", false));
            TermData.Add(CVID.UNIMOD_Butyryl, new TermInfo(CVID.UNIMOD_Butyryl, @"UNIMOD", @"UNIMOD:1289", @"Butyryl", @"Butyryl.", false));
            TermData.Add(CVID.UNIMOD_Dicarbamidomethyl, new TermInfo(CVID.UNIMOD_Dicarbamidomethyl, @"UNIMOD", @"UNIMOD:1290", @"Dicarbamidomethyl", @"Double Carbamidomethylation.", false));
            TermData.Add(CVID.UNIMOD_Dimethyl_2H_6_, new TermInfo(CVID.UNIMOD_Dimethyl_2H_6_, @"UNIMOD", @"UNIMOD:1291", @"Dimethyl:2H(6)", @"Dimethyl-Medium.", false));
            TermData.Add(CVID.UNIMOD_GGQ, new TermInfo(CVID.UNIMOD_GGQ, @"UNIMOD", @"UNIMOD:1292", @"GGQ", @"SUMOylation leaving GlyGlyGln.", false));
            TermData.Add(CVID.UNIMOD_QTGG, new TermInfo(CVID.UNIMOD_QTGG, @"UNIMOD", @"UNIMOD:1293", @"QTGG", @"SUMOylation leaving GlnThrGlyGly.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_3_, new TermInfo(CVID.UNIMOD_Label_13C_3_, @"UNIMOD", @"UNIMOD:1296", @"Label:13C(3)", @"13C3 label for SILAC.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_3_15N_1_, new TermInfo(CVID.UNIMOD_Label_13C_3_15N_1_, @"UNIMOD", @"UNIMOD:1297", @"Label:13C(3)15N(1)", @"SILAC or AQUA label.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_4_15N_1_, new TermInfo(CVID.UNIMOD_Label_13C_4_15N_1_, @"UNIMOD", @"UNIMOD:1298", @"Label:13C(4)15N(1)", @"13C4 15N1 label for SILAC.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_10_, new TermInfo(CVID.UNIMOD_Label_2H_10_, @"UNIMOD", @"UNIMOD:1299", @"Label:2H(10)", @"2H(10) label.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_4_13C_1_, new TermInfo(CVID.UNIMOD_Label_2H_4_13C_1_, @"UNIMOD", @"UNIMOD:1300", @"Label:2H(4)13C(1)", @"Label:2H(4)13C(1).", false));
            TermData.Add(CVID.UNIMOD_Lys, new TermInfo(CVID.UNIMOD_Lys, @"UNIMOD", @"UNIMOD:1301", @"Lys", @"Addition of lysine due to transpeptidation.", false));
            TermData.Add(CVID.UNIMOD_mTRAQ_13C_6_15N_2_, new TermInfo(CVID.UNIMOD_mTRAQ_13C_6_15N_2_, @"UNIMOD", @"UNIMOD:1302", @"mTRAQ:13C(6)15N(2)", @"MTRAQ heavy.", false));
            TermData.Add(CVID.UNIMOD_NeuAc, new TermInfo(CVID.UNIMOD_NeuAc, @"UNIMOD", @"UNIMOD:1303", @"NeuAc", @"N-acetyl neuraminic acid.", false));
            TermData.Add(CVID.UNIMOD_NeuGc, new TermInfo(CVID.UNIMOD_NeuGc, @"UNIMOD", @"UNIMOD:1304", @"NeuGc", @"N-glycoyl neuraminic acid.", false));
            TermData.Add(CVID.UNIMOD_Propyl, new TermInfo(CVID.UNIMOD_Propyl, @"UNIMOD", @"UNIMOD:1305", @"Propyl", @"Propyl.", false));
            TermData.Add(CVID.UNIMOD_Propyl_2H_6_, new TermInfo(CVID.UNIMOD_Propyl_2H_6_, @"UNIMOD", @"UNIMOD:1306", @"Propyl:2H(6)", @"Propyl:2H(6).", false));
            TermData.Add(CVID.UNIMOD_Propiophenone, new TermInfo(CVID.UNIMOD_Propiophenone, @"UNIMOD", @"UNIMOD:1310", @"Propiophenone", @"Propiophenone.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_6_C_3_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_6_C_3_O_1_, @"UNIMOD", @"UNIMOD:1312", @"Delta:H(6)C(3)O(1)", @"Reduced acrolein addition +58.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_8_C_6_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_8_C_6_O_1_, @"UNIMOD", @"UNIMOD:1313", @"Delta:H(8)C(6)O(1)", @"Reduced acrolein addition +96.", false));
            TermData.Add(CVID.UNIMOD_biotinAcrolein298, new TermInfo(CVID.UNIMOD_biotinAcrolein298, @"UNIMOD", @"UNIMOD:1314", @"biotinAcrolein298", @"Biotin hydrazide labeled acrolein addition +298.", false));
            TermData.Add(CVID.UNIMOD_MM_diphenylpentanone, new TermInfo(CVID.UNIMOD_MM_diphenylpentanone, @"UNIMOD", @"UNIMOD:1315", @"MM-diphenylpentanone", @"3-methyl-5-(methylamino)-1,3-diphenylpentan-1-one.", false));
            TermData.Add(CVID.UNIMOD_EHD_diphenylpentanone, new TermInfo(CVID.UNIMOD_EHD_diphenylpentanone, @"UNIMOD", @"UNIMOD:1317", @"EHD-diphenylpentanone", @"2-ethyl-3-hydroxy-1,3-diphenylpentan-1-one.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21901_2H2O, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21901_2H2O, @"UNIMOD", @"UNIMOD:1320", @"Biotin:Thermo-21901+2H2O", @"Maleimide-Biotin + 2Water.", false));
            TermData.Add(CVID.UNIMOD_DiLeu4plex115, new TermInfo(CVID.UNIMOD_DiLeu4plex115, @"UNIMOD", @"UNIMOD:1321", @"DiLeu4plex115", @"Accurate mass for DiLeu 115 isobaric tag.", false));
            TermData.Add(CVID.UNIMOD_DiLeu4plex, new TermInfo(CVID.UNIMOD_DiLeu4plex, @"UNIMOD", @"UNIMOD:1322", @"DiLeu4plex", @"Accurate mass for DiLeu 116 isobaric tag.", false));
            TermData.Add(CVID.UNIMOD_DiLeu4plex117, new TermInfo(CVID.UNIMOD_DiLeu4plex117, @"UNIMOD", @"UNIMOD:1323", @"DiLeu4plex117", @"Accurate mass for DiLeu 117 isobaric tag.", false));
            TermData.Add(CVID.UNIMOD_DiLeu4plex118, new TermInfo(CVID.UNIMOD_DiLeu4plex118, @"UNIMOD", @"UNIMOD:1324", @"DiLeu4plex118", @"Accurate mass for DiLeu 118 isobaric tag.", false));
            TermData.Add(CVID.UNIMOD_NEMsulfur, new TermInfo(CVID.UNIMOD_NEMsulfur, @"UNIMOD", @"UNIMOD:1326", @"NEMsulfur", @"N-ethylmaleimideSulfur.", false));
            TermData.Add(CVID.UNIMOD_SulfurDioxide, new TermInfo(CVID.UNIMOD_SulfurDioxide, @"UNIMOD", @"UNIMOD:1327", @"SulfurDioxide", @"SulfurDioxide.", false));
            TermData.Add(CVID.UNIMOD_NEMsulfurWater, new TermInfo(CVID.UNIMOD_NEMsulfurWater, @"UNIMOD", @"UNIMOD:1328", @"NEMsulfurWater", @"N-ethylmaleimideSulfurWater.", false));
            TermData.Add(CVID.UNIMOD_bisANS_sulfonates, new TermInfo(CVID.UNIMOD_bisANS_sulfonates, @"UNIMOD", @"UNIMOD:1330", @"bisANS-sulfonates", @"BisANS with loss of both sulfonates.", false));
            TermData.Add(CVID.UNIMOD_DNCB_hapten, new TermInfo(CVID.UNIMOD_DNCB_hapten, @"UNIMOD", @"UNIMOD:1331", @"DNCB_hapten", @"Chemical reaction with 2,4-dinitro-1-chloro benzene (DNCB).", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21911, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21911, @"UNIMOD", @"UNIMOD:1340", @"Biotin:Thermo-21911", @"Biotin-PEG11-maleimide.", false));
            TermData.Add(CVID.UNIMOD_iodoTMT, new TermInfo(CVID.UNIMOD_iodoTMT, @"UNIMOD", @"UNIMOD:1341", @"iodoTMT", @"Native iodoacetyl Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_iodoTMT6plex, new TermInfo(CVID.UNIMOD_iodoTMT6plex, @"UNIMOD", @"UNIMOD:1342", @"iodoTMT6plex", @"Sixplex iodoacetyl Tandem Mass TagÂ®.", false));
            TermData.Add(CVID.UNIMOD_Phosphogluconoylation, new TermInfo(CVID.UNIMOD_Phosphogluconoylation, @"UNIMOD", @"UNIMOD:1344", @"Phosphogluconoylation", @"Phosphogluconoylation.", false));
            TermData.Add(CVID.UNIMOD_PS_Hapten, new TermInfo(CVID.UNIMOD_PS_Hapten, @"UNIMOD", @"UNIMOD:1345", @"PS_Hapten", @"Reaction with phenyl salicylate (PS).", false));
            TermData.Add(CVID.UNIMOD_Cy3_maleimide, new TermInfo(CVID.UNIMOD_Cy3_maleimide, @"UNIMOD", @"UNIMOD:1348", @"Cy3-maleimide", @"Cy3 Maleimide mono-Reactive dye.", false));
            TermData.Add(CVID.UNIMOD_benzylguanidine, new TermInfo(CVID.UNIMOD_benzylguanidine, @"UNIMOD", @"UNIMOD:1349", @"benzylguanidine", @"Modification of the lysine side chain from NH2 to guanidine with a H removed in favor of a benzyl group.", false));
            TermData.Add(CVID.UNIMOD_CarboxymethylDMAP, new TermInfo(CVID.UNIMOD_CarboxymethylDMAP, @"UNIMOD", @"UNIMOD:1350", @"CarboxymethylDMAP", @"A fixed +1 charge tag attached to the N-terminus of peptides.", false));
            TermData.Add(CVID.UNIMOD_azole, new TermInfo(CVID.UNIMOD_azole, @"UNIMOD", @"UNIMOD:1355", @"azole", @"Formation of five membered aromatic heterocycle.", false));
            TermData.Add(CVID.UNIMOD_phosphoRibosyl, new TermInfo(CVID.UNIMOD_phosphoRibosyl, @"UNIMOD", @"UNIMOD:1356", @"phosphoRibosyl", @"Phosphate-ribosylation.", false));
            TermData.Add(CVID.UNIMOD_NEM_2H_5__H2O, new TermInfo(CVID.UNIMOD_NEM_2H_5__H2O, @"UNIMOD", @"UNIMOD:1358", @"NEM:2H(5)+H2O", @"D5 N-ethylmaleimide+water on cysteines.", false));
            TermData.Add(CVID.UNIMOD_Crotonyl, new TermInfo(CVID.UNIMOD_Crotonyl, @"UNIMOD", @"UNIMOD:1363", @"Crotonyl", @"Crotonylation.", false));
            TermData.Add(CVID.UNIMOD_O_Et_N_diMePhospho, new TermInfo(CVID.UNIMOD_O_Et_N_diMePhospho, @"UNIMOD", @"UNIMOD:1364", @"O-Et-N-diMePhospho", @"O-ethyl, N-dimethyl phosphate.", false));
            TermData.Add(CVID.UNIMOD_N_dimethylphosphate, new TermInfo(CVID.UNIMOD_N_dimethylphosphate, @"UNIMOD", @"UNIMOD:1365", @"N-dimethylphosphate", @"N-dimethylphosphate.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_, @"UNIMOD", @"UNIMOD:1367", @"dHex(1)Hex(1)", @"Hex1dHex1.", false));
            TermData.Add(CVID.UNIMOD_Methyl_2H_3__Acetyl_2H_3_, new TermInfo(CVID.UNIMOD_Methyl_2H_3__Acetyl_2H_3_, @"UNIMOD", @"UNIMOD:1368", @"Methyl:2H(3)+Acetyl:2H(3)", @"3-fold methylated lysine labelled with Acetyl_heavy.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_3__Oxidation, new TermInfo(CVID.UNIMOD_Label_2H_3__Oxidation, @"UNIMOD", @"UNIMOD:1370", @"Label:2H(3)+Oxidation", @"Oxidised 2H(3) labelled Methionine.", false));
            TermData.Add(CVID.UNIMOD_Trimethyl_2H_9_, new TermInfo(CVID.UNIMOD_Trimethyl_2H_9_, @"UNIMOD", @"UNIMOD:1371", @"Trimethyl:2H(9)", @"3-fold methylation with deuterated methyl groups.", false));
            TermData.Add(CVID.UNIMOD_Acetyl_13C_2_, new TermInfo(CVID.UNIMOD_Acetyl_13C_2_, @"UNIMOD", @"UNIMOD:1372", @"Acetyl:13C(2)", @"Heavy acetylation.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_, @"UNIMOD", @"UNIMOD:1375", @"dHex(1)Hex(2)", @"Hex2dHex1.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_, @"UNIMOD", @"UNIMOD:1376", @"dHex(1)Hex(3)", @"Hex3dHex1.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_, @"UNIMOD", @"UNIMOD:1377", @"dHex(1)Hex(4)", @"Hex4dHex1.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_, @"UNIMOD", @"UNIMOD:1378", @"dHex(1)Hex(5)", @"Hex5dHex1.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_6_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_6_, @"UNIMOD", @"UNIMOD:1379", @"dHex(1)Hex(6)", @"Hex6dHex1.", false));
            TermData.Add(CVID.UNIMOD_methylsulfonylethyl, new TermInfo(CVID.UNIMOD_methylsulfonylethyl, @"UNIMOD", @"UNIMOD:1380", @"methylsulfonylethyl", @"Reaction with methyl vinyl sulfone.", false));
            TermData.Add(CVID.UNIMOD_ethylsulfonylethyl, new TermInfo(CVID.UNIMOD_ethylsulfonylethyl, @"UNIMOD", @"UNIMOD:1381", @"ethylsulfonylethyl", @"Reaction with ethyl vinyl sulfone.", false));
            TermData.Add(CVID.UNIMOD_phenylsulfonylethyl, new TermInfo(CVID.UNIMOD_phenylsulfonylethyl, @"UNIMOD", @"UNIMOD:1382", @"phenylsulfonylethyl", @"Reaction with phenyl vinyl sulfone.", false));
            TermData.Add(CVID.UNIMOD_PyridoxalPhosphateH2, new TermInfo(CVID.UNIMOD_PyridoxalPhosphateH2, @"UNIMOD", @"UNIMOD:1383", @"PyridoxalPhosphateH2", @"PLP bound to lysine reduced by sodium borohydride (NaBH4) to create amine linkage.", false));
            TermData.Add(CVID.UNIMOD_Homocysteic_acid, new TermInfo(CVID.UNIMOD_Homocysteic_acid, @"UNIMOD", @"UNIMOD:1384", @"Homocysteic_acid", @"Methionine oxidation to homocysteic acid.", false));
            TermData.Add(CVID.UNIMOD_Hydroxamic_acid, new TermInfo(CVID.UNIMOD_Hydroxamic_acid, @"UNIMOD", @"UNIMOD:1385", @"Hydroxamic_acid", @"ADP-ribosylation followed by conversion to hydroxamic acid via hydroxylamine.", false));
            TermData.Add(CVID.UNIMOD_3_phosphoglyceryl, new TermInfo(CVID.UNIMOD_3_phosphoglyceryl, @"UNIMOD", @"UNIMOD:1387", @"3-phosphoglyceryl", @"3-phosphoglyceryl.", false));
            TermData.Add(CVID.UNIMOD_HN2_mustard, new TermInfo(CVID.UNIMOD_HN2_mustard, @"UNIMOD", @"UNIMOD:1388", @"HN2_mustard", @"Modification by hydroxylated mechloroethamine (HN-2).", false));
            TermData.Add(CVID.UNIMOD_HN3_mustard, new TermInfo(CVID.UNIMOD_HN3_mustard, @"UNIMOD", @"UNIMOD:1389", @"HN3_mustard", @"Modification by hydroxylated tris-(2-chloroethyl)amine (HN-3).", false));
            TermData.Add(CVID.UNIMOD_Oxidation_NEM, new TermInfo(CVID.UNIMOD_Oxidation_NEM, @"UNIMOD", @"UNIMOD:1390", @"Oxidation+NEM", @"N-ethylmaleimide on cysteine sulfenic acid.", false));
            TermData.Add(CVID.UNIMOD_NHS_fluorescein, new TermInfo(CVID.UNIMOD_NHS_fluorescein, @"UNIMOD", @"UNIMOD:1391", @"NHS-fluorescein", @"Fluorescein-hexanoate-NHS hydrolysis.", false));
            TermData.Add(CVID.UNIMOD_DiART6plex, new TermInfo(CVID.UNIMOD_DiART6plex, @"UNIMOD", @"UNIMOD:1392", @"DiART6plex", @"Representative mass and accurate mass for 114.", false));
            TermData.Add(CVID.UNIMOD_DiART6plex115, new TermInfo(CVID.UNIMOD_DiART6plex115, @"UNIMOD", @"UNIMOD:1393", @"DiART6plex115", @"Accurate mass for DiART6plex 115.", false));
            TermData.Add(CVID.UNIMOD_DiART6plex116_119, new TermInfo(CVID.UNIMOD_DiART6plex116_119, @"UNIMOD", @"UNIMOD:1394", @"DiART6plex116/119", @"Accurate mass for DiART6plex 116 and 119.", false));
            TermData.Add(CVID.UNIMOD_DiART6plex117, new TermInfo(CVID.UNIMOD_DiART6plex117, @"UNIMOD", @"UNIMOD:1395", @"DiART6plex117", @"Accurate mass for DiART6plex 117.", false));
            TermData.Add(CVID.UNIMOD_DiART6plex118, new TermInfo(CVID.UNIMOD_DiART6plex118, @"UNIMOD", @"UNIMOD:1396", @"DiART6plex118", @"Accurate mass for DiART6plex 118.", false));
            TermData.Add(CVID.UNIMOD_Iodoacetanilide, new TermInfo(CVID.UNIMOD_Iodoacetanilide, @"UNIMOD", @"UNIMOD:1397", @"Iodoacetanilide", @"Iodoacetanilide derivative.", false));
            TermData.Add(CVID.UNIMOD_Iodoacetanilide_13C_6_, new TermInfo(CVID.UNIMOD_Iodoacetanilide_13C_6_, @"UNIMOD", @"UNIMOD:1398", @"Iodoacetanilide:13C(6)", @"13C labelled iodoacetanilide derivative.", false));
            TermData.Add(CVID.UNIMOD_Dap_DSP, new TermInfo(CVID.UNIMOD_Dap_DSP, @"UNIMOD", @"UNIMOD:1399", @"Dap-DSP", @"Diaminopimelic acid-DSP monolinked.", false));
            TermData.Add(CVID.UNIMOD_MurNAc, new TermInfo(CVID.UNIMOD_MurNAc, @"UNIMOD", @"UNIMOD:1400", @"MurNAc", @"N-Acetylmuramic acid.", false));
            TermData.Add(CVID.UNIMOD_Label_2H_7_15N_4_, new TermInfo(CVID.UNIMOD_Label_2H_7_15N_4_, @"UNIMOD", @"UNIMOD:1402", @"Label:2H(7)15N(4)", @"Label:2H(7)15N(4).", false));
            TermData.Add(CVID.UNIMOD_Label_2H_6_15N_1_, new TermInfo(CVID.UNIMOD_Label_2H_6_15N_1_, @"UNIMOD", @"UNIMOD:1403", @"Label:2H(6)15N(1)", @"Label:2H(6)15N(1).", false));
            TermData.Add(CVID.UNIMOD_EEEDVIEVYQEQTGG, new TermInfo(CVID.UNIMOD_EEEDVIEVYQEQTGG, @"UNIMOD", @"UNIMOD:1405", @"EEEDVIEVYQEQTGG", @"Sumoylation by SUMO-1 after Cyanogen bromide (CNBr) cleavage.", false));
            TermData.Add(CVID.UNIMOD_EDEDTIDVFQQQTGG, new TermInfo(CVID.UNIMOD_EDEDTIDVFQQQTGG, @"UNIMOD", @"UNIMOD:1406", @"EDEDTIDVFQQQTGG", @"Sumoylation by SUMO-2/3 after Cyanogen bromide (CNBr) cleavage.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_2_, @"UNIMOD", @"UNIMOD:1408", @"Hex(5)HexNAc(4)NeuAc(2)", @"Hex(5) HexNAc(4) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1409", @"Hex(5)HexNAc(4)NeuAc(1)", @"Hex(5) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1410", @"dHex(1)Hex(5)HexNAc(4)NeuAc(1)", @"DHex Hex(5) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_NeuAc_2_, @"UNIMOD", @"UNIMOD:1411", @"dHex(1)Hex(5)HexNAc(4)NeuAc(2)", @"DHex Hex(5) HexNAc(4) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_s_GlcNAc, new TermInfo(CVID.UNIMOD_s_GlcNAc, @"UNIMOD", @"UNIMOD:1412", @"s-GlcNAc", @"O3S1HexNAc1.", false));
            TermData.Add(CVID.UNIMOD_PhosphoHex_2_, new TermInfo(CVID.UNIMOD_PhosphoHex_2_, @"UNIMOD", @"UNIMOD:1413", @"PhosphoHex(2)", @"H1O3P1Hex2.", false));
            TermData.Add(CVID.UNIMOD_Trimethyl_13C_3_2H_9_, new TermInfo(CVID.UNIMOD_Trimethyl_13C_3_2H_9_, @"UNIMOD", @"UNIMOD:1414", @"Trimethyl:13C(3)2H(9)", @"3-fold methylation with fully labelled methyl groups.", false));
            TermData.Add(CVID.UNIMOD_15N_oxobutanoic, new TermInfo(CVID.UNIMOD_15N_oxobutanoic, @"UNIMOD", @"UNIMOD:1419", @"15N-oxobutanoic", @"Loss of ammonia (15N).", false));
            TermData.Add(CVID.UNIMOD_spermine, new TermInfo(CVID.UNIMOD_spermine, @"UNIMOD", @"UNIMOD:1420", @"spermine", @"Spermine adduct.", false));
            TermData.Add(CVID.UNIMOD_spermidine, new TermInfo(CVID.UNIMOD_spermidine, @"UNIMOD", @"UNIMOD:1421", @"spermidine", @"Spermidine adduct.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21330, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21330, @"UNIMOD", @"UNIMOD:1423", @"Biotin:Thermo-21330", @"Biotin_PEG4.", false));
            TermData.Add(CVID.UNIMOD_Pentose, new TermInfo(CVID.UNIMOD_Pentose, @"UNIMOD", @"UNIMOD:1425", @"Pentose", @"Pentose.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_1_Pent_1_, @"UNIMOD", @"UNIMOD:1426", @"Hex(1)Pent(1)", @"Hex Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexA_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexA_1_, @"UNIMOD", @"UNIMOD:1427", @"Hex(1)HexA(1)", @"Hex HexA.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 2</summary>
        private static void PopulateTermData_UNIMOD_Part2()
        {
            TermData.Add(CVID.UNIMOD_Hex_1_Pent_2_, new TermInfo(CVID.UNIMOD_Hex_1_Pent_2_, @"UNIMOD", @"UNIMOD:1428", @"Hex(1)Pent(2)", @"Hex Pent(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_Phos_1_, @"UNIMOD", @"UNIMOD:1429", @"Hex(1)HexNAc(1)Phos(1)", @"Hex HexNAc Phos.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1430", @"Hex(1)HexNAc(1)Sulf(1)", @"Hex HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_NeuAc_1_, @"UNIMOD", @"UNIMOD:1431", @"Hex(1)NeuAc(1)", @"Hex NeuAc ---OR--- HexNAc Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1432", @"Hex(1)NeuGc(1)", @"Hex NeuGc.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_3_, new TermInfo(CVID.UNIMOD_HexNAc_3_, @"UNIMOD", @"UNIMOD:1433", @"HexNAc(3)", @"HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_NeuAc_1_, new TermInfo(CVID.UNIMOD_HexNAc_1_NeuAc_1_, @"UNIMOD", @"UNIMOD:1434", @"HexNAc(1)NeuAc(1)", @"HexNAc NeuAc.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_HexNAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1435", @"HexNAc(1)NeuGc(1)", @"HexNAc NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_Me_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_Me_1_, @"UNIMOD", @"UNIMOD:1436", @"Hex(1)HexNAc(1)dHex(1)Me(1)", @"Hex HexNAc dHex Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_Me_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_Me_2_, @"UNIMOD", @"UNIMOD:1437", @"Hex(1)HexNAc(1)dHex(1)Me(2)", @"Hex HexNAc dHex Me(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_, @"UNIMOD", @"UNIMOD:1438", @"Hex(2)HexNAc(1)", @"Hex(2) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexA_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexA_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1439", @"Hex(1)HexA(1)HexNAc(1)", @"Hex HexA HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_Me_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_Me_1_, @"UNIMOD", @"UNIMOD:1440", @"Hex(2)HexNAc(1)Me(1)", @"Hex(2) HexNAc Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_Pent_3_, new TermInfo(CVID.UNIMOD_Hex_1_Pent_3_, @"UNIMOD", @"UNIMOD:1441", @"Hex(1)Pent(3)", @"Hex Pent(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_NeuAc_1_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_1_NeuAc_1_Pent_1_, @"UNIMOD", @"UNIMOD:1442", @"Hex(1)NeuAc(1)Pent(1)", @"Hex NeuAc Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1443", @"Hex(2)HexNAc(1)Sulf(1)", @"Hex(2) HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1444", @"Hex(2)NeuAc(1)", @"Hex(2) NeuAc ---OR--- Hex HexNAc Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_, @"UNIMOD", @"UNIMOD:1445", @"dHex(2)Hex(2)", @"Hex2 dHex2.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_, @"UNIMOD", @"UNIMOD:1446", @"dHex(1)Hex(2)HexA(1)", @"DHex Hex(2) HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1447", @"Hex(1)HexNAc(2)Sulf(1)", @"Hex HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_, new TermInfo(CVID.UNIMOD_Hex_4_, @"UNIMOD", @"UNIMOD:1448", @"Hex(4)", @"Hex(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1449", @"dHex(1)Hex(2)HexNAc(2)Pent(1)", @"DHex Hex(2) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1450", @"Hex(2)HexNAc(2)NeuAc(1)", @"Hex(2) HexNAc(2) NeuAc ---OR--- dHex Hex HexNAc(2) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1451", @"Hex(3)HexNAc(2)Pent(1)", @"Hex(3) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_2_, @"UNIMOD", @"UNIMOD:1452", @"Hex(4)HexNAc(2)", @"Hex(4) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_1_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_1_Pent_1_, @"UNIMOD", @"UNIMOD:1453", @"dHex(1)Hex(4)HexNAc(1)Pent(1)", @"DHex Hex(4) HexNAc Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1454", @"dHex(1)Hex(3)HexNAc(2)Pent(1)", @"DHex Hex(3) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1455", @"Hex(3)HexNAc(2)NeuAc(1)", @"Hex(3) HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1456", @"Hex(4)HexNAc(2)Pent(1)", @"Hex(4) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1457", @"Hex(3)HexNAc(3)Pent(1)", @"Hex(3) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_2_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_2_Phos_1_, @"UNIMOD", @"UNIMOD:1458", @"Hex(5)HexNAc(2)Phos(1)", @"Hex(5) HexNAc(2) Phos.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1459", @"dHex(1)Hex(4)HexNAc(2)Pent(1)", @"DHex Hex(4) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_1_, @"UNIMOD", @"UNIMOD:1460", @"Hex(7)HexNAc(1)", @"Hex(7) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1461", @"Hex(4)HexNAc(2)NeuAc(1)", @"Hex(4) HexNAc(2) NeuAc ---OR--- Hex(3) HexNAc(2) dHex NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_2_, @"UNIMOD", @"UNIMOD:1462", @"dHex(1)Hex(5)HexNAc(2)", @"DHex Hex(5) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1463", @"dHex(1)Hex(3)HexNAc(3)Pent(1)", @"DHex Hex(3) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1464", @"Hex(3)HexNAc(4)Sulf(1)", @"Hex(3) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_2_, @"UNIMOD", @"UNIMOD:1465", @"Hex(6)HexNAc(2)", @"Hex(6) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1466", @"Hex(4)HexNAc(3)Pent(1)", @"Hex(4) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_, @"UNIMOD", @"UNIMOD:1467", @"dHex(1)Hex(4)HexNAc(3)", @"DHex Hex(4) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_3_, @"UNIMOD", @"UNIMOD:1468", @"Hex(5)HexNAc(3)", @"Hex(5) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1469", @"Hex(3)HexNAc(4)Pent(1)", @"Hex(3) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_2_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_2_Phos_1_, @"UNIMOD", @"UNIMOD:1470", @"Hex(6)HexNAc(2)Phos(1)", @"Hex(6) HexNAc(2) Phos.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1471", @"dHex(1)Hex(4)HexNAc(3)Sulf(1)", @"DHex Hex(4) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_2_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_2_Pent_1_, @"UNIMOD", @"UNIMOD:1472", @"dHex(1)Hex(5)HexNAc(2)Pent(1)", @"DHex Hex(5) HexNAc(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_8_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_8_HexNAc_1_, @"UNIMOD", @"UNIMOD:1473", @"Hex(8)HexNAc(1)", @"Hex(8) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_2_, @"UNIMOD", @"UNIMOD:1474", @"dHex(1)Hex(3)HexNAc(3)Pent(2)", @"DHex Hex(3) HexNAc(3) Pent(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1475", @"dHex(2)Hex(3)HexNAc(3)Pent(1)", @"DHex(2) Hex(3) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1476", @"dHex(1)Hex(3)HexNAc(4)Sulf(1)", @"DHex Hex(3) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_2_, @"UNIMOD", @"UNIMOD:1477", @"dHex(1)Hex(6)HexNAc(2)", @"DHex Hex(6) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1478", @"dHex(1)Hex(4)HexNAc(3)Pent(1)", @"DHex Hex(4) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1479", @"Hex(4)HexNAc(4)Sulf(1)", @"Hex(4) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_2_, @"UNIMOD", @"UNIMOD:1480", @"Hex(7)HexNAc(2)", @"Hex(7) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_, @"UNIMOD", @"UNIMOD:1481", @"dHex(2)Hex(4)HexNAc(3)", @"DHex(2) Hex(4) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1482", @"Hex(5)HexNAc(3)Pent(1)", @"Hex(5) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1483", @"Hex(4)HexNAc(3)NeuGc(1)", @"Hex(4) HexNAc(3) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_, @"UNIMOD", @"UNIMOD:1484", @"dHex(1)Hex(5)HexNAc(3)", @"DHex Hex(5) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1485", @"dHex(1)Hex(3)HexNAc(4)Pent(1)", @"DHex Hex(3) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_5_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_5_Sulf_1_, @"UNIMOD", @"UNIMOD:1486", @"Hex(3)HexNAc(5)Sulf(1)", @"Hex(3) HexNAc(5) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_3_, @"UNIMOD", @"UNIMOD:1487", @"Hex(6)HexNAc(3)", @"Hex(6) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1488", @"Hex(3)HexNAc(4)NeuAc(1)", @"Hex(3) HexNAc(4) NeuAc ---OR--- Hex(2) HexNAc(4) dHex NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1489", @"Hex(4)HexNAc(4)Pent(1)", @"Hex(4) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_2_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_2_Phos_1_, @"UNIMOD", @"UNIMOD:1490", @"Hex(7)HexNAc(2)Phos(1)", @"Hex(7) HexNAc(2) Phos.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_Me_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_Me_2_Pent_1_, @"UNIMOD", @"UNIMOD:1491", @"Hex(4)HexNAc(4)Me(2)Pent(1)", @"Hex(4) HexNAc(4) Me(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Pent_3_, @"UNIMOD", @"UNIMOD:1492", @"dHex(1)Hex(3)HexNAc(3)Pent(3)", @"DHex Hex(3) HexNAc(3) Pent(3) ---OR--- Hex(4) HexNAc(2) dHex(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1493", @"dHex(1)Hex(5)HexNAc(3)Sulf(1)", @"DHex Hex(5) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Pent_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Pent_2_, @"UNIMOD", @"UNIMOD:1494", @"dHex(2)Hex(3)HexNAc(3)Pent(2)", @"DHex(2) Hex(3) HexNAc(3) Pent(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_3_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_3_Phos_1_, @"UNIMOD", @"UNIMOD:1495", @"Hex(6)HexNAc(3)Phos(1)", @"Hex(6) HexNAc(3) Phos.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_5_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_5_, @"UNIMOD", @"UNIMOD:1496", @"Hex(4)HexNAc(5)", @"Hex(4) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1497", @"dHex(3)Hex(3)HexNAc(3)Pent(1)", @"DHex(3) Hex(3) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1498", @"dHex(2)Hex(4)HexNAc(3)Pent(1)", @"DHex(2) Hex(4) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1499", @"dHex(1)Hex(4)HexNAc(4)Sulf(1)", @"DHex Hex(4) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_2_, @"UNIMOD", @"UNIMOD:1500", @"dHex(1)Hex(7)HexNAc(2)", @"DHex Hex(7) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1501", @"dHex(1)Hex(4)HexNAc(3)NeuAc(1)", @"DHex Hex(4) HexNAc(3) NeuAc ---OR--- dHex(2) Hex(3) HexNAc(3) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_2_Phos_2_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_2_Phos_2_, @"UNIMOD", @"UNIMOD:1502", @"Hex(7)HexNAc(2)Phos(2)", @"Hex(7) HexNAc(2) Phos(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1503", @"Hex(5)HexNAc(4)Sulf(1)", @"Hex(5) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_8_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_8_HexNAc_2_, @"UNIMOD", @"UNIMOD:1504", @"Hex(8)HexNAc(2)", @"Hex(8) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_2_, @"UNIMOD", @"UNIMOD:1505", @"dHex(1)Hex(3)HexNAc(4)Pent(2)", @"DHex Hex(3) HexNAc(4) Pent(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1506", @"dHex(1)Hex(4)HexNAc(3)NeuGc(1)", @"DHex Hex(4) HexNAc(3) NeuGc ---OR--- Hex(5) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1507", @"dHex(2)Hex(3)HexNAc(4)Pent(1)", @"DHex(2) Hex(3) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_Sulf_1_, @"UNIMOD", @"UNIMOD:1508", @"dHex(1)Hex(3)HexNAc(5)Sulf(1)", @"DHex Hex(3) HexNAc(5) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_3_, @"UNIMOD", @"UNIMOD:1509", @"dHex(1)Hex(6)HexNAc(3)", @"DHex Hex(6) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1510", @"dHex(1)Hex(3)HexNAc(4)NeuAc(1)", @"DHex Hex(3) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_4_, @"UNIMOD", @"UNIMOD:1511", @"dHex(3)Hex(3)HexNAc(4)", @"DHex(3) Hex(3) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1512", @"dHex(1)Hex(4)HexNAc(4)Pent(1)", @"DHex Hex(4) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_5_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_5_Sulf_1_, @"UNIMOD", @"UNIMOD:1513", @"Hex(4)HexNAc(5)Sulf(1)", @"Hex(4) HexNAc(5) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_3_, @"UNIMOD", @"UNIMOD:1514", @"Hex(7)HexNAc(3)", @"Hex(7) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1515", @"dHex(1)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)", @"DHex Hex(4) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_Me_2_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_Me_2_Pent_1_, @"UNIMOD", @"UNIMOD:1516", @"Hex(5)HexNAc(4)Me(2)Pent(1)", @"Hex(5) HexNAc(4) Me(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_6_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_6_Sulf_1_, @"UNIMOD", @"UNIMOD:1517", @"Hex(3)HexNAc(6)Sulf(1)", @"Hex(3) HexNAc(6) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1518", @"dHex(1)Hex(6)HexNAc(3)Sulf(1)", @"DHex Hex(6) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_5_, @"UNIMOD", @"UNIMOD:1519", @"dHex(1)Hex(4)HexNAc(5)", @"DHex Hex(4) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexA_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexA_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1520", @"dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(1)", @"DHex Hex(5) HexA HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_3_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_3_Phos_1_, @"UNIMOD", @"UNIMOD:1521", @"Hex(7)HexNAc(3)Phos(1)", @"Hex(7) HexNAc(3) Phos.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_4_Me_3_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_4_Me_3_, @"UNIMOD", @"UNIMOD:1522", @"Hex(6)HexNAc(4)Me(3)", @"Hex(6) HexNAc(4) Me(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1523", @"dHex(2)Hex(4)HexNAc(4)Sulf(1)", @"DHex(2) Hex(4) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1524", @"Hex(4)HexNAc(3)NeuAc(2)", @"Hex(4) HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_Pent_3_, @"UNIMOD", @"UNIMOD:1525", @"dHex(1)Hex(3)HexNAc(4)Pent(3)", @"DHex Hex(3) HexNAc(4) Pent(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_3_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_3_Pent_1_, @"UNIMOD", @"UNIMOD:1526", @"dHex(2)Hex(5)HexNAc(3)Pent(1)", @"DHex(2) Hex(5) HexNAc(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1527", @"dHex(1)Hex(5)HexNAc(4)Sulf(1)", @"DHex Hex(5) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_Pent_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_Pent_2_, @"UNIMOD", @"UNIMOD:1528", @"dHex(2)Hex(3)HexNAc(4)Pent(2)", @"DHex(2) Hex(3) HexNAc(4) Pent(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1529", @"dHex(1)Hex(5)HexNAc(3)NeuAc(1)", @"DHex Hex(5) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_6_Sulf_2_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_6_Sulf_2_, @"UNIMOD", @"UNIMOD:1530", @"Hex(3)HexNAc(6)Sulf(2)", @"Hex(3) HexNAc(6) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_9_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_9_HexNAc_2_, @"UNIMOD", @"UNIMOD:1531", @"Hex(9)HexNAc(2)", @"Hex(9) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_6_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_6_, @"UNIMOD", @"UNIMOD:1532", @"Hex(4)HexNAc(6)", @"Hex(4) HexNAc(6).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1533", @"dHex(3)Hex(3)HexNAc(4)Pent(1)", @"DHex(3) Hex(3) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1534", @"dHex(1)Hex(5)HexNAc(3)NeuGc(1)", @"DHex Hex(5) HexNAc(3) NeuGc ---OR--- Hex(6) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1535", @"dHex(2)Hex(4)HexNAc(4)Pent(1)", @"DHex(2) Hex(4) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_5_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_5_Sulf_1_, @"UNIMOD", @"UNIMOD:1536", @"dHex(1)Hex(4)HexNAc(5)Sulf(1)", @"DHex Hex(4) HexNAc(5) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_, @"UNIMOD", @"UNIMOD:1537", @"dHex(1)Hex(7)HexNAc(3)", @"DHex Hex(7) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Pent_1_, @"UNIMOD", @"UNIMOD:1538", @"dHex(1)Hex(5)HexNAc(4)Pent(1)", @"DHex Hex(5) HexNAc(4) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexA_1_HexNAc_3_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexA_1_HexNAc_3_Sulf_2_, @"UNIMOD", @"UNIMOD:1539", @"dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(2)", @"DHex Hex(5) HexA HexNAc(3) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_7_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_7_, @"UNIMOD", @"UNIMOD:1540", @"Hex(3)HexNAc(7)", @"Hex(3) HexNAc(7).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_4_, @"UNIMOD", @"UNIMOD:1541", @"dHex(2)Hex(5)HexNAc(4)", @"DHex(2) Hex(5) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1542", @"dHex(2)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)", @"DHex(2) Hex(4) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Sulf_2_, @"UNIMOD", @"UNIMOD:1543", @"dHex(1)Hex(5)HexNAc(4)Sulf(2)", @"DHex Hex(5) HexNAc(4) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Me_2_Pent_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_Me_2_Pent_1_, @"UNIMOD", @"UNIMOD:1544", @"dHex(1)Hex(5)HexNAc(4)Me(2)Pent(1)", @"DHex Hex(5) HexNAc(4) Me(2) Pent.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuGc_1_, @"UNIMOD", @"UNIMOD:1545", @"Hex(5)HexNAc(4)NeuGc(1)", @"Hex(5) HexNAc(4) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_6_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_6_Sulf_1_, @"UNIMOD", @"UNIMOD:1546", @"dHex(1)Hex(3)HexNAc(6)Sulf(1)", @"DHex Hex(3) HexNAc(6) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_6_HexNAc_4_, @"UNIMOD", @"UNIMOD:1547", @"dHex(1)Hex(6)HexNAc(4)", @"DHex Hex(6) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1548", @"dHex(1)Hex(5)HexNAc(3)NeuAc(1)Sulf(1)", @"DHex Hex(5) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_7_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_7_HexNAc_4_, @"UNIMOD", @"UNIMOD:1549", @"Hex(7)HexNAc(4)", @"Hex(7) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuGc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_3_NeuGc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1550", @"dHex(1)Hex(5)HexNAc(3)NeuGc(1)Sulf(1)", @"DHex Hex(5) HexNAc(3) NeuGc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_5_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_5_NeuAc_1_, @"UNIMOD", @"UNIMOD:1551", @"Hex(4)HexNAc(5)NeuAc(1)", @"Hex(4) HexNAc(5) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_4_Me_3_Pent_1_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_4_Me_3_Pent_1_, @"UNIMOD", @"UNIMOD:1552", @"Hex(6)HexNAc(4)Me(3)Pent(1)", @"Hex(6) HexNAc(4) Me(3) Pent.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1553", @"dHex(1)Hex(7)HexNAc(3)Sulf(1)", @"DHex Hex(7) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_Phos_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_3_Phos_1_, @"UNIMOD", @"UNIMOD:1554", @"dHex(1)Hex(7)HexNAc(3)Phos(1)", @"DHex Hex(7) HexNAc(3) Phos.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_5_, @"UNIMOD", @"UNIMOD:1555", @"dHex(1)Hex(5)HexNAc(5)", @"DHex Hex(5) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1556", @"dHex(1)Hex(4)HexNAc(4)NeuAc(1)Sulf(1)", @"DHex Hex(4) HexNAc(4) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_4_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_4_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1557", @"dHex(3)Hex(4)HexNAc(4)Sulf(1)", @"DHex(3) Hex(4) HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_7_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_7_Sulf_1_, @"UNIMOD", @"UNIMOD:1558", @"Hex(3)HexNAc(7)Sulf(1)", @"Hex(3) HexNAc(7) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_5_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_5_, @"UNIMOD", @"UNIMOD:1559", @"Hex(6)HexNAc(5)", @"Hex(6) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1560", @"Hex(5)HexNAc(4)NeuAc(1)Sulf(1)", @"Hex(5) HexNAc(4) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_6_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_6_NeuAc_1_, @"UNIMOD", @"UNIMOD:1561", @"Hex(3)HexNAc(6)NeuAc(1)", @"Hex(3) HexNAc(6) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_6_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_6_, @"UNIMOD", @"UNIMOD:1562", @"dHex(2)Hex(3)HexNAc(6)", @"DHex(2) Hex(3) HexNAc(6).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1563", @"Hex(1)HexNAc(1)NeuGc(1)", @"Hex HexNAc NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_, @"UNIMOD", @"UNIMOD:1564", @"dHex(1)Hex(2)HexNAc(1)", @"DHex Hex(2) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1565", @"HexNAc(3)Sulf(1)", @"HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_1_, @"UNIMOD", @"UNIMOD:1566", @"Hex(3)HexNAc(1)", @"Hex(3) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_Kdn_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_Kdn_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1567", @"Hex(1)HexNAc(1)Kdn(1)Sulf(1)", @"Hex HexNAc Kdn Sulf.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1568", @"HexNAc(2)NeuAc(1)", @"HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_Kdn_2_, new TermInfo(CVID.UNIMOD_HexNAc_1_Kdn_2_, @"UNIMOD", @"UNIMOD:1570", @"HexNAc(1)Kdn(2)", @"HexNAc Kdn(2) ---OR--- Hex(2) HexNAc HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_1_Me_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_1_Me_1_, @"UNIMOD", @"UNIMOD:1571", @"Hex(3)HexNAc(1)Me(1)", @"Hex(3) HexNAc Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexA_1_Pent_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexA_1_Pent_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1572", @"Hex(2)HexA(1)Pent(1)Sulf(1)", @"Hex(2) HexA Pent Sulf.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1573", @"HexNAc(2)NeuGc(1)", @"HexNAc(2) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_4_Phos_1_, @"UNIMOD", @"UNIMOD:1575", @"Hex(4)Phos(1)", @"Hex(4) Phos.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1577", @"Hex(1)HexNAc(1)NeuAc(1)Sulf(1)", @"Hex HexNAc NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexA_1_HexNAc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexA_1_HexNAc_2_, @"UNIMOD", @"UNIMOD:1578", @"Hex(1)HexA(1)HexNAc(2)", @"Hex HexA HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1579", @"dHex(1)Hex(2)HexNAc(1)Sulf(1)", @"DHex Hex(2) HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_HexNAc_3_, @"UNIMOD", @"UNIMOD:1580", @"dHex(1)HexNAc(3)", @"DHex HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_Kdn_1_, @"UNIMOD", @"UNIMOD:1581", @"dHex(1)Hex(1)HexNAc(1)Kdn(1)", @"DHex Hex HexNAc Kdn ---OR--- Hex(2) dHex NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_3_, @"UNIMOD", @"UNIMOD:1582", @"Hex(1)HexNAc(3)", @"Hex HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1583", @"HexNAc(2)NeuAc(1)Sulf(1)", @"HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_, @"UNIMOD", @"UNIMOD:1584", @"dHex(2)Hex(3)", @"DHex(2) Hex(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexA_1_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexA_1_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1585", @"Hex(2)HexA(1)HexNAc(1)Sulf(1)", @"Hex(2) HexA HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_, @"UNIMOD", @"UNIMOD:1586", @"dHex(2)Hex(2)HexA(1)", @"DHex(2) Hex(2) HexA.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1587", @"dHex(1)Hex(1)HexNAc(2)Sulf(1)", @"DHex Hex HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_NeuAc_1_, @"UNIMOD", @"UNIMOD:1588", @"dHex(1)Hex(1)HexNAc(1)NeuAc(1)", @"DHex Hex HexNAc NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1589", @"Hex(2)HexNAc(2)Sulf(1)", @"Hex(2) HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_, new TermInfo(CVID.UNIMOD_Hex_5_, @"UNIMOD", @"UNIMOD:1590", @"Hex(5)", @"Hex(5).", false));
            TermData.Add(CVID.UNIMOD_HexNAc_4_, new TermInfo(CVID.UNIMOD_HexNAc_4_, @"UNIMOD", @"UNIMOD:1591", @"HexNAc(4)", @"HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_HexNAc_1_NeuGc_2_, new TermInfo(CVID.UNIMOD_HexNAc_1_NeuGc_2_, @"UNIMOD", @"UNIMOD:1592", @"HexNAc(1)NeuGc(2)", @"HexNAc NeuGc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1593", @"dHex(1)Hex(1)HexNAc(1)NeuGc(1)", @"DHex Hex HexNAc NeuGc ---OR--- Hex(2) HexNAc NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_1_, @"UNIMOD", @"UNIMOD:1594", @"dHex(2)Hex(2)HexNAc(1)", @"DHex(2) Hex(2) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1595", @"Hex(2)HexNAc(1)NeuGc(1)", @"Hex(2) HexNAc NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_1_, @"UNIMOD", @"UNIMOD:1596", @"dHex(1)Hex(3)HexNAc(1)", @"DHex Hex(3) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1597", @"dHex(1)Hex(2)HexA(1)HexNAc(1)", @"DHex Hex(2) HexA HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1598", @"Hex(1)HexNAc(3)Sulf(1)", @"Hex HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_1_, @"UNIMOD", @"UNIMOD:1599", @"Hex(4)HexNAc(1)", @"Hex(4) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1600", @"Hex(1)HexNAc(2)NeuAc(1)", @"Hex HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1602", @"Hex(1)HexNAc(2)NeuGc(1)", @"Hex HexNAc(2) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_5_Phos_1_, @"UNIMOD", @"UNIMOD:1604", @"Hex(5)Phos(1)", @"Hex(5) Phos.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_1_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_1_Kdn_1_, @"UNIMOD", @"UNIMOD:1606", @"dHex(2)Hex(1)HexNAc(1)Kdn(1)", @"DHex(2) Hex HexNAc Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1607", @"dHex(1)Hex(3)HexNAc(1)Sulf(1)", @"DHex Hex(3) HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_, @"UNIMOD", @"UNIMOD:1608", @"dHex(1)Hex(1)HexNAc(3)", @"DHex Hex HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1609", @"dHex(1)Hex(2)HexA(1)HexNAc(1)Sulf(1)", @"DHex Hex(2) HexA HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1610", @"Hex(2)HexNAc(3)", @"Hex(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1611", @"Hex(1)HexNAc(2)NeuAc(1)Sulf(1)", @"Hex HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_, @"UNIMOD", @"UNIMOD:1612", @"dHex(2)Hex(4)", @"DHex(2) Hex(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_2_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1614", @"dHex(2)HexNAc(2)Kdn(1)", @"DHex(2) HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1615", @"dHex(1)Hex(2)HexNAc(2)Sulf(1)", @"DHex Hex(2) HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_HexNAc_4_, @"UNIMOD", @"UNIMOD:1616", @"dHex(1)HexNAc(4)", @"DHex HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1617", @"Hex(1)HexNAc(1)NeuAc(1)NeuGc(1)", @"Hex HexNAc NeuAc NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1618", @"dHex(1)Hex(1)HexNAc(2)Kdn(1)", @"DHex Hex HexNAc(2) Kdn ---OR--- Hex(2) HexNAc dHex NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_2_, @"UNIMOD", @"UNIMOD:1619", @"Hex(1)HexNAc(1)NeuGc(2)", @"Hex HexNAc NeuGc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_Ac_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_Ac_1_, @"UNIMOD", @"UNIMOD:1620", @"Hex(1)HexNAc(1)NeuAc(2)Ac(1)", @"Ac Hex HexNAc NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1621", @"dHex(2)Hex(2)HexA(1)HexNAc(1)", @"DHex(2) Hex(2) HexA HexNAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1622", @"dHex(1)Hex(1)HexNAc(3)Sulf(1)", @"DHex Hex HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexA_1_NeuAc_1_Pent_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexA_1_NeuAc_1_Pent_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1623", @"Hex(2)HexA(1)NeuAc(1)Pent(1)Sulf(1)", @"Hex(2) HexA NeuAc Pent Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1624", @"dHex(1)Hex(1)HexNAc(2)NeuAc(1)", @"DHex Hex HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1625", @"dHex(1)Hex(3)HexA(1)HexNAc(1)", @"DHex Hex(3) HexA HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1626", @"Hex(2)HexNAc(3)Sulf(1)", @"Hex(2) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_1_, @"UNIMOD", @"UNIMOD:1627", @"Hex(5)HexNAc(1)", @"Hex(5) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_5_, new TermInfo(CVID.UNIMOD_HexNAc_5_, @"UNIMOD", @"UNIMOD:1628", @"HexNAc(5)", @"HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_Ac_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_Ac_2_, @"UNIMOD", @"UNIMOD:1630", @"Hex(1)HexNAc(1)NeuAc(2)Ac(2)", @"Ac(2) Hex HexNAc NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1631", @"Hex(2)HexNAc(2)NeuGc(1)", @"Hex(2) HexNAc(2) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_5_Phos_3_, @"UNIMOD", @"UNIMOD:1632", @"Hex(5)Phos(3)", @"Hex(5) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_6_Phos_1_, new TermInfo(CVID.UNIMOD_Hex_6_Phos_1_, @"UNIMOD", @"UNIMOD:1633", @"Hex(6)Phos(1)", @"Hex(6) Phos.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexA_1_HexNAc_2_, @"UNIMOD", @"UNIMOD:1634", @"dHex(1)Hex(2)HexA(1)HexNAc(2)", @"DHex Hex(2) HexA HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1635", @"dHex(2)Hex(3)HexNAc(1)Sulf(1)", @"DHex(2) Hex(3) HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1636", @"Hex(1)HexNAc(3)NeuAc(1)", @"Hex HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_3_, @"UNIMOD", @"UNIMOD:1637", @"dHex(2)Hex(1)HexNAc(3)", @"DHex(2) Hex HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1638", @"Hex(1)HexNAc(3)NeuGc(1)", @"Hex HexNAc(3) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1639", @"dHex(1)Hex(1)HexNAc(2)NeuAc(1)Sulf(1)", @"DHex Hex HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1640", @"dHex(1)Hex(3)HexA(1)HexNAc(1)Sulf(1)", @"DHex Hex(3) HexA HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexA_1_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexA_1_HexNAc_3_, @"UNIMOD", @"UNIMOD:1641", @"dHex(1)Hex(1)HexA(1)HexNAc(3)", @"DHex Hex HexA HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1642", @"Hex(2)HexNAc(2)NeuAc(1)Sulf(1)", @"Hex(2) HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1643", @"dHex(2)Hex(2)HexNAc(2)Sulf(1)", @"DHex(2) Hex(2) HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1644", @"dHex(2)Hex(1)HexNAc(2)Kdn(1)", @"DHex(2) Hex HexNAc(2) Kdn ---OR--- Hex(2) HexNAc dHex(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_4_, @"UNIMOD", @"UNIMOD:1645", @"dHex(1)Hex(1)HexNAc(4)", @"DHex Hex HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_4_, @"UNIMOD", @"UNIMOD:1646", @"Hex(2)HexNAc(4)", @"Hex(2) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_2_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_2_, @"UNIMOD", @"UNIMOD:1647", @"Hex(2)HexNAc(1)NeuGc(2)", @"Hex(2) HexNAc NeuGc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_1_, @"UNIMOD", @"UNIMOD:1648", @"dHex(2)Hex(4)HexNAc(1)", @"DHex(2) Hex(4) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_2_, @"UNIMOD", @"UNIMOD:1649", @"Hex(1)HexNAc(2)NeuAc(2)", @"Hex HexNAc(2) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1650", @"dHex(2)Hex(1)HexNAc(2)NeuAc(1)", @"DHex(2) Hex HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1651", @"dHex(1)Hex(2)HexNAc(3)Sulf(1)", @"DHex Hex(2) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_1_HexNAc_5_, @"UNIMOD", @"UNIMOD:1652", @"dHex(1)HexNAc(5)", @"DHex HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1653", @"dHex(2)Hex(1)HexNAc(2)NeuGc(1)", @"DHex(2) Hex HexNAc(2) NeuGc ---OR--- Hex(2) HexNAc(2) dHex NeuAc ---OR--- Hex HexNAc(3) dHex Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_2_, @"UNIMOD", @"UNIMOD:1654", @"dHex(3)Hex(2)HexNAc(2)", @"DHex(3) Hex(2) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1655", @"Hex(3)HexNAc(3)Sulf(1)", @"Hex(3) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Sulf_2_, @"UNIMOD", @"UNIMOD:1656", @"dHex(2)Hex(2)HexNAc(2)Sulf(2)", @"DHex(2) Hex(2) HexNAc(2) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1657", @"dHex(1)Hex(2)HexNAc(2)NeuGc(1)", @"DHex Hex(2) HexNAc(2) NeuGc ---OR--- Hex(3) HexNAc(2) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1658", @"dHex(1)Hex(1)HexNAc(3)NeuAc(1)", @"DHex Hex HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_6_Phos_3_, @"UNIMOD", @"UNIMOD:1659", @"Hex(6)Phos(3)", @"Hex(6) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_2_, @"UNIMOD", @"UNIMOD:1660", @"dHex(1)Hex(3)HexA(1)HexNAc(2)", @"DHex Hex(3) HexA HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1661", @"dHex(1)Hex(1)HexNAc(3)NeuGc(1)", @"DHex Hex HexNAc(3) NeuGc ---OR--- Hex(2) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_NeuAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1662", @"Hex(1)HexNAc(2)NeuAc(2)Sulf(1)", @"Hex HexNAc(2) NeuAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1663", @"dHex(2)Hex(3)HexA(1)HexNAc(1)Sulf(1)", @"DHex(2) Hex(3) HexA HexNAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_3_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_3_, @"UNIMOD", @"UNIMOD:1664", @"Hex(1)HexNAc(1)NeuAc(3)", @"Hex HexNAc NeuAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1665", @"Hex(2)HexNAc(3)NeuGc(1)", @"Hex(2) HexNAc(3) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1666", @"dHex(1)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)", @"DHex Hex(2) HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_1_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_1_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1667", @"dHex(3)Hex(1)HexNAc(2)Kdn(1)", @"DHex(3) Hex HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1668", @"dHex(2)Hex(3)HexNAc(2)Sulf(1)", @"DHex(2) Hex(3) HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1669", @"dHex(2)Hex(2)HexNAc(2)Kdn(1)", @"DHex(2) Hex(2) HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexA_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1670", @"dHex(2)Hex(2)HexA(1)HexNAc(2)Sulf(1)", @"DHex(2) Hex(2) HexA HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_, @"UNIMOD", @"UNIMOD:1671", @"dHex(1)Hex(2)HexNAc(4)", @"DHex Hex(2) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_3_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_3_, @"UNIMOD", @"UNIMOD:1672", @"Hex(1)HexNAc(1)NeuGc(3)", @"Hex HexNAc NeuGc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1673", @"dHex(1)Hex(1)HexNAc(3)NeuAc(1)Sulf(1)", @"DHex Hex HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1674", @"dHex(1)Hex(3)HexA(1)HexNAc(2)Sulf(1)", @"DHex Hex(3) HexA HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_1_HexNAc_2_NeuAc_2_, @"UNIMOD", @"UNIMOD:1675", @"dHex(1)Hex(1)HexNAc(2)NeuAc(2)", @"DHex Hex HexNAc(2) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_HexNAc_3_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_3_HexNAc_3_Kdn_1_, @"UNIMOD", @"UNIMOD:1676", @"dHex(3)HexNAc(3)Kdn(1)", @"DHex(3) HexNAc(3) Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1678", @"Hex(2)HexNAc(3)NeuAc(1)Sulf(1)", @"Hex(2) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1679", @"dHex(2)Hex(2)HexNAc(3)Sulf(1)", @"DHex(2) Hex(2) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_2_HexNAc_5_, @"UNIMOD", @"UNIMOD:1680", @"dHex(2)HexNAc(5)", @"DHex(2) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_2_, @"UNIMOD", @"UNIMOD:1681", @"Hex(2)HexNAc(2)NeuAc(2)", @"Hex(2) HexNAc(2) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1682", @"dHex(2)Hex(2)HexNAc(2)NeuAc(1)", @"DHex(2) Hex(2) HexNAc(2) NeuAc ---OR--- Hex HexNAc(3) dHex(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1683", @"dHex(1)Hex(3)HexNAc(3)Sulf(1)", @"DHex Hex(3) HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1684", @"dHex(2)Hex(2)HexNAc(2)NeuGc(1)", @"DHex(2) Hex(2) HexNAc(2) NeuGc ---OR--- Hex(3) HexNAc(2) dHex NeuAc ---OR--- Hex(2) HexNAc(3) dHex Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_5_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_5_, @"UNIMOD", @"UNIMOD:1685", @"Hex(2)HexNAc(5)", @"Hex(2) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1686", @"dHex(1)Hex(3)HexNAc(2)NeuGc(1)", @"DHex Hex(3) HexNAc(2) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1687", @"Hex(1)HexNAc(3)NeuAc(2)", @"Hex HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1688", @"dHex(1)Hex(2)HexNAc(3)NeuAc(1)", @"DHex Hex(2) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1689", @"dHex(3)Hex(2)HexNAc(3)", @"DHex(3) Hex(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_7_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_7_Phos_3_, @"UNIMOD", @"UNIMOD:1690", @"Hex(7)Phos(3)", @"Hex(7) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_HexNAc_2_, @"UNIMOD", @"UNIMOD:1691", @"dHex(1)Hex(4)HexA(1)HexNAc(2)", @"DHex Hex(4) HexA HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1692", @"Hex(3)HexNAc(3)NeuAc(1)", @"Hex(3) HexNAc(3) NeuAc ---OR--- Hex(2) HexNAc(3) dHex NeuGc ---OR--- Hex(2) HexNAc(4) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_2_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_2_HexNAc_2_, @"UNIMOD", @"UNIMOD:1693", @"dHex(1)Hex(3)HexA(2)HexNAc(2)", @"DHex Hex(3) HexA(2) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_2_NeuAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1694", @"Hex(2)HexNAc(2)NeuAc(2)Sulf(1)", @"Hex(2) HexNAc(2) NeuAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1695", @"dHex(2)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)", @"DHex(2) Hex(2) HexNAc(2) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1696", @"Hex(3)HexNAc(3)NeuGc(1)", @"Hex(3) HexNAc(3) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1697", @"dHex(4)Hex(1)HexNAc(2)Kdn(1)", @"DHex(4) Hex HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1698", @"dHex(3)Hex(2)HexNAc(2)Kdn(1)", @"DHex(3) Hex(2) HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexA_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexA_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1699", @"dHex(3)Hex(2)HexA(1)HexNAc(2)Sulf(1)", @"DHex(3) Hex(2) HexA HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1700", @"Hex(2)HexNAc(4)NeuAc(1)", @"Hex(2) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_4_, @"UNIMOD", @"UNIMOD:1701", @"dHex(2)Hex(2)HexNAc(4)", @"DHex(2) Hex(2) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1702", @"dHex(2)Hex(3)HexA(1)HexNAc(2)Sulf(1)", @"DHex(2) Hex(3) HexA HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_4_HexNAc_3_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_4_HexNAc_3_Kdn_1_, @"UNIMOD", @"UNIMOD:1703", @"dHex(4)HexNAc(3)Kdn(1)", @"DHex(4) HexNAc(3) Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_3_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_3_, @"UNIMOD", @"UNIMOD:1705", @"Hex(2)HexNAc(1)NeuGc(3)", @"Hex(2) HexNAc NeuGc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_1_Kdn_2_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_1_Kdn_2_, @"UNIMOD", @"UNIMOD:1706", @"dHex(4)Hex(1)HexNAc(1)Kdn(2)", @"DHex(4) Hex HexNAc Kdn(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1707", @"dHex(1)Hex(2)HexNAc(3)NeuAc(1)Sulf(1)", @"DHex Hex(2) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_2_, @"UNIMOD", @"UNIMOD:1708", @"dHex(1)Hex(2)HexNAc(2)NeuAc(2)", @"DHex Hex(2) HexNAc(2) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_1_HexNAc_3_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_1_HexNAc_3_Kdn_1_, @"UNIMOD", @"UNIMOD:1709", @"dHex(3)Hex(1)HexNAc(3)Kdn(1)", @"DHex(3) Hex HexNAc(3) Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1711", @"Hex(3)HexNAc(3)NeuAc(1)Sulf(1)", @"Hex(3) HexNAc(3) NeuAc Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_2_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_2_NeuAc_2_, @"UNIMOD", @"UNIMOD:1712", @"Hex(3)HexNAc(2)NeuAc(2)", @"Hex(3) HexNAc(2) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuGc_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuGc_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1713", @"Hex(3)HexNAc(3)NeuGc(1)Sulf(1)", @"Hex(3) HexNAc(3) NeuGc Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_2_, @"UNIMOD", @"UNIMOD:1714", @"dHex(1)Hex(2)HexNAc(2)NeuGc(2)", @"DHex Hex(2) HexNAc(2) NeuGc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_NeuGc_1_, @"UNIMOD", @"UNIMOD:1715", @"dHex(2)Hex(3)HexNAc(2)NeuGc(1)", @"DHex(2) Hex(3) HexNAc(2) NeuGc ---OR--- Hex(4) HexNAc(2) dHex NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexA_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1716", @"dHex(1)Hex(3)HexA(1)HexNAc(3)Sulf(1)", @"DHex Hex(3) HexA HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1717", @"Hex(2)HexNAc(3)NeuAc(2)", @"Hex(2) HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1718", @"dHex(2)Hex(2)HexNAc(3)NeuAc(1)", @"DHex(2) Hex(2) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1719", @"dHex(4)Hex(2)HexNAc(3)", @"DHex(4) Hex(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_1_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_1_NeuGc_1_, @"UNIMOD", @"UNIMOD:1720", @"Hex(2)HexNAc(3)NeuAc(1)NeuGc(1)", @"Hex(2) HexNAc(3) NeuAc NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_NeuGc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_NeuGc_1_, @"UNIMOD", @"UNIMOD:1721", @"dHex(2)Hex(2)HexNAc(3)NeuGc(1)", @"DHex(2) Hex(2) HexNAc(3) NeuGc ---OR--- Hex(3) HexNAc(3) dHex NeuAc ---OR--- Hex(2) HexNAc(4) dHex Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_, @"UNIMOD", @"UNIMOD:1722", @"dHex(3)Hex(3)HexNAc(3)", @"DHex(3) Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_8_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_8_Phos_3_, @"UNIMOD", @"UNIMOD:1723", @"Hex(8)Phos(3)", @"Hex(8) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1724", @"dHex(1)Hex(2)HexNAc(2)NeuAc(2)Sulf(1)", @"DHex Hex(2) HexNAc(2) NeuAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_2_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_2_, @"UNIMOD", @"UNIMOD:1725", @"Hex(2)HexNAc(3)NeuGc(2)", @"Hex(2) HexNAc(3) NeuGc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_2_HexNAc_2_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_2_HexNAc_2_Kdn_1_, @"UNIMOD", @"UNIMOD:1726", @"dHex(4)Hex(2)HexNAc(2)Kdn(1)", @"DHex(4) Hex(2) HexNAc(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1727", @"dHex(1)Hex(2)HexNAc(4)NeuAc(1)", @"DHex Hex(2) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_4_, @"UNIMOD", @"UNIMOD:1728", @"dHex(3)Hex(2)HexNAc(4)", @"DHex(3) Hex(2) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_4_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_4_, @"UNIMOD", @"UNIMOD:1729", @"Hex(1)HexNAc(1)NeuGc(4)", @"Hex HexNAc NeuGc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_3_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_1_HexNAc_3_Kdn_1_, @"UNIMOD", @"UNIMOD:1730", @"dHex(4)Hex(1)HexNAc(3)Kdn(1)", @"DHex(4) Hex HexNAc(3) Kdn.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_Sulf_2_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_Sulf_2_, @"UNIMOD", @"UNIMOD:1732", @"Hex(4)HexNAc(4)Sulf(2)", @"Hex(4) HexNAc(4) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_3_Kdn_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_3_Kdn_1_, @"UNIMOD", @"UNIMOD:1733", @"dHex(3)Hex(2)HexNAc(3)Kdn(1)", @"DHex(3) Hex(2) HexNAc(3) Kdn ---OR--- Hex(3) HexNAc(2) dHex(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_5_, @"UNIMOD", @"UNIMOD:1735", @"dHex(2)Hex(2)HexNAc(5)", @"DHex(2) Hex(2) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexA_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1736", @"dHex(2)Hex(3)HexA(1)HexNAc(3)Sulf(1)", @"DHex(2) Hex(3) HexA HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1737", @"dHex(1)Hex(4)HexA(1)HexNAc(3)Sulf(1)", @"DHex Hex(4) HexA HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1738", @"Hex(3)HexNAc(3)NeuAc(2)", @"Hex(3) HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1739", @"dHex(2)Hex(3)HexNAc(3)NeuAc(1)", @"DHex(2) Hex(3) HexNAc(3) NeuAc ---OR--- Hex(2) HexNAc(4) dHex(2) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_3_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_3_HexNAc_3_, @"UNIMOD", @"UNIMOD:1740", @"dHex(4)Hex(3)HexNAc(3)", @"DHex(4) Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_9_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_9_Phos_3_, @"UNIMOD", @"UNIMOD:1742", @"Hex(9)Phos(3)", @"Hex(9) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_HexNAc_7_, new TermInfo(CVID.UNIMOD_dHex_2_HexNAc_7_, @"UNIMOD", @"UNIMOD:1743", @"dHex(2)HexNAc(7)", @"DHex(2) HexNAc(7).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_4_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_NeuGc_4_, @"UNIMOD", @"UNIMOD:1744", @"Hex(2)HexNAc(1)NeuGc(4)", @"Hex(2) HexNAc NeuGc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1745", @"Hex(3)HexNAc(3)NeuAc(2)Sulf(1)", @"Hex(3) HexNAc(3) NeuAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_5_, @"UNIMOD", @"UNIMOD:1746", @"dHex(2)Hex(3)HexNAc(5)", @"DHex(2) Hex(3) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_2_NeuGc_3_, @"UNIMOD", @"UNIMOD:1747", @"dHex(1)Hex(2)HexNAc(2)NeuGc(3)", @"DHex Hex(2) HexNAc(2) NeuGc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexA_1_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexA_1_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1748", @"dHex(2)Hex(4)HexA(1)HexNAc(3)Sulf(1)", @"DHex(2) Hex(4) HexA HexNAc(3) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_3_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuAc_3_, @"UNIMOD", @"UNIMOD:1749", @"Hex(2)HexNAc(3)NeuAc(3)", @"Hex(2) HexNAc(3) NeuAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1750", @"dHex(1)Hex(3)HexNAc(3)NeuAc(2)", @"DHex Hex(3) HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1751", @"dHex(3)Hex(3)HexNAc(3)NeuAc(1)", @"DHex(3) Hex(3) HexNAc(3) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_3_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_3_NeuGc_3_, @"UNIMOD", @"UNIMOD:1752", @"Hex(2)HexNAc(3)NeuGc(3)", @"Hex(2) HexNAc(3) NeuGc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_10_Phos_3_, new TermInfo(CVID.UNIMOD_Hex_10_Phos_3_, @"UNIMOD", @"UNIMOD:1753", @"Hex(10)Phos(3)", @"Hex(10) Phos(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_NeuAc_2_, @"UNIMOD", @"UNIMOD:1754", @"dHex(1)Hex(2)HexNAc(4)NeuAc(2)", @"DHex Hex(2) HexNAc(4) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_5_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuGc_5_, @"UNIMOD", @"UNIMOD:1755", @"Hex(1)HexNAc(1)NeuGc(5)", @"Hex HexNAc NeuGc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_Sulf_2_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_Sulf_2_, @"UNIMOD", @"UNIMOD:1756", @"Hex(4)HexNAc(4)NeuAc(1)Sulf(2)", @"Hex(4) HexNAc(4) NeuAc Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_NeuGc_1_Sulf_2_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_NeuGc_1_Sulf_2_, @"UNIMOD", @"UNIMOD:1757", @"Hex(4)HexNAc(4)NeuGc(1)Sulf(2)", @"Hex(4) HexNAc(4) NeuGc Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_NeuAc_2_, @"UNIMOD", @"UNIMOD:1758", @"dHex(2)Hex(3)HexNAc(3)NeuAc(2)", @"DHex(2) Hex(3) HexNAc(3) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_Sulf_3_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_Sulf_3_, @"UNIMOD", @"UNIMOD:1759", @"Hex(4)HexNAc(4)NeuAc(1)Sulf(3)", @"Hex(4) HexNAc(4) NeuAc Sulf(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_2_, @"UNIMOD", @"UNIMOD:1760", @"dHex(2)Hex(2)HexNAc(2)", @"DHex(2) Hex(2) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_, @"UNIMOD", @"UNIMOD:1761", @"dHex(1)Hex(3)HexNAc(2)", @"DHex Hex(3) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1762", @"dHex(1)Hex(2)HexNAc(3)", @"DHex Hex(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_, @"UNIMOD", @"UNIMOD:1763", @"Hex(3)HexNAc(3)", @"Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1764", @"dHex(1)Hex(3)HexNAc(2)Sulf(1)", @"DHex Hex(3) HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_2_, @"UNIMOD", @"UNIMOD:1765", @"dHex(2)Hex(3)HexNAc(2)", @"DHex(2) Hex(3) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_2_, @"UNIMOD", @"UNIMOD:1766", @"dHex(1)Hex(4)HexNAc(2)", @"DHex Hex(4) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1767", @"dHex(2)Hex(2)HexNAc(3)", @"DHex(2) Hex(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_3_, @"UNIMOD", @"UNIMOD:1768", @"dHex(1)Hex(3)HexNAc(3)", @"DHex Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_3_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_3_, @"UNIMOD", @"UNIMOD:1769", @"Hex(4)HexNAc(3)", @"Hex(4) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_2_, @"UNIMOD", @"UNIMOD:1770", @"dHex(2)Hex(4)HexNAc(2)", @"DHex(2) Hex(4) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_, @"UNIMOD", @"UNIMOD:1771", @"dHex(2)Hex(3)HexNAc(3)", @"DHex(2) Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_5_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_5_, @"UNIMOD", @"UNIMOD:1772", @"Hex(3)HexNAc(5)", @"Hex(3) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_3_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_3_NeuAc_1_, @"UNIMOD", @"UNIMOD:1773", @"Hex(4)HexNAc(3)NeuAc(1)", @"Hex(4) HexNAc(3) NeuAc ---OR--- Hex(3) HexNAc(4) Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_, @"UNIMOD", @"UNIMOD:1774", @"dHex(2)Hex(3)HexNAc(4)", @"DHex(2) Hex(3) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_, @"UNIMOD", @"UNIMOD:1775", @"dHex(1)Hex(3)HexNAc(5)", @"DHex Hex(3) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_6_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_6_, @"UNIMOD", @"UNIMOD:1776", @"Hex(3)HexNAc(6)", @"Hex(3) HexNAc(6).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1777", @"Hex(4)HexNAc(4)NeuAc(1)", @"Hex(4) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_4_, @"UNIMOD", @"UNIMOD:1778", @"dHex(2)Hex(4)HexNAc(4)", @"DHex(2) Hex(4) HexNAc(4) ---OR--- Hex(4) HexNAc(4) dHex Pent Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_4_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_4_, @"UNIMOD", @"UNIMOD:1779", @"Hex(6)HexNAc(4)", @"Hex(6) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_5_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_5_, @"UNIMOD", @"UNIMOD:1780", @"Hex(5)HexNAc(5)", @"Hex(5) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_6_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_6_, @"UNIMOD", @"UNIMOD:1781", @"dHex(1)Hex(3)HexNAc(6)", @"DHex Hex(3) HexNAc(6).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1782", @"dHex(1)Hex(4)HexNAc(4)NeuAc(1)", @"DHex Hex(4) HexNAc(4) NeuAc ---OR--- Hex(3) HexNAc(5) dHex Kdn.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_4_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_4_HexNAc_4_, @"UNIMOD", @"UNIMOD:1783", @"dHex(3)Hex(4)HexNAc(4)", @"DHex(3) Hex(4) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_5_NeuAc_1_, @"UNIMOD", @"UNIMOD:1784", @"dHex(1)Hex(3)HexNAc(5)NeuAc(1)", @"DHex Hex(3) HexNAc(5) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_5_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_4_HexNAc_5_, @"UNIMOD", @"UNIMOD:1785", @"dHex(2)Hex(4)HexNAc(5)", @"DHex(2) Hex(4) HexNAc(5).", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_Ac_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_Ac_1_, @"UNIMOD", @"UNIMOD:1786", @"Hex(1)HexNAc(1)NeuAc(1)Ac(1)", @"Ac Hex HexNAc NeuAc.", false));
            TermData.Add(CVID.UNIMOD_Label_13C_2_15N_2_, new TermInfo(CVID.UNIMOD_Label_13C_2_15N_2_, @"UNIMOD", @"UNIMOD:1787", @"Label:13C(2)15N(2)", @"13C(2) 15N(2).", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSS_155_, new TermInfo(CVID.UNIMOD_Xlink_DSS_155_, @"UNIMOD", @"UNIMOD:1789", @"Xlink:DSS[155]", @"Ammonium-quenched monolink of DSS/BS3 crosslinker.", false));
            TermData.Add(CVID.UNIMOD_NQIGG, new TermInfo(CVID.UNIMOD_NQIGG, @"UNIMOD", @"UNIMOD:1799", @"NQIGG", @"SUMOylation by Giardia lamblia.", false));
            TermData.Add(CVID.UNIMOD_Carboxyethylpyrrole, new TermInfo(CVID.UNIMOD_Carboxyethylpyrrole, @"UNIMOD", @"UNIMOD:1800", @"Carboxyethylpyrrole", @"Carboxyethylpyrrole.", false));
            TermData.Add(CVID.UNIMOD_Fluorescein_tyramine, new TermInfo(CVID.UNIMOD_Fluorescein_tyramine, @"UNIMOD", @"UNIMOD:1801", @"Fluorescein-tyramine", @"Fluorescein-tyramine adduct by peroxidase activity.", false));
            TermData.Add(CVID.UNIMOD_GEE, new TermInfo(CVID.UNIMOD_GEE, @"UNIMOD", @"UNIMOD:1824", @"GEE", @"Transamidation of glycine ethyl ester to glutamine.", false));
            TermData.Add(CVID.UNIMOD_RNPXL, new TermInfo(CVID.UNIMOD_RNPXL, @"UNIMOD", @"UNIMOD:1825", @"RNPXL", @"Simulate peptide-RNA conjugates.", false));
            TermData.Add(CVID.UNIMOD_Glu__pyro_Glu_Methyl, new TermInfo(CVID.UNIMOD_Glu__pyro_Glu_Methyl, @"UNIMOD", @"UNIMOD:1826", @"Glu->pyro-Glu+Methyl", @"Pyro-Glu from E + Methylation.", false));
            TermData.Add(CVID.UNIMOD_Glu__pyro_Glu_Methyl_2H_2_13C_1_, new TermInfo(CVID.UNIMOD_Glu__pyro_Glu_Methyl_2H_2_13C_1_, @"UNIMOD", @"UNIMOD:1827", @"Glu->pyro-Glu+Methyl:2H(2)13C(1)", @"Pyro-Glu from E + Methylation Medium.", false));
            TermData.Add(CVID.UNIMOD_LRGG_methyl, new TermInfo(CVID.UNIMOD_LRGG_methyl, @"UNIMOD", @"UNIMOD:1828", @"LRGG+methyl", @"LeumethylArgGlyGly.", false));
            TermData.Add(CVID.UNIMOD_LRGG_dimethyl, new TermInfo(CVID.UNIMOD_LRGG_dimethyl, @"UNIMOD", @"UNIMOD:1829", @"LRGG+dimethyl", @"LeudimethylArgGlyGly.", false));
            TermData.Add(CVID.UNIMOD_Biotin_tyramide, new TermInfo(CVID.UNIMOD_Biotin_tyramide, @"UNIMOD", @"UNIMOD:1830", @"Biotin-tyramide", @"Biotin-Phenol.", false));
            TermData.Add(CVID.UNIMOD_Tris, new TermInfo(CVID.UNIMOD_Tris, @"UNIMOD", @"UNIMOD:1831", @"Tris", @"Tris adduct causes 104 Da addition at asparagine-succinimide intermediate.", false));
            TermData.Add(CVID.UNIMOD_IASD, new TermInfo(CVID.UNIMOD_IASD, @"UNIMOD", @"UNIMOD:1832", @"IASD", @"Iodoacetamide derivative of stilbene (reaction product with thiol).", false));
            TermData.Add(CVID.UNIMOD_NP40, new TermInfo(CVID.UNIMOD_NP40, @"UNIMOD", @"UNIMOD:1833", @"NP40", @"NP-40 synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_Tween20, new TermInfo(CVID.UNIMOD_Tween20, @"UNIMOD", @"UNIMOD:1834", @"Tween20", @"Tween 20 synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_Tween80, new TermInfo(CVID.UNIMOD_Tween80, @"UNIMOD", @"UNIMOD:1835", @"Tween80", @"Tween 80 synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_Triton, new TermInfo(CVID.UNIMOD_Triton, @"UNIMOD", @"UNIMOD:1836", @"Triton", @"Triton synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_Brij35, new TermInfo(CVID.UNIMOD_Brij35, @"UNIMOD", @"UNIMOD:1837", @"Brij35", @"Brij 35 synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_Brij58, new TermInfo(CVID.UNIMOD_Brij58, @"UNIMOD", @"UNIMOD:1838", @"Brij58", @"Brij 58 synthetic polymer terminus.", false));
            TermData.Add(CVID.UNIMOD_betaFNA, new TermInfo(CVID.UNIMOD_betaFNA, @"UNIMOD", @"UNIMOD:1839", @"betaFNA", @"Beta-Funaltrexamine.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_4_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_7_HexNAc_4_, @"UNIMOD", @"UNIMOD:1840", @"dHex(1)Hex(7)HexNAc(4)", @"Fucosylated biantennary + 2 alphaGal.", false));
            TermData.Add(CVID.UNIMOD_Biotin_Thermo_21328, new TermInfo(CVID.UNIMOD_Biotin_Thermo_21328, @"UNIMOD", @"UNIMOD:1841", @"Biotin:Thermo-21328", @"EZ-Link Sulfo-NHS-SS-Biotin.", false));
            TermData.Add(CVID.UNIMOD_PhosphoCytidine, new TermInfo(CVID.UNIMOD_PhosphoCytidine, @"UNIMOD", @"UNIMOD:1843", @"PhosphoCytidine", @"Cytidine monophosphate.", false));
            TermData.Add(CVID.UNIMOD_AzidoF, new TermInfo(CVID.UNIMOD_AzidoF, @"UNIMOD", @"UNIMOD:1845", @"AzidoF", @"Azidophenylalanine.", false));
            TermData.Add(CVID.UNIMOD_Dimethylaminoethyl, new TermInfo(CVID.UNIMOD_Dimethylaminoethyl, @"UNIMOD", @"UNIMOD:1846", @"Dimethylaminoethyl", @"Cys alkylation by dimethylaminoethyl halide.", false));
            TermData.Add(CVID.UNIMOD_Gluratylation, new TermInfo(CVID.UNIMOD_Gluratylation, @"UNIMOD", @"UNIMOD:1848", @"Gluratylation", @"Glutarylation.", false));
            TermData.Add(CVID.UNIMOD_hydroxyisobutyryl, new TermInfo(CVID.UNIMOD_hydroxyisobutyryl, @"UNIMOD", @"UNIMOD:1849", @"hydroxyisobutyryl", @"2-hydroxyisobutyrylation.", false));
            TermData.Add(CVID.UNIMOD_MeMePhosphorothioate, new TermInfo(CVID.UNIMOD_MeMePhosphorothioate, @"UNIMOD", @"UNIMOD:1868", @"MeMePhosphorothioate", @"S-Methyl Methyl phosphorothioate.", false));
            TermData.Add(CVID.UNIMOD_Cation_Fe_III_, new TermInfo(CVID.UNIMOD_Cation_Fe_III_, @"UNIMOD", @"UNIMOD:1870", @"Cation:Fe[III]", @"Replacement of 3 protons by iron.", false));
            TermData.Add(CVID.UNIMOD_DTT, new TermInfo(CVID.UNIMOD_DTT, @"UNIMOD", @"UNIMOD:1871", @"DTT", @"DTT adduct of cysteine.", false));
            TermData.Add(CVID.UNIMOD_DYn_2, new TermInfo(CVID.UNIMOD_DYn_2, @"UNIMOD", @"UNIMOD:1872", @"DYn-2", @"Sulfenic Acid specific probe.", false));
            TermData.Add(CVID.UNIMOD_MesitylOxide, new TermInfo(CVID.UNIMOD_MesitylOxide, @"UNIMOD", @"UNIMOD:1873", @"MesitylOxide", @"Acetone chemical artifact.", false));
            TermData.Add(CVID.UNIMOD_methylol, new TermInfo(CVID.UNIMOD_methylol, @"UNIMOD", @"UNIMOD:1875", @"methylol", @"Formaldehyde induced modifications.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSS_259_, new TermInfo(CVID.UNIMOD_Xlink_DSS_259_, @"UNIMOD", @"UNIMOD:1877", @"Xlink:DSS[259]", @"Tris-quenched monolink of DSS/BS3 crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_176_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_176_, @"UNIMOD", @"UNIMOD:1878", @"Xlink:DSSO[176]", @"Water-quenched monolink of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_175_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_175_, @"UNIMOD", @"UNIMOD:1879", @"Xlink:DSSO[175]", @"Ammonia-quenched monolink of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_279_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_279_, @"UNIMOD", @"UNIMOD:1880", @"Xlink:DSSO[279]", @"Tris-quenched monolink of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_54_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_54_, @"UNIMOD", @"UNIMOD:1881", @"Xlink:DSSO[54]", @"Alkene fragment of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_86_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_86_, @"UNIMOD", @"UNIMOD:1882", @"Xlink:DSSO[86]", @"Thiol fragment of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_104_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_104_, @"UNIMOD", @"UNIMOD:1883", @"Xlink:DSSO[104]", @"Sulfenic acid fragment of DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_111_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_111_, @"UNIMOD", @"UNIMOD:1885", @"Xlink:BuUrBu[111]", @"BuUr fragment of BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_85_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_85_, @"UNIMOD", @"UNIMOD:1886", @"Xlink:BuUrBu[85]", @"Bu fragment of BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_213_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_213_, @"UNIMOD", @"UNIMOD:1887", @"Xlink:BuUrBu[213]", @"Ammonia quenched monolink of BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_214_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_214_, @"UNIMOD", @"UNIMOD:1888", @"Xlink:BuUrBu[214]", @"Water quenched monolink of BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_317_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_317_, @"UNIMOD", @"UNIMOD:1889", @"Xlink:BuUrBu[317]", @"Tris quenched monolink of BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSSO_158_, new TermInfo(CVID.UNIMOD_Xlink_DSSO_158_, @"UNIMOD", @"UNIMOD:1896", @"Xlink:DSSO[158]", @"Intact DSSO crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_EGS_226_, new TermInfo(CVID.UNIMOD_Xlink_EGS_226_, @"UNIMOD", @"UNIMOD:1897", @"Xlink:EGS[226]", @"Intact EGS cross-linker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DSS_138_, new TermInfo(CVID.UNIMOD_Xlink_DSS_138_, @"UNIMOD", @"UNIMOD:1898", @"Xlink:DSS[138]", @"Intact DSS/BS3 crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BuUrBu_196_, new TermInfo(CVID.UNIMOD_Xlink_BuUrBu_196_, @"UNIMOD", @"UNIMOD:1899", @"Xlink:BuUrBu[196]", @"Intact BuUrBu crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DTBP_172_, new TermInfo(CVID.UNIMOD_Xlink_DTBP_172_, @"UNIMOD", @"UNIMOD:1900", @"Xlink:DTBP[172]", @"Intact DTBP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DST_114_, new TermInfo(CVID.UNIMOD_Xlink_DST_114_, @"UNIMOD", @"UNIMOD:1901", @"Xlink:DST[114]", @"Intact DST crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DTSSP_174_, new TermInfo(CVID.UNIMOD_Xlink_DTSSP_174_, @"UNIMOD", @"UNIMOD:1902", @"Xlink:DTSSP[174]", @"Intact DSP/DTSSP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_SMCC_219_, new TermInfo(CVID.UNIMOD_Xlink_SMCC_219_, @"UNIMOD", @"UNIMOD:1903", @"Xlink:SMCC[219]", @"Intact SMCC cross-link.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BS2G_96_, new TermInfo(CVID.UNIMOD_Xlink_BS2G_96_, @"UNIMOD", @"UNIMOD:1905", @"Xlink:BS2G[96]", @"Intact BS2-G crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BS2G_113_, new TermInfo(CVID.UNIMOD_Xlink_BS2G_113_, @"UNIMOD", @"UNIMOD:1906", @"Xlink:BS2G[113]", @"Ammonium-quenched monolink of BS2-G crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BS2G_114_, new TermInfo(CVID.UNIMOD_Xlink_BS2G_114_, @"UNIMOD", @"UNIMOD:1907", @"Xlink:BS2G[114]", @"Water-quenched monolink of BS2-G crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_BS2G_217_, new TermInfo(CVID.UNIMOD_Xlink_BS2G_217_, @"UNIMOD", @"UNIMOD:1908", @"Xlink:BS2G[217]", @"Tris-quenched monolink of BS2-G crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Cation_Al_III_, new TermInfo(CVID.UNIMOD_Cation_Al_III_, @"UNIMOD", @"UNIMOD:1910", @"Cation:Al[III]", @"Replacement of 3 protons by aluminium.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DMP_139_, new TermInfo(CVID.UNIMOD_Xlink_DMP_139_, @"UNIMOD", @"UNIMOD:1911", @"Xlink:DMP[139]", @"Ammonia quenched monolink of DMP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DMP_122_, new TermInfo(CVID.UNIMOD_Xlink_DMP_122_, @"UNIMOD", @"UNIMOD:1912", @"Xlink:DMP[122]", @"Intact DMP crosslinker.", false));
            TermData.Add(CVID.UNIMOD_glyoxalAGE, new TermInfo(CVID.UNIMOD_glyoxalAGE, @"UNIMOD", @"UNIMOD:1913", @"glyoxalAGE", @"Glyoxal-derived AGE.", false));
            TermData.Add(CVID.UNIMOD_Met__AspSA, new TermInfo(CVID.UNIMOD_Met__AspSA, @"UNIMOD", @"UNIMOD:1914", @"Met->AspSA", @"Methionine oxidation to aspartic semialdehyde.", false));
            TermData.Add(CVID.UNIMOD_Decarboxylation, new TermInfo(CVID.UNIMOD_Decarboxylation, @"UNIMOD", @"UNIMOD:1915", @"Decarboxylation", @"Decarboxylation.", false));
            TermData.Add(CVID.UNIMOD_Aspartylurea, new TermInfo(CVID.UNIMOD_Aspartylurea, @"UNIMOD", @"UNIMOD:1916", @"Aspartylurea", @"Aspartylurea.", false));
            TermData.Add(CVID.UNIMOD_Formylasparagine, new TermInfo(CVID.UNIMOD_Formylasparagine, @"UNIMOD", @"UNIMOD:1917", @"Formylasparagine", @"In Bachi as Formylaspargine (typo?).", false));
            TermData.Add(CVID.UNIMOD_Carbonyl, new TermInfo(CVID.UNIMOD_Carbonyl, @"UNIMOD", @"UNIMOD:1918", @"Carbonyl", @"Aldehyde and ketone modifications.", false));
            TermData.Add(CVID.UNIMOD_AFB1_Dialdehyde, new TermInfo(CVID.UNIMOD_AFB1_Dialdehyde, @"UNIMOD", @"UNIMOD:1920", @"AFB1_Dialdehyde", @"Adduction of aflatoxin B1 Dialdehyde to lysine.", false));
            TermData.Add(CVID.UNIMOD_Pro__HAVA, new TermInfo(CVID.UNIMOD_Pro__HAVA, @"UNIMOD", @"UNIMOD:1922", @"Pro->HAVA", @"Proline oxidation to 5-hydroxy-2-aminovaleric acid.", false));
            TermData.Add(CVID.UNIMOD_Delta_H__4_O_2_, new TermInfo(CVID.UNIMOD_Delta_H__4_O_2_, @"UNIMOD", @"UNIMOD:1923", @"Delta:H(-4)O(2)", @"Tryptophan oxidation to beta-unsaturated-2,4-bis-tryptophandione.", false));
            TermData.Add(CVID.UNIMOD_Delta_H__4_O_3_, new TermInfo(CVID.UNIMOD_Delta_H__4_O_3_, @"UNIMOD", @"UNIMOD:1924", @"Delta:H(-4)O(3)", @"Tryptophan oxidation to hydroxy-bis-tryptophandione.", false));
            TermData.Add(CVID.UNIMOD_Delta_O_4_, new TermInfo(CVID.UNIMOD_Delta_O_4_, @"UNIMOD", @"UNIMOD:1925", @"Delta:O(4)", @"Tryptophan oxidation to dihydroxy-N-formaylkynurenine.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_3_C_3_O_2_, new TermInfo(CVID.UNIMOD_Delta_H_3_C_3_O_2_, @"UNIMOD", @"UNIMOD:1926", @"Delta:H(3)C(3)O(2)", @"Methylglyoxal-derived carboxyethyllysine.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_4_C_5_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_4_C_5_O_1_, @"UNIMOD", @"UNIMOD:1927", @"Delta:H(4)C(5)O(1)", @"Methylglyoxal-derived argpyrimidine.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_10_C_8_O_1_, new TermInfo(CVID.UNIMOD_Delta_H_10_C_8_O_1_, @"UNIMOD", @"UNIMOD:1928", @"Delta:H(10)C(8)O(1)", @"Crotonaldehyde-derived dimethyl-FDP-lysine.", false));
            TermData.Add(CVID.UNIMOD_Delta_H_6_C_7_O_4_, new TermInfo(CVID.UNIMOD_Delta_H_6_C_7_O_4_, @"UNIMOD", @"UNIMOD:1929", @"Delta:H(6)C(7)O(4)", @"Methylglyoxal-derived tetrahydropyrimidine.", false));
            TermData.Add(CVID.UNIMOD_Pent_2_, new TermInfo(CVID.UNIMOD_Pent_2_, @"UNIMOD", @"UNIMOD:1930", @"Pent(2)", @"Pent(2).", false));
            TermData.Add(CVID.UNIMOD_Pent_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_Pent_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1931", @"Pent(1)HexNAc(1)", @"Pent HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1932", @"Hex(2)Sulf(1)", @"Hex(2) O(3) S.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_Pent_2_Me_1_, new TermInfo(CVID.UNIMOD_Hex_1_Pent_2_Me_1_, @"UNIMOD", @"UNIMOD:1933", @"Hex(1)Pent(2)Me(1)", @"Hex:1 Pent:2 Me:1.", false));
            TermData.Add(CVID.UNIMOD_HexNAc_2_Sulf_1_, new TermInfo(CVID.UNIMOD_HexNAc_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1934", @"HexNAc(2)Sulf(1)", @"HexNAc(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_Pent_3_Me_1_, new TermInfo(CVID.UNIMOD_Hex_1_Pent_3_Me_1_, @"UNIMOD", @"UNIMOD:1935", @"Hex(1)Pent(3)Me(1)", @"Hex Pent(3) Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_Pent_2_, new TermInfo(CVID.UNIMOD_Hex_2_Pent_2_, @"UNIMOD", @"UNIMOD:1936", @"Hex(2)Pent(2)", @"Hex(2) Pent(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_2_Pent_2_Me_1_, new TermInfo(CVID.UNIMOD_Hex_2_Pent_2_Me_1_, @"UNIMOD", @"UNIMOD:1937", @"Hex(2)Pent(2)Me(1)", @"Hex(2) Pent(2) Me.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexA_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexA_1_, @"UNIMOD", @"UNIMOD:1938", @"Hex(4)HexA(1)", @"Hex(4) HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_2_HexNAc_1_Pent_1_HexA_1_, new TermInfo(CVID.UNIMOD_Hex_2_HexNAc_1_Pent_1_HexA_1_, @"UNIMOD", @"UNIMOD:1939", @"Hex(2)HexNAc(1)Pent(1)HexA(1)", @"Hex(2) HexNAc Pent HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_1_HexA_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_1_HexA_1_, @"UNIMOD", @"UNIMOD:1940", @"Hex(3)HexNAc(1)HexA(1)", @"Hex(3) HexNAc HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_2_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_2_Sulf_1_, @"UNIMOD", @"UNIMOD:1941", @"Hex(1)HexNAc(2)dHex(2)Sulf(1)", @"Hex HexNAc(2) dHex(2) Sulf.", false));
            TermData.Add(CVID.UNIMOD_HexA_2_HexNAc_3_, new TermInfo(CVID.UNIMOD_HexA_2_HexNAc_3_, @"UNIMOD", @"UNIMOD:1942", @"HexA(2)HexNAc(3)", @"HexA(2) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_4_HexA_1_, @"UNIMOD", @"UNIMOD:1943", @"dHex(1)Hex(4)HexA(1)", @"DHex Hex(4) HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexA_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexA_1_, @"UNIMOD", @"UNIMOD:1944", @"Hex(5)HexA(1)", @"Hex(5) HexA.", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexA_1_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexA_1_HexNAc_1_, @"UNIMOD", @"UNIMOD:1945", @"Hex(4)HexA(1)HexNAc(1)", @"Hex(4) HexA HexNAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_1_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_1_, @"UNIMOD", @"UNIMOD:1946", @"dHex(3)Hex(3)HexNAc(1)", @"DHex(3) Hex(3) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_6_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_6_HexNAc_1_, @"UNIMOD", @"UNIMOD:1947", @"Hex(6)HexNAc(1)", @"Hex(6) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_Hex_1_HexNAc_4_dHex_1_Sulf_1_, new TermInfo(CVID.UNIMOD_Hex_1_HexNAc_4_dHex_1_Sulf_1_, @"UNIMOD", @"UNIMOD:1948", @"Hex(1)HexNAc(4)dHex(1)Sulf(1)", @"Sulf dHex Hex HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_NeuAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_1_NeuAc_2_, @"UNIMOD", @"UNIMOD:1949", @"dHex(1)Hex(2)HexNAc(1)NeuAc(2)", @"DHex Hex(2) HexNAc NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_3_HexNAc_2_, @"UNIMOD", @"UNIMOD:1950", @"dHex(3)Hex(3)HexNAc(2)", @"DHex(3) Hex(3) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_4_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_1_HexNAc_4_Sulf_1_, @"UNIMOD", @"UNIMOD:1951", @"dHex(2)Hex(1)HexNAc(4)Sulf(1)", @"DHex(2) Hex HexNAc(4) Sulf.", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_2_HexNAc_4_Sulf_2_, @"UNIMOD", @"UNIMOD:1952", @"dHex(1)Hex(2)HexNAc(4)Sulf(2)", @"DHex Hex(2) HexNAc(4) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_9_, new TermInfo(CVID.UNIMOD_Hex_9_, @"UNIMOD", @"UNIMOD:1953", @"Hex(9)", @"Hex(9).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_3_Sulf_1_, @"UNIMOD", @"UNIMOD:1954", @"dHex(2)Hex(3)HexNAc(3)Sulf(1)", @"Sulf dHex(2) Hex(3) HexNAc(3).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_2_Me_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_5_HexNAc_2_Me_1_, @"UNIMOD", @"UNIMOD:1955", @"dHex(2)Hex(5)HexNAc(2)Me(1)", @"Me dHex(2) Hex(5) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_4_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_4_Sulf_2_, @"UNIMOD", @"UNIMOD:1956", @"dHex(2)Hex(2)HexNAc(4)Sulf(2)", @"Sulf(2) dHex(2) Hex(2) HexNAc(4).", false));
            TermData.Add(CVID.UNIMOD_Hex_9_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_9_HexNAc_1_, @"UNIMOD", @"UNIMOD:1957", @"Hex(9)HexNAc(1)", @"Hex(9) HexNAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_4_Sulf_2_, new TermInfo(CVID.UNIMOD_dHex_3_Hex_2_HexNAc_4_Sulf_2_, @"UNIMOD", @"UNIMOD:1958", @"dHex(3)Hex(2)HexNAc(4)Sulf(2)", @"DHex(3) Hex(2) HexNAc(4) Sulf(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_4_HexNAc_4_NeuGc_1_, new TermInfo(CVID.UNIMOD_Hex_4_HexNAc_4_NeuGc_1_, @"UNIMOD", @"UNIMOD:1959", @"Hex(4)HexNAc(4)NeuGc(1)", @"Hex(4) HexNAc(4) NeuGc.", false));
            TermData.Add(CVID.UNIMOD_dHex_4_Hex_3_HexNAc_2_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_4_Hex_3_HexNAc_2_NeuAc_1_, @"UNIMOD", @"UNIMOD:1960", @"dHex(4)Hex(3)HexNAc(2)NeuAc(1)", @"DHex(4) Hex(3) HexNAc(2) NeuAc(1).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_5_NeuAc_1_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_5_NeuAc_1_, @"UNIMOD", @"UNIMOD:1961", @"Hex(3)HexNAc(5)NeuAc(1)", @"Hex(3) HexNAc(5) NeuAc(1).", false));
            TermData.Add(CVID.UNIMOD_Hex_10_HexNAc_1_, new TermInfo(CVID.UNIMOD_Hex_10_HexNAc_1_, @"UNIMOD", @"UNIMOD:1962", @"Hex(10)HexNAc(1)", @"Hex(10) HexNAc(1).", false));
            TermData.Add(CVID.UNIMOD_dHex_1_Hex_8_HexNAc_2_, new TermInfo(CVID.UNIMOD_dHex_1_Hex_8_HexNAc_2_, @"UNIMOD", @"UNIMOD:1963", @"dHex(1)Hex(8)HexNAc(2)", @"DHex Hex(8) HexNAc(2).", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_4_NeuAc_2_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_4_NeuAc_2_, @"UNIMOD", @"UNIMOD:1964", @"Hex(3)HexNAc(4)NeuAc(2)", @"Hex(3) HexNAc(4) NeuAc(2).", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_NeuAc_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_3_HexNAc_4_NeuAc_1_, @"UNIMOD", @"UNIMOD:1965", @"dHex(2)Hex(3)HexNAc(4)NeuAc(1)", @"DHex(2) Hex(3) HexNAc(4) NeuAc.", false));
            TermData.Add(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_6_Sulf_1_, new TermInfo(CVID.UNIMOD_dHex_2_Hex_2_HexNAc_6_Sulf_1_, @"UNIMOD", @"UNIMOD:1966", @"dHex(2)Hex(2)HexNAc(6)Sulf(1)", @"DHex(2) Hex(2) HexNAc(6) Sulf.", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Ac_1_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Ac_1_, @"UNIMOD", @"UNIMOD:1967", @"Hex(5)HexNAc(4)NeuAc(1)Ac(1)", @"Hex(5) HexNAc(4) NeuAc Ac.", false));
            TermData.Add(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_3_, new TermInfo(CVID.UNIMOD_Hex_3_HexNAc_3_NeuAc_3_, @"UNIMOD", @"UNIMOD:1968", @"Hex(3)HexNAc(3)NeuAc(3)", @"Hex(3) HexNAc(3) NeuAc(3).", false));
            TermData.Add(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Ac_2_, new TermInfo(CVID.UNIMOD_Hex_5_HexNAc_4_NeuAc_1_Ac_2_, @"UNIMOD", @"UNIMOD:1969", @"Hex(5)HexNAc(4)NeuAc(1)Ac(2)", @"Hex(5) HexNAc(4) NeuAc Ac(2).", false));
            TermData.Add(CVID.UNIMOD_Unknown_162, new TermInfo(CVID.UNIMOD_Unknown_162, @"UNIMOD", @"UNIMOD:1970", @"Unknown:162", @"Unidentified modification of 162.1258 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_177, new TermInfo(CVID.UNIMOD_Unknown_177, @"UNIMOD", @"UNIMOD:1971", @"Unknown:177", @"Unidentified modification of 176.7462 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_210, new TermInfo(CVID.UNIMOD_Unknown_210, @"UNIMOD", @"UNIMOD:1972", @"Unknown:210", @"Unidentified modification of 210.1616 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_216, new TermInfo(CVID.UNIMOD_Unknown_216, @"UNIMOD", @"UNIMOD:1973", @"Unknown:216", @"Unidentified modification of 216.1002 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_234, new TermInfo(CVID.UNIMOD_Unknown_234, @"UNIMOD", @"UNIMOD:1974", @"Unknown:234", @"Unidentified modification of 234.0742 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_248, new TermInfo(CVID.UNIMOD_Unknown_248, @"UNIMOD", @"UNIMOD:1975", @"Unknown:248", @"Unidentified modification of 248.1986 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_250, new TermInfo(CVID.UNIMOD_Unknown_250, @"UNIMOD", @"UNIMOD:1976", @"Unknown:250", @"Unidentified modification of 249.981 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_302, new TermInfo(CVID.UNIMOD_Unknown_302, @"UNIMOD", @"UNIMOD:1977", @"Unknown:302", @"Unidentified modification of 301.9864 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_306, new TermInfo(CVID.UNIMOD_Unknown_306, @"UNIMOD", @"UNIMOD:1978", @"Unknown:306", @"Unidentified modification of 306.0952 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Unknown_420, new TermInfo(CVID.UNIMOD_Unknown_420, @"UNIMOD", @"UNIMOD:1979", @"Unknown:420", @"Unidentified modification of 420.0506 found in open search.", false));
            TermData.Add(CVID.UNIMOD_Diethylphosphothione, new TermInfo(CVID.UNIMOD_Diethylphosphothione, @"UNIMOD", @"UNIMOD:1986", @"Diethylphosphothione", @"O-diethylphosphothione.", false));
            TermData.Add(CVID.UNIMOD_Dimethylphosphothione, new TermInfo(CVID.UNIMOD_Dimethylphosphothione, @"UNIMOD", @"UNIMOD:1987", @"Dimethylphosphothione", @"O-dimethylphosphothione.", false));
            TermData.Add(CVID.UNIMOD_monomethylphosphothione, new TermInfo(CVID.UNIMOD_monomethylphosphothione, @"UNIMOD", @"UNIMOD:1989", @"monomethylphosphothione", @"O-methylphosphothione.", false));
            TermData.Add(CVID.UNIMOD_CIGG, new TermInfo(CVID.UNIMOD_CIGG, @"UNIMOD", @"UNIMOD:1990", @"CIGG", @"Ubiquitin D (FAT10) leaving after chymotrypsin digestion Cys-Ile-Gly-Gly.", false));
            TermData.Add(CVID.UNIMOD_GNLLFLACYCIGG, new TermInfo(CVID.UNIMOD_GNLLFLACYCIGG, @"UNIMOD", @"UNIMOD:1991", @"GNLLFLACYCIGG", @"Ubiquitin D (FAT10) leaving after trypsin digestion Gly-Asn-Leu-Leu-Phe-Leu-Ala-Cys-Tyr-Cys-Ile-Gly-Gly.", false));
            TermData.Add(CVID.UNIMOD_serotonylation, new TermInfo(CVID.UNIMOD_serotonylation, @"UNIMOD", @"UNIMOD:1992", @"serotonylation", @"5-glutamyl serotonin.", false));
            TermData.Add(CVID.UNIMOD_TMPP_Ac_13C_9_, new TermInfo(CVID.UNIMOD_TMPP_Ac_13C_9_, @"UNIMOD", @"UNIMOD:1993", @"TMPP-Ac:13C(9)", @"Heavy tris(2,4,6-trimethoxyphenyl)phosphonium acetic acid N-hydroxysuccinimide ester derivative.", false));
            TermData.Add(CVID.UNIMOD_Xlink_DST_56_, new TermInfo(CVID.UNIMOD_Xlink_DST_56_, @"UNIMOD", @"UNIMOD:1999", @"Xlink:DST[56]", @"DST crosslinker cleaved by sodium periodate.", false));
            TermData.Add(CVID.UNIMOD_ZQG, new TermInfo(CVID.UNIMOD_ZQG, @"UNIMOD", @"UNIMOD:2001", @"ZQG", @"Carbobenzoxy-L-glutaminyl-glycine.", false));
            TermData.Add(CVID.UNIMOD_Haloxon, new TermInfo(CVID.UNIMOD_Haloxon, @"UNIMOD", @"UNIMOD:2006", @"Haloxon", @"O-Dichloroethylphosphate.", false));
            TermData.Add(CVID.UNIMOD_Methamidophos_S, new TermInfo(CVID.UNIMOD_Methamidophos_S, @"UNIMOD", @"UNIMOD:2007", @"Methamidophos-S", @"S-methyl amino phosphinate.", false));
            TermData.Add(CVID.UNIMOD_Methamidophos_O, new TermInfo(CVID.UNIMOD_Methamidophos_O, @"UNIMOD", @"UNIMOD:2008", @"Methamidophos-O", @"O-methyl amino phosphinate.", false));
            TermData.Add(CVID.UNIMOD_Nitrene, new TermInfo(CVID.UNIMOD_Nitrene, @"UNIMOD", @"UNIMOD:2014", @"Nitrene", @"Loss of O2; nitro photochemical decomposition.", false));
            TermData.Add(CVID.UNIMOD_shTMT, new TermInfo(CVID.UNIMOD_shTMT, @"UNIMOD", @"UNIMOD:2015", @"shTMT", @"Super Heavy Tandem Mass Tag.", false));
            TermData.Add(CVID.UNIMOD_TMTpro, new TermInfo(CVID.UNIMOD_TMTpro, @"UNIMOD", @"UNIMOD:2016", @"TMTpro", @"TMTpro 16plex Tandem Mass Tag.", false));
            TermData.Add(CVID.UNIMOD_TMTpro_zero, new TermInfo(CVID.UNIMOD_TMTpro_zero, @"UNIMOD", @"UNIMOD:2017", @"TMTpro_zero", @"Native TMTpro Tandem Mass Tag.", false));
            TermData.Add(CVID.UNIMOD_Kdo, new TermInfo(CVID.UNIMOD_Kdo, @"UNIMOD", @"UNIMOD:2022", @"Kdo", @"Glycosylation with KDO.", false));
            TermData.Add(CVID.UNIMOD_Andro_H2O, new TermInfo(CVID.UNIMOD_Andro_H2O, @"UNIMOD", @"UNIMOD:2025", @"Andro-H2O", @"Andrographolide with the loss of H2O.", false));
            TermData.Add(CVID.UNIMOD_His_O_2_, new TermInfo(CVID.UNIMOD_His_O_2_, @"UNIMOD", @"UNIMOD:2027", @"His+O(2)", @"Photo-induced histidine adduct.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 1</summary>
        private static void PopulateTermData_PATO_Part1()
        {
            TermData.Add(CVID.PATO_obsolete_pato_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pato_OBSOLETE, @"PATO", @"PATO:0000000", @"obsolete pato", @"", true));
            TermData.Add(CVID.PATO_quality, new TermInfo(CVID.PATO_quality, @"PATO", @"PATO:0000001", @"quality", @"A dependent entity that inheres in a bearer by virtue of how the bearer is related to other entities", false));
            TermData.Add(CVID.PATO_obsolete_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_value_OBSOLETE, @"PATO", @"PATO:0000002", @"obsolete value", @"", true));
            TermData.Add(CVID.PATO_obsolete_assay_OBSOLETE, new TermInfo(CVID.PATO_obsolete_assay_OBSOLETE, @"PATO", @"PATO:0000003", @"obsolete assay", @"", true));
            TermData.Add(CVID.PATO_mobility, new TermInfo(CVID.PATO_mobility, @"PATO", @"PATO:0000004", @"mobility", @"A quality of inhering in a bearer by virtue of the bearer's disposition to move freely.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_activity_OBSOLETE, @"PATO", @"PATO:0000005", @"obsolete absolute activity", @"", true));
            TermData.Add(CVID.PATO_obsolete_process_OBSOLETE, new TermInfo(CVID.PATO_obsolete_process_OBSOLETE, @"PATO", @"PATO:0000006", @"obsolete process", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_activity_OBSOLETE, @"PATO", @"PATO:0000007", @"obsolete relative activity", @"", true));
            TermData.Add(CVID.PATO_speed, new TermInfo(CVID.PATO_speed, @"PATO", @"PATO:0000008", @"speed", @"A physical quality inhering in a bearer by virtue of the bearer's scalar absolute value of the rate of change of the bearer's position.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_speed_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_speed_OBSOLETE, @"PATO", @"PATO:0000009", @"obsolete absolute speed", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_speed_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_speed_OBSOLETE, @"PATO", @"PATO:0000010", @"obsolete relative speed", @"", true));
            TermData.Add(CVID.PATO_age, new TermInfo(CVID.PATO_age, @"PATO", @"PATO:0000011", @"age", @"A time quality inhering in a bearer by virtue of how long the bearer has existed.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_age_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_age_OBSOLETE, @"PATO", @"PATO:0000012", @"obsolete absolute age", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_age_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_age_OBSOLETE, @"PATO", @"PATO:0000013", @"obsolete relative age", @"", true));
            TermData.Add(CVID.PATO_color, new TermInfo(CVID.PATO_color, @"PATO", @"PATO:0000014", @"color", @"A composite chromatic quality composed of hue, saturation and intensity parts.", false));
            TermData.Add(CVID.PATO_color_hue, new TermInfo(CVID.PATO_color_hue, @"PATO", @"PATO:0000015", @"color hue", @"A chromatic scalar-circular quality inhering in an object that manifests in an observer by virtue of the dominant wavelength of the visible light; may be subject to fiat divisions, typically into 7 or 8 spectra.", false));
            TermData.Add(CVID.PATO_color_brightness, new TermInfo(CVID.PATO_color_brightness, @"PATO", @"PATO:0000016", @"color brightness", @"A scalar optical property that is the intensity, value or amount of perceived light.", false));
            TermData.Add(CVID.PATO_color_saturation, new TermInfo(CVID.PATO_color_saturation, @"PATO", @"PATO:0000017", @"color saturation", @"A scalar chromatic property that is the degree of purity of perceived light.", false));
            TermData.Add(CVID.PATO_fluorescence, new TermInfo(CVID.PATO_fluorescence, @"PATO", @"PATO:0000018", @"fluorescence", @"A luminous flux quality inhering in a bearer by virtue of the bearer's emitting longer wavelength light following the absorption of shorter wavelength radiation; fluorescence is common with aromatic compounds with several rings joined together.", false));
            TermData.Add(CVID.PATO_color_pattern, new TermInfo(CVID.PATO_color_pattern, @"PATO", @"PATO:0000019", @"color pattern", @"A chromatic property that is the relative position of different hues or degrees of saturation.", false));
            TermData.Add(CVID.PATO_compatibility, new TermInfo(CVID.PATO_compatibility, @"PATO", @"PATO:0000021", @"compatibility", @"A quality inhering in a bearer by virtue of the bearer's disposition to harmonious coexistence.", false));
            TermData.Add(CVID.PATO_obsolete_gametophytic_compatability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gametophytic_compatability_OBSOLETE, @"PATO", @"PATO:0000022", @"obsolete gametophytic compatability", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_compatability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_compatability_OBSOLETE, @"PATO", @"PATO:0000023", @"obsolete relative compatability", @"", true));
            TermData.Add(CVID.PATO_obsolete_sporophytic_compatability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sporophytic_compatability_OBSOLETE, @"PATO", @"PATO:0000024", @"obsolete sporophytic compatability", @"", true));
            TermData.Add(CVID.PATO_composition, new TermInfo(CVID.PATO_composition, @"PATO", @"PATO:0000025", @"composition", @"A single physical entity inhering in an bearer by virtue of the bearer's quantities or relative ratios of subparts.", false));
            TermData.Add(CVID.PATO_obsolete_carbohydrate_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_carbohydrate_composition_OBSOLETE, @"PATO", @"PATO:0000026", @"obsolete carbohydrate composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_electrolyte_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_electrolyte_composition_OBSOLETE, @"PATO", @"PATO:0000027", @"obsolete electrolyte composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_macromolecular_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_macromolecular_composition_OBSOLETE, @"PATO", @"PATO:0000028", @"obsolete macromolecular composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_protein_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_protein_composition_OBSOLETE, @"PATO", @"PATO:0000029", @"obsolete protein composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_enzyme_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_enzyme_composition_OBSOLETE, @"PATO", @"PATO:0000030", @"obsolete enzyme composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_metabolite_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_metabolite_composition_OBSOLETE, @"PATO", @"PATO:0000031", @"obsolete metabolite composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_secondary_product_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_secondary_product_composition_OBSOLETE, @"PATO", @"PATO:0000032", @"obsolete secondary product composition", @"", true));
            TermData.Add(CVID.PATO_concentration_of, new TermInfo(CVID.PATO_concentration_of, @"PATO", @"PATO:0000033", @"concentration of", @"A quality inhering in a substance by virtue of the amount of the bearer's there is mixed with another substance.", false));
            TermData.Add(CVID.PATO_obsolete_protein_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_protein_concentration_OBSOLETE, @"PATO", @"PATO:0000034", @"obsolete protein concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_carbohydrate_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_carbohydrate_concentration_OBSOLETE, @"PATO", @"PATO:0000035", @"obsolete carbohydrate concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_content_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_content_OBSOLETE, @"PATO", @"PATO:0000036", @"obsolete water content", @"", true));
            TermData.Add(CVID.PATO_consistency, new TermInfo(CVID.PATO_consistency, @"PATO", @"PATO:0000037", @"consistency", @"A physical quality inhering in a bearer by virtue of the bearer's density, firmness, or viscosity.", false));
            TermData.Add(CVID.PATO_obsolete_gel_consistency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gel_consistency_OBSOLETE, @"PATO", @"PATO:0000038", @"obsolete gel consistency", @"", true));
            TermData.Add(CVID.PATO_direction, new TermInfo(CVID.PATO_direction, @"PATO", @"PATO:0000039", @"direction", @"A physical quality inhering in a bearer by virtue of the bearer's orientation in space.", false));
            TermData.Add(CVID.PATO_distance, new TermInfo(CVID.PATO_distance, @"PATO", @"PATO:0000040", @"distance", @"A quality that is the extent of space between two entities.", false));
            TermData.Add(CVID.PATO_obsolete_absolutedistance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolutedistance_OBSOLETE, @"PATO", @"PATO:0000041", @"obsolete absolutedistance", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_distance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_distance_OBSOLETE, @"PATO", @"PATO:0000042", @"obsolete relative distance", @"", true));
            TermData.Add(CVID.PATO_flavor, new TermInfo(CVID.PATO_flavor, @"PATO", @"PATO:0000043", @"flavor", @"A quality of a physical entity inhering in a bearer by virtue of whether the bearer's molecules are being perceived by a taste and odorant receptors.", false));
            TermData.Add(CVID.PATO_frequency, new TermInfo(CVID.PATO_frequency, @"PATO", @"PATO:0000044", @"frequency", @"A physical quality which inheres in a bearer by virtue of the number of the bearer's repetitive actions in a particular time.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_frequency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_frequency_OBSOLETE, @"PATO", @"PATO:0000045", @"obsolete absolute frequency", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_frequency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_frequency_OBSOLETE, @"PATO", @"PATO:0000046", @"obsolete relative frequency", @"", true));
            TermData.Add(CVID.PATO_biological_sex, new TermInfo(CVID.PATO_biological_sex, @"PATO", @"PATO:0000047", @"biological sex", @"An organismal quality inhering in a bearer by virtue of the bearer's ability to undergo sexual reproduction in order to differentiate the individuals or types involved.", false));
            TermData.Add(CVID.PATO_hardness, new TermInfo(CVID.PATO_hardness, @"PATO", @"PATO:0000048", @"hardness", @"A physical quality inhering in a bearer by virtue of the bearer's resistance to pressure, being broken, or pierced", false));
            TermData.Add(CVID.PATO_intensity, new TermInfo(CVID.PATO_intensity, @"PATO", @"PATO:0000049", @"intensity", @"A quality inhering in a bearer by virtue of the bearer's possessing or displaying a distinctive feature in type or degree or effect or force.", false));
            TermData.Add(CVID.PATO_life_span, new TermInfo(CVID.PATO_life_span, @"PATO", @"PATO:0000050", @"life span", @"A time quality inhering in a bearer by virtue of the bearer's expected maximum age.", false));
            TermData.Add(CVID.PATO_morphology, new TermInfo(CVID.PATO_morphology, @"PATO", @"PATO:0000051", @"morphology", @"A quality of a single physical entity inhering in the bearer by virtue of the bearer's size or shape or structure.", false));
            TermData.Add(CVID.PATO_shape, new TermInfo(CVID.PATO_shape, @"PATO", @"PATO:0000052", @"shape", @"A morphological quality inhering in a bearer by virtue of the bearer's ratios of distances between its features (points, edges, surfaces and also holes etc).", false));
            TermData.Add(CVID.PATO_obsolete_absolute_number_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_number_OBSOLETE, @"PATO", @"PATO:0000054", @"obsolete absolute number", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_number_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_number_OBSOLETE, @"PATO", @"PATO:0000055", @"obsolete relative number", @"", true));
            TermData.Add(CVID.PATO_trophic_quality, new TermInfo(CVID.PATO_trophic_quality, @"PATO", @"PATO:0000056", @"trophic quality", @"An organismal quality inhering in a bearer by virtue of the bearer's disposition to synthesize a particular organic compound required for its growth.", false));
            TermData.Add(CVID.PATO_occurrence, new TermInfo(CVID.PATO_occurrence, @"PATO", @"PATO:0000057", @"occurrence", @"A quality of a single process inhering in a bearer by virtue of the bearer's occurrence.", false));
            TermData.Add(CVID.PATO_odor, new TermInfo(CVID.PATO_odor, @"PATO", @"PATO:0000058", @"odor", @"A physical quality inhering in a bearer by virtue of the bearer's molecules being are aerially dispersed and perceived by an odorant receptor.", false));
            TermData.Add(CVID.PATO_obsolete_parental_quality_OBSOLETE, new TermInfo(CVID.PATO_obsolete_parental_quality_OBSOLETE, @"PATO", @"PATO:0000059", @"obsolete parental quality", @"A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a parent.", true));
            TermData.Add(CVID.PATO_spatial_pattern, new TermInfo(CVID.PATO_spatial_pattern, @"PATO", @"PATO:0000060", @"spatial pattern", @"A spatial quality inhering in a bearer by virtue of the bearer's exhibiting repetition of placement of its parts.", false));
            TermData.Add(CVID.PATO_obsolete_relative_pattern_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_pattern_OBSOLETE, @"PATO", @"PATO:0000061", @"obsolete relative pattern", @"", true));
            TermData.Add(CVID.PATO_sleep_pattern, new TermInfo(CVID.PATO_sleep_pattern, @"PATO", @"PATO:0000062", @"sleep pattern", @"A sleep quality defined by the mathematic properties of the relative time frames of the sleep cycle.", false));
            TermData.Add(CVID.PATO_obsolete_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_percentage_OBSOLETE, @"PATO", @"PATO:0000063", @"obsolete percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_percentage_OBSOLETE, @"PATO", @"PATO:0000064", @"obsolete absolute percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_percentage_OBSOLETE, @"PATO", @"PATO:0000065", @"obsolete relative percentage", @"", true));
            TermData.Add(CVID.PATO_pilosity, new TermInfo(CVID.PATO_pilosity, @"PATO", @"PATO:0000066", @"pilosity", @"A texture quality inhering in a bearer by virtue of the bearer's having hair or bristles.", false));
            TermData.Add(CVID.PATO_obsolete_relative_pilosity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_pilosity_OBSOLETE, @"PATO", @"PATO:0000067", @"obsolete relative pilosity", @"", true));
            TermData.Add(CVID.PATO_qualitative, new TermInfo(CVID.PATO_qualitative, @"PATO", @"PATO:0000068", @"qualitative", @"", false));
            TermData.Add(CVID.PATO_deviation_from_normal_, new TermInfo(CVID.PATO_deviation_from_normal_, @"PATO", @"PATO:0000069", @"deviation(from_normal)", @"A quality inhering in a bearer by virtue of the whether the bearer differs from normal or average.", false));
            TermData.Add(CVID.PATO_amount, new TermInfo(CVID.PATO_amount, @"PATO", @"PATO:0000070", @"amount", @"The number of entities of this type that are part of the whole organism.", false));
            TermData.Add(CVID.PATO_obsolete_relative_quality_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_quality_OBSOLETE, @"PATO", @"PATO:0000073", @"obsolete relative_quality", @"", true));
            TermData.Add(CVID.PATO_obsolete_shattering_OBSOLETE, new TermInfo(CVID.PATO_obsolete_shattering_OBSOLETE, @"PATO", @"PATO:0000074", @"obsolete shattering", @"", true));
            TermData.Add(CVID.PATO_obsolete_threshability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_threshability_OBSOLETE, @"PATO", @"PATO:0000075", @"obsolete threshability", @"", true));
            TermData.Add(CVID.PATO_obsolete_regulation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_regulation_OBSOLETE, @"PATO", @"PATO:0000076", @"obsolete regulation", @"", true));
            TermData.Add(CVID.PATO_response_to, new TermInfo(CVID.PATO_response_to, @"PATO", @"PATO:0000077", @"response to", @"A quality inhering in a bearer by virtue of the whether the bearer's disposition to react to a stimulus or an agent.", false));
            TermData.Add(CVID.PATO_rhythm_quality, new TermInfo(CVID.PATO_rhythm_quality, @"PATO", @"PATO:0000078", @"rhythm quality", @"A quality of a single process inhering in a bearer by virtue of the bearer's movement or variation characterized by the regular recurrence or alternation of different quantities or conditions.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_rhythym_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_rhythym_OBSOLETE, @"PATO", @"PATO:0000079", @"obsolete absolute rhythym", @"", true));
            TermData.Add(CVID.PATO_amplitude, new TermInfo(CVID.PATO_amplitude, @"PATO", @"PATO:0000080", @"amplitude", @"A physical quality of a process inhering in a bearer by virtue of the size of the bearer's maximum displacement from the 'normal' position, when periodic motion is taking place.", false));
            TermData.Add(CVID.PATO_persistence, new TermInfo(CVID.PATO_persistence, @"PATO", @"PATO:0000082", @"persistence", @"A rhythm quality inhering in a bearer by virtue of the repetitiveness of bearer's rhythm.", false));
            TermData.Add(CVID.PATO_phase, new TermInfo(CVID.PATO_phase, @"PATO", @"PATO:0000083", @"phase", @"A quality that exists by virtue of being a particular point in the time of a cycle.", false));
            TermData.Add(CVID.PATO_obsolete_relative_rhythym_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_rhythym_OBSOLETE, @"PATO", @"PATO:0000084", @"obsolete relative rhythym", @"", true));
            TermData.Add(CVID.PATO_sensitivity_toward, new TermInfo(CVID.PATO_sensitivity_toward, @"PATO", @"PATO:0000085", @"sensitivity toward", @"A quality inhering in a bearer by virtue of the bearer's disposition to detect or perceive external stimulation.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_sensitivity_OBSOLETE, @"PATO", @"PATO:0000086", @"obsolete absolute sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_disease_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_disease_sensitivity_OBSOLETE, @"PATO", @"PATO:0000087", @"obsolete disease sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_disease_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_disease_sensitivity_OBSOLETE, @"PATO", @"PATO:0000088", @"obsolete absolute disease sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_disease_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_disease_sensitivity_OBSOLETE, @"PATO", @"PATO:0000089", @"obsolete relative disease sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_sensitivity_OBSOLETE, @"PATO", @"PATO:0000090", @"obsolete relative sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_stress_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_stress_sensitivity_OBSOLETE, @"PATO", @"PATO:0000091", @"obsolete stress sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_abiotic_stress_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_abiotic_stress_sensitivity_OBSOLETE, @"PATO", @"PATO:0000092", @"obsolete abiotic stress sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_chemical_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_chemical_sensitivity_OBSOLETE, @"PATO", @"PATO:0000093", @"obsolete chemical sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_drug_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drug_sensitivity_OBSOLETE, @"PATO", @"PATO:0000094", @"obsolete drug sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_drug_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_drug_sensitivity_OBSOLETE, @"PATO", @"PATO:0000095", @"obsolete absolute drug sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_drug_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_drug_sensitivity_OBSOLETE, @"PATO", @"PATO:0000096", @"obsolete relative drug sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_herbicide_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_herbicide_sensitivity_OBSOLETE, @"PATO", @"PATO:0000097", @"obsolete herbicide sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_insecticide_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_insecticide_sensitivity_OBSOLETE, @"PATO", @"PATO:0000098", @"obsolete insecticide sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_plant_growth_hormone_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_plant_growth_hormone_sensitivity_OBSOLETE, @"PATO", @"PATO:0000099", @"obsolete plant growth hormone sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_soil_composition_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soil_composition_sensitivity_OBSOLETE, @"PATO", @"PATO:0000100", @"obsolete soil composition sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_soil_nutrient_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soil_nutrient_sensitivity_OBSOLETE, @"PATO", @"PATO:0000101", @"obsolete soil nutrient sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_macronutrient_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_macronutrient_sensitivity_OBSOLETE, @"PATO", @"PATO:0000102", @"obsolete macronutrient sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_micronutrient_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_micronutrient_sensitivity_OBSOLETE, @"PATO", @"PATO:0000103", @"obsolete micronutrient sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_osmotic_response_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_osmotic_response_sensitivity_OBSOLETE, @"PATO", @"PATO:0000104", @"obsolete osmotic response sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_p_h_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_p_h_sensitivity_OBSOLETE, @"PATO", @"PATO:0000105", @"obsolete p h sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_acid_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_acid_sensitivity_OBSOLETE, @"PATO", @"PATO:0000106", @"obsolete acid sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_alkali_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_alkali_sensitivity_OBSOLETE, @"PATO", @"PATO:0000107", @"obsolete alkali sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_salt_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_salt_sensitivity_OBSOLETE, @"PATO", @"PATO:0000108", @"obsolete salt sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_sensitivity_OBSOLETE, @"PATO", @"PATO:0000109", @"obsolete water sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_drought_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drought_sensitivity_OBSOLETE, @"PATO", @"PATO:0000110", @"obsolete drought sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_flooding_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flooding_sensitivity_OBSOLETE, @"PATO", @"PATO:0000111", @"obsolete flooding sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_humidity_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_humidity_sensitivity_OBSOLETE, @"PATO", @"PATO:0000112", @"obsolete humidity sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_radiation_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_radiation_sensitivity_OBSOLETE, @"PATO", @"PATO:0000113", @"obsolete radiation sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_temperature_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temperature_sensitivity_OBSOLETE, @"PATO", @"PATO:0000114", @"obsolete temperature sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_temperature_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temperature_sensitivity_OBSOLETE, @"PATO", @"PATO:0000115", @"obsolete absolute temperature sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temperature_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temperature_sensitivity_OBSOLETE, @"PATO", @"PATO:0000116", @"obsolete relative temperature sensitivity", @"", true));
            TermData.Add(CVID.PATO_size, new TermInfo(CVID.PATO_size, @"PATO", @"PATO:0000117", @"size", @"A morphology quality inhering in a bearer by virtue of the bearer's physical magnitude.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_size_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_size_OBSOLETE, @"PATO", @"PATO:0000118", @"obsolete absolute size", @"", true));
            TermData.Add(CVID.PATO_height, new TermInfo(CVID.PATO_height, @"PATO", @"PATO:0000119", @"height", @"A 1-D extent quality inhering in a bearer by virtue of the bearer's vertical dimension of extension.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_height_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_height_OBSOLETE, @"PATO", @"PATO:0000120", @"obsolete absolute height", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_height_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_height_OBSOLETE, @"PATO", @"PATO:0000121", @"obsolete relative height", @"", true));
            TermData.Add(CVID.PATO_length, new TermInfo(CVID.PATO_length, @"PATO", @"PATO:0000122", @"length", @"A 1-D extent quality which is equal to the distance between two points.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_length_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_length_OBSOLETE, @"PATO", @"PATO:0000123", @"obsolete absolute length", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_length_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_length_OBSOLETE, @"PATO", @"PATO:0000124", @"obsolete relative length", @"", true));
            TermData.Add(CVID.PATO_mass, new TermInfo(CVID.PATO_mass, @"PATO", @"PATO:0000125", @"mass", @"A physical quality that inheres in a bearer by virtue of the proportion of the bearer's amount of matter.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_mass_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_mass_OBSOLETE, @"PATO", @"PATO:0000126", @"obsolete absolute mass", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_mass_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_mass_OBSOLETE, @"PATO", @"PATO:0000127", @"obsolete relative mass", @"", true));
            TermData.Add(CVID.PATO_weight, new TermInfo(CVID.PATO_weight, @"PATO", @"PATO:0000128", @"weight", @"A physical quality inhering in a bearer that has mass near a gravitational body.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_weight_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_weight_OBSOLETE, @"PATO", @"PATO:0000129", @"obsolete absolute weight", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_weight_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_weight_OBSOLETE, @"PATO", @"PATO:0000130", @"obsolete relative weight", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_size_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_size_OBSOLETE, @"PATO", @"PATO:0000131", @"obsolete relative size", @"", true));
            TermData.Add(CVID.PATO_orientation, new TermInfo(CVID.PATO_orientation, @"PATO", @"PATO:0000133", @"orientation", @"A spatial quality inhering in a bearer by virtue of the bearer's placement which is defined by the angle between the bearer and an axis, or the angle between the bearer and another object.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_angle_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_angle_OBSOLETE, @"PATO", @"PATO:0000134", @"obsolete absolute_angle", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_angle_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_angle_OBSOLETE, @"PATO", @"PATO:0000135", @"obsolete relative_angle", @"", true));
            TermData.Add(CVID.PATO_closure, new TermInfo(CVID.PATO_closure, @"PATO", @"PATO:0000136", @"closure", @"A morphological quality pertaining to the degree to which an object contains an opening, aperture, orifice or vent.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_orientation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_orientation_OBSOLETE, @"PATO", @"PATO:0000138", @"obsolete absolute orientation", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_orientation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_orientation_OBSOLETE, @"PATO", @"PATO:0000139", @"obsolete relative orientation", @"", true));
            TermData.Add(CVID.PATO_position, new TermInfo(CVID.PATO_position, @"PATO", @"PATO:0000140", @"position", @"A spatial quality inhering in a bearer by virtue of the bearer's spatial location relative to other objects in the vicinity.", false));
            TermData.Add(CVID.PATO_structure, new TermInfo(CVID.PATO_structure, @"PATO", @"PATO:0000141", @"structure", @"A morphology quality inhering in a bearer by virtue of the bearer's relative position, shape, arrangements and connectivity of an organism's various parts; the pattern underlying its form.", false));
            TermData.Add(CVID.PATO_obsolete_substance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_substance_OBSOLETE, @"PATO", @"PATO:0000142", @"obsolete substance", @"", true));
            TermData.Add(CVID.PATO_obsolete_addictive_substance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_addictive_substance_OBSOLETE, @"PATO", @"PATO:0000143", @"obsolete addictive substance", @"", true));
            TermData.Add(CVID.PATO_obsolete_solid_substance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_solid_substance_OBSOLETE, @"PATO", @"PATO:0000144", @"obsolete solid substance", @"", true));
            TermData.Add(CVID.PATO_obsolete_liquid_substance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_liquid_substance_OBSOLETE, @"PATO", @"PATO:0000145", @"obsolete liquid substance", @"", true));
            TermData.Add(CVID.PATO_temperature, new TermInfo(CVID.PATO_temperature, @"PATO", @"PATO:0000146", @"temperature", @"A physical quality of the thermal energy of a system.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_temperature_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temperature_OBSOLETE, @"PATO", @"PATO:0000147", @"obsolete absolute temperature", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_temperature_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_temperature_OBSOLETE, @"PATO", @"PATO:0000148", @"obsolete body temperature", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temperature_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temperature_OBSOLETE, @"PATO", @"PATO:0000149", @"obsolete relative temperature", @"", true));
            TermData.Add(CVID.PATO_texture, new TermInfo(CVID.PATO_texture, @"PATO", @"PATO:0000150", @"texture", @"A morphologic quality inhering in a bearer by virtue of the bearer's relative size, organization and distribution of its surface elements or the representation or invention of the appearance of its surface; visual and tactile surface characteristics.", false));
            TermData.Add(CVID.PATO_obsolete_relative_texture_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_texture_OBSOLETE, @"PATO", @"PATO:0000151", @"obsolete relative texture", @"", true));
            TermData.Add(CVID.PATO_threshold, new TermInfo(CVID.PATO_threshold, @"PATO", @"PATO:0000152", @"threshold", @"A quality inhering in a bearer by virtue of the bearer's sensitivity towards a fixed location or value where a change is observed; upper limit.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_threshold_OBSOLETE, @"PATO", @"PATO:0000153", @"obsolete absolute threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_pain_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pain_threshold_OBSOLETE, @"PATO", @"PATO:0000154", @"obsolete pain threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_threshold_OBSOLETE, @"PATO", @"PATO:0000155", @"obsolete relative threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_temporal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temporal_OBSOLETE, @"PATO", @"PATO:0000157", @"obsolete absolute temporal", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_incidence_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_incidence_OBSOLETE, @"PATO", @"PATO:0000159", @"obsolete absolute incidence", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_incidence_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_incidence_OBSOLETE, @"PATO", @"PATO:0000160", @"obsolete relative incidence", @"", true));
            TermData.Add(CVID.PATO_rate, new TermInfo(CVID.PATO_rate, @"PATO", @"PATO:0000161", @"rate", @"A quality of a single process inhering in a bearer by virtue of the bearer's occurrence per unit time.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_rate_OBSOLETE, @"PATO", @"PATO:0000162", @"obsolete absolute rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_rate_OBSOLETE, @"PATO", @"PATO:0000163", @"obsolete relative rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temporal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temporal_OBSOLETE, @"PATO", @"PATO:0000164", @"obsolete relative temporal", @"", true));
            TermData.Add(CVID.PATO_time, new TermInfo(CVID.PATO_time, @"PATO", @"PATO:0000165", @"time", @"A quality in which events occur in sequence.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_time_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_time_OBSOLETE, @"PATO", @"PATO:0000166", @"obsolete absolute time", @"", true));
            TermData.Add(CVID.PATO_obsolete_bouts_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bouts_OBSOLETE, @"PATO", @"PATO:0000167", @"obsolete bouts", @"A limited, often assigned period of activity.", true));
            TermData.Add(CVID.PATO_obsolete_relative_time_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_time_OBSOLETE, @"PATO", @"PATO:0000168", @"obsolete relative time", @"", true));
            TermData.Add(CVID.PATO_viability, new TermInfo(CVID.PATO_viability, @"PATO", @"PATO:0000169", @"viability", @"An organismal quality inhering in a bearer or a population by virtue of the bearer's disposition to survive and develop normally or the number of surviving individuals in a given population.", false));
            TermData.Add(CVID.PATO_obsolete_yield_OBSOLETE, new TermInfo(CVID.PATO_obsolete_yield_OBSOLETE, @"PATO", @"PATO:0000170", @"obsolete yield", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_yield_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_yield_OBSOLETE, @"PATO", @"PATO:0000171", @"obsolete absolute yield", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_yield_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_yield_OBSOLETE, @"PATO", @"PATO:0000172", @"obsolete relative yield", @"", true));
            TermData.Add(CVID.PATO_obsolete_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_function_OBSOLETE, @"PATO", @"PATO:0000173", @"obsolete function", @"", true));
            TermData.Add(CVID.PATO_obsolete_autonomic_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_autonomic_function_OBSOLETE, @"PATO", @"PATO:0000174", @"obsolete autonomic function", @"", true));
            TermData.Add(CVID.PATO_obsolete_behavioral_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_behavioral_function_OBSOLETE, @"PATO", @"PATO:0000175", @"obsolete behavioral function", @"", true));
            TermData.Add(CVID.PATO_obsolete_metabolic_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_metabolic_function_OBSOLETE, @"PATO", @"PATO:0000176", @"obsolete metabolic function", @"", true));
            TermData.Add(CVID.PATO_obsolete_physiological_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_physiological_function_OBSOLETE, @"PATO", @"PATO:0000177", @"obsolete physiological function", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_function_OBSOLETE, @"PATO", @"PATO:0000178", @"obsolete relative function", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_position_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_position_OBSOLETE, @"PATO", @"PATO:0000179", @"obsolete body position", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_tone_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_tone_OBSOLETE, @"PATO", @"PATO:0000180", @"obsolete body tone", @"", true));
            TermData.Add(CVID.PATO_obsolete_piloerection_OBSOLETE, new TermInfo(CVID.PATO_obsolete_piloerection_OBSOLETE, @"PATO", @"PATO:0000181", @"obsolete piloerection", @"", true));
            TermData.Add(CVID.PATO_obsolete_abdominal_tone_OBSOLETE, new TermInfo(CVID.PATO_obsolete_abdominal_tone_OBSOLETE, @"PATO", @"PATO:0000182", @"obsolete abdominal tone", @"", true));
            TermData.Add(CVID.PATO_obsolete_limb_tone_OBSOLETE, new TermInfo(CVID.PATO_obsolete_limb_tone_OBSOLETE, @"PATO", @"PATO:0000183", @"obsolete limb tone", @"", true));
            TermData.Add(CVID.PATO_obsolete_arousal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_arousal_OBSOLETE, @"PATO", @"PATO:0000184", @"obsolete arousal", @"", true));
            TermData.Add(CVID.PATO_balance, new TermInfo(CVID.PATO_balance, @"PATO", @"PATO:0000185", @"balance", @"A behavioral quality inhering in a bearer by virtue of having physical steadiness.", false));
            TermData.Add(CVID.PATO_behavioral_quality, new TermInfo(CVID.PATO_behavioral_quality, @"PATO", @"PATO:0000186", @"behavioral quality", @"An organismal quality inhering in a bearer by virtue of the bearer's behavior aggregate of the responses or reactions or movements in a given situation.", false));
            TermData.Add(CVID.PATO_obsolete_consumption_quality_OBSOLETE, new TermInfo(CVID.PATO_obsolete_consumption_quality_OBSOLETE, @"PATO", @"PATO:0000187", @"obsolete consumption quality", @"A relational quality of occurrent inhering in a bearer by virtue of the bearer's ability to consume a resource.", true));
            TermData.Add(CVID.PATO_coordination, new TermInfo(CVID.PATO_coordination, @"PATO", @"PATO:0000188", @"coordination", @"A behavioral quality inhering in a bearer by virtue of the bearer's having or lacking skillful and effective interaction of movement.", false));
            TermData.Add(CVID.PATO_discrimination, new TermInfo(CVID.PATO_discrimination, @"PATO", @"PATO:0000189", @"discrimination", @"A behavioral quality inhering in a bearer by virtue of whether the bearer's disposition to perceive differences between two or more stimuli.", false));
            TermData.Add(CVID.PATO_obsolete_gait_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gait_OBSOLETE, @"PATO", @"PATO:0000190", @"obsolete gait", @"", true));
            TermData.Add(CVID.PATO_obsolete_learning_and_memory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_learning_and_memory_OBSOLETE, @"PATO", @"PATO:0000191", @"obsolete learning_and memory", @"", true));
            TermData.Add(CVID.PATO_obsolete_locomotor_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_locomotor_activity_OBSOLETE, @"PATO", @"PATO:0000192", @"obsolete locomotor_activity", @"", true));
            TermData.Add(CVID.PATO_obsolete_mating_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mating_OBSOLETE, @"PATO", @"PATO:0000193", @"obsolete mating", @"", true));
            TermData.Add(CVID.PATO_obsolete_spontaneous_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_spontaneous_activity_OBSOLETE, @"PATO", @"PATO:0000194", @"obsolete spontaneous_activity", @"", true));
            TermData.Add(CVID.PATO_obsolete_startle_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_startle_response_OBSOLETE, @"PATO", @"PATO:0000195", @"obsolete startle response", @"", true));
            TermData.Add(CVID.PATO_obsolete_vocalization_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vocalization_OBSOLETE, @"PATO", @"PATO:0000196", @"obsolete vocalization", @"", true));
            TermData.Add(CVID.PATO_obsolete_transfer_arousal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_transfer_arousal_OBSOLETE, @"PATO", @"PATO:0000197", @"obsolete transfer_arousal", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_consumption_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_consumption_OBSOLETE, @"PATO", @"PATO:0000198", @"obsolete absolute consumption", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_consumption_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_consumption_OBSOLETE, @"PATO", @"PATO:0000199", @"obsolete relative consumption", @"", true));
            TermData.Add(CVID.PATO_obsolete_learning_OBSOLETE, new TermInfo(CVID.PATO_obsolete_learning_OBSOLETE, @"PATO", @"PATO:0000200", @"obsolete learning", @"", true));
            TermData.Add(CVID.PATO_obsolete_memory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_memory_OBSOLETE, @"PATO", @"PATO:0000201", @"obsolete memory", @"", true));
            TermData.Add(CVID.PATO_obsolete_long_term_memory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_long_term_memory_OBSOLETE, @"PATO", @"PATO:0000202", @"obsolete long term memory", @"", true));
            TermData.Add(CVID.PATO_obsolete_short_term_memory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_short_term_memory_OBSOLETE, @"PATO", @"PATO:0000203", @"obsolete short term memory", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_locomotor_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_locomotor_activity_OBSOLETE, @"PATO", @"PATO:0000204", @"obsolete absolute locomotor_activity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_locomotor_activity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_locomotor_activity_OBSOLETE, @"PATO", @"PATO:0000205", @"obsolete relative locomotor_activity", @"", true));
            TermData.Add(CVID.PATO_obsolete_enzyme_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_enzyme_function_OBSOLETE, @"PATO", @"PATO:0000206", @"obsolete enzyme function", @"", true));
            TermData.Add(CVID.PATO_obsolete_circulatory_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_circulatory_function_OBSOLETE, @"PATO", @"PATO:0000207", @"obsolete circulatory function", @"", true));
            TermData.Add(CVID.PATO_obsolete_defensive_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_defensive_function_OBSOLETE, @"PATO", @"PATO:0000208", @"obsolete defensive function", @"", true));
            TermData.Add(CVID.PATO_obsolete_digestive_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_digestive_function_OBSOLETE, @"PATO", @"PATO:0000209", @"obsolete digestive function", @"", true));
            TermData.Add(CVID.PATO_obsolete_excretory_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_excretory_function_OBSOLETE, @"PATO", @"PATO:0000210", @"obsolete excretory function", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_function_OBSOLETE, @"PATO", @"PATO:0000211", @"obsolete muscle function", @"", true));
            TermData.Add(CVID.PATO_obsolete_neural_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_neural_function_OBSOLETE, @"PATO", @"PATO:0000212", @"obsolete neural function", @"", true));
            TermData.Add(CVID.PATO_obsolete_neurobehavioral_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_neurobehavioral_function_OBSOLETE, @"PATO", @"PATO:0000213", @"obsolete neurobehavioral function", @"", true));
            TermData.Add(CVID.PATO_obsolete_reproductive_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_reproductive_function_OBSOLETE, @"PATO", @"PATO:0000214", @"obsolete reproductive function", @"", true));
            TermData.Add(CVID.PATO_obsolete_respiratory_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_respiratory_function_OBSOLETE, @"PATO", @"PATO:0000215", @"obsolete respiratory function", @"", true));
            TermData.Add(CVID.PATO_obsolete_heart_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_heart_rate_OBSOLETE, @"PATO", @"PATO:0000216", @"obsolete heart rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_immune_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immune_function_OBSOLETE, @"PATO", @"PATO:0000217", @"obsolete immune function", @"", true));
            TermData.Add(CVID.PATO_obsolete_repair_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_repair_function_OBSOLETE, @"PATO", @"PATO:0000218", @"obsolete repair function", @"", true));
            TermData.Add(CVID.PATO_obsolete_healing_OBSOLETE, new TermInfo(CVID.PATO_obsolete_healing_OBSOLETE, @"PATO", @"PATO:0000219", @"obsolete healing", @"", true));
            TermData.Add(CVID.PATO_obsolete_regeneration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_regeneration_OBSOLETE, @"PATO", @"PATO:0000220", @"obsolete regeneration", @"", true));
            TermData.Add(CVID.PATO_obsolete_urination_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urination_OBSOLETE, @"PATO", @"PATO:0000221", @"obsolete urination", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_elevation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_elevation_OBSOLETE, @"PATO", @"PATO:0000222", @"obsolete muscle elevation", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_strength_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_strength_OBSOLETE, @"PATO", @"PATO:0000223", @"obsolete muscle strength", @"", true));
            TermData.Add(CVID.PATO_obsolete_motor_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_motor_function_OBSOLETE, @"PATO", @"PATO:0000224", @"obsolete motor function", @"", true));
            TermData.Add(CVID.PATO_obsolete_sensory_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sensory_function_OBSOLETE, @"PATO", @"PATO:0000225", @"obsolete sensory function", @"", true));
            TermData.Add(CVID.PATO_obsolete_tactile_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_tactile_response_OBSOLETE, @"PATO", @"PATO:0000226", @"obsolete tactile response", @"", true));
            TermData.Add(CVID.PATO_obsolete_motor_performance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_motor_performance_OBSOLETE, @"PATO", @"PATO:0000227", @"obsolete motor performance", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_OBSOLETE, @"PATO", @"PATO:0000228", @"obsolete auditory", @"", true));
            TermData.Add(CVID.PATO_obsolete_olfactory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_olfactory_OBSOLETE, @"PATO", @"PATO:0000229", @"obsolete olfactory", @"", true));
            TermData.Add(CVID.PATO_obsolete_proprioreception_OBSOLETE, new TermInfo(CVID.PATO_obsolete_proprioreception_OBSOLETE, @"PATO", @"PATO:0000230", @"obsolete proprioreception", @"", true));
            TermData.Add(CVID.PATO_obsolete_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_reflex_OBSOLETE, @"PATO", @"PATO:0000231", @"obsolete reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_OBSOLETE, @"PATO", @"PATO:0000232", @"obsolete taste", @"", true));
            TermData.Add(CVID.PATO_obsolete_touch_OBSOLETE, new TermInfo(CVID.PATO_obsolete_touch_OBSOLETE, @"PATO", @"PATO:0000233", @"obsolete touch", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_OBSOLETE, @"PATO", @"PATO:0000234", @"obsolete visual", @"", true));
            TermData.Add(CVID.PATO_obsolete_odor_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_odor_acuity_OBSOLETE, @"PATO", @"PATO:0000235", @"obsolete odor_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_odor_type_OBSOLETE, new TermInfo(CVID.PATO_obsolete_odor_type_OBSOLETE, @"PATO", @"PATO:0000236", @"obsolete odor type", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_odor_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_odor_acuity_OBSOLETE, @"PATO", @"PATO:0000237", @"obsolete absolute odor_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_odor_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_odor_acuity_OBSOLETE, @"PATO", @"PATO:0000238", @"obsolete relative odor_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_blinking_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_blinking_reflex_OBSOLETE, @"PATO", @"PATO:0000239", @"obsolete blinking reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_contact_righting_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_contact_righting_reflex_OBSOLETE, @"PATO", @"PATO:0000240", @"obsolete contact righting reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_corneal_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_corneal_reflex_OBSOLETE, @"PATO", @"PATO:0000241", @"obsolete corneal reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_flinch_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flinch_reflex_OBSOLETE, @"PATO", @"PATO:0000242", @"obsolete flinch reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_lordosis_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_lordosis_reflex_OBSOLETE, @"PATO", @"PATO:0000243", @"obsolete lordosis reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_ocular_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ocular_reflex_OBSOLETE, @"PATO", @"PATO:0000244", @"obsolete ocular reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_pinna_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pinna_reflex_OBSOLETE, @"PATO", @"PATO:0000245", @"obsolete pinna reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_postural_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_postural_reflex_OBSOLETE, @"PATO", @"PATO:0000246", @"obsolete postural reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_proboscis_extension_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_proboscis_extension_reflex_OBSOLETE, @"PATO", @"PATO:0000247", @"obsolete proboscis extension reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_pupillary_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pupillary_reflex_OBSOLETE, @"PATO", @"PATO:0000248", @"obsolete pupillary reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_righting_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_righting_reflex_OBSOLETE, @"PATO", @"PATO:0000249", @"obsolete righting reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_spinal_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_spinal_reflex_OBSOLETE, @"PATO", @"PATO:0000250", @"obsolete spinal reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_startle_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_startle_reflex_OBSOLETE, @"PATO", @"PATO:0000251", @"obsolete startle reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_suckling_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_suckling_reflex_OBSOLETE, @"PATO", @"PATO:0000252", @"obsolete suckling reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_swallowing_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_swallowing_reflex_OBSOLETE, @"PATO", @"PATO:0000253", @"obsolete swallowing reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_vibrissae_reflex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vibrissae_reflex_OBSOLETE, @"PATO", @"PATO:0000254", @"obsolete vibrissae reflex", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_acuity_OBSOLETE, @"PATO", @"PATO:0000255", @"obsolete taste_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_type_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_type_OBSOLETE, @"PATO", @"PATO:0000256", @"obsolete taste type", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_taste_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_taste_acuity_OBSOLETE, @"PATO", @"PATO:0000257", @"obsolete absolute taste_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_taste_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_taste_acuity_OBSOLETE, @"PATO", @"PATO:0000258", @"obsolete relative taste_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_ability_OBSOLETE, @"PATO", @"PATO:0000259", @"obsolete visual_ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_acuity_OBSOLETE, @"PATO", @"PATO:0000260", @"obsolete visual_acuity", @"", true));
            TermData.Add(CVID.PATO_maturity, new TermInfo(CVID.PATO_maturity, @"PATO", @"PATO:0000261", @"maturity", @"A quality of a single physical entity which is held by a bearer when the latter exhibits a state of growth, differentiation, or development.", false));
            TermData.Add(CVID.PATO_obsolete_visual_placing_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_placing_OBSOLETE, @"PATO", @"PATO:0000262", @"obsolete visual placing", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_threshold_OBSOLETE, @"PATO", @"PATO:0000263", @"obsolete visual threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_ability_OBSOLETE, @"PATO", @"PATO:0000264", @"obsolete absolute visual_ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_ability_OBSOLETE, @"PATO", @"PATO:0000265", @"obsolete relative visual_ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_acuity_OBSOLETE, @"PATO", @"PATO:0000266", @"obsolete absolute visual_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_acuity_OBSOLETE, @"PATO", @"PATO:0000267", @"obsolete relative visual_acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_threshold_OBSOLETE, @"PATO", @"PATO:0000268", @"obsolete absolute visual threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_threshold_OBSOLETE, @"PATO", @"PATO:0000269", @"obsolete relative visual threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_defecation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_defecation_OBSOLETE, @"PATO", @"PATO:0000270", @"obsolete defecation", @"", true));
            TermData.Add(CVID.PATO_obsolete_prepulse_inhibition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_prepulse_inhibition_OBSOLETE, @"PATO", @"PATO:0000271", @"obsolete prepulse inhibition", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_neurobehavioral_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_neurobehavioral_function_OBSOLETE, @"PATO", @"PATO:0000272", @"obsolete relative neurobehavioral function", @"", true));
            TermData.Add(CVID.PATO_fecundity, new TermInfo(CVID.PATO_fecundity, @"PATO", @"PATO:0000273", @"fecundity", @"A reproductive quality inhering in an organism or population by virtue of the bearer's potential reproductive capacity ad measured by the number of gametes.", false));
            TermData.Add(CVID.PATO_fertility, new TermInfo(CVID.PATO_fertility, @"PATO", @"PATO:0000274", @"fertility", @"A reproductive quality inhering in a bearer by virtue of the bearer's initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_obsolete_gestational_period_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gestational_period_OBSOLETE, @"PATO", @"PATO:0000275", @"obsolete gestational period", @"", true));
            TermData.Add(CVID.PATO_brood_size, new TermInfo(CVID.PATO_brood_size, @"PATO", @"PATO:0000276", @"brood size", @"A reproductive quality inhering in the young of an animal by virtue of their number.", false));
            TermData.Add(CVID.PATO_female_fertility, new TermInfo(CVID.PATO_female_fertility, @"PATO", @"PATO:0000277", @"female fertility", @"A fertility quality inhering in a female by virtue of the bearer's disposition to initiate, sustain, or support reproduction.", false));
            TermData.Add(CVID.PATO_obsolete_hybrid_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_hybrid_fertility_OBSOLETE, @"PATO", @"PATO:0000278", @"obsolete hybrid fertility", @"", true));
            TermData.Add(CVID.PATO_male_fertility, new TermInfo(CVID.PATO_male_fertility, @"PATO", @"PATO:0000279", @"male fertility", @"A fertility quality of inhering in a male by virtue of the bearer's disposition to initiate, sustain, or support reproduction.", false));
            TermData.Add(CVID.PATO_obsolete_backcross_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_backcross_fertility_OBSOLETE, @"PATO", @"PATO:0000280", @"obsolete backcross fertility", @"", true));
            TermData.Add(CVID.PATO_obsolete_cytoplasmic_sterility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cytoplasmic_sterility_OBSOLETE, @"PATO", @"PATO:0000281", @"obsolete cytoplasmic sterility", @"", true));
            TermData.Add(CVID.PATO_obsolete_f1_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f1_fertility_OBSOLETE, @"PATO", @"PATO:0000282", @"obsolete f1 fertility", @"", true));
            TermData.Add(CVID.PATO_obsolete_f2_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f2_fertility_OBSOLETE, @"PATO", @"PATO:0000283", @"obsolete f2 fertility", @"", true));
            TermData.Add(CVID.PATO_obsolete_germ_line_dependent_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_germ_line_dependent_fertility_OBSOLETE, @"PATO", @"PATO:0000284", @"obsolete germ line dependent fertility", @"", true));
            TermData.Add(CVID.PATO_obsolete_soma_dependent_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soma_dependent_fertility_OBSOLETE, @"PATO", @"PATO:0000285", @"obsolete soma dependent fertility", @"", true));
            TermData.Add(CVID.PATO_obsolete_cytoplasmic_male_sterility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cytoplasmic_male_sterility_OBSOLETE, @"PATO", @"PATO:0000286", @"obsolete cytoplasmic male sterility", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_litter_size_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_litter_size_OBSOLETE, @"PATO", @"PATO:0000287", @"obsolete absolute litter size", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_litter_size_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_litter_size_OBSOLETE, @"PATO", @"PATO:0000288", @"obsolete relative litter size", @"", true));
            TermData.Add(CVID.PATO_obsolete_respiratory_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_respiratory_rate_OBSOLETE, @"PATO", @"PATO:0000289", @"obsolete respiratory rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_respiratory_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_respiratory_rate_OBSOLETE, @"PATO", @"PATO:0000290", @"obsolete absolute respiratory rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_respiratory_rate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_respiratory_rate_OBSOLETE, @"PATO", @"PATO:0000291", @"obsolete relative respiratory rate", @"", true));
            TermData.Add(CVID.PATO_obsolete_mobility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mobility_value_OBSOLETE, @"PATO", @"PATO:0000292", @"obsolete mobility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_activity_value_OBSOLETE, @"PATO", @"PATO:0000293", @"obsolete absolute activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_process_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_process_value_OBSOLETE, @"PATO", @"PATO:0000294", @"obsolete process value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_activity_value_OBSOLETE, @"PATO", @"PATO:0000295", @"obsolete relative activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_speed_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_speed_value_OBSOLETE, @"PATO", @"PATO:0000296", @"obsolete speed value", @"", true));
            TermData.Add(CVID.PATO_arrested, new TermInfo(CVID.PATO_arrested, @"PATO", @"PATO:0000297", @"arrested", @"A quality of a process which ends earlier than the natural end time or reference process.", false));
            TermData.Add(CVID.PATO_obsolete_not_arrested_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_not_arrested_value_OBSOLETE, @"PATO", @"PATO:0000298", @"obsolete not arrested value", @"", true));
            TermData.Add(CVID.PATO_mobile, new TermInfo(CVID.PATO_mobile, @"PATO", @"PATO:0000299", @"mobile", @"A mobility quality of inhering in a bearer by virtue of the bearer's disposition to move freely.", false));
            TermData.Add(CVID.PATO_immobile, new TermInfo(CVID.PATO_immobile, @"PATO", @"PATO:0000300", @"immobile", @"A mobility quality inhering in a bearer by virtue of the bearer's being incapable to move freely.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_speed_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_speed_value_OBSOLETE, @"PATO", @"PATO:0000301", @"obsolete absolute speed value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_speed_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_speed_value_OBSOLETE, @"PATO", @"PATO:0000302", @"obsolete relative speed value", @"", true));
            TermData.Add(CVID.PATO_increased_speed, new TermInfo(CVID.PATO_increased_speed, @"PATO", @"PATO:0000303", @"increased speed", @"A speed which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_speed, new TermInfo(CVID.PATO_decreased_speed, @"PATO", @"PATO:0000304", @"decreased speed", @"A speed which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_age_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_age_value_OBSOLETE, @"PATO", @"PATO:0000305", @"obsolete age value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_age_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_age_value_OBSOLETE, @"PATO", @"PATO:0000306", @"obsolete absolute age value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_age_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_age_value_OBSOLETE, @"PATO", @"PATO:0000307", @"obsolete relative age value", @"", true));
            TermData.Add(CVID.PATO_old, new TermInfo(CVID.PATO_old, @"PATO", @"PATO:0000308", @"old", @"An age which is relatively high.", false));
            TermData.Add(CVID.PATO_young, new TermInfo(CVID.PATO_young, @"PATO", @"PATO:0000309", @"young", @"An age which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_color_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_color_value_OBSOLETE, @"PATO", @"PATO:0000310", @"obsolete color value", @"", true));
            TermData.Add(CVID.PATO_obsolete_color_hue_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_color_hue_value_OBSOLETE, @"PATO", @"PATO:0000311", @"obsolete color hue value", @"", true));
            TermData.Add(CVID.PATO_obsolete_color_intensity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_color_intensity_value_OBSOLETE, @"PATO", @"PATO:0000312", @"obsolete color intensity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_color_saturation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_color_saturation_value_OBSOLETE, @"PATO", @"PATO:0000313", @"obsolete color saturation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_flourescence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flourescence_value_OBSOLETE, @"PATO", @"PATO:0000314", @"obsolete flourescence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_color_pattern_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_color_pattern_value_OBSOLETE, @"PATO", @"PATO:0000315", @"obsolete color pattern value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_color_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_color_value_OBSOLETE, @"PATO", @"PATO:0000316", @"obsolete relative color value", @"", true));
            TermData.Add(CVID.PATO_black, new TermInfo(CVID.PATO_black, @"PATO", @"PATO:0000317", @"black", @"A color that lacks any hues as parts.", false));
            TermData.Add(CVID.PATO_blue, new TermInfo(CVID.PATO_blue, @"PATO", @"PATO:0000318", @"blue", @"A color hue with low wavelength of that portion of the visible spectrum lying between green and indigo, evoked in the human observer by radiant energy with wavelengths of approximately 420 to 490 nanometers.", false));
            TermData.Add(CVID.PATO_cyan, new TermInfo(CVID.PATO_cyan, @"PATO", @"PATO:0000319", @"cyan", @"A color consisting of green and blue hue.", false));
            TermData.Add(CVID.PATO_green, new TermInfo(CVID.PATO_green, @"PATO", @"PATO:0000320", @"green", @"A color hue with medium-low wavelength of that portion of the visible spectrum lying between yellow and blue, evoked in the human observer by radiant energy with wavelengths of approximately 490 to 570 nanometers.", false));
            TermData.Add(CVID.PATO_magenta, new TermInfo(CVID.PATO_magenta, @"PATO", @"PATO:0000321", @"magenta", @"A color consisting of red and blue hues.", false));
            TermData.Add(CVID.PATO_red, new TermInfo(CVID.PATO_red, @"PATO", @"PATO:0000322", @"red", @"A color hue with high wavelength of the long-wave end of the visible spectrum, evoked in the human observer by radiant energy with wavelengths of approximately 630 to 750 nanometers.", false));
            TermData.Add(CVID.PATO_white, new TermInfo(CVID.PATO_white, @"PATO", @"PATO:0000323", @"white", @"An achromatic color of maximum brightness; the color of objects that reflect nearly all light of all visible wavelengths.", false));
            TermData.Add(CVID.PATO_yellow, new TermInfo(CVID.PATO_yellow, @"PATO", @"PATO:0000324", @"yellow", @"A color hue with medium wavelength of that portion of the visible spectrum lying between orange and green, evoked in the human observer by radiant energy with wavelengths of approximately 570 to 590 nanometers.", false));
            TermData.Add(CVID.PATO_obsolete_bright_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bright_OBSOLETE, @"PATO", @"PATO:0000325", @"obsolete bright", @"", true));
            TermData.Add(CVID.PATO_obsolete_dim_OBSOLETE, new TermInfo(CVID.PATO_obsolete_dim_OBSOLETE, @"PATO", @"PATO:0000326", @"obsolete dim", @"", true));
            TermData.Add(CVID.PATO_low_brightness, new TermInfo(CVID.PATO_low_brightness, @"PATO", @"PATO:0000327", @"low brightness", @"A color brightness which is relatively low.", false));
            TermData.Add(CVID.PATO_low_saturation, new TermInfo(CVID.PATO_low_saturation, @"PATO", @"PATO:0000328", @"low saturation", @"A color saturation which is of low purity.", false));
            TermData.Add(CVID.PATO_blotchy, new TermInfo(CVID.PATO_blotchy, @"PATO", @"PATO:0000329", @"blotchy", @"A color pattern inhering in a bearer by virtue of bearer's being marked with irregularly shaped spots or blots of a different hue or degree of saturation.", false));
            TermData.Add(CVID.PATO_irregular_spatial_pattern, new TermInfo(CVID.PATO_irregular_spatial_pattern, @"PATO", @"PATO:0000330", @"irregular spatial pattern", @"A spatial pattern inhering in a bearer by virtue of the bearer's magnitude of or the relationships between its repeated parts lack consistency.", false));
            TermData.Add(CVID.PATO_discolored, new TermInfo(CVID.PATO_discolored, @"PATO", @"PATO:0000331", @"discolored", @"A color quality inhering in a bearer by virtue of the bearer's being altered or spoiled in color.", false));
            TermData.Add(CVID.PATO_spotted, new TermInfo(CVID.PATO_spotted, @"PATO", @"PATO:0000333", @"spotted", @"A color pattern inhering in a bearer by virtue of bearer's being marked with a round area of different hue or degree of saturation.", false));
            TermData.Add(CVID.PATO_obsolete_variegated_OBSOLETE, new TermInfo(CVID.PATO_obsolete_variegated_OBSOLETE, @"PATO", @"PATO:0000335", @"obsolete variegated", @"", true));
            TermData.Add(CVID.PATO_colored, new TermInfo(CVID.PATO_colored, @"PATO", @"PATO:0000336", @"colored", @"A color quality inhering in a bearer by virtue of the bearer's having color.", false));
            TermData.Add(CVID.PATO_colorless, new TermInfo(CVID.PATO_colorless, @"PATO", @"PATO:0000337", @"colorless", @"A color quality inhering in a bearer by virtue of the bearer's lacking color.", false));
            TermData.Add(CVID.PATO_obsolete_compatability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_compatability_value_OBSOLETE, @"PATO", @"PATO:0000338", @"obsolete compatability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gametophytic_compatability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gametophytic_compatability_value_OBSOLETE, @"PATO", @"PATO:0000339", @"obsolete gametophytic compatability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_compatability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_compatability_value_OBSOLETE, @"PATO", @"PATO:0000340", @"obsolete relative compatability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_sporophytic_compatability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sporophytic_compatability_value_OBSOLETE, @"PATO", @"PATO:0000341", @"obsolete sporophytic compatability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gametophyte_compatible_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gametophyte_compatible_value_OBSOLETE, @"PATO", @"PATO:0000342", @"obsolete gametophyte compatible value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gametophyte_incompatible_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gametophyte_incompatible_value_OBSOLETE, @"PATO", @"PATO:0000343", @"obsolete gametophyte incompatible value", @"", true));
            TermData.Add(CVID.PATO_compatible, new TermInfo(CVID.PATO_compatible, @"PATO", @"PATO:0000344", @"compatible", @"A compatibility quality inhering in a bearer by virtue of the bearer's being capable of harmonious coexistence.", false));
            TermData.Add(CVID.PATO_incompatible, new TermInfo(CVID.PATO_incompatible, @"PATO", @"PATO:0000345", @"incompatible", @"A compatibility quality inhering in a bearer by virtue of the bearer's being incapable of harmonious coexistence.", false));
            TermData.Add(CVID.PATO_obsolete_sporophyte_compatible_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sporophyte_compatible_value_OBSOLETE, @"PATO", @"PATO:0000346", @"obsolete sporophyte compatible value", @"", true));
            TermData.Add(CVID.PATO_obsolete_sporophyte_incompatible_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sporophyte_incompatible_value_OBSOLETE, @"PATO", @"PATO:0000347", @"obsolete sporophyte incompatible value", @"", true));
            TermData.Add(CVID.PATO_obsolete_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_composition_value_OBSOLETE, @"PATO", @"PATO:0000348", @"obsolete composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_carbohydrate_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_carbohydrate_composition_value_OBSOLETE, @"PATO", @"PATO:0000349", @"obsolete carbohydrate composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_electrolyte_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_electrolyte_composition_value_OBSOLETE, @"PATO", @"PATO:0000350", @"obsolete electrolyte composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_macromolecular_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_macromolecular_composition_value_OBSOLETE, @"PATO", @"PATO:0000351", @"obsolete macromolecular composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_metabolite_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_metabolite_composition_value_OBSOLETE, @"PATO", @"PATO:0000352", @"obsolete metabolite composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_secondary_product_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_secondary_product_composition_value_OBSOLETE, @"PATO", @"PATO:0000353", @"obsolete secondary product composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_protein_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_protein_composition_value_OBSOLETE, @"PATO", @"PATO:0000354", @"obsolete protein composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_enzyme_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_enzyme_composition_value_OBSOLETE, @"PATO", @"PATO:0000355", @"obsolete enzyme composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_concentration_value_OBSOLETE, @"PATO", @"PATO:0000356", @"obsolete concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_protein_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_protein_concentration_value_OBSOLETE, @"PATO", @"PATO:0000357", @"obsolete protein concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_sugar_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sugar_concentration_value_OBSOLETE, @"PATO", @"PATO:0000358", @"obsolete sugar concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_content_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_content_value_OBSOLETE, @"PATO", @"PATO:0000359", @"obsolete water content value", @"", true));
            TermData.Add(CVID.PATO_obsolete_consistency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_consistency_value_OBSOLETE, @"PATO", @"PATO:0000360", @"obsolete consistency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gel_consistency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gel_consistency_value_OBSOLETE, @"PATO", @"PATO:0000361", @"obsolete gel consistency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_direction_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_direction_value_OBSOLETE, @"PATO", @"PATO:0000362", @"obsolete direction value", @"", true));
            TermData.Add(CVID.PATO_obsolete_away_OBSOLETE, new TermInfo(CVID.PATO_obsolete_away_OBSOLETE, @"PATO", @"PATO:0000363", @"obsolete away", @"", true));
            TermData.Add(CVID.PATO_obsolete_bi_directional_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bi_directional_OBSOLETE, @"PATO", @"PATO:0000364", @"obsolete bi-directional", @"", true));
            TermData.Add(CVID.PATO_down, new TermInfo(CVID.PATO_down, @"PATO", @"PATO:0000365", @"down", @"A directional quality inhering in a bearer by virtue of the bearer's direction from a higher to a lower point.", false));
            TermData.Add(CVID.PATO_left, new TermInfo(CVID.PATO_left, @"PATO", @"PATO:0000366", @"left", @"A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces east.", false));
            TermData.Add(CVID.PATO_right, new TermInfo(CVID.PATO_right, @"PATO", @"PATO:0000367", @"right", @"A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces west.", false));
            TermData.Add(CVID.PATO_obsolete_towards1_OBSOLETE, new TermInfo(CVID.PATO_obsolete_towards1_OBSOLETE, @"PATO", @"PATO:0000368", @"obsolete towards1", @"", true));
            TermData.Add(CVID.PATO_obsolete_unidirectional_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unidirectional_OBSOLETE, @"PATO", @"PATO:0000369", @"obsolete unidirectional", @"", true));
            TermData.Add(CVID.PATO_up, new TermInfo(CVID.PATO_up, @"PATO", @"PATO:0000370", @"up", @"A directional quality inhering in a bearer by virtue of the bearer's direction from a lower to a higher point.", false));
            TermData.Add(CVID.PATO_obsolete_distance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_distance_value_OBSOLETE, @"PATO", @"PATO:0000371", @"obsolete distance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_distance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_distance_value_OBSOLETE, @"PATO", @"PATO:0000372", @"obsolete absolute distance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_distance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_distance_value_OBSOLETE, @"PATO", @"PATO:0000373", @"obsolete relative distance value", @"", true));
            TermData.Add(CVID.PATO_increased_distance, new TermInfo(CVID.PATO_increased_distance, @"PATO", @"PATO:0000374", @"increased distance", @"A distance which is greater relative to the normal or average.", false));
            TermData.Add(CVID.PATO_decreased_distance, new TermInfo(CVID.PATO_decreased_distance, @"PATO", @"PATO:0000375", @"decreased distance", @"A distance which is lesser relative to the normal or average.", false));
            TermData.Add(CVID.PATO_obsolete_flavor_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flavor_value_OBSOLETE, @"PATO", @"PATO:0000376", @"obsolete flavor value", @"", true));
            TermData.Add(CVID.PATO_obsolete_frequency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_frequency_value_OBSOLETE, @"PATO", @"PATO:0000377", @"obsolete frequency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_frequency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_frequency_value_OBSOLETE, @"PATO", @"PATO:0000378", @"obsolete absolute frequency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_frequency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_frequency_value_OBSOLETE, @"PATO", @"PATO:0000379", @"obsolete relative frequency value", @"", true));
            TermData.Add(CVID.PATO_increased_frequency, new TermInfo(CVID.PATO_increased_frequency, @"PATO", @"PATO:0000380", @"increased frequency", @"A frequency which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_frequency, new TermInfo(CVID.PATO_decreased_frequency, @"PATO", @"PATO:0000381", @"decreased frequency", @"A frequency which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_gender_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gender_value_OBSOLETE, @"PATO", @"PATO:0000382", @"obsolete gender value", @"", true));
            TermData.Add(CVID.PATO_female, new TermInfo(CVID.PATO_female, @"PATO", @"PATO:0000383", @"female", @"A biological sex quality inhering in an individual or a population that only produces gametes that can be fertilised by male gametes.", false));
            TermData.Add(CVID.PATO_male, new TermInfo(CVID.PATO_male, @"PATO", @"PATO:0000384", @"male", @"A biological sex quality inhering in an individual or a population whose sex organs contain only male gametes.", false));
            TermData.Add(CVID.PATO_obsolete_hardness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_hardness_value_OBSOLETE, @"PATO", @"PATO:0000385", @"obsolete hardness value", @"", true));
            TermData.Add(CVID.PATO_hard, new TermInfo(CVID.PATO_hard, @"PATO", @"PATO:0000386", @"hard", @"A hardness quality of being rigid and resistant to pressure.", false));
            TermData.Add(CVID.PATO_soft, new TermInfo(CVID.PATO_soft, @"PATO", @"PATO:0000387", @"soft", @"A hardness quality of giving little resistance to pressure.", false));
            TermData.Add(CVID.PATO_obsolete_intensity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intensity_value_OBSOLETE, @"PATO", @"PATO:0000388", @"obsolete intensity value", @"", true));
            TermData.Add(CVID.PATO_acute, new TermInfo(CVID.PATO_acute, @"PATO", @"PATO:0000389", @"acute", @"A quality of a process inhering in a bearer by virtue of the bearer's having a sudden onset, sharp rise, and short course.", false));
            TermData.Add(CVID.PATO_obsolete_extreme_OBSOLETE, new TermInfo(CVID.PATO_obsolete_extreme_OBSOLETE, @"PATO", @"PATO:0000390", @"obsolete extreme", @"", true));
            TermData.Add(CVID.PATO_obsolete_intense_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intense_OBSOLETE, @"PATO", @"PATO:0000391", @"obsolete intense", @"", true));
            TermData.Add(CVID.PATO_obsolete_limited_OBSOLETE, new TermInfo(CVID.PATO_obsolete_limited_OBSOLETE, @"PATO", @"PATO:0000392", @"obsolete limited", @"", true));
            TermData.Add(CVID.PATO_obsolete_maximal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_maximal_OBSOLETE, @"PATO", @"PATO:0000393", @"obsolete maximal", @"", true));
            TermData.Add(CVID.PATO_mild_intensity, new TermInfo(CVID.PATO_mild_intensity, @"PATO", @"PATO:0000394", @"mild intensity", @"An intensity which is less than moderate in type or degree or effect or force.", false));
            TermData.Add(CVID.PATO_moderate_intensity, new TermInfo(CVID.PATO_moderate_intensity, @"PATO", @"PATO:0000395", @"moderate intensity", @"An intensity which is less than extreme in type or degree or effect or force.", false));
            TermData.Add(CVID.PATO_severe_intensity, new TermInfo(CVID.PATO_severe_intensity, @"PATO", @"PATO:0000396", @"severe intensity", @"An intensity which is extremely bad or unpleasant in type or degree or effect or force.", false));
            TermData.Add(CVID.PATO_obsolete_slight_OBSOLETE, new TermInfo(CVID.PATO_obsolete_slight_OBSOLETE, @"PATO", @"PATO:0000397", @"obsolete slight", @"", true));
            TermData.Add(CVID.PATO_obsolete_vigorous_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vigorous_OBSOLETE, @"PATO", @"PATO:0000398", @"obsolete vigorous", @"", true));
            TermData.Add(CVID.PATO_obsolete_life_span_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_life_span_value_OBSOLETE, @"PATO", @"PATO:0000399", @"obsolete life span value", @"", true));
            TermData.Add(CVID.PATO_obsolete_morphology_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_morphology_value_OBSOLETE, @"PATO", @"PATO:0000400", @"obsolete morphology value", @"", true));
            TermData.Add(CVID.PATO_obsolete_shape_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_shape_value_OBSOLETE, @"PATO", @"PATO:0000401", @"obsolete shape value", @"", true));
            TermData.Add(CVID.PATO_branched, new TermInfo(CVID.PATO_branched, @"PATO", @"PATO:0000402", @"branched", @"A branchiness quality inhering in a bearer by virtue of the bearer's having branches.", false));
            TermData.Add(CVID.PATO_cleft, new TermInfo(CVID.PATO_cleft, @"PATO", @"PATO:0000403", @"cleft", @"A concave quality inhering in a bearer by virtue of the bearer's resembling a groove or fissure.", false));
            TermData.Add(CVID.PATO_coiled, new TermInfo(CVID.PATO_coiled, @"PATO", @"PATO:0000404", @"coiled", @"A shape quality inhering in a bearer by virtue of the bearer's being curled or wound (especially in concentric rings or spirals).", false));
            TermData.Add(CVID.PATO_curled, new TermInfo(CVID.PATO_curled, @"PATO", @"PATO:0000405", @"curled", @"A shape quality inhering in a bearer by virtue of the bearer's having parallel chains in undulate fashion on the border.", false));
            TermData.Add(CVID.PATO_curved, new TermInfo(CVID.PATO_curved, @"PATO", @"PATO:0000406", @"curved", @"A curvature quality inhering in a bearer by virtue of the bearer's having or being marked by a curve or smoothly rounded bend.", false));
            TermData.Add(CVID.PATO_flat, new TermInfo(CVID.PATO_flat, @"PATO", @"PATO:0000407", @"flat", @"A quality inhering in a bearer by virtue of the bearer's having a horizontal surface without a slope, tilt, or curvature.", false));
            TermData.Add(CVID.PATO_oblate, new TermInfo(CVID.PATO_oblate, @"PATO", @"PATO:0000409", @"oblate", @"A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting an equatorial diameter greater than its polar diameter.", false));
            TermData.Add(CVID.PATO_pinnate, new TermInfo(CVID.PATO_pinnate, @"PATO", @"PATO:0000410", @"pinnate", @"A shape quality inhering in a bearer by virtue of the bearer's having leaflets or leaflets-like structures on each side of a common axis.", false));
            TermData.Add(CVID.PATO_circular, new TermInfo(CVID.PATO_circular, @"PATO", @"PATO:0000411", @"circular", @"A shape quality inhering in a bearer by virtue of the bearer's being such that every part of the surface or the circumference is equidistant from the center.", false));
            TermData.Add(CVID.PATO_square, new TermInfo(CVID.PATO_square, @"PATO", @"PATO:0000413", @"square", @"A shape quality inhering in a bearer by virtue of the bearer's having an equal-sided rectangular form.", false));
            TermData.Add(CVID.PATO_unbranched, new TermInfo(CVID.PATO_unbranched, @"PATO", @"PATO:0000414", @"unbranched", @"A branchiness quality inhering in a bearer by virtue of the bearer's lacking branches.", false));
            TermData.Add(CVID.PATO_uncoiled, new TermInfo(CVID.PATO_uncoiled, @"PATO", @"PATO:0000415", @"uncoiled", @"A shape quality inhering in a bearer by virtue of the bearer's being not curled or wound (especially in concentric rings or spirals).", false));
            TermData.Add(CVID.PATO_obsolete_count_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_count_value_OBSOLETE, @"PATO", @"PATO:0000416", @"obsolete count value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_number_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_number_value_OBSOLETE, @"PATO", @"PATO:0000417", @"obsolete absolute number value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_number_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_number_value_OBSOLETE, @"PATO", @"PATO:0000418", @"obsolete relative number value", @"", true));
            TermData.Add(CVID.PATO_obsolete_nutritional_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_nutritional_value_OBSOLETE, @"PATO", @"PATO:0000421", @"obsolete nutritional value", @"", true));
            TermData.Add(CVID.PATO_auxotrophic, new TermInfo(CVID.PATO_auxotrophic, @"PATO", @"PATO:0000422", @"auxotrophic", @"A nutritional quality inhering in a bearer by virtue of the bearer's inability to synthesize a particular organic compound required for its growth.", false));
            TermData.Add(CVID.PATO_prototrophic, new TermInfo(CVID.PATO_prototrophic, @"PATO", @"PATO:0000423", @"prototrophic", @"A nutritional quality inhering in a bearer by virtue of the bearer's ability to synthesize a particular organic compound required for its growth.", false));
            TermData.Add(CVID.PATO_obsolete_occurence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_occurence_value_OBSOLETE, @"PATO", @"PATO:0000424", @"obsolete occurence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_continual_OBSOLETE, new TermInfo(CVID.PATO_obsolete_continual_OBSOLETE, @"PATO", @"PATO:0000425", @"obsolete continual", @"", true));
            TermData.Add(CVID.PATO_recurrent, new TermInfo(CVID.PATO_recurrent, @"PATO", @"PATO:0000427", @"recurrent", @"A quality of a single process inhering in a bearer by virtue of the bearer's occurring or appearing again or repeatedly.", false));
            TermData.Add(CVID.PATO_sporadic, new TermInfo(CVID.PATO_sporadic, @"PATO", @"PATO:0000428", @"sporadic", @"A quality of a single process inhering in a bearer by virtue of the bearer's once or in or a few unpredictable instances.", false));
            TermData.Add(CVID.PATO_obsolete_unique_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unique_OBSOLETE, @"PATO", @"PATO:0000430", @"obsolete unique", @"", true));
            TermData.Add(CVID.PATO_obsolete_odor_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_odor_value_OBSOLETE, @"PATO", @"PATO:0000431", @"obsolete odor value", @"", true));
            TermData.Add(CVID.PATO_obsolete_parental_type_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_parental_type_value_OBSOLETE, @"PATO", @"PATO:0000432", @"obsolete parental type value", @"", true));
            TermData.Add(CVID.PATO_obsolete_paternal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_paternal_OBSOLETE, @"PATO", @"PATO:0000433", @"obsolete paternal", @"A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a father.", true));
            TermData.Add(CVID.PATO_obsolete_maternal_OBSOLETE, new TermInfo(CVID.PATO_obsolete_maternal_OBSOLETE, @"PATO", @"PATO:0000434", @"obsolete maternal", @"A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a mother.", true));
            TermData.Add(CVID.PATO_obsolete_pattern_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pattern_value_OBSOLETE, @"PATO", @"PATO:0000435", @"obsolete pattern value", @"", true));
            TermData.Add(CVID.PATO_obsolete_concrete_OBSOLETE, new TermInfo(CVID.PATO_obsolete_concrete_OBSOLETE, @"PATO", @"PATO:0000436", @"obsolete concrete", @"", true));
            TermData.Add(CVID.PATO_obsolete_sleep_pattern_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sleep_pattern_value_OBSOLETE, @"PATO", @"PATO:0000437", @"obsolete sleep pattern value", @"", true));
            TermData.Add(CVID.PATO_invariant, new TermInfo(CVID.PATO_invariant, @"PATO", @"PATO:0000438", @"invariant", @"A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation.", false));
            TermData.Add(CVID.PATO_obsolete_perseverative_OBSOLETE, new TermInfo(CVID.PATO_obsolete_perseverative_OBSOLETE, @"PATO", @"PATO:0000439", @"obsolete perseverative", @"", true));
            TermData.Add(CVID.PATO_regular_spatial_pattern, new TermInfo(CVID.PATO_regular_spatial_pattern, @"PATO", @"PATO:0000440", @"regular spatial pattern", @"A pattern quality inhering in a bearer by virtue of the bearer's having a repeatable or predictable placement.", false));
            TermData.Add(CVID.PATO_repetitive, new TermInfo(CVID.PATO_repetitive, @"PATO", @"PATO:0000441", @"repetitive", @"A quality of a single process inhering in a bearer by virtue of the bearer's marked by tedious repetition.", false));
            TermData.Add(CVID.PATO_obsolete_insomnia_OBSOLETE, new TermInfo(CVID.PATO_obsolete_insomnia_OBSOLETE, @"PATO", @"PATO:0000442", @"obsolete insomnia", @"A sleep pattern quality inhering in a bearer by virtue of the bearer's inability to sleep.", true));
            TermData.Add(CVID.PATO_obsolete_narcolepsy_OBSOLETE, new TermInfo(CVID.PATO_obsolete_narcolepsy_OBSOLETE, @"PATO", @"PATO:0000443", @"obsolete narcolepsy", @"A sleep pattern quality inhering in a bearer by virtue of the bearer's disrupted sleep during normal sleeping period; often accompanied by cataplexy, sleep paralysis.", true));
            TermData.Add(CVID.PATO_obsolete_percentage_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_percentage_value_OBSOLETE, @"PATO", @"PATO:0000444", @"obsolete percentage value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_percentage_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_percentage_value_OBSOLETE, @"PATO", @"PATO:0000445", @"obsolete relative percentage value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_percentage_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_percentage_value_OBSOLETE, @"PATO", @"PATO:0000446", @"obsolete absolute percentage value", @"", true));
            TermData.Add(CVID.PATO_obsolete_decreased_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_decreased_percentage_OBSOLETE, @"PATO", @"PATO:0000447", @"obsolete decreased percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_high_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_high_percentage_OBSOLETE, @"PATO", @"PATO:0000448", @"obsolete high percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_increased_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_increased_percentage_OBSOLETE, @"PATO", @"PATO:0000449", @"obsolete increased percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_low_percentage_OBSOLETE, new TermInfo(CVID.PATO_obsolete_low_percentage_OBSOLETE, @"PATO", @"PATO:0000450", @"obsolete low percentage", @"", true));
            TermData.Add(CVID.PATO_obsolete_pilosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pilosity_value_OBSOLETE, @"PATO", @"PATO:0000451", @"obsolete pilosity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_pilosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_pilosity_value_OBSOLETE, @"PATO", @"PATO:0000452", @"obsolete relative pilosity value", @"", true));
            TermData.Add(CVID.PATO_glabrous, new TermInfo(CVID.PATO_glabrous, @"PATO", @"PATO:0000453", @"glabrous", @"A pilosity quality inhering in a bearer by virtue of the bearer's lack of hairs or bristles.", false));
            TermData.Add(CVID.PATO_hairy, new TermInfo(CVID.PATO_hairy, @"PATO", @"PATO:0000454", @"hairy", @"A pilosity quality inhering in a bearer by virtue of the bearer's being covered with hair or hairlike projections.", false));
            TermData.Add(CVID.PATO_pubescent, new TermInfo(CVID.PATO_pubescent, @"PATO", @"PATO:0000455", @"pubescent", @"A maturity quality inhering in a bearer by virtue of the bearer's having arrived at the onset of puberty (the age at which sex glands become functional) but not yet fully mature.", false));
            TermData.Add(CVID.PATO_obsolete_abstract_OBSOLETE, new TermInfo(CVID.PATO_obsolete_abstract_OBSOLETE, @"PATO", @"PATO:0000456", @"obsolete abstract", @"", true));
            TermData.Add(CVID.PATO_obsolete_deviation_from_normal__value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_deviation_from_normal__value_OBSOLETE, @"PATO", @"PATO:0000457", @"obsolete deviation(from_normal) value", @"", true));
            TermData.Add(CVID.PATO_obsolete_presence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_presence_value_OBSOLETE, @"PATO", @"PATO:0000458", @"obsolete presence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_quantity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_quantity_value_OBSOLETE, @"PATO", @"PATO:0000459", @"obsolete relative quantity value", @"", true));
            TermData.Add(CVID.PATO_abnormal, new TermInfo(CVID.PATO_abnormal, @"PATO", @"PATO:0000460", @"abnormal", @"A quality inhering in a bearer by virtue of the bearer's deviation from normal or average.", false));
            TermData.Add(CVID.PATO_normal, new TermInfo(CVID.PATO_normal, @"PATO", @"PATO:0000461", @"normal", @"A quality inhering in a bearer by virtue of the bearer's exhibiting no deviation from normal or average.", false));
            TermData.Add(CVID.PATO_absent, new TermInfo(CVID.PATO_absent, @"PATO", @"PATO:0000462", @"absent", @"A quality denoting the lack of an entity.", false));
            TermData.Add(CVID.PATO_conspicuous, new TermInfo(CVID.PATO_conspicuous, @"PATO", @"PATO:0000463", @"conspicuous", @"A quality inhering in a bearer by virtue of being clearly visible.", false));
            TermData.Add(CVID.PATO_inconspicuous, new TermInfo(CVID.PATO_inconspicuous, @"PATO", @"PATO:0000464", @"inconspicuous", @"A quality inhering in a bearer by virtue of not being clearly visible.", false));
            TermData.Add(CVID.PATO_obsolete_marked_OBSOLETE, new TermInfo(CVID.PATO_obsolete_marked_OBSOLETE, @"PATO", @"PATO:0000465", @"obsolete marked", @"", true));
            TermData.Add(CVID.PATO_obsolete_none_OBSOLETE, new TermInfo(CVID.PATO_obsolete_none_OBSOLETE, @"PATO", @"PATO:0000466", @"obsolete none", @"", true));
            TermData.Add(CVID.PATO_present, new TermInfo(CVID.PATO_present, @"PATO", @"PATO:0000467", @"present", @"A quality inhering in a bearer by virtue of the bearer's existence.", false));
            TermData.Add(CVID.PATO_obsolete_high_OBSOLETE, new TermInfo(CVID.PATO_obsolete_high_OBSOLETE, @"PATO", @"PATO:0000469", @"obsolete high", @"", true));
            TermData.Add(CVID.PATO_increased_amount, new TermInfo(CVID.PATO_increased_amount, @"PATO", @"PATO:0000470", @"increased amount", @"An amount which is relatively high.", false));
            TermData.Add(CVID.PATO_obsolete_low_OBSOLETE, new TermInfo(CVID.PATO_obsolete_low_OBSOLETE, @"PATO", @"PATO:0000471", @"obsolete low", @"", true));
            TermData.Add(CVID.PATO_obsolete_quality_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_quality_value_OBSOLETE, @"PATO", @"PATO:0000472", @"obsolete quality value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_quality_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_quality_value_OBSOLETE, @"PATO", @"PATO:0000473", @"obsolete relative_quality value", @"", true));
            TermData.Add(CVID.PATO_obsolete_shattering_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_shattering_value_OBSOLETE, @"PATO", @"PATO:0000474", @"obsolete shattering value", @"", true));
            TermData.Add(CVID.PATO_obsolete_threshability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_threshability_value_OBSOLETE, @"PATO", @"PATO:0000475", @"obsolete threshability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_bad_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bad_value_OBSOLETE, @"PATO", @"PATO:0000476", @"obsolete bad value", @"", true));
            TermData.Add(CVID.PATO_obsolete_good_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_good_value_OBSOLETE, @"PATO", @"PATO:0000477", @"obsolete good value", @"", true));
            TermData.Add(CVID.PATO_obsolete_poor_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_poor_value_OBSOLETE, @"PATO", @"PATO:0000478", @"obsolete poor value", @"", true));
            TermData.Add(CVID.PATO_obsolete_regulation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_regulation_value_OBSOLETE, @"PATO", @"PATO:0000479", @"obsolete regulation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_positive_regulation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_positive_regulation_OBSOLETE, @"PATO", @"PATO:0000480", @"obsolete positive regulation", @"", true));
            TermData.Add(CVID.PATO_obsolete_negative_regulation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_negative_regulation_OBSOLETE, @"PATO", @"PATO:0000481", @"obsolete negative regulation", @"", true));
            TermData.Add(CVID.PATO_obsolete_response_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_response_value_OBSOLETE, @"PATO", @"PATO:0000482", @"obsolete response value", @"", true));
            TermData.Add(CVID.PATO_obsolete_tactile_hyperresponsive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_tactile_hyperresponsive_OBSOLETE, @"PATO", @"PATO:0000483", @"obsolete tactile hyperresponsive", @"", true));
            TermData.Add(CVID.PATO_obsolete_tactile_hyporesponsive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_tactile_hyporesponsive_OBSOLETE, @"PATO", @"PATO:0000484", @"obsolete tactile hyporesponsive", @"", true));
            TermData.Add(CVID.PATO_obsolete_mild_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mild_response_OBSOLETE, @"PATO", @"PATO:0000485", @"obsolete mild response", @"", true));
            TermData.Add(CVID.PATO_obsolete_moderate_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_moderate_response_OBSOLETE, @"PATO", @"PATO:0000486", @"obsolete moderate response", @"", true));
            TermData.Add(CVID.PATO_responsive_to, new TermInfo(CVID.PATO_responsive_to, @"PATO", @"PATO:0000487", @"responsive to", @"A response quality inhering in a bearer by virtue of the bearer's disposition to react to a stimulus or an agent.", false));
            TermData.Add(CVID.PATO_unresponsive_to, new TermInfo(CVID.PATO_unresponsive_to, @"PATO", @"PATO:0000488", @"unresponsive to", @"A response quality inhering in a bearer by virtue of the bearer's lack of reaction to a stimulus or an agent.", false));
            TermData.Add(CVID.PATO_obsolete_vigorous_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vigorous_response_OBSOLETE, @"PATO", @"PATO:0000489", @"obsolete vigorous response", @"", true));
            TermData.Add(CVID.PATO_obsolete_rhythym_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_rhythym_value_OBSOLETE, @"PATO", @"PATO:0000490", @"obsolete rhythym value", @"", true));
            TermData.Add(CVID.PATO_obsolete_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000491", @"obsolete sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_rhythym_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_rhythym_value_OBSOLETE, @"PATO", @"PATO:0000492", @"obsolete absolute rhythym value", @"", true));
            TermData.Add(CVID.PATO_obsolete_amplitude_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_amplitude_value_OBSOLETE, @"PATO", @"PATO:0000493", @"obsolete amplitude value", @"", true));
            TermData.Add(CVID.PATO_obsolete_period_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_period_value_OBSOLETE, @"PATO", @"PATO:0000494", @"obsolete period value", @"", true));
            TermData.Add(CVID.PATO_obsolete_persistence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_persistence_value_OBSOLETE, @"PATO", @"PATO:0000495", @"obsolete persistence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_phase_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_phase_value_OBSOLETE, @"PATO", @"PATO:0000496", @"obsolete phase value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_rhythym_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_rhythym_value_OBSOLETE, @"PATO", @"PATO:0000497", @"obsolete relative rhythym value", @"", true));
            TermData.Add(CVID.PATO_increased_duration, new TermInfo(CVID.PATO_increased_duration, @"PATO", @"PATO:0000498", @"increased duration", @"A duration quality of a process which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_duration, new TermInfo(CVID.PATO_decreased_duration, @"PATO", @"PATO:0000499", @"decreased duration", @"A duration quality of a process which is relatively low.", false));
            TermData.Add(CVID.PATO_advanced_phase, new TermInfo(CVID.PATO_advanced_phase, @"PATO", @"PATO:0000500", @"advanced phase", @"A phase which occurs earlier than the natural start time.", false));
            TermData.Add(CVID.PATO_dark_phase, new TermInfo(CVID.PATO_dark_phase, @"PATO", @"PATO:0000501", @"dark phase", @"A phase which occurs during dark cycle.", false));
            TermData.Add(CVID.PATO_delayed, new TermInfo(CVID.PATO_delayed, @"PATO", @"PATO:0000502", @"delayed", @"A quality of a process which starts later than the natural start time or the reference process.", false));
            TermData.Add(CVID.PATO_light_phase, new TermInfo(CVID.PATO_light_phase, @"PATO", @"PATO:0000503", @"light phase", @"A phase which occurs during the light cycle.", false));
            TermData.Add(CVID.PATO_arrhythmic, new TermInfo(CVID.PATO_arrhythmic, @"PATO", @"PATO:0000504", @"arrhythmic", @"A rhythm quality inhering in a bearer by virtue of the bearer's lacking rhythm.", false));
            TermData.Add(CVID.PATO_rhythmic, new TermInfo(CVID.PATO_rhythmic, @"PATO", @"PATO:0000505", @"rhythmic", @"A rhythm quality inhering in a bearer by virtue of the bearer's having rhythm.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000506", @"obsolete absolute sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_disease_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_disease_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000507", @"obsolete disease sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000508", @"obsolete relative sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_stress_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_stress_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000509", @"obsolete stress sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_temperature_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temperature_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000510", @"obsolete temperature sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_disease_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_disease_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000511", @"obsolete absolute disease sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_disease_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_disease_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000512", @"obsolete relative disease sensitivity value", @"", true));
            TermData.Add(CVID.PATO_insensitive_toward, new TermInfo(CVID.PATO_insensitive_toward, @"PATO", @"PATO:0000513", @"insensitive toward", @"A quality inhering in a bearer by virtue of the bearer's lacking sensitivity toward an external stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_intolerant_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intolerant_value_OBSOLETE, @"PATO", @"PATO:0000514", @"obsolete intolerant value", @"", true));
            TermData.Add(CVID.PATO_tolerant_to, new TermInfo(CVID.PATO_tolerant_to, @"PATO", @"PATO:0000515", @"tolerant to", @"A resistance quality inhering in a bearer by virtue of its disposition to endure or being insensitive to a stimulus.", false));
            TermData.Add(CVID.PATO_sensitive_toward, new TermInfo(CVID.PATO_sensitive_toward, @"PATO", @"PATO:0000516", @"sensitive toward", @"A quality inhering in a bearer by virtue of the bearer's having sensitivity toward an external stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_abiotic_stress_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_abiotic_stress_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000517", @"obsolete abiotic stress sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_chemical_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_chemical_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000518", @"obsolete chemical sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_humidity_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_humidity_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000519", @"obsolete humidity sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_radiation_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_radiation_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000520", @"obsolete radiation sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_drug_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drug_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000521", @"obsolete drug sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_herbicide_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_herbicide_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000522", @"obsolete herbicide sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_insecticide_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_insecticide_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000523", @"obsolete insecticide sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_plant_growth_hormone_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_plant_growth_hormone_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000524", @"obsolete plant growth hormone sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_soil_composition_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soil_composition_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000525", @"obsolete soil composition sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_drug_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_drug_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000526", @"obsolete absolute drug sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_drug_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_drug_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000527", @"obsolete relative drug sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_drug_insensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drug_insensitive_OBSOLETE, @"PATO", @"PATO:0000528", @"obsolete drug insensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_drug_sensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drug_sensitive_OBSOLETE, @"PATO", @"PATO:0000529", @"obsolete drug sensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_soil_nutrient_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soil_nutrient_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000530", @"obsolete soil nutrient sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_macronutrient_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_macronutrient_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000531", @"obsolete macronutrient sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_micronutrient_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_micronutrient_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000532", @"obsolete micronutrient sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_osmotic_response_sensitivity_OBSOLETE1, new TermInfo(CVID.PATO_obsolete_osmotic_response_sensitivity_OBSOLETE1, @"PATO", @"PATO:0000533", @"obsolete osmotic response sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_p_h_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_p_h_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000534", @"obsolete p h sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_salt_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_salt_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000535", @"obsolete salt sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000536", @"obsolete water sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_acid_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_acid_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000537", @"obsolete acid sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_alkali_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_alkali_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000538", @"obsolete alkali sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_drought_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_drought_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000539", @"obsolete drought sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_flooding_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flooding_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000540", @"obsolete flooding sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_photosensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_photosensitivity_value_OBSOLETE, @"PATO", @"PATO:0000541", @"obsolete photosensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_photosensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_photosensitivity_value_OBSOLETE, @"PATO", @"PATO:0000542", @"obsolete absolute photosensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_light_intensivity_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_light_intensivity_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000543", @"obsolete light intensivity sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_light_quality_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_light_quality_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000544", @"obsolete light_quality sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_photosensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_photosensitivity_value_OBSOLETE, @"PATO", @"PATO:0000545", @"obsolete relative photosensitivity value", @"", true));
            TermData.Add(CVID.PATO_photoinsensitive, new TermInfo(CVID.PATO_photoinsensitive, @"PATO", @"PATO:0000546", @"photoinsensitive", @"A photosensitivity quality inhering in a bearer by virtue of the bearer's lacking photosensitivity.", false));
            TermData.Add(CVID.PATO_photosensitive, new TermInfo(CVID.PATO_photosensitive, @"PATO", @"PATO:0000547", @"photosensitive", @"A photosensitivity quality inhering in a bearer by virtue of the bearer's exhibiting photosensitivity.", false));
            TermData.Add(CVID.PATO_obsolete_blue_light_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_blue_light_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000548", @"obsolete blue light sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_far_red_light_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_far_red_light_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000549", @"obsolete far red light sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_red_light_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_red_light_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000550", @"obsolete red light sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_u_v_light_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_u_v_light_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000551", @"obsolete u v light sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_temperature_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temperature_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000552", @"obsolete absolute temperature sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temperature_sensitivity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temperature_sensitivity_value_OBSOLETE, @"PATO", @"PATO:0000553", @"obsolete relative temperature sensitivity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_cold_sensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cold_sensitive_OBSOLETE, @"PATO", @"PATO:0000554", @"obsolete cold sensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_heat_sensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_heat_sensitive_OBSOLETE, @"PATO", @"PATO:0000555", @"obsolete heat sensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_thermoinsensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_thermoinsensitive_OBSOLETE, @"PATO", @"PATO:0000556", @"obsolete thermoinsensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_thermosensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_thermosensitive_OBSOLETE, @"PATO", @"PATO:0000557", @"obsolete thermosensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_size_value_OBSOLETE, @"PATO", @"PATO:0000558", @"obsolete size value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_size_value_OBSOLETE, @"PATO", @"PATO:0000559", @"obsolete absolute size value", @"", true));
            TermData.Add(CVID.PATO_obsolete_height_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_height_value_OBSOLETE, @"PATO", @"PATO:0000560", @"obsolete height value", @"", true));
            TermData.Add(CVID.PATO_obsolete_length_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_length_value_OBSOLETE, @"PATO", @"PATO:0000561", @"obsolete length value", @"", true));
            TermData.Add(CVID.PATO_obsolete_mass_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mass_value_OBSOLETE, @"PATO", @"PATO:0000562", @"obsolete mass value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_size_value_OBSOLETE, @"PATO", @"PATO:0000563", @"obsolete relative size value", @"", true));
            TermData.Add(CVID.PATO_obsolete_thickness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_thickness_value_OBSOLETE, @"PATO", @"PATO:0000564", @"obsolete thickness value", @"", true));
            TermData.Add(CVID.PATO_obsolete_volume_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_volume_value_OBSOLETE, @"PATO", @"PATO:0000565", @"obsolete volume value", @"", true));
            TermData.Add(CVID.PATO_obsolete_width_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_width_value_OBSOLETE, @"PATO", @"PATO:0000566", @"obsolete width value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_height_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_height_value_OBSOLETE, @"PATO", @"PATO:0000567", @"obsolete absolute height value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_height_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_height_value_OBSOLETE, @"PATO", @"PATO:0000568", @"obsolete relative height value", @"", true));
            TermData.Add(CVID.PATO_decreased_height, new TermInfo(CVID.PATO_decreased_height, @"PATO", @"PATO:0000569", @"decreased height", @"A height which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_height, new TermInfo(CVID.PATO_increased_height, @"PATO", @"PATO:0000570", @"increased height", @"A height which is relatively high.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_length_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_length_value_OBSOLETE, @"PATO", @"PATO:0000571", @"obsolete absolute length value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_length_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_length_value_OBSOLETE, @"PATO", @"PATO:0000572", @"obsolete relative length value", @"", true));
            TermData.Add(CVID.PATO_increased_length, new TermInfo(CVID.PATO_increased_length, @"PATO", @"PATO:0000573", @"increased length", @"A length quality which is relatively large.", false));
            TermData.Add(CVID.PATO_decreased_length, new TermInfo(CVID.PATO_decreased_length, @"PATO", @"PATO:0000574", @"decreased length", @"A length quality which is relatively small.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_mass_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_mass_value_OBSOLETE, @"PATO", @"PATO:0000575", @"obsolete absolute mass value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_mass_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_mass_value_OBSOLETE, @"PATO", @"PATO:0000576", @"obsolete relative mass value", @"", true));
            TermData.Add(CVID.PATO_obsolete_weight_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_weight_value_OBSOLETE, @"PATO", @"PATO:0000577", @"obsolete weight value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_weight_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_weight_value_OBSOLETE, @"PATO", @"PATO:0000580", @"obsolete absolute weight value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_weight_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_weight_value_OBSOLETE, @"PATO", @"PATO:0000581", @"obsolete relative weight value", @"", true));
            TermData.Add(CVID.PATO_increased_weight, new TermInfo(CVID.PATO_increased_weight, @"PATO", @"PATO:0000582", @"increased weight", @"A weight which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_weight, new TermInfo(CVID.PATO_decreased_weight, @"PATO", @"PATO:0000583", @"decreased weight", @"A weight which is relatively low.", false));
            TermData.Add(CVID.PATO_hypertrophic, new TermInfo(CVID.PATO_hypertrophic, @"PATO", @"PATO:0000584", @"hypertrophic", @"An increased size quality inhering in a bearer by virtue of the bearer's exhibiting enlargement of a cell or constituent group of cells (for example, organ).", false));
            TermData.Add(CVID.PATO_hypotrophic, new TermInfo(CVID.PATO_hypotrophic, @"PATO", @"PATO:0000585", @"hypotrophic", @"A decreased size quality inhering in a bearer by virtue of the bearer's exhibiting reduced size of a cell or constituent group of cells (for example, organ).", false));
            TermData.Add(CVID.PATO_increased_size, new TermInfo(CVID.PATO_increased_size, @"PATO", @"PATO:0000586", @"increased size", @"A size quality which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_size, new TermInfo(CVID.PATO_decreased_size, @"PATO", @"PATO:0000587", @"decreased size", @"A size quality which is relatively low.", false));
            TermData.Add(CVID.PATO_vestigial, new TermInfo(CVID.PATO_vestigial, @"PATO", @"PATO:0000588", @"vestigial", @"A quality inhering in a bearer by virtue of the bearer's being a remnant structure from earlier development or evolution.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_thickness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_thickness_value_OBSOLETE, @"PATO", @"PATO:0000589", @"obsolete absolute thickness value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_thickness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_thickness_value_OBSOLETE, @"PATO", @"PATO:0000590", @"obsolete relative thickness value", @"", true));
            TermData.Add(CVID.PATO_increased_thickness, new TermInfo(CVID.PATO_increased_thickness, @"PATO", @"PATO:0000591", @"increased thickness", @"A thickness which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_thickness, new TermInfo(CVID.PATO_decreased_thickness, @"PATO", @"PATO:0000592", @"decreased thickness", @"A thickness which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_volume_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_volume_value_OBSOLETE, @"PATO", @"PATO:0000593", @"obsolete absolute volume value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_volume_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_volume_value_OBSOLETE, @"PATO", @"PATO:0000594", @"obsolete relative volume value", @"", true));
            TermData.Add(CVID.PATO_increased_volume, new TermInfo(CVID.PATO_increased_volume, @"PATO", @"PATO:0000595", @"increased volume", @"A volume which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_volume, new TermInfo(CVID.PATO_decreased_volume, @"PATO", @"PATO:0000596", @"decreased volume", @"A volume which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_width_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_width_value_OBSOLETE, @"PATO", @"PATO:0000597", @"obsolete absolute width value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_width_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_width_value_OBSOLETE, @"PATO", @"PATO:0000598", @"obsolete relative width value", @"", true));
            TermData.Add(CVID.PATO_decreased_width, new TermInfo(CVID.PATO_decreased_width, @"PATO", @"PATO:0000599", @"decreased width", @"A width which is relatively small.", false));
            TermData.Add(CVID.PATO_increased_width, new TermInfo(CVID.PATO_increased_width, @"PATO", @"PATO:0000600", @"increased width", @"A width which is relatively large.", false));
            TermData.Add(CVID.PATO_obsolete_spatial_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_spatial_value_OBSOLETE, @"PATO", @"PATO:0000601", @"obsolete spatial value", @"", true));
            TermData.Add(CVID.PATO_obsolete_angle_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_angle_value_OBSOLETE, @"PATO", @"PATO:0000602", @"obsolete angle value", @"", true));
            TermData.Add(CVID.PATO_obsolete_closure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_closure_value_OBSOLETE, @"PATO", @"PATO:0000603", @"obsolete closure value", @"", true));
            TermData.Add(CVID.PATO_obsolete_orientation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_orientation_value_OBSOLETE, @"PATO", @"PATO:0000604", @"obsolete orientation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_placement_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_placement_value_OBSOLETE, @"PATO", @"PATO:0000605", @"obsolete placement value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_angle_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_angle_value_OBSOLETE, @"PATO", @"PATO:0000606", @"obsolete absolute angle value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_angle_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_angle_value_OBSOLETE, @"PATO", @"PATO:0000607", @"obsolete relative angle value", @"", true));
            TermData.Add(CVID.PATO_closed, new TermInfo(CVID.PATO_closed, @"PATO", @"PATO:0000608", @"closed", @"A morphological quality inhering in a bearer by virtue of the bearer's affording blocked passage or view.", false));
            TermData.Add(CVID.PATO_closure_incomplete, new TermInfo(CVID.PATO_closure_incomplete, @"PATO", @"PATO:0000609", @"closure incomplete", @"A morphological quality inhering in a bearer by virtue of the bearer's affording not completed blocked passage or view.", false));
            TermData.Add(CVID.PATO_open, new TermInfo(CVID.PATO_open, @"PATO", @"PATO:0000610", @"open", @"A morphological quality inhering in a bearer by virtue of the bearer's affording unobstructed passage or view.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_orientation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_orientation_value_OBSOLETE, @"PATO", @"PATO:0000611", @"obsolete absolute orientation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_orientation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_orientation_value_OBSOLETE, @"PATO", @"PATO:0000612", @"obsolete relative orientation value", @"", true));
            TermData.Add(CVID.PATO_disoriented, new TermInfo(CVID.PATO_disoriented, @"PATO", @"PATO:0000613", @"disoriented", @"A spatial pattern inhering in a bearer by virtue of the bearer's lacking orientation.", false));
            TermData.Add(CVID.PATO_oriented, new TermInfo(CVID.PATO_oriented, @"PATO", @"PATO:0000614", @"oriented", @"A pattern where all the repeated elements are oriented in the same direction.", false));
            TermData.Add(CVID.PATO_wholly_anterioralized, new TermInfo(CVID.PATO_wholly_anterioralized, @"PATO", @"PATO:0000615", @"wholly anterioralized", @"An anterioralized quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally anterior structures.", false));
            TermData.Add(CVID.PATO_asymmetrical, new TermInfo(CVID.PATO_asymmetrical, @"PATO", @"PATO:0000616", @"asymmetrical", @"A symmetry quality inhering in a bearer by virtue of the bearer's lacking symmetry.", false));
            TermData.Add(CVID.PATO_bent, new TermInfo(CVID.PATO_bent, @"PATO", @"PATO:0000617", @"bent", @"A shape quality inhering in a bearer by virtue of the bearer's having one or more angle(s) in its length.", false));
            TermData.Add(CVID.PATO_bilateral, new TermInfo(CVID.PATO_bilateral, @"PATO", @"PATO:0000618", @"bilateral", @"A positional quality inhering in a bearer by virtue of the bearer's having two sides; two-sided.", false));
            TermData.Add(CVID.PATO_crowded, new TermInfo(CVID.PATO_crowded, @"PATO", @"PATO:0000619", @"crowded", @"A positional quality inhering in a bearer by virtue of the bearer's being overfilled.", false));
            TermData.Add(CVID.PATO_wholly_dorsalized, new TermInfo(CVID.PATO_wholly_dorsalized, @"PATO", @"PATO:0000620", @"wholly dorsalized", @"A dorsalized quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally dorsal structures.", false));
            TermData.Add(CVID.PATO_erect, new TermInfo(CVID.PATO_erect, @"PATO", @"PATO:0000622", @"erect", @"A positional quality inhering in a bearer by virtue of the bearer's being upright in position or posture.", false));
            TermData.Add(CVID.PATO_exserted, new TermInfo(CVID.PATO_exserted, @"PATO", @"PATO:0000623", @"exserted", @"A quality inhering in a bearer by virtue of the bearer's protruding or projecting from the body.", false));
            TermData.Add(CVID.PATO_inserted_into, new TermInfo(CVID.PATO_inserted_into, @"PATO", @"PATO:0000624", @"inserted into", @"A spatial quality inhering in a bearer by virtue of the bearer's becoming joined together with an additional entity.", false));
            TermData.Add(CVID.PATO_inverted, new TermInfo(CVID.PATO_inverted, @"PATO", @"PATO:0000625", @"inverted", @"An oriented quality inhering in a bearer by virtue of the bearer's being reversed in position, order, or condition.", false));
            TermData.Add(CVID.PATO_lateralized, new TermInfo(CVID.PATO_lateralized, @"PATO", @"PATO:0000626", @"lateralized", @"A positional quality inhering in a bearer by virtue of the bearer's being moved or displaced to one side so as to make lateral.", false));
            TermData.Add(CVID.PATO_localized, new TermInfo(CVID.PATO_localized, @"PATO", @"PATO:0000627", @"localized", @"A spatial pattern quality inhering in a bearer by virtue of the bearer's being confined or restricted to a particular location.", false));
            TermData.Add(CVID.PATO_mislocalised, new TermInfo(CVID.PATO_mislocalised, @"PATO", @"PATO:0000628", @"mislocalised", @"A positional quality inhering in a bearer by virtue the bearer's being changed in abnormal position.", false));
            TermData.Add(CVID.PATO_misrouted, new TermInfo(CVID.PATO_misrouted, @"PATO", @"PATO:0000629", @"misrouted", @"A positional quality inhering in a bearer by virtue of the bearer's having mistakenly taken course, way, or passage; ill-routed.", false));
            TermData.Add(CVID.PATO_wholly_posterioralized, new TermInfo(CVID.PATO_wholly_posterioralized, @"PATO", @"PATO:0000630", @"wholly posterioralized", @"A posterioralized quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally posterior structures.", false));
            TermData.Add(CVID.PATO_prostrate, new TermInfo(CVID.PATO_prostrate, @"PATO", @"PATO:0000631", @"prostrate", @"A positional quality inhering in a bearer by virtue of the bearer's being stretched out and lying at full length along the ground.", false));
            TermData.Add(CVID.PATO_symmetrical, new TermInfo(CVID.PATO_symmetrical, @"PATO", @"PATO:0000632", @"symmetrical", @"A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division by a longitudinal plane into similar halves.", false));
            TermData.Add(CVID.PATO_uncrowded, new TermInfo(CVID.PATO_uncrowded, @"PATO", @"PATO:0000633", @"uncrowded", @"A spatial pattern inhering in a bearer by virtue of the bearer's being not overfilled.", false));
            TermData.Add(CVID.PATO_unilateral, new TermInfo(CVID.PATO_unilateral, @"PATO", @"PATO:0000634", @"unilateral", @"A spatial pattern inhering in a bearer by virtue of the bearer's involvement of only one part or side.", false));
            TermData.Add(CVID.PATO_unlocalised, new TermInfo(CVID.PATO_unlocalised, @"PATO", @"PATO:0000635", @"unlocalised", @"A spatial pattern inhering in a bearer by virtue of the bearer's not being confined or restricted to a particular location.", false));
            TermData.Add(CVID.PATO_wholly_ventralized, new TermInfo(CVID.PATO_wholly_ventralized, @"PATO", @"PATO:0000636", @"wholly ventralized", @"A ventralized quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally ventral structures.", false));
            TermData.Add(CVID.PATO_obsolete_structure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_structure_value_OBSOLETE, @"PATO", @"PATO:0000637", @"obsolete structure value", @"", true));
            TermData.Add(CVID.PATO_apoptotic, new TermInfo(CVID.PATO_apoptotic, @"PATO", @"PATO:0000638", @"apoptotic", @"A structural quality inhering in a bearer by virtue of the bearer's consisting of blebbing of the nucleus and DNA fragmentation due to the cell undergoing a specific form of programmed cell death termed apoptosis.", false));
            TermData.Add(CVID.PATO_degenerate, new TermInfo(CVID.PATO_degenerate, @"PATO", @"PATO:0000639", @"degenerate", @"A structural quality inhering in a bearer whose structure deteriorates or is lost over time due to an active pathological process.", false));
            TermData.Add(CVID.PATO_dysplastic, new TermInfo(CVID.PATO_dysplastic, @"PATO", @"PATO:0000640", @"dysplastic", @"A structural quality inhering in a bearer by virtue of the bearer's exhibiting an alteration in size, shape or organization of its constituent cells.", false));
            TermData.Add(CVID.PATO_obsolete_deposition_defective_OBSOLETE, new TermInfo(CVID.PATO_obsolete_deposition_defective_OBSOLETE, @"PATO", @"PATO:0000641", @"obsolete deposition defective", @"", true));
            TermData.Add(CVID.PATO_fused_with, new TermInfo(CVID.PATO_fused_with, @"PATO", @"PATO:0000642", @"fused with", @"A structural quality inhering in a bearer by virtue of the bearer's being merged with another entity.", false));
            TermData.Add(CVID.PATO_herniated, new TermInfo(CVID.PATO_herniated, @"PATO", @"PATO:0000643", @"herniated", @"A quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded through an abnormal opening in the wall that contains it.", false));
            TermData.Add(CVID.PATO_hyperplastic, new TermInfo(CVID.PATO_hyperplastic, @"PATO", @"PATO:0000644", @"hyperplastic", @"A increased size quality inhering in an organ or tissue by virtue of the bearer's exhibiting increased number of cells.", false));
            TermData.Add(CVID.PATO_hypoplastic, new TermInfo(CVID.PATO_hypoplastic, @"PATO", @"PATO:0000645", @"hypoplastic", @"A decreased size quality inhering in a bearer by virtue of the bearer's exhibiting reduced number of cells within an organ or tissue.", false));
            TermData.Add(CVID.PATO_malformed, new TermInfo(CVID.PATO_malformed, @"PATO", @"PATO:0000646", @"malformed", @"A morphological quality inhering in a bearer by virtue of the bearer's being distorted during formation.", false));
            TermData.Add(CVID.PATO_necrotic, new TermInfo(CVID.PATO_necrotic, @"PATO", @"PATO:0000647", @"necrotic", @"A structural quality inhering in a bearer by virtue of the bearer's undergoing unprogrammed cell death.", false));
            TermData.Add(CVID.PATO_obstructed, new TermInfo(CVID.PATO_obstructed, @"PATO", @"PATO:0000648", @"obstructed", @"A morphological quality inhering in a bearer by virtue of the bearer's being blocked or filled with obstacles or an obstacle.", false));
            TermData.Add(CVID.PATO_unfused_from, new TermInfo(CVID.PATO_unfused_from, @"PATO", @"PATO:0000651", @"unfused from", @"A structural quality inhering in a bearer by virtue of the bearer's being no longer merged with another entity.", false));
            TermData.Add(CVID.PATO_obsolete_substance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_substance_value_OBSOLETE, @"PATO", @"PATO:0000652", @"obsolete substance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_addictive_substance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_addictive_substance_value_OBSOLETE, @"PATO", @"PATO:0000653", @"obsolete addictive substance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_alcochol_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_alcochol_value_OBSOLETE, @"PATO", @"PATO:0000654", @"obsolete alcochol value", @"", true));
            TermData.Add(CVID.PATO_obsolete_amphetamine_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_amphetamine_value_OBSOLETE, @"PATO", @"PATO:0000655", @"obsolete amphetamine value", @"", true));
            TermData.Add(CVID.PATO_obsolete_time_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_time_quantity_OBSOLETE, @"PATO", @"PATO:0000656", @"obsolete time_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_length_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_length_quantity_OBSOLETE, @"PATO", @"PATO:0000657", @"obsolete length_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_metamphetamine_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_metamphetamine_value_OBSOLETE, @"PATO", @"PATO:0000658", @"obsolete metamphetamine value", @"", true));
            TermData.Add(CVID.PATO_obsolete_temparature_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temparature_quantity_OBSOLETE, @"PATO", @"PATO:0000659", @"obsolete temparature_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_angle_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_angle_quantity_OBSOLETE, @"PATO", @"PATO:0000660", @"obsolete angle_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_solid_substance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_solid_substance_value_OBSOLETE, @"PATO", @"PATO:0000661", @"obsolete solid substance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_volume_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_volume_quantity_OBSOLETE, @"PATO", @"PATO:0000662", @"obsolete volume_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_occurrent_OBSOLETE, new TermInfo(CVID.PATO_obsolete_occurrent_OBSOLETE, @"PATO", @"PATO:0000663", @"obsolete occurrent", @"", true));
            TermData.Add(CVID.PATO_obsolete_substance_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_substance_quantity_OBSOLETE, @"PATO", @"PATO:0000664", @"obsolete substance_quantity", @"", true));
            TermData.Add(CVID.PATO_high_brightness, new TermInfo(CVID.PATO_high_brightness, @"PATO", @"PATO:0000665", @"high brightness", @"A color brightness which is relatively high.", false));
            TermData.Add(CVID.PATO_obsolete_energy_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_energy_quantity_OBSOLETE, @"PATO", @"PATO:0000666", @"obsolete energy_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_liquid_substance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_liquid_substance_value_OBSOLETE, @"PATO", @"PATO:0000667", @"obsolete liquid substance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_mass_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mass_quantity_OBSOLETE, @"PATO", @"PATO:0000668", @"obsolete mass_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_concentration_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_concentration_unit_OBSOLETE, @"PATO", @"PATO:0000669", @"obsolete concentration_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_saccharin_versus_water_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_saccharin_versus_water_value_OBSOLETE, @"PATO", @"PATO:0000670", @"obsolete saccharin versus water value", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_value_OBSOLETE, @"PATO", @"PATO:0000671", @"obsolete water value", @"", true));
            TermData.Add(CVID.PATO_obsolete_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unit_OBSOLETE, @"PATO", @"PATO:0000672", @"obsolete unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_temperature_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temperature_value_OBSOLETE, @"PATO", @"PATO:0000673", @"obsolete temperature value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_temperature_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temperature_value_OBSOLETE, @"PATO", @"PATO:0000674", @"obsolete absolute temperature value", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_temperature_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_temperature_value_OBSOLETE, @"PATO", @"PATO:0000675", @"obsolete body temperature value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temperature_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temperature_value_OBSOLETE, @"PATO", @"PATO:0000676", @"obsolete relative temperature value", @"", true));
            TermData.Add(CVID.PATO_obsolete_temporal_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temporal_value_OBSOLETE, @"PATO", @"PATO:0000679", @"obsolete temporal value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_temporal_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_temporal_value_OBSOLETE, @"PATO", @"PATO:0000680", @"obsolete absolute temporal value", @"", true));
            TermData.Add(CVID.PATO_obsolete_incidence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_incidence_value_OBSOLETE, @"PATO", @"PATO:0000681", @"obsolete incidence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_rate_value_OBSOLETE, @"PATO", @"PATO:0000682", @"obsolete rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_temporal_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_temporal_value_OBSOLETE, @"PATO", @"PATO:0000683", @"obsolete relative temporal value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_incidence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_incidence_value_OBSOLETE, @"PATO", @"PATO:0000684", @"obsolete absolute incidence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_incidence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_incidence_value_OBSOLETE, @"PATO", @"PATO:0000685", @"obsolete relative incidence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_rate_value_OBSOLETE, @"PATO", @"PATO:0000686", @"obsolete absolute rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_rate_value_OBSOLETE, @"PATO", @"PATO:0000687", @"obsolete relative rate value", @"", true));
            TermData.Add(CVID.PATO_asynchronous, new TermInfo(CVID.PATO_asynchronous, @"PATO", @"PATO:0000688", @"asynchronous", @"A quality of a single process inhering in a bearer by virtue of the bearer's not occurring or existing at the same time or having the same period or phase.", false));
            TermData.Add(CVID.PATO_continuous, new TermInfo(CVID.PATO_continuous, @"PATO", @"PATO:0000689", @"continuous", @"A quality of a single process inhering in a bearer by virtue of the bearer's being uninterrupted in time, sequence, substance, or extent.", false));
            TermData.Add(CVID.PATO_discontinuous, new TermInfo(CVID.PATO_discontinuous, @"PATO", @"PATO:0000690", @"discontinuous", @"A quality of a single process inhering in a bearer by virtue of the bearer's being marked by breaks or interruptions.", false));
            TermData.Add(CVID.PATO_heterochronic, new TermInfo(CVID.PATO_heterochronic, @"PATO", @"PATO:0000692", @"heterochronic", @"A quality of a single process inhering in a bearer by virtue of the bearer's origin or development at an unusual time or out of the regular sequence.", false));
            TermData.Add(CVID.PATO_obsolete_late_OBSOLETE, new TermInfo(CVID.PATO_obsolete_late_OBSOLETE, @"PATO", @"PATO:0000693", @"obsolete late", @"", true));
            TermData.Add(CVID.PATO_premature, new TermInfo(CVID.PATO_premature, @"PATO", @"PATO:0000694", @"premature", @"A quality of a process which starts earlier than the natural start time or the reference process.", false));
            TermData.Add(CVID.PATO_synchronous, new TermInfo(CVID.PATO_synchronous, @"PATO", @"PATO:0000695", @"synchronous", @"A quality of a single process inhering in a bearer by virtue of the bearer's occurring or existing at the same time or having the same period or phase.", false));
            TermData.Add(CVID.PATO_obsolete_texture_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_texture_value_OBSOLETE, @"PATO", @"PATO:0000696", @"obsolete texture value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_texture_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_texture_value_OBSOLETE, @"PATO", @"PATO:0000697", @"obsolete relative texture value", @"", true));
            TermData.Add(CVID.PATO_obsolete_floury_OBSOLETE, new TermInfo(CVID.PATO_obsolete_floury_OBSOLETE, @"PATO", @"PATO:0000698", @"obsolete floury", @"", true));
            TermData.Add(CVID.PATO_obsolete_glutinous_OBSOLETE, new TermInfo(CVID.PATO_obsolete_glutinous_OBSOLETE, @"PATO", @"PATO:0000699", @"obsolete glutinous", @"", true));
            TermData.Add(CVID.PATO_rough, new TermInfo(CVID.PATO_rough, @"PATO", @"PATO:0000700", @"rough", @"A texture quality inhering in a bearer by virtue of the bearer's irregular surface.", false));
            TermData.Add(CVID.PATO_smooth, new TermInfo(CVID.PATO_smooth, @"PATO", @"PATO:0000701", @"smooth", @"A texture quality inhering in a bearer by virtue of the bearer's processing a surface free of roughness or irregularities.", false));
            TermData.Add(CVID.PATO_obsolete_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_threshold_value_OBSOLETE, @"PATO", @"PATO:0000702", @"obsolete threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_threshold_value_OBSOLETE, @"PATO", @"PATO:0000703", @"obsolete absolute threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_pain_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pain_threshold_value_OBSOLETE, @"PATO", @"PATO:0000704", @"obsolete pain threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_threshold_value_OBSOLETE, @"PATO", @"PATO:0000705", @"obsolete relative threshold value", @"", true));
            TermData.Add(CVID.PATO_increased_threshold, new TermInfo(CVID.PATO_increased_threshold, @"PATO", @"PATO:0000706", @"increased threshold", @"A threshold which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_threshold, new TermInfo(CVID.PATO_decreased_threshold, @"PATO", @"PATO:0000708", @"decreased threshold", @"A threshold which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_time_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_time_value_OBSOLETE, @"PATO", @"PATO:0000710", @"obsolete time value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_time_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_time_value_OBSOLETE, @"PATO", @"PATO:0000711", @"obsolete absolute time value", @"", true));
            TermData.Add(CVID.PATO_obsolete_bouts_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bouts_value_OBSOLETE, @"PATO", @"PATO:0000712", @"obsolete bouts value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_time_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_time_value_OBSOLETE, @"PATO", @"PATO:0000713", @"obsolete relative time value", @"", true));
            TermData.Add(CVID.PATO_obsolete_latency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_latency_value_OBSOLETE, @"PATO", @"PATO:0000714", @"obsolete latency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_viability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_viability_value_OBSOLETE, @"PATO", @"PATO:0000717", @"obsolete viability value", @"", true));
            TermData.Add(CVID.PATO_lethal__sensu_genetics_, new TermInfo(CVID.PATO_lethal__sensu_genetics_, @"PATO", @"PATO:0000718", @"lethal (sensu genetics)", @"A viability quality inhering in a population by virtue of the bearer's long term survival inability.", false));
            TermData.Add(CVID.PATO_viable, new TermInfo(CVID.PATO_viable, @"PATO", @"PATO:0000719", @"viable", @"A viability quality inhering in a bearer or a population by virtue of the bearer's ability to survive or the long term survival ability of a given population.", false));
            TermData.Add(CVID.PATO_obsolete_yield_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_yield_value_OBSOLETE, @"PATO", @"PATO:0000720", @"obsolete yield value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_yield_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_yield_value_OBSOLETE, @"PATO", @"PATO:0000721", @"obsolete absolute yield value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_yield_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_yield_value_OBSOLETE, @"PATO", @"PATO:0000722", @"obsolete relative yield value", @"", true));
            TermData.Add(CVID.PATO_obsolete_high_yield_OBSOLETE, new TermInfo(CVID.PATO_obsolete_high_yield_OBSOLETE, @"PATO", @"PATO:0000723", @"obsolete high yield", @"", true));
            TermData.Add(CVID.PATO_obsolete_low_yield_OBSOLETE, new TermInfo(CVID.PATO_obsolete_low_yield_OBSOLETE, @"PATO", @"PATO:0000724", @"obsolete low yield", @"", true));
            TermData.Add(CVID.PATO_obsolete_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_function_value_OBSOLETE, @"PATO", @"PATO:0000725", @"obsolete function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_autonomic_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_autonomic_function_value_OBSOLETE, @"PATO", @"PATO:0000726", @"obsolete autonomic function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_behavioral_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_behavioral_function_value_OBSOLETE, @"PATO", @"PATO:0000727", @"obsolete behavioral function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_metabolic_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_metabolic_function_value_OBSOLETE, @"PATO", @"PATO:0000728", @"obsolete metabolic function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_physiological_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_physiological_function_value_OBSOLETE, @"PATO", @"PATO:0000729", @"obsolete physiological function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_function_value_OBSOLETE, @"PATO", @"PATO:0000730", @"obsolete relative function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_position_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_position_value_OBSOLETE, @"PATO", @"PATO:0000731", @"obsolete body position value", @"", true));
            TermData.Add(CVID.PATO_obsolete_body_tone_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_body_tone_value_OBSOLETE, @"PATO", @"PATO:0000732", @"obsolete body tone value", @"", true));
            TermData.Add(CVID.PATO_obsolete_piloerection_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_piloerection_value_OBSOLETE, @"PATO", @"PATO:0000733", @"obsolete piloerection value", @"", true));
            TermData.Add(CVID.PATO_obsolete_abdominal_tone_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_abdominal_tone_value_OBSOLETE, @"PATO", @"PATO:0000734", @"obsolete abdominal tone value", @"", true));
            TermData.Add(CVID.PATO_obsolete_limb_tone_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_limb_tone_value_OBSOLETE, @"PATO", @"PATO:0000735", @"obsolete limb tone value", @"", true));
            TermData.Add(CVID.PATO_obsolete_dysfunctional_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_dysfunctional_value_OBSOLETE, @"PATO", @"PATO:0000736", @"obsolete dysfunctional value", @"", true));
            TermData.Add(CVID.PATO_obsolete_functional_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_functional_value_OBSOLETE, @"PATO", @"PATO:0000737", @"obsolete functional value", @"", true));
            TermData.Add(CVID.PATO_obsolete_enzyme_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_enzyme_function_value_OBSOLETE, @"PATO", @"PATO:0000738", @"obsolete enzyme function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_enzyme_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_enzyme_function_value_OBSOLETE, @"PATO", @"PATO:0000739", @"obsolete absolute enzyme function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_enzyme_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_enzyme_function_value_OBSOLETE, @"PATO", @"PATO:0000740", @"obsolete relative enzyme function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_high_enzyme_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_high_enzyme_function_value_OBSOLETE, @"PATO", @"PATO:0000741", @"obsolete high enzyme function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_low_enzyme_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_low_enzyme_function_value_OBSOLETE, @"PATO", @"PATO:0000742", @"obsolete low enzyme function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_arousal_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_arousal_value_OBSOLETE, @"PATO", @"PATO:0000743", @"obsolete arousal value", @"", true));
            TermData.Add(CVID.PATO_obsolete_balance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_balance_value_OBSOLETE, @"PATO", @"PATO:0000744", @"obsolete balance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_behavioral_quality_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_behavioral_quality_value_OBSOLETE, @"PATO", @"PATO:0000745", @"obsolete behavioral quality value", @"", true));
            TermData.Add(CVID.PATO_obsolete_consumption_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_consumption_value_OBSOLETE, @"PATO", @"PATO:0000746", @"obsolete consumption value", @"", true));
            TermData.Add(CVID.PATO_obsolete_coordination_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_coordination_value_OBSOLETE, @"PATO", @"PATO:0000747", @"obsolete coordination value", @"", true));
            TermData.Add(CVID.PATO_obsolete_discrimination_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_discrimination_value_OBSOLETE, @"PATO", @"PATO:0000748", @"obsolete discrimination value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gait_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gait_value_OBSOLETE, @"PATO", @"PATO:0000749", @"obsolete gait value", @"", true));
            TermData.Add(CVID.PATO_obsolete_learning_and_memory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_learning_and_memory_value_OBSOLETE, @"PATO", @"PATO:0000750", @"obsolete learning and memory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_locomotor_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_locomotor_activity_value_OBSOLETE, @"PATO", @"PATO:0000751", @"obsolete locomotor activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_mating_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mating_value_OBSOLETE, @"PATO", @"PATO:0000752", @"obsolete mating value", @"", true));
            TermData.Add(CVID.PATO_obsolete_spontaneous_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_spontaneous_activity_value_OBSOLETE, @"PATO", @"PATO:0000753", @"obsolete spontaneous activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_startle_response_OBSOLETE1, new TermInfo(CVID.PATO_obsolete_startle_response_OBSOLETE1, @"PATO", @"PATO:0000754", @"obsolete startle response", @"", true));
            TermData.Add(CVID.PATO_obsolete_vocalization_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vocalization_value_OBSOLETE, @"PATO", @"PATO:0000755", @"obsolete vocalization value", @"", true));
            TermData.Add(CVID.PATO_obsolete_transfer_arousal_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_transfer_arousal_value_OBSOLETE, @"PATO", @"PATO:0000756", @"obsolete transfer arousal value", @"", true));
            TermData.Add(CVID.PATO_balanced, new TermInfo(CVID.PATO_balanced, @"PATO", @"PATO:0000757", @"balanced", @"A balance quality inhering in a bearer by virtue of the bearer's having balance.", false));
            TermData.Add(CVID.PATO_unbalanced, new TermInfo(CVID.PATO_unbalanced, @"PATO", @"PATO:0000758", @"unbalanced", @"A balance quality inhering in a bearer by virtue of the bearer's lacking balance.", false));
            TermData.Add(CVID.PATO_bang_sensitive, new TermInfo(CVID.PATO_bang_sensitive, @"PATO", @"PATO:0000759", @"bang sensitive", @"A behavioral quality inhering in a bearer by virtue of the bearer's exhibiting paralytic behaviour when subjected to mechanical shock.", false));
            TermData.Add(CVID.PATO_increased_behavioural_activity, new TermInfo(CVID.PATO_increased_behavioural_activity, @"PATO", @"PATO:0000760", @"increased behavioural activity", @"A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting increased activity.", false));
            TermData.Add(CVID.PATO_decreased_behavioural_activity, new TermInfo(CVID.PATO_decreased_behavioural_activity, @"PATO", @"PATO:0000761", @"decreased behavioural activity", @"A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting reduced activity.", false));
            TermData.Add(CVID.PATO_obsolete_impaired_OBSOLETE, new TermInfo(CVID.PATO_obsolete_impaired_OBSOLETE, @"PATO", @"PATO:0000762", @"obsolete impaired", @"Diminished, damaged, or weakened.", true));
            TermData.Add(CVID.PATO_paralysed, new TermInfo(CVID.PATO_paralysed, @"PATO", @"PATO:0000763", @"paralysed", @"A behavioral quality inhering in a bearer by virtue of the bearer's being affected by loss of the ability to move a body part.", false));
            TermData.Add(CVID.PATO_passive, new TermInfo(CVID.PATO_passive, @"PATO", @"PATO:0000764", @"passive", @"A behavioral quality inhering in a bearer by virtue of the bearer's receiving or being subjected to an action without responding or initiating an action in return.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_consumption_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_consumption_value_OBSOLETE, @"PATO", @"PATO:0000765", @"obsolete absolute consumption value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_consumption_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_consumption_value_OBSOLETE, @"PATO", @"PATO:0000766", @"obsolete relative consumption value", @"", true));
            TermData.Add(CVID.PATO_obsolete_increased_consumption_OBSOLETE, new TermInfo(CVID.PATO_obsolete_increased_consumption_OBSOLETE, @"PATO", @"PATO:0000767", @"obsolete increased consumption", @"A consumption which is relatively high.", true));
            TermData.Add(CVID.PATO_obsolete_decreased_consumption_OBSOLETE, new TermInfo(CVID.PATO_obsolete_decreased_consumption_OBSOLETE, @"PATO", @"PATO:0000768", @"obsolete decreased consumption", @"A consumption which is relatively low.", true));
            TermData.Add(CVID.PATO_coordinated, new TermInfo(CVID.PATO_coordinated, @"PATO", @"PATO:0000769", @"coordinated", @"A coordination quality of inhering in a bearer by virtue of the bearer's having skillful and effective interaction of movement.", false));
            TermData.Add(CVID.PATO_uncoordinated, new TermInfo(CVID.PATO_uncoordinated, @"PATO", @"PATO:0000770", @"uncoordinated", @"A coordination quality of inhering in a bearer by virtue of the bearer's lacking skillful and effective interaction of movement.", false));
            TermData.Add(CVID.PATO_aversion, new TermInfo(CVID.PATO_aversion, @"PATO", @"PATO:0000771", @"aversion", @"A preference quality in a bearer by virtue of the bearer's disliking a perceived stimulus.", false));
            TermData.Add(CVID.PATO_indifference, new TermInfo(CVID.PATO_indifference, @"PATO", @"PATO:0000772", @"indifference", @"A preference quality in a bearer by virtue of the bearer's having no preference to a perceived stimulus.", false));
            TermData.Add(CVID.PATO_preference, new TermInfo(CVID.PATO_preference, @"PATO", @"PATO:0000773", @"preference", @"A discrimination quality in a bearer by virtue of the bearer's liking a perceived stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_bizarre_gate_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bizarre_gate_OBSOLETE, @"PATO", @"PATO:0000774", @"obsolete bizarre gate", @"", true));
            TermData.Add(CVID.PATO_obsolete_learning_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_learning_value_OBSOLETE, @"PATO", @"PATO:0000775", @"obsolete learning value", @"", true));
            TermData.Add(CVID.PATO_obsolete_memory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_memory_value_OBSOLETE, @"PATO", @"PATO:0000776", @"obsolete memory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_long_term_memory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_long_term_memory_value_OBSOLETE, @"PATO", @"PATO:0000777", @"obsolete long term memory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_short_term_memory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_short_term_memory_value_OBSOLETE, @"PATO", @"PATO:0000778", @"obsolete short term memory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_locomotor_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_locomotor_activity_value_OBSOLETE, @"PATO", @"PATO:0000779", @"obsolete absolute locomotor activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_locomotor_activity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_locomotor_activity_value_OBSOLETE, @"PATO", @"PATO:0000780", @"obsolete relative locomotor activity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_circulatory_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_circulatory_function_value_OBSOLETE, @"PATO", @"PATO:0000781", @"obsolete circulatory function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_defensive_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_defensive_function_value_OBSOLETE, @"PATO", @"PATO:0000782", @"obsolete defensive function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_digestive_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_digestive_function_value_OBSOLETE, @"PATO", @"PATO:0000783", @"obsolete digestive function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_excretory_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_excretory_function_value_OBSOLETE, @"PATO", @"PATO:0000784", @"obsolete excretory function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_function_value_OBSOLETE, @"PATO", @"PATO:0000785", @"obsolete muscle function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_neural_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_neural_function_value_OBSOLETE, @"PATO", @"PATO:0000786", @"obsolete neural function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_neurobehavioral_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_neurobehavioral_function_value_OBSOLETE, @"PATO", @"PATO:0000787", @"obsolete neurobehavioral function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_reproductive_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_reproductive_function_value_OBSOLETE, @"PATO", @"PATO:0000788", @"obsolete reproductive function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_respiratory_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_respiratory_function_value_OBSOLETE, @"PATO", @"PATO:0000789", @"obsolete respiratory function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_heart_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_heart_rate_value_OBSOLETE, @"PATO", @"PATO:0000790", @"obsolete heart rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_immune_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immune_function_value_OBSOLETE, @"PATO", @"PATO:0000791", @"obsolete immune function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_repair_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_repair_function_value_OBSOLETE, @"PATO", @"PATO:0000792", @"obsolete repair function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_immubocompetent_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immubocompetent_value_OBSOLETE, @"PATO", @"PATO:0000793", @"obsolete immubocompetent value", @"", true));
            TermData.Add(CVID.PATO_obsolete_immunodeficient_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immunodeficient_value_OBSOLETE, @"PATO", @"PATO:0000794", @"obsolete immunodeficient value", @"", true));
            TermData.Add(CVID.PATO_obsolete_healing_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_healing_value_OBSOLETE, @"PATO", @"PATO:0000795", @"obsolete healing value", @"", true));
            TermData.Add(CVID.PATO_obsolete_regeneration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_regeneration_value_OBSOLETE, @"PATO", @"PATO:0000796", @"obsolete regeneration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_urination_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urination_value_OBSOLETE, @"PATO", @"PATO:0000797", @"obsolete urination value", @"", true));
            TermData.Add(CVID.PATO_obsolete_defecation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_defecation_value_OBSOLETE, @"PATO", @"PATO:0000798", @"obsolete defecation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_elevation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_elevation_value_OBSOLETE, @"PATO", @"PATO:0000799", @"obsolete muscle elevation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_muscle_strength_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_muscle_strength_value_OBSOLETE, @"PATO", @"PATO:0000800", @"obsolete muscle strength value", @"", true));
            TermData.Add(CVID.PATO_obsolete_motor_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_motor_function_value_OBSOLETE, @"PATO", @"PATO:0000801", @"obsolete motor function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_sensory_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_sensory_function_value_OBSOLETE, @"PATO", @"PATO:0000802", @"obsolete sensory function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_tactile_response_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_tactile_response_value_OBSOLETE, @"PATO", @"PATO:0000803", @"obsolete tactile response value", @"", true));
            TermData.Add(CVID.PATO_obsolete_motor_performance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_motor_performance_value_OBSOLETE, @"PATO", @"PATO:0000804", @"obsolete motor performance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_value_OBSOLETE, @"PATO", @"PATO:0000805", @"obsolete auditory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_olfactory_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_olfactory_value_OBSOLETE, @"PATO", @"PATO:0000806", @"obsolete olfactory value", @"", true));
            TermData.Add(CVID.PATO_obsolete_proprioreception_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_proprioreception_value_OBSOLETE, @"PATO", @"PATO:0000807", @"obsolete proprioreception value", @"", true));
            TermData.Add(CVID.PATO_obsolete_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_reflex_value_OBSOLETE, @"PATO", @"PATO:0000808", @"obsolete reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_value_OBSOLETE, @"PATO", @"PATO:0000809", @"obsolete taste value", @"", true));
            TermData.Add(CVID.PATO_obsolete_touch_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_touch_value_OBSOLETE, @"PATO", @"PATO:0000810", @"obsolete touch value", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_value_OBSOLETE, @"PATO", @"PATO:0000811", @"obsolete visual value", @"", true));
            TermData.Add(CVID.PATO_obsolete_odor_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_odor_acuity_value_OBSOLETE, @"PATO", @"PATO:0000812", @"obsolete odor acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_odor_type_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_odor_type_value_OBSOLETE, @"PATO", @"PATO:0000813", @"obsolete odor type value", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_acuity_value_OBSOLETE, @"PATO", @"PATO:0000814", @"obsolete taste acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_odor_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_odor_acuity_value_OBSOLETE, @"PATO", @"PATO:0000815", @"obsolete absolute odor acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_odor_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_odor_acuity_value_OBSOLETE, @"PATO", @"PATO:0000816", @"obsolete relative odor acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_anosmia_OBSOLETE, new TermInfo(CVID.PATO_obsolete_anosmia_OBSOLETE, @"PATO", @"PATO:0000817", @"obsolete anosmia", @"", true));
            TermData.Add(CVID.PATO_obsolete_concentration_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_concentration_quantity_OBSOLETE, @"PATO", @"PATO:0000818", @"obsolete concentration_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_quantity_OBSOLETE, @"PATO", @"PATO:0000819", @"obsolete quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_taste_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_taste_acuity_value_OBSOLETE, @"PATO", @"PATO:0000820", @"obsolete absolute taste acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_taste_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_taste_acuity_value_OBSOLETE, @"PATO", @"PATO:0000821", @"obsolete relative taste acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_taste_type_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_taste_type_value_OBSOLETE, @"PATO", @"PATO:0000822", @"obsolete taste type value", @"", true));
            TermData.Add(CVID.PATO_obsolete_quinine_taste_OBSOLETE, new TermInfo(CVID.PATO_obsolete_quinine_taste_OBSOLETE, @"PATO", @"PATO:0000823", @"obsolete quinine taste", @"", true));
            TermData.Add(CVID.PATO_obsolete_water_taste_OBSOLETE, new TermInfo(CVID.PATO_obsolete_water_taste_OBSOLETE, @"PATO", @"PATO:0000824", @"obsolete water taste", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_ability_value_OBSOLETE, @"PATO", @"PATO:0000825", @"obsolete visual ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_acuity_value_OBSOLETE, @"PATO", @"PATO:0000826", @"obsolete visual acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_threshold_value_OBSOLETE, @"PATO", @"PATO:0000827", @"obsolete visual threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_visual_placing_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_visual_placing_value_OBSOLETE, @"PATO", @"PATO:0000828", @"obsolete visual placing value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_ability_value_OBSOLETE, @"PATO", @"PATO:0000829", @"obsolete absolute visual ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_ability_value_OBSOLETE, @"PATO", @"PATO:0000830", @"obsolete relative visual ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_acuity_value_OBSOLETE, @"PATO", @"PATO:0000831", @"obsolete absolute visual acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_acuity_value_OBSOLETE, @"PATO", @"PATO:0000832", @"obsolete relative visual acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_visual_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_visual_threshold_value_OBSOLETE, @"PATO", @"PATO:0000833", @"obsolete absolute visual threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_visual_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_visual_threshold_value_OBSOLETE, @"PATO", @"PATO:0000834", @"obsolete relative visual threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_acuity_value_OBSOLETE, @"PATO", @"PATO:0000835", @"obsolete auditory acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_ability_value_OBSOLETE, @"PATO", @"PATO:0000836", @"obsolete auditory ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_threshold_value_OBSOLETE, @"PATO", @"PATO:0000837", @"obsolete auditory threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_ability_value_OBSOLETE, @"PATO", @"PATO:0000838", @"obsolete absolute auditory ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_ability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_ability_value_OBSOLETE, @"PATO", @"PATO:0000839", @"obsolete relative auditory ability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_acuity_value_OBSOLETE, @"PATO", @"PATO:0000840", @"obsolete absolute auditory acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_acuity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_acuity_value_OBSOLETE, @"PATO", @"PATO:0000841", @"obsolete relative auditory acuity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_threshold_value_OBSOLETE, @"PATO", @"PATO:0000842", @"obsolete absolute auditory threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_threshold_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_threshold_value_OBSOLETE, @"PATO", @"PATO:0000843", @"obsolete relative auditory threshold value", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_acuity_OBSOLETE, @"PATO", @"PATO:0000844", @"obsolete auditory acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_ability_OBSOLETE, @"PATO", @"PATO:0000845", @"obsolete auditory ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_auditory_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_auditory_threshold_OBSOLETE, @"PATO", @"PATO:0000846", @"obsolete auditory threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_acuity_OBSOLETE, @"PATO", @"PATO:0000847", @"obsolete absolute auditory acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_acuity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_acuity_OBSOLETE, @"PATO", @"PATO:0000848", @"obsolete relative auditory acuity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_ability_OBSOLETE, @"PATO", @"PATO:0000849", @"obsolete absolute auditory ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_ability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_ability_OBSOLETE, @"PATO", @"PATO:0000850", @"obsolete relative auditory ability", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_auditory_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_auditory_threshold_OBSOLETE, @"PATO", @"PATO:0000851", @"obsolete absolute auditory threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_auditory_threshold_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_auditory_threshold_OBSOLETE, @"PATO", @"PATO:0000852", @"obsolete relative auditory threshold", @"", true));
            TermData.Add(CVID.PATO_obsolete_blinking_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_blinking_reflex_value_OBSOLETE, @"PATO", @"PATO:0000853", @"obsolete blinking reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_contact_righting_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_contact_righting_reflex_value_OBSOLETE, @"PATO", @"PATO:0000854", @"obsolete contact righting reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_corneal_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_corneal_reflex_value_OBSOLETE, @"PATO", @"PATO:0000855", @"obsolete corneal reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_flinch_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flinch_reflex_value_OBSOLETE, @"PATO", @"PATO:0000856", @"obsolete flinch reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_lordosis_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_lordosis_reflex_value_OBSOLETE, @"PATO", @"PATO:0000857", @"obsolete lordosis reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ocular_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ocular_reflex_value_OBSOLETE, @"PATO", @"PATO:0000858", @"obsolete ocular reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_pinna_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pinna_reflex_value_OBSOLETE, @"PATO", @"PATO:0000859", @"obsolete pinna reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_postural_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_postural_reflex_value_OBSOLETE, @"PATO", @"PATO:0000860", @"obsolete postural reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_proboscis_extension_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_proboscis_extension_reflex_value_OBSOLETE, @"PATO", @"PATO:0000861", @"obsolete proboscis extension reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_pupillary_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pupillary_reflex_value_OBSOLETE, @"PATO", @"PATO:0000862", @"obsolete pupillary reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_righting_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_righting_reflex_value_OBSOLETE, @"PATO", @"PATO:0000863", @"obsolete righting reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_spinal_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_spinal_reflex_value_OBSOLETE, @"PATO", @"PATO:0000864", @"obsolete spinal reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_startle_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_startle_reflex_value_OBSOLETE, @"PATO", @"PATO:0000865", @"obsolete startle reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_suckling_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_suckling_reflex_value_OBSOLETE, @"PATO", @"PATO:0000866", @"obsolete suckling reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_swallowing_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_swallowing_reflex_value_OBSOLETE, @"PATO", @"PATO:0000867", @"obsolete swallowing reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_vibrissae_reflex_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_vibrissae_reflex_value_OBSOLETE, @"PATO", @"PATO:0000868", @"obsolete vibrissae reflex value", @"", true));
            TermData.Add(CVID.PATO_obsolete_prepulse_inhibition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_prepulse_inhibition_value_OBSOLETE, @"PATO", @"PATO:0000869", @"obsolete prepulse inhibition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_neurobehavioral_function_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_neurobehavioral_function_value_OBSOLETE, @"PATO", @"PATO:0000870", @"obsolete relative neurobehavioral function value", @"", true));
            TermData.Add(CVID.PATO_obsolete_aggressive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_aggressive_OBSOLETE, @"PATO", @"PATO:0000871", @"obsolete aggressive", @"", true));
            TermData.Add(CVID.PATO_obsolete_anxious_OBSOLETE, new TermInfo(CVID.PATO_obsolete_anxious_OBSOLETE, @"PATO", @"PATO:0000872", @"obsolete anxious", @"", true));
            TermData.Add(CVID.PATO_obsolete_cataleptic_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cataleptic_OBSOLETE, @"PATO", @"PATO:0000873", @"obsolete cataleptic", @"", true));
            TermData.Add(CVID.PATO_obsolete_fearful_OBSOLETE, new TermInfo(CVID.PATO_obsolete_fearful_OBSOLETE, @"PATO", @"PATO:0000874", @"obsolete fearful", @"", true));
            TermData.Add(CVID.PATO_obsolete_irritable_OBSOLETE, new TermInfo(CVID.PATO_obsolete_irritable_OBSOLETE, @"PATO", @"PATO:0000875", @"obsolete irritable", @"", true));
            TermData.Add(CVID.PATO_obsolete_respiratory_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_respiratory_rate_value_OBSOLETE, @"PATO", @"PATO:0000876", @"obsolete respiratory rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_respiratory_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_respiratory_rate_value_OBSOLETE, @"PATO", @"PATO:0000877", @"obsolete absolute respiratory rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_respiratory_rate_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_respiratory_rate_value_OBSOLETE, @"PATO", @"PATO:0000878", @"obsolete relative respiratory rate value", @"", true));
            TermData.Add(CVID.PATO_obsolete_fecundity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_fecundity_value_OBSOLETE, @"PATO", @"PATO:0000879", @"obsolete fecundity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_fertility_value_OBSOLETE, @"PATO", @"PATO:0000880", @"obsolete fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_gestational_period_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_gestational_period_value_OBSOLETE, @"PATO", @"PATO:0000881", @"obsolete gestational period value", @"", true));
            TermData.Add(CVID.PATO_obsolete_litter_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_litter_size_value_OBSOLETE, @"PATO", @"PATO:0000882", @"obsolete litter size value", @"", true));
            TermData.Add(CVID.PATO_obsolete_female_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_female_fertility_value_OBSOLETE, @"PATO", @"PATO:0000883", @"obsolete female fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_hybrid_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_hybrid_fertility_value_OBSOLETE, @"PATO", @"PATO:0000884", @"obsolete hybrid fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_male_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_male_fertility_value_OBSOLETE, @"PATO", @"PATO:0000885", @"obsolete male fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_litter_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_litter_size_value_OBSOLETE, @"PATO", @"PATO:0000886", @"obsolete absolute litter size value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_litter_size_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_litter_size_value_OBSOLETE, @"PATO", @"PATO:0000887", @"obsolete relative litter size value", @"", true));
            TermData.Add(CVID.PATO_female_fertile, new TermInfo(CVID.PATO_female_fertile, @"PATO", @"PATO:0000888", @"female fertile", @"A female fertility quality inhering in a female by virtue of the bearer's disposition to initiate, sustain, or support reproduction.", false));
            TermData.Add(CVID.PATO_obsolete_cytoplasmic_male_sterility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cytoplasmic_male_sterility_value_OBSOLETE, @"PATO", @"PATO:0000889", @"obsolete cytoplasmic male sterility value", @"", true));
            TermData.Add(CVID.PATO_male_sterile, new TermInfo(CVID.PATO_male_sterile, @"PATO", @"PATO:0000890", @"male sterile", @"A male fertility quality inhering in a male by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_male_fertile, new TermInfo(CVID.PATO_male_fertile, @"PATO", @"PATO:0000891", @"male fertile", @"A male fertility quality inhering in a male by virtue of the bearer's being capable of initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_female_sterile, new TermInfo(CVID.PATO_female_sterile, @"PATO", @"PATO:0000892", @"female sterile", @"A female fertility quality inhering in a female by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_obsolete_backcross_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_backcross_fertility_value_OBSOLETE, @"PATO", @"PATO:0000893", @"obsolete backcross fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_cytoplasmic_sterility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cytoplasmic_sterility_value_OBSOLETE, @"PATO", @"PATO:0000894", @"obsolete cytoplasmic sterility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_f1_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f1_fertility_value_OBSOLETE, @"PATO", @"PATO:0000895", @"obsolete f1 fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_f2_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f2_fertility_value_OBSOLETE, @"PATO", @"PATO:0000896", @"obsolete f2 fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_germ_line_dependent_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_germ_line_dependent_fertility_value_OBSOLETE, @"PATO", @"PATO:0000897", @"obsolete germ line dependent fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_intercross_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intercross_fertility_value_OBSOLETE, @"PATO", @"PATO:0000898", @"obsolete intercross fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_soma_dependent_fertility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_soma_dependent_fertility_value_OBSOLETE, @"PATO", @"PATO:0000899", @"obsolete soma dependent fertility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_backcross_fertile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_backcross_fertile_OBSOLETE, @"PATO", @"PATO:0000900", @"obsolete backcross fertile", @"", true));
            TermData.Add(CVID.PATO_obsolete_backcross_sterile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_backcross_sterile_OBSOLETE, @"PATO", @"PATO:0000901", @"obsolete backcross sterile", @"", true));
            TermData.Add(CVID.PATO_obsolete_chinsurah_boro_type_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_chinsurah_boro_type_value_OBSOLETE, @"PATO", @"PATO:0000902", @"obsolete chinsurah boro type value", @"", true));
            TermData.Add(CVID.PATO_obsolete_cms_hl_type_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cms_hl_type_value_OBSOLETE, @"PATO", @"PATO:0000903", @"obsolete cms-hl type value", @"", true));
            TermData.Add(CVID.PATO_obsolete_wild_abortive_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_wild_abortive_value_OBSOLETE, @"PATO", @"PATO:0000904", @"obsolete wild abortive value", @"", true));
            TermData.Add(CVID.PATO_obsolete_f1_fertile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f1_fertile_OBSOLETE, @"PATO", @"PATO:0000905", @"obsolete f1 fertile", @"", true));
            TermData.Add(CVID.PATO_obsolete_f1_sterile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f1_sterile_OBSOLETE, @"PATO", @"PATO:0000906", @"obsolete f1 sterile", @"", true));
            TermData.Add(CVID.PATO_obsolete_f2_fertile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f2_fertile_OBSOLETE, @"PATO", @"PATO:0000907", @"obsolete f2 fertile", @"", true));
            TermData.Add(CVID.PATO_obsolete_f2_sterile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_f2_sterile_OBSOLETE, @"PATO", @"PATO:0000908", @"obsolete f2 sterile", @"", true));
            TermData.Add(CVID.PATO_obsolete_intercross_fertile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intercross_fertile_OBSOLETE, @"PATO", @"PATO:0000909", @"obsolete intercross fertile", @"", true));
            TermData.Add(CVID.PATO_obsolete_intercross_sterile_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intercross_sterile_OBSOLETE, @"PATO", @"PATO:0000910", @"obsolete intercross sterile", @"", true));
            TermData.Add(CVID.PATO_decreased_rate, new TermInfo(CVID.PATO_decreased_rate, @"PATO", @"PATO:0000911", @"decreased rate", @"A rate which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_rate, new TermInfo(CVID.PATO_increased_rate, @"PATO", @"PATO:0000912", @"increased rate", @"A rate which is relatively high.", false));
            TermData.Add(CVID.PATO_obsolete_qualitative_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_qualitative_value_OBSOLETE, @"PATO", @"PATO:0000913", @"obsolete qualitative value", @"", true));
            TermData.Add(CVID.PATO_obsolete_continuant_OBSOLETE, new TermInfo(CVID.PATO_obsolete_continuant_OBSOLETE, @"PATO", @"PATO:0000914", @"obsolete continuant", @"", true));
            TermData.Add(CVID.PATO_thickness, new TermInfo(CVID.PATO_thickness, @"PATO", @"PATO:0000915", @"thickness", @"A 1-D extent quality which is equal to the dimension through an object as opposed to its length or width.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_thickness_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_thickness_OBSOLETE, @"PATO", @"PATO:0000916", @"obsolete absolute thickness", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_thickness_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_thickness_OBSOLETE, @"PATO", @"PATO:0000917", @"obsolete relative thickness", @"", true));
            TermData.Add(CVID.PATO_volume, new TermInfo(CVID.PATO_volume, @"PATO", @"PATO:0000918", @"volume", @"A 3-D extent quality inhering in a bearer by virtue of the bearer's amount of 3-dimensional space it occupies.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_volume_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_volume_OBSOLETE, @"PATO", @"PATO:0000919", @"obsolete absolute volume", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_volume_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_volume_OBSOLETE, @"PATO", @"PATO:0000920", @"obsolete relative volume", @"", true));
            TermData.Add(CVID.PATO_width, new TermInfo(CVID.PATO_width, @"PATO", @"PATO:0000921", @"width", @"A 1-D extent quality which is equal to the distance from one side of an object to another side which is opposite.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_width_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_width_OBSOLETE, @"PATO", @"PATO:0000922", @"obsolete absolute width", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_width_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_width_OBSOLETE, @"PATO", @"PATO:0000923", @"obsolete relative width", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_enzyme_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_enzyme_function_OBSOLETE, @"PATO", @"PATO:0000924", @"obsolete relative enzyme function", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_enzyme_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_enzyme_function_OBSOLETE, @"PATO", @"PATO:0000925", @"obsolete absolute enzyme function", @"", true));
            TermData.Add(CVID.PATO_obsolete_intercross_fertility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_intercross_fertility_OBSOLETE, @"PATO", @"PATO:0000926", @"obsolete intercross fertility", @"", true));
            TermData.Add(CVID.PATO_photosensitivity, new TermInfo(CVID.PATO_photosensitivity, @"PATO", @"PATO:0000927", @"photosensitivity", @"A quality inhering in a bearer by virtue of the bearer's disposition to being sensitivity to the action of radiant energy.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_photosensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_photosensitivity_OBSOLETE, @"PATO", @"PATO:0000928", @"obsolete absolute photosensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_light_intensivity_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_light_intensivity_sensitivity_OBSOLETE, @"PATO", @"PATO:0000929", @"obsolete light intensivity sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_light_quality_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_light_quality_sensitivity_OBSOLETE, @"PATO", @"PATO:0000930", @"obsolete light_quality sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_blue_light_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_blue_light_sensitivity_OBSOLETE, @"PATO", @"PATO:0000931", @"obsolete blue light sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_far_red_light_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_far_red_light_sensitivity_OBSOLETE, @"PATO", @"PATO:0000932", @"obsolete far red light sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_red_light_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_red_light_sensitivity_OBSOLETE, @"PATO", @"PATO:0000933", @"obsolete red light sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_u_v_light_sensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_u_v_light_sensitivity_OBSOLETE, @"PATO", @"PATO:0000934", @"obsolete u v light sensitivity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_photosensitivity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_photosensitivity_OBSOLETE, @"PATO", @"PATO:0000935", @"obsolete relative photosensitivity", @"", true));
            TermData.Add(CVID.PATO_truncated, new TermInfo(CVID.PATO_truncated, @"PATO", @"PATO:0000936", @"truncated", @"A shape quality inhering in a bearer by virtue of the bearer's terminating abruptly by having or as if having an end or point cut off.", false));
            TermData.Add(CVID.PATO_disorganized, new TermInfo(CVID.PATO_disorganized, @"PATO", @"PATO:0000937", @"disorganized", @"A structural quality inhering in a bearer by virtue of the bearer's lacking organisation.", false));
            TermData.Add(CVID.PATO_organized, new TermInfo(CVID.PATO_organized, @"PATO", @"PATO:0000938", @"organized", @"A structural quality inhering in a bearer by virtue of the bearer's exhibiting organisation.", false));
            TermData.Add(CVID.PATO_obsolete_regular_shape_OBSOLETE, new TermInfo(CVID.PATO_obsolete_regular_shape_OBSOLETE, @"PATO", @"PATO:0000939", @"obsolete regular shape", @"", true));
            TermData.Add(CVID.PATO_obsolete_irregular_shape_OBSOLETE, new TermInfo(CVID.PATO_obsolete_irregular_shape_OBSOLETE, @"PATO", @"PATO:0000940", @"obsolete irregular shape", @"", true));
            TermData.Add(CVID.PATO_vacuolated, new TermInfo(CVID.PATO_vacuolated, @"PATO", @"PATO:0000941", @"vacuolated", @"A structural quality inhering in a cytoplasm that contains fluid filled cavities.", false));
            TermData.Add(CVID.PATO_sharpness, new TermInfo(CVID.PATO_sharpness, @"PATO", @"PATO:0000944", @"sharpness", @"A shape quality inhering in a bearer by virtue of the bearer's having a sharp or tapered end or point.", false));
            TermData.Add(CVID.PATO_epinastic, new TermInfo(CVID.PATO_epinastic, @"PATO", @"PATO:0000945", @"epinastic", @"A shape quality inhering in a bearer by virtue of the bearer's exhibiting a downward bending of its leaves or other plant parts.", false));
            TermData.Add(CVID.PATO_oblong, new TermInfo(CVID.PATO_oblong, @"PATO", @"PATO:0000946", @"oblong", @"A shape quality inhering in a bearer by virtue of the bearer's having a somewhat elongated form with approximately parallel sides.", false));
            TermData.Add(CVID.PATO_elliptic, new TermInfo(CVID.PATO_elliptic, @"PATO", @"PATO:0000947", @"elliptic", @"A spheroid quality inhering in a bearer by virtue of the bearer's being oval with two axes of symmetry, as produced by a conical section.", false));
            TermData.Add(CVID.PATO_heart_shaped, new TermInfo(CVID.PATO_heart_shaped, @"PATO", @"PATO:0000948", @"heart shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having a sinus or rounded lobe at the base.", false));
            TermData.Add(CVID.PATO_fasciated, new TermInfo(CVID.PATO_fasciated, @"PATO", @"PATO:0000949", @"fasciated", @"A shape quality inhering in a bearer by virtue of the bearer's being abnormally flattened or coalesced.", false));
            TermData.Add(CVID.PATO_grey, new TermInfo(CVID.PATO_grey, @"PATO", @"PATO:0000950", @"grey", @"A color between white and black colors.", false));
            TermData.Add(CVID.PATO_purple, new TermInfo(CVID.PATO_purple, @"PATO", @"PATO:0000951", @"purple", @"A color that falls about midway between red and blue in hue.", false));
            TermData.Add(CVID.PATO_brown, new TermInfo(CVID.PATO_brown, @"PATO", @"PATO:0000952", @"brown", @"A color consisting of dark orange, red, of very low intensity.", false));
            TermData.Add(CVID.PATO_orange, new TermInfo(CVID.PATO_orange, @"PATO", @"PATO:0000953", @"orange", @"A color hue with high-medium wavelength that of that portion of the visible spectrum lying between red and yellow, evoked in the human observer by radiant energy with wavelengths of approximately 585 to 620 nanometers.", false));
            TermData.Add(CVID.PATO_pink, new TermInfo(CVID.PATO_pink, @"PATO", @"PATO:0000954", @"pink", @"Red color having medium to high brightness and low to moderate saturation.", false));
            TermData.Add(CVID.PATO_fertile, new TermInfo(CVID.PATO_fertile, @"PATO", @"PATO:0000955", @"fertile", @"A fertility quality inhering in a bearer by virtue of the bearer's being capable of initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_sterile, new TermInfo(CVID.PATO_sterile, @"PATO", @"PATO:0000956", @"sterile", @"A fertility quality inhering in a bearer by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction.", false));
            TermData.Add(CVID.PATO_opacity, new TermInfo(CVID.PATO_opacity, @"PATO", @"PATO:0000957", @"opacity", @"An optical quality which obtains by virtue of the ability of the bearer to absorb visible light.", false));
            TermData.Add(CVID.PATO_obsolete_opacity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_opacity_value_OBSOLETE, @"PATO", @"PATO:0000958", @"obsolete opacity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_opacity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_opacity_OBSOLETE, @"PATO", @"PATO:0000959", @"obsolete relative opacity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_opacity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_opacity_OBSOLETE, @"PATO", @"PATO:0000960", @"obsolete absolute opacity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_opacity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_opacity_value_OBSOLETE, @"PATO", @"PATO:0000961", @"obsolete relative opacity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_opacity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_opacity_value_OBSOLETE, @"PATO", @"PATO:0000962", @"obsolete absolute opacity value", @"", true));
            TermData.Add(CVID.PATO_opaque, new TermInfo(CVID.PATO_opaque, @"PATO", @"PATO:0000963", @"opaque", @"A optical quality inhering in a bearer by virtue of the bearer's not being clear; not transmitting or reflecting light or radiant energy.", false));
            TermData.Add(CVID.PATO_transparent, new TermInfo(CVID.PATO_transparent, @"PATO", @"PATO:0000964", @"transparent", @"A optical quality inhering in a bearer by virtue of the bearer's lacking opacity.", false));
            TermData.Add(CVID.PATO_symmetry, new TermInfo(CVID.PATO_symmetry, @"PATO", @"PATO:0000965", @"symmetry", @"A pattern quality of inhering in a bearer by virtue of the correspondence in size, shape, and relative position of the bearer's parts on opposite sides of a dividing line or median plane or about a center or axis.", false));
            TermData.Add(CVID.PATO_obsolete_symmetry_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_symmetry_value_OBSOLETE, @"PATO", @"PATO:0000966", @"obsolete symmetry value", @"", true));
            TermData.Add(CVID.PATO_undulate, new TermInfo(CVID.PATO_undulate, @"PATO", @"PATO:0000967", @"undulate", @"A shape quality inhering in a bearer by virtue of the bearer's having a sinuate margin and rippled surface.", false));
            TermData.Add(CVID.PATO_obsolete_albino_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_albino_value_OBSOLETE, @"PATO", @"PATO:0000968", @"obsolete albino value", @"", true));
            TermData.Add(CVID.PATO_dwarf_like, new TermInfo(CVID.PATO_dwarf_like, @"PATO", @"PATO:0000969", @"dwarf-like", @"A size quality inhering in a bearer by virtue of the bearer's being abnormally small.", false));
            TermData.Add(CVID.PATO_permeability, new TermInfo(CVID.PATO_permeability, @"PATO", @"PATO:0000970", @"permeability", @"A structural quality inhering in a bearer by virtue of the bearer's disposition to being permeated or pervaded by a gas or liquid (as by osmosis or diffusion).", false));
            TermData.Add(CVID.PATO_obsolete_absolute_permeability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_permeability_OBSOLETE, @"PATO", @"PATO:0000971", @"obsolete absolute permeability", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_permeability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_permeability_OBSOLETE, @"PATO", @"PATO:0000972", @"obsolete relative permeability", @"", true));
            TermData.Add(CVID.PATO_porosity, new TermInfo(CVID.PATO_porosity, @"PATO", @"PATO:0000973", @"porosity", @"A permeability quality inhering in a bearer by virtue of the bearer's disposition to admit the passage of gas or liquid through pores or interstices.", false));
            TermData.Add(CVID.PATO_obsolete_relative_porosity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_porosity_OBSOLETE, @"PATO", @"PATO:0000974", @"obsolete relative porosity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_porosity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_porosity_OBSOLETE, @"PATO", @"PATO:0000975", @"obsolete absolute porosity", @"", true));
            TermData.Add(CVID.PATO_obsolete_permeability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_permeability_value_OBSOLETE, @"PATO", @"PATO:0000976", @"obsolete permeability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_permeability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_permeability_value_OBSOLETE, @"PATO", @"PATO:0000977", @"obsolete absolute permeability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_permeability_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_permeability_value_OBSOLETE, @"PATO", @"PATO:0000978", @"obsolete relative permeability value", @"", true));
            TermData.Add(CVID.PATO_obsolete_porosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_porosity_value_OBSOLETE, @"PATO", @"PATO:0000979", @"obsolete porosity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_porosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_porosity_value_OBSOLETE, @"PATO", @"PATO:0000980", @"obsolete absolute porosity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_porosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_porosity_value_OBSOLETE, @"PATO", @"PATO:0000981", @"obsolete relative porosity value", @"", true));
            TermData.Add(CVID.PATO_permeable, new TermInfo(CVID.PATO_permeable, @"PATO", @"PATO:0000982", @"permeable", @"A permeability quality inhering in a bearer by virtue of the bearer's being capable to be permeated or pervaded by a gas or liquid (as by osmosis or diffusion).", false));
            TermData.Add(CVID.PATO_impermeable, new TermInfo(CVID.PATO_impermeable, @"PATO", @"PATO:0000983", @"impermeable", @"A permeability quality inhering in a bearer by virtue of the bearer's being incapable of being permeated or pervaded by a gas or liquid (as by osmosis or diffusion).", false));
            TermData.Add(CVID.PATO_porous, new TermInfo(CVID.PATO_porous, @"PATO", @"PATO:0000984", @"porous", @"A porosity quality inhering in a bearer by virtue of the bearer's being capable of admitting the passage of gas or liquid through pores or interstices.", false));
            TermData.Add(CVID.PATO_non_porous, new TermInfo(CVID.PATO_non_porous, @"PATO", @"PATO:0000985", @"non-porous", @"A porosity quality inhering in a bearer by virtue of the bearer's being incapable of admitting the passage of gas or liquid through pores or interstices.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_consistency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_consistency_OBSOLETE, @"PATO", @"PATO:0000986", @"obsolete absolute consistency", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_consistency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_consistency_OBSOLETE, @"PATO", @"PATO:0000987", @"obsolete relative consistency", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_consistency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_consistency_value_OBSOLETE, @"PATO", @"PATO:0000988", @"obsolete relative consistency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_consistency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_consistency_value_OBSOLETE, @"PATO", @"PATO:0000989", @"obsolete absolute consistency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_consistent_OBSOLETE, new TermInfo(CVID.PATO_obsolete_consistent_OBSOLETE, @"PATO", @"PATO:0000990", @"obsolete consistent", @"", true));
            TermData.Add(CVID.PATO_obsolete_inconsistent_OBSOLETE, new TermInfo(CVID.PATO_obsolete_inconsistent_OBSOLETE, @"PATO", @"PATO:0000991", @"obsolete inconsistent", @"", true));
            TermData.Add(CVID.PATO_viscosity, new TermInfo(CVID.PATO_viscosity, @"PATO", @"PATO:0000992", @"viscosity", @"A physical quality of a liquid inhering in a bearer by virtue of the bearer's disposition to internal resistance to flow.", false));
            TermData.Add(CVID.PATO_obsolete_relative_viscosity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_viscosity_OBSOLETE, @"PATO", @"PATO:0000993", @"obsolete relative viscosity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_viscosity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_viscosity_OBSOLETE, @"PATO", @"PATO:0000994", @"obsolete absolute viscosity", @"", true));
            TermData.Add(CVID.PATO_obsolete_viscosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_viscosity_value_OBSOLETE, @"PATO", @"PATO:0000995", @"obsolete viscosity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_viscosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_viscosity_value_OBSOLETE, @"PATO", @"PATO:0000996", @"obsolete absolute viscosity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_viscosity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_viscosity_value_OBSOLETE, @"PATO", @"PATO:0000997", @"obsolete relative viscosity value", @"", true));
            TermData.Add(CVID.PATO_viscous, new TermInfo(CVID.PATO_viscous, @"PATO", @"PATO:0000998", @"viscous", @"A viscosity quality inhering in a bearer by virtue of the bearer's having viscosity.", false));
            TermData.Add(CVID.PATO_alternation, new TermInfo(CVID.PATO_alternation, @"PATO", @"PATO:0000999", @"alternation", @"A quality of a single process inhering in a bearer by virtue of the bearer's successive change from one thing or state to another and back again.", false));
            TermData.Add(CVID.PATO_obsolete_relative_alternation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_alternation_OBSOLETE, @"PATO", @"PATO:0001000", @"obsolete relative alternation", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_alternation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_alternation_OBSOLETE, @"PATO", @"PATO:0001001", @"obsolete absolute alternation", @"", true));
            TermData.Add(CVID.PATO_obsolete_alternation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_alternation_value_OBSOLETE, @"PATO", @"PATO:0001002", @"obsolete alternation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_alternation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_alternation_value_OBSOLETE, @"PATO", @"PATO:0001003", @"obsolete relative alternation value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_alternation_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_alternation_value_OBSOLETE, @"PATO", @"PATO:0001004", @"obsolete absolute alternation value", @"", true));
            TermData.Add(CVID.PATO_latency, new TermInfo(CVID.PATO_latency, @"PATO", @"PATO:0001005", @"latency", @"A time quality inhering in a bearer by virtue of the time it elapses for the bearer to respond to a stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_latency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_latency_OBSOLETE, @"PATO", @"PATO:0001006", @"obsolete absolute latency", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_latency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_latency_OBSOLETE, @"PATO", @"PATO:0001007", @"obsolete relative latency", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_latency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_latency_value_OBSOLETE, @"PATO", @"PATO:0001008", @"obsolete absolute latency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_latency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_latency_value_OBSOLETE, @"PATO", @"PATO:0001009", @"obsolete relative latency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_intensity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_intensity_OBSOLETE, @"PATO", @"PATO:0001010", @"obsolete relative intensity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_intensity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_intensity_OBSOLETE, @"PATO", @"PATO:0001011", @"obsolete absolute intensity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_intensity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_intensity_value_OBSOLETE, @"PATO", @"PATO:0001012", @"obsolete relative intensity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_intensity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_intensity_value_OBSOLETE, @"PATO", @"PATO:0001013", @"obsolete absolute intensity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_occurence_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_occurence_OBSOLETE, @"PATO", @"PATO:0001014", @"obsolete absolute occurence", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_occurence_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_occurence_OBSOLETE, @"PATO", @"PATO:0001015", @"obsolete relative occurence", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_occurence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_occurence_value_OBSOLETE, @"PATO", @"PATO:0001016", @"obsolete absolute occurence value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_occurence_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_occurence_value_OBSOLETE, @"PATO", @"PATO:0001017", @"obsolete relative occurence value", @"", true));
            TermData.Add(CVID.PATO_physical_quality, new TermInfo(CVID.PATO_physical_quality, @"PATO", @"PATO:0001018", @"physical quality", @"A quality of a physical entity that exists through action of continuants at the physical level of organisation in relation to other entities.", false));
            TermData.Add(CVID.PATO_mass_density, new TermInfo(CVID.PATO_mass_density, @"PATO", @"PATO:0001019", @"mass density", @"A physical quality which inheres in a bearer by virtue of some influence is exerted by the bearer's mass per unit size.", false));
            TermData.Add(CVID.PATO_damage, new TermInfo(CVID.PATO_damage, @"PATO", @"PATO:0001020", @"damage", @"A structural quality inhering in a bearer by virtue of whether the bearer has been harmed or injured or spoiled.", false));
            TermData.Add(CVID.PATO_energy, new TermInfo(CVID.PATO_energy, @"PATO", @"PATO:0001021", @"energy", @"A physical quality inhering in a bearer by virtue of the bearer's capacity to do work.", false));
            TermData.Add(CVID.PATO_impulse, new TermInfo(CVID.PATO_impulse, @"PATO", @"PATO:0001022", @"impulse", @"A physical quality inhering in a bearer by virtue of the amount of momentum caused a certain force will produce over time.", false));
            TermData.Add(CVID.PATO_momentum, new TermInfo(CVID.PATO_momentum, @"PATO", @"PATO:0001023", @"momentum", @"A physical quality inhering in a bearer by virtue of the bearer's velocity multiplied by its mass.", false));
            TermData.Add(CVID.PATO_power, new TermInfo(CVID.PATO_power, @"PATO", @"PATO:0001024", @"power", @"A physical quality inhering in a bearer by virtue of the bearer's rate of doing work.", false));
            TermData.Add(CVID.PATO_pressure, new TermInfo(CVID.PATO_pressure, @"PATO", @"PATO:0001025", @"pressure", @"A physical quality that inheres in a bearer by virtue of the bearer's amount of force per unit area it exerts.", false));
            TermData.Add(CVID.PATO_work, new TermInfo(CVID.PATO_work, @"PATO", @"PATO:0001026", @"work", @"A physical quality which is equal to the energy transferred by a force to a moving object.", false));
            TermData.Add(CVID.PATO_obsolete_physical_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_physical_quantity_OBSOLETE, @"PATO", @"PATO:0001027", @"obsolete physical quantity", @"", true));
            TermData.Add(CVID.PATO_acceleration, new TermInfo(CVID.PATO_acceleration, @"PATO", @"PATO:0001028", @"acceleration", @"A physical quality inhering in a bearer by virtue of the rate of change of the bearer's velocity in either speed or direction.", false));
            TermData.Add(CVID.PATO_efficiency, new TermInfo(CVID.PATO_efficiency, @"PATO", @"PATO:0001029", @"efficiency", @"A physical quality inhering in a bearer by virtue of ratio of the bearer's output to the bearer's input.", false));
            TermData.Add(CVID.PATO_flux, new TermInfo(CVID.PATO_flux, @"PATO", @"PATO:0001030", @"flux", @"A physical quality that exists by virtue of the rate of flow of the bearer across a given surface.", false));
            TermData.Add(CVID.PATO_elasticity, new TermInfo(CVID.PATO_elasticity, @"PATO", @"PATO:0001031", @"elasticity", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to recover its size and shape after deformation in any way.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 2</summary>
        private static void PopulateTermData_PATO_Part2()
        {
            TermData.Add(CVID.PATO_obsolete_stiffness_OBSOLETE, new TermInfo(CVID.PATO_obsolete_stiffness_OBSOLETE, @"PATO", @"PATO:0001033", @"obsolete stiffness", @"", true));
            TermData.Add(CVID.PATO_strain, new TermInfo(CVID.PATO_strain, @"PATO", @"PATO:0001034", @"strain", @"A physical quality inhering in a bearer by virtue of the relative change in the bearer's length or the bearer's volume when being stretched or squashed.", false));
            TermData.Add(CVID.PATO_force, new TermInfo(CVID.PATO_force, @"PATO", @"PATO:0001035", @"force", @"A physical quality inhering in a bearer by virtue of the bearer's rate of change of momentum.", false));
            TermData.Add(CVID.PATO_obsolete_relative_life_span_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_life_span_OBSOLETE, @"PATO", @"PATO:0001036", @"obsolete relative life span", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_life_span_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_life_span_OBSOLETE, @"PATO", @"PATO:0001037", @"obsolete absolute life span", @"", true));
            TermData.Add(CVID.PATO_obsolete_ratio_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ratio_OBSOLETE, @"PATO", @"PATO:0001038", @"obsolete ratio", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_ratio_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_ratio_OBSOLETE, @"PATO", @"PATO:0001039", @"obsolete absolute ratio", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_ratio_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_ratio_OBSOLETE, @"PATO", @"PATO:0001040", @"obsolete relative ratio", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_amplitude_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_amplitude_OBSOLETE, @"PATO", @"PATO:0001041", @"obsolete relative amplitude", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_amplitude_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_amplitude_OBSOLETE, @"PATO", @"PATO:0001042", @"obsolete absolute amplitude", @"", true));
            TermData.Add(CVID.PATO_susceptibility_toward, new TermInfo(CVID.PATO_susceptibility_toward, @"PATO", @"PATO:0001043", @"susceptibility toward", @"A quality inhering in an entity by virtue of the bearer's propensity to resist an external stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_power_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_power_OBSOLETE, @"PATO", @"PATO:0001044", @"obsolete absolute power", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_power_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_power_OBSOLETE, @"PATO", @"PATO:0001045", @"obsolete relative power", @"", true));
            TermData.Add(CVID.PATO_resistance_to, new TermInfo(CVID.PATO_resistance_to, @"PATO", @"PATO:0001046", @"resistance to", @"A quality inhering in a bearer by virtue of the bearer's disposition to resist to a stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_resistance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_resistance_OBSOLETE, @"PATO", @"PATO:0001047", @"obsolete absolute resistance", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_resistance_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_resistance_OBSOLETE, @"PATO", @"PATO:0001048", @"obsolete relative resistance", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_susceptibility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_susceptibility_OBSOLETE, @"PATO", @"PATO:0001049", @"obsolete absolute susceptibility", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_susceptibility_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_susceptibility_OBSOLETE, @"PATO", @"PATO:0001050", @"obsolete relative susceptibility", @"", true));
            TermData.Add(CVID.PATO_acute_angle_to, new TermInfo(CVID.PATO_acute_angle_to, @"PATO", @"PATO:0001051", @"acute angle to", @"An angle which is less than 90 degrees.", false));
            TermData.Add(CVID.PATO_obtuse_angle_to, new TermInfo(CVID.PATO_obtuse_angle_to, @"PATO", @"PATO:0001052", @"obtuse angle to", @"An angle which is between 90 degrees and 180 degrees to another entity.", false));
            TermData.Add(CVID.PATO_convex_angle_to, new TermInfo(CVID.PATO_convex_angle_to, @"PATO", @"PATO:0001053", @"convex angle to", @"An angle which is less than 180 degrees to another entity.", false));
            TermData.Add(CVID.PATO_internal_angle, new TermInfo(CVID.PATO_internal_angle, @"PATO", @"PATO:0001054", @"internal angle", @"A convex angle that is inside two adjacent sides of a polygon.", false));
            TermData.Add(CVID.PATO_reflex_angle_to, new TermInfo(CVID.PATO_reflex_angle_to, @"PATO", @"PATO:0001055", @"reflex angle to", @"An angular placement quality inhering in a bearer by virtue of the bearer's placement at an angle that is greater than 180 degrees but less than 360 degrees to another entity.", false));
            TermData.Add(CVID.PATO_obsolete_number_OBSOLETE, new TermInfo(CVID.PATO_obsolete_number_OBSOLETE, @"PATO", @"PATO:0001056", @"obsolete number", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_acceleration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_acceleration_OBSOLETE, @"PATO", @"PATO:0001057", @"obsolete relative acceleration", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_acceleration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_acceleration_OBSOLETE, @"PATO", @"PATO:0001058", @"obsolete absolute acceleration", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_efficiency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_efficiency_OBSOLETE, @"PATO", @"PATO:0001059", @"obsolete relative efficiency", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_efficiency_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_efficiency_OBSOLETE, @"PATO", @"PATO:0001060", @"obsolete absolute efficiency", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_elasticity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_elasticity_OBSOLETE, @"PATO", @"PATO:0001061", @"obsolete relative elasticity", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_elasticity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_elasticity_OBSOLETE, @"PATO", @"PATO:0001062", @"obsolete absolute elasticity", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_flux_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_flux_OBSOLETE, @"PATO", @"PATO:0001063", @"obsolete relative flux", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_flux_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_flux_OBSOLETE, @"PATO", @"PATO:0001064", @"obsolete absolute flux", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_stiffness_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_stiffness_OBSOLETE, @"PATO", @"PATO:0001065", @"obsolete relative stiffness", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_stiffness_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_stiffness_OBSOLETE, @"PATO", @"PATO:0001066", @"obsolete absolute stiffness", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_strain_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_strain_OBSOLETE, @"PATO", @"PATO:0001067", @"obsolete absolute strain", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_strain_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_strain_OBSOLETE, @"PATO", @"PATO:0001068", @"obsolete relative strain", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_density_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_density_OBSOLETE, @"PATO", @"PATO:0001069", @"obsolete relative density", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_density_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_density_OBSOLETE, @"PATO", @"PATO:0001070", @"obsolete absolute density", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_energy_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_energy_OBSOLETE, @"PATO", @"PATO:0001071", @"obsolete relative energy", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_energy_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_energy_OBSOLETE, @"PATO", @"PATO:0001072", @"obsolete absolute energy", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_impulse_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_impulse_OBSOLETE, @"PATO", @"PATO:0001073", @"obsolete relative impulse", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_impulse_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_impulse_OBSOLETE, @"PATO", @"PATO:0001074", @"obsolete absolute impulse", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_momentum_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_momentum_OBSOLETE, @"PATO", @"PATO:0001075", @"obsolete absolute momentum", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_momentum_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_momentum_OBSOLETE, @"PATO", @"PATO:0001076", @"obsolete relative momentum", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_pressure_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_pressure_OBSOLETE, @"PATO", @"PATO:0001077", @"obsolete absolute pressure", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_pressure_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_pressure_OBSOLETE, @"PATO", @"PATO:0001078", @"obsolete relative pressure", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_work_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_work_OBSOLETE, @"PATO", @"PATO:0001079", @"obsolete absolute work", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_work_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_work_OBSOLETE, @"PATO", @"PATO:0001080", @"obsolete relative work", @"", true));
            TermData.Add(CVID.PATO_obsolete_physical_measure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_physical_measure_value_OBSOLETE, @"PATO", @"PATO:0001081", @"obsolete physical measure value", @"", true));
            TermData.Add(CVID.PATO_obsolete_damage_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_damage_value_OBSOLETE, @"PATO", @"PATO:0001082", @"obsolete damage value", @"", true));
            TermData.Add(CVID.PATO_obsolete_acceleration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_acceleration_value_OBSOLETE, @"PATO", @"PATO:0001083", @"obsolete acceleration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_acceleration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_acceleration_value_OBSOLETE, @"PATO", @"PATO:0001084", @"obsolete relative acceleration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_acceleration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_acceleration_value_OBSOLETE, @"PATO", @"PATO:0001085", @"obsolete absolute acceleration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_efficiency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_efficiency_value_OBSOLETE, @"PATO", @"PATO:0001086", @"obsolete efficiency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_efficiency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_efficiency_value_OBSOLETE, @"PATO", @"PATO:0001087", @"obsolete relative efficiency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_efficiency_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_efficiency_value_OBSOLETE, @"PATO", @"PATO:0001088", @"obsolete absolute efficiency value", @"", true));
            TermData.Add(CVID.PATO_obsolete_elasticity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_elasticity_value_OBSOLETE, @"PATO", @"PATO:0001089", @"obsolete elasticity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_elasticity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_elasticity_value_OBSOLETE, @"PATO", @"PATO:0001090", @"obsolete absolute elasticity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_elasticity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_elasticity_value_OBSOLETE, @"PATO", @"PATO:0001091", @"obsolete relative elasticity value", @"", true));
            TermData.Add(CVID.PATO_obsolete_flux_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_flux_value_OBSOLETE, @"PATO", @"PATO:0001092", @"obsolete flux value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_flux_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_flux_value_OBSOLETE, @"PATO", @"PATO:0001093", @"obsolete relative flux value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_flux_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_flux_value_OBSOLETE, @"PATO", @"PATO:0001094", @"obsolete absolute flux value", @"", true));
            TermData.Add(CVID.PATO_obsolete_force_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_force_value_OBSOLETE, @"PATO", @"PATO:0001095", @"obsolete force value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_force_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_force_value_OBSOLETE, @"PATO", @"PATO:0001096", @"obsolete absolute force value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_force_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_force_value_OBSOLETE, @"PATO", @"PATO:0001097", @"obsolete relative force value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_force_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_force_OBSOLETE, @"PATO", @"PATO:0001098", @"obsolete absolute force", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_force_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_force_OBSOLETE, @"PATO", @"PATO:0001099", @"obsolete relative force", @"", true));
            TermData.Add(CVID.PATO_obsolete_position_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_position_value_OBSOLETE, @"PATO", @"PATO:0001100", @"obsolete position value", @"", true));
            TermData.Add(CVID.PATO_obsolete_stiffness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_stiffness_value_OBSOLETE, @"PATO", @"PATO:0001101", @"obsolete stiffness value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_stiffness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_stiffness_value_OBSOLETE, @"PATO", @"PATO:0001102", @"obsolete absolute stiffness value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_stiffness_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_stiffness_value_OBSOLETE, @"PATO", @"PATO:0001103", @"obsolete relative stiffness value", @"", true));
            TermData.Add(CVID.PATO_obsolete_strain_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_strain_value_OBSOLETE, @"PATO", @"PATO:0001104", @"obsolete strain value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_strain_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_strain_value_OBSOLETE, @"PATO", @"PATO:0001105", @"obsolete absolute strain value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_strain_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_strain_value_OBSOLETE, @"PATO", @"PATO:0001106", @"obsolete relative strain value", @"", true));
            TermData.Add(CVID.PATO_obsolete_density_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_density_value_OBSOLETE, @"PATO", @"PATO:0001107", @"obsolete density value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_amplitude_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_amplitude_value_OBSOLETE, @"PATO", @"PATO:0001108", @"obsolete relative amplitude value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_amplitude_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_amplitude_value_OBSOLETE, @"PATO", @"PATO:0001109", @"obsolete absolute amplitude value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_density_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_density_value_OBSOLETE, @"PATO", @"PATO:0001110", @"obsolete absolute density value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_density_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_density_value_OBSOLETE, @"PATO", @"PATO:0001111", @"obsolete relative density value", @"", true));
            TermData.Add(CVID.PATO_obsolete_energy_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_energy_value_OBSOLETE, @"PATO", @"PATO:0001112", @"obsolete energy value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_energy_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_energy_value_OBSOLETE, @"PATO", @"PATO:0001113", @"obsolete absolute energy value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_energy_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_energy_value_OBSOLETE, @"PATO", @"PATO:0001114", @"obsolete relative energy value", @"", true));
            TermData.Add(CVID.PATO_obsolete_impulse_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_impulse_value_OBSOLETE, @"PATO", @"PATO:0001115", @"obsolete impulse value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_impulse_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_impulse_value_OBSOLETE, @"PATO", @"PATO:0001116", @"obsolete relative impulse value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_impulse_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_impulse_value_OBSOLETE, @"PATO", @"PATO:0001117", @"obsolete absolute impulse value", @"", true));
            TermData.Add(CVID.PATO_obsolete_momentum_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_momentum_value_OBSOLETE, @"PATO", @"PATO:0001118", @"obsolete momentum value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_momentum_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_momentum_value_OBSOLETE, @"PATO", @"PATO:0001119", @"obsolete absolute momentum value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_momentum_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_momentum_value_OBSOLETE, @"PATO", @"PATO:0001120", @"obsolete relative momentum value", @"", true));
            TermData.Add(CVID.PATO_obsolete_power_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_power_value_OBSOLETE, @"PATO", @"PATO:0001121", @"obsolete power value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_power_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_power_value_OBSOLETE, @"PATO", @"PATO:0001122", @"obsolete absolute power value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_power_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_power_value_OBSOLETE, @"PATO", @"PATO:0001123", @"obsolete relative power value", @"", true));
            TermData.Add(CVID.PATO_obsolete_pressure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pressure_value_OBSOLETE, @"PATO", @"PATO:0001124", @"obsolete pressure value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_pressure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_pressure_value_OBSOLETE, @"PATO", @"PATO:0001125", @"obsolete absolute pressure value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_pressure_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_pressure_value_OBSOLETE, @"PATO", @"PATO:0001126", @"obsolete relative pressure value", @"", true));
            TermData.Add(CVID.PATO_obsolete_work_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_work_value_OBSOLETE, @"PATO", @"PATO:0001127", @"obsolete work value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_work_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_work_value_OBSOLETE, @"PATO", @"PATO:0001128", @"obsolete absolute work value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_work_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_work_value_OBSOLETE, @"PATO", @"PATO:0001129", @"obsolete relative work value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ratio_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ratio_value_OBSOLETE, @"PATO", @"PATO:0001130", @"obsolete ratio value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_ratio_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_ratio_value_OBSOLETE, @"PATO", @"PATO:0001131", @"obsolete absolute ratio value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_ratio_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_ratio_value_OBSOLETE, @"PATO", @"PATO:0001132", @"obsolete relative ratio value", @"", true));
            TermData.Add(CVID.PATO_obsolete_immunoglobulin_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immunoglobulin_concentration_OBSOLETE, @"PATO", @"PATO:0001133", @"obsolete immunoglobulin concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_a_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_a_concentration_OBSOLETE, @"PATO", @"PATO:0001134", @"obsolete ig a concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_d_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_d_concentration_OBSOLETE, @"PATO", @"PATO:0001135", @"obsolete ig d concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_e_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_e_concentration_OBSOLETE, @"PATO", @"PATO:0001136", @"obsolete ig e concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_g_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_g_concentration_OBSOLETE, @"PATO", @"PATO:0001137", @"obsolete ig g concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_m_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_m_concentration_OBSOLETE, @"PATO", @"PATO:0001138", @"obsolete ig m concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_urine_glucose_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urine_glucose_composition_OBSOLETE, @"PATO", @"PATO:0001139", @"obsolete urine glucose composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_immunoglobulin_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immunoglobulin_concentration_value_OBSOLETE, @"PATO", @"PATO:0001140", @"obsolete immunoglobulin concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_a_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_a_concentration_value_OBSOLETE, @"PATO", @"PATO:0001141", @"obsolete ig a concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_d_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_d_concentration_value_OBSOLETE, @"PATO", @"PATO:0001142", @"obsolete ig d concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_e_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_e_concentration_value_OBSOLETE, @"PATO", @"PATO:0001143", @"obsolete ig e concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_g_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_g_concentration_value_OBSOLETE, @"PATO", @"PATO:0001144", @"obsolete ig g concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_ig_m_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_ig_m_concentration_value_OBSOLETE, @"PATO", @"PATO:0001145", @"obsolete ig m concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_resistance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_resistance_value_OBSOLETE, @"PATO", @"PATO:0001146", @"obsolete resistance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_resistance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_resistance_value_OBSOLETE, @"PATO", @"PATO:0001147", @"obsolete absolute resistance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_resistance_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_resistance_value_OBSOLETE, @"PATO", @"PATO:0001148", @"obsolete relative resistance value", @"", true));
            TermData.Add(CVID.PATO_obsolete_susceptibility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_susceptibility_value_OBSOLETE, @"PATO", @"PATO:0001149", @"obsolete susceptibility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_susceptibility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_susceptibility_value_OBSOLETE, @"PATO", @"PATO:0001150", @"obsolete absolute susceptibility value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_susceptibility_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_susceptibility_value_OBSOLETE, @"PATO", @"PATO:0001151", @"obsolete relative susceptibility value", @"", true));
            TermData.Add(CVID.PATO_susceptible_toward, new TermInfo(CVID.PATO_susceptible_toward, @"PATO", @"PATO:0001152", @"susceptible toward", @"A quality inhering in a bearer by virtue of the bearer's having susceptibilty toward an external stimulus.", false));
            TermData.Add(CVID.PATO_insusceptible_toward, new TermInfo(CVID.PATO_insusceptible_toward, @"PATO", @"PATO:0001153", @"insusceptible toward", @"A quality inhering in a bearer by virtue of the bearer's lacking susceptibilty toward an external stimulus.", false));
            TermData.Add(CVID.PATO_elongated, new TermInfo(CVID.PATO_elongated, @"PATO", @"PATO:0001154", @"elongated", @"A quality inhering in a bearer by virtue of the bearer's length being notably higher than its width.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_concentration_OBSOLETE, @"PATO", @"PATO:0001155", @"obsolete absolute concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_concentration_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_concentration_OBSOLETE, @"PATO", @"PATO:0001156", @"obsolete relative concentration", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_concentration_value_OBSOLETE, @"PATO", @"PATO:0001157", @"obsolete absolute concentration value", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_concentration_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_concentration_value_OBSOLETE, @"PATO", @"PATO:0001158", @"obsolete relative concentration value", @"", true));
            TermData.Add(CVID.PATO_concentrated, new TermInfo(CVID.PATO_concentrated, @"PATO", @"PATO:0001159", @"concentrated", @"A concentration quality inhering in a bearer by virtue of the bearer's exhibiting concentration.", false));
            TermData.Add(CVID.PATO_obsolete_unconcentrated_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unconcentrated_OBSOLETE, @"PATO", @"PATO:0001160", @"obsolete unconcentrated", @"", true));
            TermData.Add(CVID.PATO_diluted, new TermInfo(CVID.PATO_diluted, @"PATO", @"PATO:0001161", @"diluted", @"A concentration which relatively low.", false));
            TermData.Add(CVID.PATO_increased_concentration, new TermInfo(CVID.PATO_increased_concentration, @"PATO", @"PATO:0001162", @"increased concentration", @"A concentration which is higher relative to the normal or average.", false));
            TermData.Add(CVID.PATO_decreased_concentration, new TermInfo(CVID.PATO_decreased_concentration, @"PATO", @"PATO:0001163", @"decreased concentration", @"A concentration which is lower relative to the normal or average.", false));
            TermData.Add(CVID.PATO_dense, new TermInfo(CVID.PATO_dense, @"PATO", @"PATO:0001164", @"dense", @"A physical quality which inheres in a bearer by virtue of the bearer's exhibiting density.", false));
            TermData.Add(CVID.PATO_obsolete_urine_enzyme_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urine_enzyme_composition_value_OBSOLETE, @"PATO", @"PATO:0001165", @"obsolete urine enzyme composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_urine_enzyme_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urine_enzyme_composition_OBSOLETE, @"PATO", @"PATO:0001166", @"obsolete urine enzyme composition", @"", true));
            TermData.Add(CVID.PATO_damaged, new TermInfo(CVID.PATO_damaged, @"PATO", @"PATO:0001167", @"damaged", @"A structural quality inhering in a bearer by virtue of the bearer being harmed or injured or spoiled, such that its functionality is impaired.", false));
            TermData.Add(CVID.PATO_undamaged, new TermInfo(CVID.PATO_undamaged, @"PATO", @"PATO:0001168", @"undamaged", @"A structural quality inhering in a bearer by virtue of not being harmed or injured or spoiled.", false));
            TermData.Add(CVID.PATO_obsolete_numerical_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_numerical_value_OBSOLETE, @"PATO", @"PATO:0001170", @"obsolete numerical value", @"", true));
            TermData.Add(CVID.PATO_elastic, new TermInfo(CVID.PATO_elastic, @"PATO", @"PATO:0001171", @"elastic", @"An elasticity quality inhering in a bearer by virtue of the bearer's ability to recover its size and shape after deformation in any way.", false));
            TermData.Add(CVID.PATO_inelastic, new TermInfo(CVID.PATO_inelastic, @"PATO", @"PATO:0001172", @"inelastic", @"An elasticity quality inhering in a bearer by virtue of the bearer's inability to recover its size and shape after deformation in any way.", false));
            TermData.Add(CVID.PATO_obsolete_urine_glucose_composition_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urine_glucose_composition_value_OBSOLETE, @"PATO", @"PATO:0001173", @"obsolete urine glucose composition value", @"", true));
            TermData.Add(CVID.PATO_obsolete_urine_composition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_urine_composition_OBSOLETE, @"PATO", @"PATO:0001174", @"obsolete urine composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_urine_composition_OBSOLETE1, new TermInfo(CVID.PATO_obsolete_urine_composition_OBSOLETE1, @"PATO", @"PATO:0001175", @"obsolete urine composition", @"", true));
            TermData.Add(CVID.PATO_obsolete_deaf_OBSOLETE, new TermInfo(CVID.PATO_obsolete_deaf_OBSOLETE, @"PATO", @"PATO:0001176", @"obsolete deaf", @"", true));
            TermData.Add(CVID.PATO_obsolete_blind_OBSOLETE, new TermInfo(CVID.PATO_obsolete_blind_OBSOLETE, @"PATO", @"PATO:0001177", @"obsolete blind", @"", true));
            TermData.Add(CVID.PATO_resistant_to, new TermInfo(CVID.PATO_resistant_to, @"PATO", @"PATO:0001178", @"resistant to", @"A resistance quality inhering in a bearer by virtue of the bearer's resistance to a stimulus.", false));
            TermData.Add(CVID.PATO_obsolete_immune_OBSOLETE, new TermInfo(CVID.PATO_obsolete_immune_OBSOLETE, @"PATO", @"PATO:0001179", @"obsolete immune", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relative_response_OBSOLETE, @"PATO", @"PATO:0001180", @"obsolete relative response", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_response_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_response_OBSOLETE, @"PATO", @"PATO:0001181", @"obsolete absolute response", @"", true));
            TermData.Add(CVID.PATO_obsolete_relative_response_OBSOLETE1, new TermInfo(CVID.PATO_obsolete_relative_response_OBSOLETE1, @"PATO", @"PATO:0001182", @"obsolete relative response", @"", true));
            TermData.Add(CVID.PATO_obsolete_absolute_response_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_response_value_OBSOLETE, @"PATO", @"PATO:0001183", @"obsolete absolute response value", @"", true));
            TermData.Add(CVID.PATO_obsolete_maturity_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_maturity_value_OBSOLETE, @"PATO", @"PATO:0001184", @"obsolete maturity value", @"", true));
            TermData.Add(CVID.PATO_larval, new TermInfo(CVID.PATO_larval, @"PATO", @"PATO:0001185", @"larval", @"A maturity quality inhering in a bearer by virtue of the bearer's indirect development, undergoing metamorphosis.", false));
            TermData.Add(CVID.PATO_prepubescent, new TermInfo(CVID.PATO_prepubescent, @"PATO", @"PATO:0001186", @"prepubescent", @"A maturity quality inhering in a bearer by virtue of the bearer's being at the age immediately before puberty.", false));
            TermData.Add(CVID.PATO_pupal, new TermInfo(CVID.PATO_pupal, @"PATO", @"PATO:0001187", @"pupal", @"A maturity quality inhering in a insect by virtue of the bearer's being in the chrysalis (cocoon) or post larval stage.", false));
            TermData.Add(CVID.PATO_prepupal, new TermInfo(CVID.PATO_prepupal, @"PATO", @"PATO:0001188", @"prepupal", @"A maturity quality inhering in a bearer by virtue of the bearer's being in an inactive stage in the development of some insects, between the larval and the pupal stages.", false));
            TermData.Add(CVID.PATO_adolescent, new TermInfo(CVID.PATO_adolescent, @"PATO", @"PATO:0001189", @"adolescent", @"A maturity quality inhering in a bearer by virtue of the bearer's being between the onset of puberty and maturity.", false));
            TermData.Add(CVID.PATO_juvenile, new TermInfo(CVID.PATO_juvenile, @"PATO", @"PATO:0001190", @"juvenile", @"A maturity quality inhering in a bearer by virtue the bearer's being not fully grown or developed.", false));
            TermData.Add(CVID.PATO_medial_to, new TermInfo(CVID.PATO_medial_to, @"PATO", @"PATO:0001191", @"medial to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the middle relative to another entity.", false));
            TermData.Add(CVID.PATO_hyperresponsive_to, new TermInfo(CVID.PATO_hyperresponsive_to, @"PATO", @"PATO:0001192", @"hyperresponsive to", @"A response quality inhering in a bearer by virtue of the bearer's excessive reaction to a stimulus or an agent.", false));
            TermData.Add(CVID.PATO_lateral_to, new TermInfo(CVID.PATO_lateral_to, @"PATO", @"PATO:0001193", @"lateral to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the side relative to another entity.", false));
            TermData.Add(CVID.PATO_hyporesponsive_to, new TermInfo(CVID.PATO_hyporesponsive_to, @"PATO", @"PATO:0001194", @"hyporesponsive to", @"A response quality inhering in a bearer by virtue of the bearer's limited reaction to a stimulus or an agent.", false));
            TermData.Add(CVID.PATO_proximal_to, new TermInfo(CVID.PATO_proximal_to, @"PATO", @"PATO:0001195", @"proximal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located more centrally than another entity.", false));
            TermData.Add(CVID.PATO_ventral_to, new TermInfo(CVID.PATO_ventral_to, @"PATO", @"PATO:0001196", @"ventral to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the abdomen of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_obsolete_modified_direction_OBSOLETE, new TermInfo(CVID.PATO_obsolete_modified_direction_OBSOLETE, @"PATO", @"PATO:0001197", @"obsolete modified direction", @"", true));
            TermData.Add(CVID.PATO_obsolete_unmodified_direction_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unmodified_direction_OBSOLETE, @"PATO", @"PATO:0001198", @"obsolete unmodified direction", @"", true));
            TermData.Add(CVID.PATO_linear, new TermInfo(CVID.PATO_linear, @"PATO", @"PATO:0001199", @"linear", @"A shape quality inhering in a bearer by virtue of the bearer's being narrow, with the two opposite margins parallel.", false));
            TermData.Add(CVID.PATO_T_shaped, new TermInfo(CVID.PATO_T_shaped, @"PATO", @"PATO:0001200", @"T-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter T.", false));
            TermData.Add(CVID.PATO_Y_shaped, new TermInfo(CVID.PATO_Y_shaped, @"PATO", @"PATO:0001201", @"Y-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter Y.", false));
            TermData.Add(CVID.PATO_obsolete_not_enlarged_OBSOLETE, new TermInfo(CVID.PATO_obsolete_not_enlarged_OBSOLETE, @"PATO", @"PATO:0001204", @"obsolete not enlarged", @"", true));
            TermData.Add(CVID.PATO_dentated, new TermInfo(CVID.PATO_dentated, @"PATO", @"PATO:0001205", @"dentated", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having toothlike projections in the margin.", false));
            TermData.Add(CVID.PATO_serrated, new TermInfo(CVID.PATO_serrated, @"PATO", @"PATO:0001206", @"serrated", @"A shape quality inhering in a bearer by virtue of having sharp straight-edged teeth pointing to the apex.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_compatability_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_compatability_OBSOLETE, @"PATO", @"PATO:0001207", @"obsolete absolute compatability", @"", true));
            TermData.Add(CVID.PATO_odorless, new TermInfo(CVID.PATO_odorless, @"PATO", @"PATO:0001208", @"odorless", @"An odor quality inhering in a bearer by virtue of the bearer's lacking odour.", false));
            TermData.Add(CVID.PATO_obsolete_absolute_function_OBSOLETE, new TermInfo(CVID.PATO_obsolete_absolute_function_OBSOLETE, @"PATO", @"PATO:0001209", @"obsolete absolute function", @"", true));
            TermData.Add(CVID.PATO_obsolete_plane_angle_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_plane_angle_quantity_OBSOLETE, @"PATO", @"PATO:0001210", @"obsolete plane_angle_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_solid_angle_quantity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_solid_angle_quantity_OBSOLETE, @"PATO", @"PATO:0001211", @"obsolete solid_angle_quantity", @"", true));
            TermData.Add(CVID.PATO_obsolete_length_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_length_unit_OBSOLETE, @"PATO", @"PATO:0001212", @"obsolete length_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_mass_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_mass_unit_OBSOLETE, @"PATO", @"PATO:0001213", @"obsolete mass_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_temparature_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_temparature_unit_OBSOLETE, @"PATO", @"PATO:0001214", @"obsolete temparature_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_time_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_time_unit_OBSOLETE, @"PATO", @"PATO:0001215", @"obsolete time_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_volume_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_volume_unit_OBSOLETE, @"PATO", @"PATO:0001216", @"obsolete volume_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_energy_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_energy_unit_OBSOLETE, @"PATO", @"PATO:0001217", @"obsolete energy_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_substance_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_substance_unit_OBSOLETE, @"PATO", @"PATO:0001218", @"obsolete substance_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_area_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_area_unit_OBSOLETE, @"PATO", @"PATO:0001219", @"obsolete area_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_angle_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_angle_unit_OBSOLETE, @"PATO", @"PATO:0001220", @"obsolete angle_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_plane_angle_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_plane_angle_unit_OBSOLETE, @"PATO", @"PATO:0001221", @"obsolete plane_angle_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_solid_angle_unit_OBSOLETE, new TermInfo(CVID.PATO_obsolete_solid_angle_unit_OBSOLETE, @"PATO", @"PATO:0001222", @"obsolete solid_angle_unit", @"", true));
            TermData.Add(CVID.PATO_obsolete_quantitative_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_quantitative_value_OBSOLETE, @"PATO", @"PATO:0001223", @"obsolete quantitative value", @"", true));
            TermData.Add(CVID.PATO_obsolete_real_number_OBSOLETE, new TermInfo(CVID.PATO_obsolete_real_number_OBSOLETE, @"PATO", @"PATO:0001224", @"obsolete real number", @"", true));
            TermData.Add(CVID.PATO_obsolete_relational_number_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relational_number_OBSOLETE, @"PATO", @"PATO:0001225", @"obsolete relational number", @"", true));
            TermData.Add(CVID.PATO_variant, new TermInfo(CVID.PATO_variant, @"PATO", @"PATO:0001227", @"variant", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits variation or change.", false));
            TermData.Add(CVID.PATO_obsolete_dull_OBSOLETE, new TermInfo(CVID.PATO_obsolete_dull_OBSOLETE, @"PATO", @"PATO:0001228", @"obsolete dull", @"", true));
            TermData.Add(CVID.PATO_high_saturation, new TermInfo(CVID.PATO_high_saturation, @"PATO", @"PATO:0001229", @"high saturation", @"A color saturation which is of high purity.", false));
            TermData.Add(CVID.PATO_strength, new TermInfo(CVID.PATO_strength, @"PATO", @"PATO:0001230", @"strength", @"A quality inhering in a bearer by virtue of the bearer's power or force.", false));
            TermData.Add(CVID.PATO_obsolete_cold_insensitive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cold_insensitive_OBSOLETE, @"PATO", @"PATO:0001231", @"obsolete cold insensitive", @"", true));
            TermData.Add(CVID.PATO_obsolete_heat_insentive_OBSOLETE, new TermInfo(CVID.PATO_obsolete_heat_insentive_OBSOLETE, @"PATO", @"PATO:0001232", @"obsolete heat insentive", @"", true));
            TermData.Add(CVID.PATO_dorsal_to, new TermInfo(CVID.PATO_dorsal_to, @"PATO", @"PATO:0001233", @"dorsal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the back or upper surface of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_distal_to, new TermInfo(CVID.PATO_distal_to, @"PATO", @"PATO:0001234", @"distal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located further from a more centrally located entity.", false));
            TermData.Add(CVID.PATO_obsolete_strength_value_OBSOLETE, new TermInfo(CVID.PATO_obsolete_strength_value_OBSOLETE, @"PATO", @"PATO:0001235", @"obsolete strength value", @"", true));
            TermData.Add(CVID.PATO_process_quality, new TermInfo(CVID.PATO_process_quality, @"PATO", @"PATO:0001236", @"process quality", @"A quality which inheres in an process.", false));
            TermData.Add(CVID.PATO_physical_object_quality, new TermInfo(CVID.PATO_physical_object_quality, @"PATO", @"PATO:0001241", @"physical object quality", @"A quality which inheres in a continuant.", false));
            TermData.Add(CVID.PATO_wavelength, new TermInfo(CVID.PATO_wavelength, @"PATO", @"PATO:0001242", @"wavelength", @"A physical quality which is equal to the distance between repeating units of a wave pattern.", false));
            TermData.Add(CVID.PATO_light_blue, new TermInfo(CVID.PATO_light_blue, @"PATO", @"PATO:0001243", @"light blue", @"A color consisting of blue hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_blue, new TermInfo(CVID.PATO_dark_blue, @"PATO", @"PATO:0001244", @"dark blue", @"A color consisting of blue hue and low brightness.", false));
            TermData.Add(CVID.PATO_dark_brown, new TermInfo(CVID.PATO_dark_brown, @"PATO", @"PATO:0001245", @"dark brown", @"A color consisting of brown hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_brown, new TermInfo(CVID.PATO_light_brown, @"PATO", @"PATO:0001246", @"light brown", @"A color consisting of brown hue and high brightness.", false));
            TermData.Add(CVID.PATO_light_cyan, new TermInfo(CVID.PATO_light_cyan, @"PATO", @"PATO:0001247", @"light cyan", @"A color consisting of cyan hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_cyan, new TermInfo(CVID.PATO_dark_cyan, @"PATO", @"PATO:0001248", @"dark cyan", @"A color consisting of cyan hue and low brightness.", false));
            TermData.Add(CVID.PATO_dark_green, new TermInfo(CVID.PATO_dark_green, @"PATO", @"PATO:0001249", @"dark green", @"A color consisting of green hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_green, new TermInfo(CVID.PATO_light_green, @"PATO", @"PATO:0001250", @"light green", @"A color consisting of green hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_grey, new TermInfo(CVID.PATO_dark_grey, @"PATO", @"PATO:0001251", @"dark grey", @"A color consisting of grey color and low brightness.", false));
            TermData.Add(CVID.PATO_light_grey, new TermInfo(CVID.PATO_light_grey, @"PATO", @"PATO:0001252", @"light grey", @"A color consisting of grey color and high brightness.", false));
            TermData.Add(CVID.PATO_light_magenta, new TermInfo(CVID.PATO_light_magenta, @"PATO", @"PATO:0001253", @"light magenta", @"A color consisting of magenta color and high brightness.", false));
            TermData.Add(CVID.PATO_dark_magenta, new TermInfo(CVID.PATO_dark_magenta, @"PATO", @"PATO:0001254", @"dark magenta", @"A color consisting of magenta with low brightness.", false));
            TermData.Add(CVID.PATO_light_orange, new TermInfo(CVID.PATO_light_orange, @"PATO", @"PATO:0001255", @"light orange", @"A color consisting of orange hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_orange, new TermInfo(CVID.PATO_dark_orange, @"PATO", @"PATO:0001256", @"dark orange", @"A color consisting of orange color and low brightness.", false));
            TermData.Add(CVID.PATO_light_deep_pink, new TermInfo(CVID.PATO_light_deep_pink, @"PATO", @"PATO:0001257", @"light deep pink", @"Pink color having high brightness and moderate saturation.", false));
            TermData.Add(CVID.PATO_deep_pink, new TermInfo(CVID.PATO_deep_pink, @"PATO", @"PATO:0001258", @"deep pink", @"Pink color having medium brightness and moderate saturation.", false));
            TermData.Add(CVID.PATO_dark_purple, new TermInfo(CVID.PATO_dark_purple, @"PATO", @"PATO:0001259", @"dark purple", @"A color consisting of purple color and low brightness.", false));
            TermData.Add(CVID.PATO_light_purple, new TermInfo(CVID.PATO_light_purple, @"PATO", @"PATO:0001260", @"light purple", @"A color consisting of purple color and high brightness.", false));
            TermData.Add(CVID.PATO_dark_red, new TermInfo(CVID.PATO_dark_red, @"PATO", @"PATO:0001261", @"dark red", @"A color consisting of red hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_red, new TermInfo(CVID.PATO_light_red, @"PATO", @"PATO:0001262", @"light red", @"A color consisting of red hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_yellow, new TermInfo(CVID.PATO_dark_yellow, @"PATO", @"PATO:0001263", @"dark yellow", @"A color consisting of yellow hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_yellow, new TermInfo(CVID.PATO_light_yellow, @"PATO", @"PATO:0001264", @"light yellow", @"A color consisting of yellow hue and high brightness.", false));
            TermData.Add(CVID.PATO_saturated_blue, new TermInfo(CVID.PATO_saturated_blue, @"PATO", @"PATO:0001265", @"saturated blue", @"A color consisting of blue hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_blue, new TermInfo(CVID.PATO_desaturated_blue, @"PATO", @"PATO:0001266", @"desaturated blue", @"A color consisting of blue hue and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_brown, new TermInfo(CVID.PATO_saturated_brown, @"PATO", @"PATO:0001267", @"saturated brown", @"A color consisting of brown hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_brown, new TermInfo(CVID.PATO_desaturated_brown, @"PATO", @"PATO:0001268", @"desaturated brown", @"A color consisting of brown hue and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_cyan, new TermInfo(CVID.PATO_saturated_cyan, @"PATO", @"PATO:0001269", @"saturated cyan", @"A color consisting of cyan colour and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_cyan, new TermInfo(CVID.PATO_desaturated_cyan, @"PATO", @"PATO:0001270", @"desaturated cyan", @"A color consisting of cyan colour and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_green, new TermInfo(CVID.PATO_saturated_green, @"PATO", @"PATO:0001271", @"saturated green", @"A color consisting of green hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_green, new TermInfo(CVID.PATO_desaturated_green, @"PATO", @"PATO:0001272", @"desaturated green", @"A color consisting of green hue and low saturation.", false));
            TermData.Add(CVID.PATO_obsolete_bright_grey_OBSOLETE, new TermInfo(CVID.PATO_obsolete_bright_grey_OBSOLETE, @"PATO", @"PATO:0001273", @"obsolete bright grey", @"A color consisting of grey color and high saturation.", true));
            TermData.Add(CVID.PATO_obsolete_pale_grey_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pale_grey_OBSOLETE, @"PATO", @"PATO:0001274", @"obsolete pale grey", @"A color consisting of grey color and low saturation.", true));
            TermData.Add(CVID.PATO_saturated_magenta, new TermInfo(CVID.PATO_saturated_magenta, @"PATO", @"PATO:0001275", @"saturated magenta", @"A color consisting of magenta color and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_magenta, new TermInfo(CVID.PATO_desaturated_magenta, @"PATO", @"PATO:0001276", @"desaturated magenta", @"A color consisting of magenta color and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_orange, new TermInfo(CVID.PATO_saturated_orange, @"PATO", @"PATO:0001277", @"saturated orange", @"A color consisting of orange hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_orange, new TermInfo(CVID.PATO_desaturated_orange, @"PATO", @"PATO:0001278", @"desaturated orange", @"A color consisting of orange hue and low saturation.", false));
            TermData.Add(CVID.PATO_dark_pale_pink, new TermInfo(CVID.PATO_dark_pale_pink, @"PATO", @"PATO:0001280", @"dark pale pink", @"Pink color having medium brightness and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_purple, new TermInfo(CVID.PATO_saturated_purple, @"PATO", @"PATO:0001281", @"saturated purple", @"A color consisting of purple color and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_purple, new TermInfo(CVID.PATO_desaturated_purple, @"PATO", @"PATO:0001282", @"desaturated purple", @"A color consisting of purple color and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_red, new TermInfo(CVID.PATO_saturated_red, @"PATO", @"PATO:0001283", @"saturated red", @"A color consisting of red hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_red, new TermInfo(CVID.PATO_desaturated_red, @"PATO", @"PATO:0001284", @"desaturated red", @"A color consisting of red hue and low saturation.", false));
            TermData.Add(CVID.PATO_saturated_yellow, new TermInfo(CVID.PATO_saturated_yellow, @"PATO", @"PATO:0001285", @"saturated yellow", @"A color consisting of yellow hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_yellow, new TermInfo(CVID.PATO_desaturated_yellow, @"PATO", @"PATO:0001286", @"desaturated yellow", @"A color consisting of yellow hue and low saturation.", false));
            TermData.Add(CVID.PATO_red_brown, new TermInfo(CVID.PATO_red_brown, @"PATO", @"PATO:0001287", @"red brown", @"A color consisting of red and brown hue.", false));
            TermData.Add(CVID.PATO_dark_red_brown, new TermInfo(CVID.PATO_dark_red_brown, @"PATO", @"PATO:0001288", @"dark red brown", @"A color consisting of red and brown hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_red_brown, new TermInfo(CVID.PATO_light_red_brown, @"PATO", @"PATO:0001289", @"light red brown", @"A color consisting of red and brown hue and high brightness.", false));
            TermData.Add(CVID.PATO_fluorescent, new TermInfo(CVID.PATO_fluorescent, @"PATO", @"PATO:0001290", @"fluorescent", @"A fluorescence quality inhering in a bearer by virtue of emitting light during exposure to radiation from an external source.", false));
            TermData.Add(CVID.PATO_electromagnetic__EM__radiation_quality, new TermInfo(CVID.PATO_electromagnetic__EM__radiation_quality, @"PATO", @"PATO:0001291", @"electromagnetic (EM) radiation quality", @"A physical quality that inheres in an bearer by virtue of how that bearer interacts with electromagnetic radiation.", false));
            TermData.Add(CVID.PATO_full_spectrum_EM_radiation_quality, new TermInfo(CVID.PATO_full_spectrum_EM_radiation_quality, @"PATO", @"PATO:0001292", @"full-spectrum EM radiation quality", @"An EM radiation quality that is independent of the EM wavelength range.", false));
            TermData.Add(CVID.PATO_absorption_quality, new TermInfo(CVID.PATO_absorption_quality, @"PATO", @"PATO:0001293", @"absorption quality", @"A scalar EM radiation quality which obtains by the capacity of the bearer to retain radiation.", false));
            TermData.Add(CVID.PATO_radiation_reflective_quality, new TermInfo(CVID.PATO_radiation_reflective_quality, @"PATO", @"PATO:0001294", @"radiation reflective quality", @"A scalar EM radiation quality which obtains by the capacity of the bearer to scatter or reflect radiation.", false));
            TermData.Add(CVID.PATO_albedo, new TermInfo(CVID.PATO_albedo, @"PATO", @"PATO:0001295", @"albedo", @"A reflective quality restricted to a particular wavelength.", false));
            TermData.Add(CVID.PATO_luminous_flux, new TermInfo(CVID.PATO_luminous_flux, @"PATO", @"PATO:0001296", @"luminous flux", @"A scalar optical quality which obtains by the magnitude of the light emitted by the bearer.", false));
            TermData.Add(CVID.PATO_reflectivity, new TermInfo(CVID.PATO_reflectivity, @"PATO", @"PATO:0001297", @"reflectivity", @"A radiation reflective quality inhering in a bearer by virtue of the ratio of the energy of a wave reflected from its surface to the energy possessed by the wave striking the bearer's surface.", false));
            TermData.Add(CVID.PATO_phosphorescence, new TermInfo(CVID.PATO_phosphorescence, @"PATO", @"PATO:0001298", @"phosphorescence", @"A fluorescence in which the emittence continues after the absorption has ceased.", false));
            TermData.Add(CVID.PATO_radiation_emitting_quality, new TermInfo(CVID.PATO_radiation_emitting_quality, @"PATO", @"PATO:0001299", @"radiation emitting quality", @"A scalar EM radiation quality which obtains by the capacity of the bearer to emit radiation.", false));
            TermData.Add(CVID.PATO_optical_quality, new TermInfo(CVID.PATO_optical_quality, @"PATO", @"PATO:0001300", @"optical quality", @"An EM radiation quality in which the EM radiation is within the fiat range of the spectrum visible deemed to be light.", false));
            TermData.Add(CVID.PATO_chromatic_property, new TermInfo(CVID.PATO_chromatic_property, @"PATO", @"PATO:0001301", @"chromatic property", @"An optical quality that is the mixture, purity or pattern of wavelengths of light perceived by the observer.", false));
            TermData.Add(CVID.PATO_vermilion, new TermInfo(CVID.PATO_vermilion, @"PATO", @"PATO:0001302", @"vermilion", @"A color consisting of red and orange hue with a slight amount of gray.", false));
            TermData.Add(CVID.PATO_variability, new TermInfo(CVID.PATO_variability, @"PATO", @"PATO:0001303", @"variability", @"A quality inhering in a bearer by virtue of the bearer's disposition to varying or changing.", false));
            TermData.Add(CVID.PATO_variability_of_temperature, new TermInfo(CVID.PATO_variability_of_temperature, @"PATO", @"PATO:0001304", @"variability of temperature", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits temperature variation or change.", false));
            TermData.Add(CVID.PATO_increased_temperature, new TermInfo(CVID.PATO_increased_temperature, @"PATO", @"PATO:0001305", @"increased temperature", @"A temperature which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_temperature, new TermInfo(CVID.PATO_decreased_temperature, @"PATO", @"PATO:0001306", @"decreased temperature", @"A temperature which is relatively low.", false));
            TermData.Add(CVID.PATO_decreased_variability_of_temperature, new TermInfo(CVID.PATO_decreased_variability_of_temperature, @"PATO", @"PATO:0001307", @"decreased variability of temperature", @"A variability of temperature which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_variability_of_temperature, new TermInfo(CVID.PATO_increased_variability_of_temperature, @"PATO", @"PATO:0001308", @"increased variability of temperature", @"A variability of temperature which is relatively high.", false));
            TermData.Add(CVID.PATO_duration, new TermInfo(CVID.PATO_duration, @"PATO", @"PATO:0001309", @"duration", @"A process quality inhering in a bearer by virtue of the bearer's magnitude of the temporal extent between the starting and ending point.", false));
            TermData.Add(CVID.PATO_duration_of_temperature, new TermInfo(CVID.PATO_duration_of_temperature, @"PATO", @"PATO:0001310", @"duration of temperature", @"A duration quality of a process inhering in a bearer by virtue of the bearer's duration of exhibition of thermal energy.", false));
            TermData.Add(CVID.PATO_decreased_duration_of_temperature, new TermInfo(CVID.PATO_decreased_duration_of_temperature, @"PATO", @"PATO:0001311", @"decreased duration of temperature", @"A duration of temperature which is lesser relative to the normal or average enduring or continuing in time.", false));
            TermData.Add(CVID.PATO_increased_duration_of_temperature, new TermInfo(CVID.PATO_increased_duration_of_temperature, @"PATO", @"PATO:0001312", @"increased duration of temperature", @"A duration of temperature which is greater relative to the normal or average in respect to the quality of temperature of enduring or continuing in time.", false));
            TermData.Add(CVID.PATO_invariant_temperature, new TermInfo(CVID.PATO_invariant_temperature, @"PATO", @"PATO:0001313", @"invariant temperature", @"A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of temperature.", false));
            TermData.Add(CVID.PATO_variant_temperature, new TermInfo(CVID.PATO_variant_temperature, @"PATO", @"PATO:0001314", @"variant temperature", @"A variability quality inhering in a bearer by virtue of the bearer's having or exhibiting variation of temperature.", false));
            TermData.Add(CVID.PATO_mild_increased_temperature, new TermInfo(CVID.PATO_mild_increased_temperature, @"PATO", @"PATO:0001315", @"mild increased temperature", @"A temperature which is increased by a low degree.", false));
            TermData.Add(CVID.PATO_moderate_increased_temperature, new TermInfo(CVID.PATO_moderate_increased_temperature, @"PATO", @"PATO:0001316", @"moderate increased temperature", @"A temperature which is increased by a medium degree.", false));
            TermData.Add(CVID.PATO_severe_increased_temperature, new TermInfo(CVID.PATO_severe_increased_temperature, @"PATO", @"PATO:0001317", @"severe increased temperature", @"A temperature which is increased by a high degree.", false));
            TermData.Add(CVID.PATO_indiscriminate, new TermInfo(CVID.PATO_indiscriminate, @"PATO", @"PATO:0001318", @"indiscriminate", @"A discrimination quality in a bearer by virtue of the bearer's being incapable perceiving differences between two or more stimuli.", false));
            TermData.Add(CVID.PATO_discriminate, new TermInfo(CVID.PATO_discriminate, @"PATO", @"PATO:0001319", @"discriminate", @"A discrimination quality in a bearer by virtue of the bearer's being capable of perceiving differences between two or more stimuli.", false));
            TermData.Add(CVID.PATO_pubescent_hair, new TermInfo(CVID.PATO_pubescent_hair, @"PATO", @"PATO:0001320", @"pubescent hair", @"A pilosity quality of being covered with short hairs or soft down.", false));
            TermData.Add(CVID.PATO_right_angle_to, new TermInfo(CVID.PATO_right_angle_to, @"PATO", @"PATO:0001321", @"right angle to", @"An angle which is 90 degrees to another entity.", false));
            TermData.Add(CVID.PATO_straight_angle_to, new TermInfo(CVID.PATO_straight_angle_to, @"PATO", @"PATO:0001322", @"straight angle to", @"An angle which is 180 degrees to another entity.", false));
            TermData.Add(CVID.PATO_area, new TermInfo(CVID.PATO_area, @"PATO", @"PATO:0001323", @"area", @"A 2-D extent quality inhering in a bearer by virtue of the bearer's two dimensional extent.", false));
            TermData.Add(CVID.PATO_bilateral_symmetry, new TermInfo(CVID.PATO_bilateral_symmetry, @"PATO", @"PATO:0001324", @"bilateral symmetry", @"A symmetry quality inhering in a bearer by virtue of the bearer's being symmetric about a plane running from its frontal end to its caudal end (head to tail), and has nearly identical right and left halves.", false));
            TermData.Add(CVID.PATO_radial_symmetry, new TermInfo(CVID.PATO_radial_symmetry, @"PATO", @"PATO:0001325", @"radial symmetry", @"A symmetry quality inhering in a bearer by virtue of the bearer's having equal proportion around a central point or axis.", false));
            TermData.Add(CVID.PATO_obsolete_left_right_symmetry_OBSOLETE, new TermInfo(CVID.PATO_obsolete_left_right_symmetry_OBSOLETE, @"PATO", @"PATO:0001326", @"obsolete left-right symmetry", @"", true));
            TermData.Add(CVID.PATO_zygomorphic, new TermInfo(CVID.PATO_zygomorphic, @"PATO", @"PATO:0001327", @"zygomorphic", @"A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division into symmetrical halves by only one longitudinal plane passing through the axis.", false));
            TermData.Add(CVID.PATO_actinomorphic, new TermInfo(CVID.PATO_actinomorphic, @"PATO", @"PATO:0001328", @"actinomorphic", @"A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division into symmetrical halves by any longitudinal plane passing through the axis.", false));
            TermData.Add(CVID.PATO_flavourful, new TermInfo(CVID.PATO_flavourful, @"PATO", @"PATO:0001329", @"flavourful", @"A flavor quality inhering in a bearer by virtue of the bearer's having flavour.", false));
            TermData.Add(CVID.PATO_flavourless, new TermInfo(CVID.PATO_flavourless, @"PATO", @"PATO:0001330", @"flavourless", @"A flavor quality inhering in a bearer by virtue of the bearer's lacking flavour.", false));
            TermData.Add(CVID.PATO_odorous, new TermInfo(CVID.PATO_odorous, @"PATO", @"PATO:0001331", @"odorous", @"An odor quality inhering in a bearer by virtue of the bearer's having odour.", false));
            TermData.Add(CVID.PATO_amorphous, new TermInfo(CVID.PATO_amorphous, @"PATO", @"PATO:0001332", @"amorphous", @"A morphology quality inhering in a bearer by virtue of the bearer's lack of distinct morphology.", false));
            TermData.Add(CVID.PATO_temporally_extended, new TermInfo(CVID.PATO_temporally_extended, @"PATO", @"PATO:0001333", @"temporally extended", @"A quality of a process which ends later than the natural end time.", false));
            TermData.Add(CVID.PATO_diameter, new TermInfo(CVID.PATO_diameter, @"PATO", @"PATO:0001334", @"diameter", @"A length quality which is equal to the length of any straight line segment that passes through the center of a circle and whose endpoints are on the circular boundary.", false));
            TermData.Add(CVID.PATO_bacterial_mating_type, new TermInfo(CVID.PATO_bacterial_mating_type, @"PATO", @"PATO:0001335", @"bacterial mating type", @"A mating type that indicates whether the F plasmid has integrated into the chromosome.", false));
            TermData.Add(CVID.PATO_obsolete_unknown_sex_OBSOLETE, new TermInfo(CVID.PATO_obsolete_unknown_sex_OBSOLETE, @"PATO", @"PATO:0001336", @"obsolete unknown sex", @"A biological sex quality inhering in an individual whose sex is unknown.", true));
            TermData.Add(CVID.PATO_yeast_mating_type, new TermInfo(CVID.PATO_yeast_mating_type, @"PATO", @"PATO:0001337", @"yeast mating type", @"A yeast mating type.", false));
            TermData.Add(CVID.PATO_mixed_sex, new TermInfo(CVID.PATO_mixed_sex, @"PATO", @"PATO:0001338", @"mixed sex", @"A biological sex quality inhering in a population of multiple sexes.", false));
            TermData.Add(CVID.PATO_biomaterial_purity, new TermInfo(CVID.PATO_biomaterial_purity, @"PATO", @"PATO:0001339", @"biomaterial purity", @"A composition quality inhering in an bearer by virtue of the bearer's homogeneity of a biomaterial.", false));
            TermData.Add(CVID.PATO_hermaphrodite, new TermInfo(CVID.PATO_hermaphrodite, @"PATO", @"PATO:0001340", @"hermaphrodite", @"A biological sex quality inhering in an organism or a population with both male and female sexual organs in one individual.", false));
            TermData.Add(CVID.PATO_a_mating_type__yeast_, new TermInfo(CVID.PATO_a_mating_type__yeast_, @"PATO", @"PATO:0001341", @"a mating type (yeast)", @"A S. cerevisiae mating type cells that secrete a pheromone that in alpha haploids stimulates processes that lead to mating.", false));
            TermData.Add(CVID.PATO_Saccharomyces_cerevisiae_mating_type, new TermInfo(CVID.PATO_Saccharomyces_cerevisiae_mating_type, @"PATO", @"PATO:0001342", @"Saccharomyces cerevisiae mating type", @"A S. cerevisiae mating type.", false));
            TermData.Add(CVID.PATO_Schizosaccharomyces_pombe_mating_type, new TermInfo(CVID.PATO_Schizosaccharomyces_pombe_mating_type, @"PATO", @"PATO:0001343", @"Schizosaccharomyces pombe mating type", @"A S. pombe mating type determined by the gene configuration on the mat1 locus.", false));
            TermData.Add(CVID.PATO_alpha_mating_type__yeast_, new TermInfo(CVID.PATO_alpha_mating_type__yeast_, @"PATO", @"PATO:0001344", @"alpha mating type (yeast)", @"A S. cerevisiae mating type cells that secrete a pheromone that stimulates a haploids.", false));
            TermData.Add(CVID.PATO_h_minus, new TermInfo(CVID.PATO_h_minus, @"PATO", @"PATO:0001345", @"h minus", @"A S. pombe mating type determined by the mat1-Mc and mat1-Mi on the mat1 locus.", false));
            TermData.Add(CVID.PATO_h_plus, new TermInfo(CVID.PATO_h_plus, @"PATO", @"PATO:0001346", @"h plus", @"A S. pombe mating type determined by the mat1-Pc and mat1-Pi on the mat1 locus.", false));
            TermData.Add(CVID.PATO_F_mating_type, new TermInfo(CVID.PATO_F_mating_type, @"PATO", @"PATO:0001347", @"F mating type", @"A bacterial mating type indicating the presence of F plasmid in a bacterial cell.", false));
            TermData.Add(CVID.PATO_F_minus_mating_type, new TermInfo(CVID.PATO_F_minus_mating_type, @"PATO", @"PATO:0001348", @"F minus mating type", @"A bacterial mating type indicating the absence of F plasmid in a bacterial cell.", false));
            TermData.Add(CVID.PATO_high_frequency_recombinant, new TermInfo(CVID.PATO_high_frequency_recombinant, @"PATO", @"PATO:0001349", @"high frequency recombinant", @"A mating type that indicates that the F plasmid has integrated into the chromosome.", false));
            TermData.Add(CVID.PATO_angular_acceleration, new TermInfo(CVID.PATO_angular_acceleration, @"PATO", @"PATO:0001350", @"angular acceleration", @"A physical quality inhering in a bearer by virtue of the rate of change of the bearer's angular velocity.", false));
            TermData.Add(CVID.PATO_area_density, new TermInfo(CVID.PATO_area_density, @"PATO", @"PATO:0001351", @"area density", @"A density quality which inheres in a bearer by virtue of some influence exerted by the bearer's mass on a given area.", false));
            TermData.Add(CVID.PATO_linear_density, new TermInfo(CVID.PATO_linear_density, @"PATO", @"PATO:0001352", @"linear density", @"A density quality which is equal to the mass exerting an influence on a one-dimensional object.", false));
            TermData.Add(CVID.PATO_volumetric_density, new TermInfo(CVID.PATO_volumetric_density, @"PATO", @"PATO:0001353", @"volumetric density", @"A density quality which inheres in a bearer by virtue of some influence exerted by the bearer's mass on a given volume.", false));
            TermData.Add(CVID.PATO_translucent, new TermInfo(CVID.PATO_translucent, @"PATO", @"PATO:0001354", @"translucent", @"A optical quality inhering in a bearer by virtue of the bearer's exhibiting low opacity.", false));
            TermData.Add(CVID.PATO_convex, new TermInfo(CVID.PATO_convex, @"PATO", @"PATO:0001355", @"convex", @"A shape quality that obtains by virtue of the bearer having inward facing edges; having a surface or boundary that curves or bulges outward, as the exterior of a sphere.", false));
            TermData.Add(CVID.PATO_pleomorphic, new TermInfo(CVID.PATO_pleomorphic, @"PATO", @"PATO:0001356", @"pleomorphic", @"A shape quality inhering in a cell by virtue of the bearer's ability to take on two or more different shapes during its life cycle.", false));
            TermData.Add(CVID.PATO_pulvinate, new TermInfo(CVID.PATO_pulvinate, @"PATO", @"PATO:0001357", @"pulvinate", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped like a cushion or has a marked convex cushion-like form.", false));
            TermData.Add(CVID.PATO_umbonate, new TermInfo(CVID.PATO_umbonate, @"PATO", @"PATO:0001358", @"umbonate", @"A quality inhering in a bearer by virtue of the bearer's having a knob or knoblike protuberance.", false));
            TermData.Add(CVID.PATO_rugose, new TermInfo(CVID.PATO_rugose, @"PATO", @"PATO:0001359", @"rugose", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having many wrinkles or creases on the surface.", false));
            TermData.Add(CVID.PATO_filamentous, new TermInfo(CVID.PATO_filamentous, @"PATO", @"PATO:0001360", @"filamentous", @"A shape quality inhering in a bearer by virtue of the bearer's having thin filamentous extensions at its edge.", false));
            TermData.Add(CVID.PATO_warty, new TermInfo(CVID.PATO_warty, @"PATO", @"PATO:0001361", @"warty", @"A texture quality inhering in a bearer by virtue of the bearer's being covered with warts or projections that resemble warts resulting in a hard rough surface.", false));
            TermData.Add(CVID.PATO_fragile, new TermInfo(CVID.PATO_fragile, @"PATO", @"PATO:0001362", @"fragile", @"A structural quality inhering in a bearer by virtue of the bearer's disposition to being easily damaged or destroyed.", false));
            TermData.Add(CVID.PATO_rhizoidal, new TermInfo(CVID.PATO_rhizoidal, @"PATO", @"PATO:0001364", @"rhizoidal", @"A quality inhering in a bearer by virtue of the bearer's having root like extensions radiating from its center.", false));
            TermData.Add(CVID.PATO_spiny, new TermInfo(CVID.PATO_spiny, @"PATO", @"PATO:0001365", @"spiny", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having spines, thorns or similar thin projections on its surface.", false));
            TermData.Add(CVID.PATO_punctiform, new TermInfo(CVID.PATO_punctiform, @"PATO", @"PATO:0001366", @"punctiform", @"A shape quality inhering in a bearer by virtue of the bearer's being small and resembling a point.", false));
            TermData.Add(CVID.PATO_lobate, new TermInfo(CVID.PATO_lobate, @"PATO", @"PATO:0001367", @"lobate", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having deeply undulating edges forming lobes.", false));
            TermData.Add(CVID.PATO_erose, new TermInfo(CVID.PATO_erose, @"PATO", @"PATO:0001368", @"erose", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having an irregularly toothed edge.", false));
            TermData.Add(CVID.PATO_raised, new TermInfo(CVID.PATO_raised, @"PATO", @"PATO:0001369", @"raised", @"A shape quality inhering in a colony by virtue of the bearer's appearing above the medium surface with terraced edges.", false));
            TermData.Add(CVID.PATO_viscid, new TermInfo(CVID.PATO_viscid, @"PATO", @"PATO:0001370", @"viscid", @"A coating quality which is sticky or clammy.", false));
            TermData.Add(CVID.PATO_mucoid, new TermInfo(CVID.PATO_mucoid, @"PATO", @"PATO:0001371", @"mucoid", @"A composition quality inhering in an bearer by virtue of the bearer's consistency of mucus.", false));
            TermData.Add(CVID.PATO_refractivity, new TermInfo(CVID.PATO_refractivity, @"PATO", @"PATO:0001372", @"refractivity", @"A physical quality that inheres in propagating wave (light or sound) virtue of the bearer's change in direction when passing from one medium to another.", false));
            TermData.Add(CVID.PATO_glistening, new TermInfo(CVID.PATO_glistening, @"PATO", @"PATO:0001373", @"glistening", @"A reflectivity quality inhering in a bearer by virtue of the bearer's reflecting lots of light.", false));
            TermData.Add(CVID.PATO_ploidy, new TermInfo(CVID.PATO_ploidy, @"PATO", @"PATO:0001374", @"ploidy", @"A cellular quality inhering in a bearer by virtue of the bearer's number of homologous sets of chromosomes in the nucleus or primary chromosome-containing compartment of the cell, each set essentially coding for all the biological traits of the organism.", false));
            TermData.Add(CVID.PATO_haploid, new TermInfo(CVID.PATO_haploid, @"PATO", @"PATO:0001375", @"haploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's containing a single set of homologous chromosomes.", false));
            TermData.Add(CVID.PATO_monoploid, new TermInfo(CVID.PATO_monoploid, @"PATO", @"PATO:0001376", @"monoploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's containing a single set of unique homologous chromosomes.", false));
            TermData.Add(CVID.PATO_polyploid, new TermInfo(CVID.PATO_polyploid, @"PATO", @"PATO:0001377", @"polyploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's containing more than two homologous sets of chromosomes.", false));
            TermData.Add(CVID.PATO_autopolyploid, new TermInfo(CVID.PATO_autopolyploid, @"PATO", @"PATO:0001378", @"autopolyploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing chromosomes derived from a single species.", false));
            TermData.Add(CVID.PATO_allopolyploidy, new TermInfo(CVID.PATO_allopolyploidy, @"PATO", @"PATO:0001379", @"allopolyploidy", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing chromosomes derived from different species.", false));
            TermData.Add(CVID.PATO_paleopolyploid, new TermInfo(CVID.PATO_paleopolyploid, @"PATO", @"PATO:0001380", @"paleopolyploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's having an ancient polyploid ancestor.", false));
            TermData.Add(CVID.PATO_triploid, new TermInfo(CVID.PATO_triploid, @"PATO", @"PATO:0001381", @"triploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing three homologous sets of chromosomes.", false));
            TermData.Add(CVID.PATO_tetraploid, new TermInfo(CVID.PATO_tetraploid, @"PATO", @"PATO:0001382", @"tetraploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing four homologous sets of chromosomes.", false));
            TermData.Add(CVID.PATO_pentaploid, new TermInfo(CVID.PATO_pentaploid, @"PATO", @"PATO:0001383", @"pentaploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing five homologous sets of chromosomes.", false));
            TermData.Add(CVID.PATO_hexaploid, new TermInfo(CVID.PATO_hexaploid, @"PATO", @"PATO:0001384", @"hexaploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's containing four homologous sets of chromosomes.", false));
            TermData.Add(CVID.PATO_aneuploid, new TermInfo(CVID.PATO_aneuploid, @"PATO", @"PATO:0001385", @"aneuploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's containing a non-integral multiple of the monoploid number, due to extra or missing chromosomes.", false));
            TermData.Add(CVID.PATO_monosomy, new TermInfo(CVID.PATO_monosomy, @"PATO", @"PATO:0001386", @"monosomy", @"An aneuploidy quality inhering in a bearer by virtue of the bearer's containing only one chromosome from a pair in a cell's nucleus.", false));
            TermData.Add(CVID.PATO_disomy, new TermInfo(CVID.PATO_disomy, @"PATO", @"PATO:0001387", @"disomy", @"An aneuploidy quality inhering in a bearer by virtue of the bearer's containing only two chromosome from a pair in a cell's nucleus.", false));
            TermData.Add(CVID.PATO_uniparental_disomy, new TermInfo(CVID.PATO_uniparental_disomy, @"PATO", @"PATO:0001388", @"uniparental disomy", @"A disomy quality inhering in a bearer by virtue of the bearer's containing two copies of the chromosome from one of the parents (with no contribution from the other parent).", false));
            TermData.Add(CVID.PATO_trisomy, new TermInfo(CVID.PATO_trisomy, @"PATO", @"PATO:0001389", @"trisomy", @"An aneuploidy quality inhering in a bearer by virtue of the bearer's containing three, instead of two, chromosomes of a particular numbered type in an organism.", false));
            TermData.Add(CVID.PATO_partial_trisomy, new TermInfo(CVID.PATO_partial_trisomy, @"PATO", @"PATO:0001390", @"partial trisomy", @"A trisomy quality inhering in a bearer when part of the bearer's extra chromosome is attached to one of the other chromosomes, or if one of the bearer's chromosomes has two copies of part of its chromosome.", false));
            TermData.Add(CVID.PATO_mosaic_trisomy, new TermInfo(CVID.PATO_mosaic_trisomy, @"PATO", @"PATO:0001391", @"mosaic trisomy", @"A trisomy quality inhering in a bearer by virtue of the bearer's having extra chromosomal material in only some of it's cells.", false));
            TermData.Add(CVID.PATO_endopolyploid, new TermInfo(CVID.PATO_endopolyploid, @"PATO", @"PATO:0001392", @"endopolyploid", @"A polyploidy quality inhering in a bearer by virtue of the bearer's chromosome number being increased by endomitosis and for which the degree of ploidy is proportional to the number of times that endomitosis has taken place.", false));
            TermData.Add(CVID.PATO_euploid, new TermInfo(CVID.PATO_euploid, @"PATO", @"PATO:0001393", @"euploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's containing an integral multiple of the monoploid number, possibly excluding the sex-determining chromosomes.", false));
            TermData.Add(CVID.PATO_diploid, new TermInfo(CVID.PATO_diploid, @"PATO", @"PATO:0001394", @"diploid", @"A ploidy quality inhering in a bearer by virtue of the bearer's having two copies (homologs) of each chromosome, usually one from the mother and one from the father.", false));
            TermData.Add(CVID.PATO_haplodiploid, new TermInfo(CVID.PATO_haplodiploid, @"PATO", @"PATO:0001395", @"haplodiploid", @"A diploidy quality inhering in a bearer in by virtue of belonging in a species whose one of the sexes has haploid cells and the other has diploid cells.", false));
            TermData.Add(CVID.PATO_cellular_quality, new TermInfo(CVID.PATO_cellular_quality, @"PATO", @"PATO:0001396", @"cellular quality", @"A monadic quality of continuant that exists at the cellular level of organisation.", false));
            TermData.Add(CVID.PATO_cellular_potency, new TermInfo(CVID.PATO_cellular_potency, @"PATO", @"PATO:0001397", @"cellular potency", @"A cellular quality that arises by virtue of whether the bearer's disposition to differentiate into one or more mature cell types.", false));
            TermData.Add(CVID.PATO_self_renewal, new TermInfo(CVID.PATO_self_renewal, @"PATO", @"PATO:0001398", @"self-renewal", @"A cellular quality inhering in a bearer by virtue of the bearer's having the ability to go through numerous cycles of cell division while maintaining the undifferentiated state.", false));
            TermData.Add(CVID.PATO_totipotent, new TermInfo(CVID.PATO_totipotent, @"PATO", @"PATO:0001399", @"totipotent", @"A cellular potency that is the capacity to produce differentiated cell types of all three primary germ layers and extraembryonic cell types.", false));
            TermData.Add(CVID.PATO_unipotent, new TermInfo(CVID.PATO_unipotent, @"PATO", @"PATO:0001400", @"unipotent", @"A cellular potency that is the capacity to produce only one differentiated cell type.", false));
            TermData.Add(CVID.PATO_oligopotent, new TermInfo(CVID.PATO_oligopotent, @"PATO", @"PATO:0001401", @"oligopotent", @"A cellular potency that is the capacity to form multiple differentiated cell types of a specific lineage and lack self renewing capacity.", false));
            TermData.Add(CVID.PATO_multipotent, new TermInfo(CVID.PATO_multipotent, @"PATO", @"PATO:0001402", @"multipotent", @"A cellular potency that is the capacity to form multiple differentiated cell types.", false));
            TermData.Add(CVID.PATO_pluripotent, new TermInfo(CVID.PATO_pluripotent, @"PATO", @"PATO:0001403", @"pluripotent", @"A cellular potency that is the capacity to produce differentiated cell types of all three primary germ layers but not extraembryonic cell types.", false));
            TermData.Add(CVID.PATO_nucleate_quality, new TermInfo(CVID.PATO_nucleate_quality, @"PATO", @"PATO:0001404", @"nucleate quality", @"A cellular quality inhering in a bearer by virtue of bearer's number of nuclei.", false));
            TermData.Add(CVID.PATO_anucleate, new TermInfo(CVID.PATO_anucleate, @"PATO", @"PATO:0001405", @"anucleate", @"A nucleate quality inhering in a bearer by virtue of the bearer's having no nucleus.", false));
            TermData.Add(CVID.PATO_binucleate, new TermInfo(CVID.PATO_binucleate, @"PATO", @"PATO:0001406", @"binucleate", @"A nucleate quality inhering in a bearer by virtue of the bearer's having two nuclei.", false));
            TermData.Add(CVID.PATO_mononucleate, new TermInfo(CVID.PATO_mononucleate, @"PATO", @"PATO:0001407", @"mononucleate", @"A nucleate quality inhering in a bearer by virtue of the bearer's having one nucleus.", false));
            TermData.Add(CVID.PATO_ciliatedness, new TermInfo(CVID.PATO_ciliatedness, @"PATO", @"PATO:0001408", @"ciliatedness", @"A cellular quality inhering in a bearer by virtue of the bearer's having thin, tail-like projections extending outwards from the cell body.", false));
            TermData.Add(CVID.PATO_spindle_shaped, new TermInfo(CVID.PATO_spindle_shaped, @"PATO", @"PATO:0001409", @"spindle-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's resembling a long tapered rod.", false));
            TermData.Add(CVID.PATO_striated, new TermInfo(CVID.PATO_striated, @"PATO", @"PATO:0001410", @"striated", @"A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel.", false));
            TermData.Add(CVID.PATO_structured, new TermInfo(CVID.PATO_structured, @"PATO", @"PATO:0001411", @"structured", @"A structural quality inhering in a bearer by virtue of the bearer's having distinct structure.", false));
            TermData.Add(CVID.PATO_unstructured, new TermInfo(CVID.PATO_unstructured, @"PATO", @"PATO:0001412", @"unstructured", @"A structural quality inhering in a bearer by virtue of the bearer's lacking distinct structure.", false));
            TermData.Add(CVID.PATO_angular_velocity, new TermInfo(CVID.PATO_angular_velocity, @"PATO", @"PATO:0001413", @"angular velocity", @"A physical quality inhering in a bearer by virtue of the rate of the bearer's angular movement about an axis; the angle rotated in a given time.", false));
            TermData.Add(CVID.PATO_catalytic_activity, new TermInfo(CVID.PATO_catalytic_activity, @"PATO", @"PATO:0001414", @"catalytic activity", @"A physical quality inhering in a catalyst by virtue of the amount of the catalyst's action.", false));
            TermData.Add(CVID.PATO_morbidity, new TermInfo(CVID.PATO_morbidity, @"PATO", @"PATO:0001415", @"morbidity", @"A quality inhering in a population by virtue of the proportion of its members that are ill at a given time.", false));
            TermData.Add(CVID.PATO_regular_duration, new TermInfo(CVID.PATO_regular_duration, @"PATO", @"PATO:0001416", @"regular duration", @"A duration which has regular start and/or end times.", false));
            TermData.Add(CVID.PATO_irregular_duration, new TermInfo(CVID.PATO_irregular_duration, @"PATO", @"PATO:0001417", @"irregular duration", @"A duration quality of a process inhering in a bearer by virtue of the bearer's duration which has irregular start and/or end times.", false));
            TermData.Add(CVID.PATO_lethargic, new TermInfo(CVID.PATO_lethargic, @"PATO", @"PATO:0001418", @"lethargic", @"A behavioral quality inhering in a bearer by virtue of the bearer's being deficient in alertness or activity.", false));
            TermData.Add(CVID.PATO_sharp, new TermInfo(CVID.PATO_sharp, @"PATO", @"PATO:0001419", @"sharp", @"A shape quality inhering in a bearer by virtue of the bearer's terminating in a point or edge.", false));
            TermData.Add(CVID.PATO_buoyancy, new TermInfo(CVID.PATO_buoyancy, @"PATO", @"PATO:0001420", @"buoyancy", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to rise or float in a fluid medium such as water or air.", false));
            TermData.Add(CVID.PATO_alive, new TermInfo(CVID.PATO_alive, @"PATO", @"PATO:0001421", @"alive", @"A viability quality inhering in a bearer by virtue of the bearer's condition before death.", false));
            TermData.Add(CVID.PATO_dead, new TermInfo(CVID.PATO_dead, @"PATO", @"PATO:0001422", @"dead", @"A viability quality inhering in a bearer by virtue of the cessation of the bearer's life.", false));
            TermData.Add(CVID.PATO_refractile, new TermInfo(CVID.PATO_refractile, @"PATO", @"PATO:0001423", @"refractile", @"A reflectivity quality inhering in the bearer by virtue of the bearer's ability to refract light.", false));
            TermData.Add(CVID.PATO_violet, new TermInfo(CVID.PATO_violet, @"PATO", @"PATO:0001424", @"violet", @"A color hue with very low wavelength of that portion of the visible spectrum lying between reddish blue or bluish purple, evoked in the human observer by radiant energy with wavelengths of approximately 420 to 380 nanometers.", false));
            TermData.Add(CVID.PATO_rosy, new TermInfo(CVID.PATO_rosy, @"PATO", @"PATO:0001425", @"rosy", @"A color hue consisting of red hue and yellow hue and high brightness.", false));
            TermData.Add(CVID.PATO_maroon, new TermInfo(CVID.PATO_maroon, @"PATO", @"PATO:0001426", @"maroon", @"A color consisting of purple and brown hue.", false));
            TermData.Add(CVID.PATO_compound_acidity, new TermInfo(CVID.PATO_compound_acidity, @"PATO", @"PATO:0001427", @"compound acidity", @"A concentration quality inhering in compound by virtue of the bearer's tendency to act as a hydron donor.", false));
            TermData.Add(CVID.PATO_medium_acidity, new TermInfo(CVID.PATO_medium_acidity, @"PATO", @"PATO:0001428", @"medium acidity", @"A concentration quality inhering in a medium by virtue of the bearer's tendency to hydronate a specific reference base.", false));
            TermData.Add(CVID.PATO_acidic, new TermInfo(CVID.PATO_acidic, @"PATO", @"PATO:0001429", @"acidic", @"An medium acidity quality inhering in a solution by virtue of the bearer's a high concentration of H+ ions.", false));
            TermData.Add(CVID.PATO_alkaline, new TermInfo(CVID.PATO_alkaline, @"PATO", @"PATO:0001430", @"alkaline", @"An medium acidity quality inhering in a solution by virtue of the bearer's a low concentration of H+ ions.", false));
            TermData.Add(CVID.PATO_adhesivity, new TermInfo(CVID.PATO_adhesivity, @"PATO", @"PATO:0001431", @"adhesivity", @"An emergent molecular quality that arises by virtue of the bearer's disposition to exhibit molecular attraction to another entity in contact.", false));
            TermData.Add(CVID.PATO_decayed, new TermInfo(CVID.PATO_decayed, @"PATO", @"PATO:0001432", @"decayed", @"A quality inhering in a bearer by virtue of the bearer's decomposition into component parts.", false));
            TermData.Add(CVID.PATO_growth_quality_of_occurrent, new TermInfo(CVID.PATO_growth_quality_of_occurrent, @"PATO", @"PATO:0001433", @"growth quality of occurrent", @"A quality of a single process which describes the growth of an organism, structure, or group of organisms.", false));
            TermData.Add(CVID.PATO_reproductive_quality, new TermInfo(CVID.PATO_reproductive_quality, @"PATO", @"PATO:0001434", @"reproductive quality", @"An organismal quality inhering in a bearer by virtue of the bearer's ability to produce new life or offspring.", false));
            TermData.Add(CVID.PATO_attachment_quality, new TermInfo(CVID.PATO_attachment_quality, @"PATO", @"PATO:0001435", @"attachment quality", @"A structural quality inhering in a bearer by virtue of the bearer's having connection or association with another entity.", false));
            TermData.Add(CVID.PATO_sessile__sensu_botany_, new TermInfo(CVID.PATO_sessile__sensu_botany_, @"PATO", @"PATO:0001436", @"sessile (sensu botany)", @"An attachment quality inhering in a flower by virtue of the bearer's lacking a stalk, as in flowers or leaves that grow directly from the stem.", false));
            TermData.Add(CVID.PATO_sessile__sensu_zoology_, new TermInfo(CVID.PATO_sessile__sensu_zoology_, @"PATO", @"PATO:0001437", @"sessile (sensu zoology)", @"A attachment quality inhering in a bearer by virtue of the bearer's inability to move about.", false));
            TermData.Add(CVID.PATO_pedicellate, new TermInfo(CVID.PATO_pedicellate, @"PATO", @"PATO:0001438", @"pedicellate", @"A attachment quality inhering in a bearer by virtue of the bearer's having or being supported by a pedicel or pedicle.", false));
            TermData.Add(CVID.PATO_tonicity, new TermInfo(CVID.PATO_tonicity, @"PATO", @"PATO:0001439", @"tonicity", @"A contractile quality inhering in a bearer by virtue of the bearer's elastic tension that facilitate response to stimuli.", false));
            TermData.Add(CVID.PATO_homophilic, new TermInfo(CVID.PATO_homophilic, @"PATO", @"PATO:0001440", @"homophilic", @"A cellular adhesivity quality inhering in a molecule in one cell by virtue of the bearer's attachment to an identical molecule in an adjacent cell.", false));
            TermData.Add(CVID.PATO_heterophilic, new TermInfo(CVID.PATO_heterophilic, @"PATO", @"PATO:0001441", @"heterophilic", @"A cellular adhesivity quality inhering in a molecule in one cell by virtue of the bearer's attachment to an nonidentical molecule in an adjacent cell.", false));
            TermData.Add(CVID.PATO_wholeness, new TermInfo(CVID.PATO_wholeness, @"PATO", @"PATO:0001442", @"wholeness", @"A structural quality inhering in a bearer by virtue of whether the bearer includes all its components.", false));
            TermData.Add(CVID.PATO_broken, new TermInfo(CVID.PATO_broken, @"PATO", @"PATO:0001444", @"broken", @"A broken quality inhering in a bearer by virtue of the bearer's being broken open.", false));
            TermData.Add(CVID.PATO_disassembled, new TermInfo(CVID.PATO_disassembled, @"PATO", @"PATO:0001445", @"disassembled", @"A wholeness quality inhering in a bearer by virtue of the bearer's being taken apart into its constituent parts.", false));
            TermData.Add(CVID.PATO_whole, new TermInfo(CVID.PATO_whole, @"PATO", @"PATO:0001446", @"whole", @"A wholeness quality inhering in a bearer by virtue of the bearer's including all its components.", false));
            TermData.Add(CVID.PATO_calcified, new TermInfo(CVID.PATO_calcified, @"PATO", @"PATO:0001447", @"calcified", @"A composition quality inhering in an bearer by virtue of the bearer's being encrusted or impregnated with calcium carbonate (CHEBI:3311).", false));
            TermData.Add(CVID.PATO_ossified, new TermInfo(CVID.PATO_ossified, @"PATO", @"PATO:0001448", @"ossified", @"A composition quality inhering in an bearer by virtue of the bearer's being hardened by the deposition of calcium into bone.", false));
            TermData.Add(CVID.PATO_cartilaginous, new TermInfo(CVID.PATO_cartilaginous, @"PATO", @"PATO:0001449", @"cartilaginous", @"A composition quality inhering in an bearer by virtue of the bearer's cartilage quantities.", false));
            TermData.Add(CVID.PATO_edematous, new TermInfo(CVID.PATO_edematous, @"PATO", @"PATO:0001450", @"edematous", @"A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of extracellular fluid.", false));
            TermData.Add(CVID.PATO_obsolete_edematous__sensu_botany__OBSOLETE, new TermInfo(CVID.PATO_obsolete_edematous__sensu_botany__OBSOLETE, @"PATO", @"PATO:0001451", @"obsolete edematous (sensu botany)", @"An extended swelling in plant organs caused primarily by an excessive accumulation of water.", true));
            TermData.Add(CVID.PATO_detached_from, new TermInfo(CVID.PATO_detached_from, @"PATO", @"PATO:0001453", @"detached from", @"An attachment quality inhering in a bearer by virtue of the bearer's lacking connection or association with another entity.", false));
            TermData.Add(CVID.PATO_sensitivity_to_oxygen, new TermInfo(CVID.PATO_sensitivity_to_oxygen, @"PATO", @"PATO:0001454", @"sensitivity to oxygen", @"A sensitivity quality inhering in a bearer by virtue of the bearer's dependence on oxygen.", false));
            TermData.Add(CVID.PATO_aerobic, new TermInfo(CVID.PATO_aerobic, @"PATO", @"PATO:0001455", @"aerobic", @"A quality inhering in a bearer by virtue of the bearer's dependence on oxygen.", false));
            TermData.Add(CVID.PATO_anaerobic, new TermInfo(CVID.PATO_anaerobic, @"PATO", @"PATO:0001456", @"anaerobic", @"A quality inhering in a bearer by virtue of the bearer's independence on oxygen.", false));
            TermData.Add(CVID.PATO_sensitivity_of_a_process, new TermInfo(CVID.PATO_sensitivity_of_a_process, @"PATO", @"PATO:0001457", @"sensitivity of a process", @"A quality of a process inhering in bearer by virtue of the bearer's disposition to respond to stimulation.", false));
            TermData.Add(CVID.PATO_sensitivity_of_a_process_to_oxygen, new TermInfo(CVID.PATO_sensitivity_of_a_process_to_oxygen, @"PATO", @"PATO:0001458", @"sensitivity of a process to oxygen", @"A sensitivity of a process quality inhering in a bearer by virtue of the bearer's unfolding in a location with or without oxygen.", false));
            TermData.Add(CVID.PATO_aerobic__for_occurrence_, new TermInfo(CVID.PATO_aerobic__for_occurrence_, @"PATO", @"PATO:0001459", @"aerobic (for occurrence)", @"A sensitivity of a process inhering in a biological process by virtue of the process unfolding in a location with oxygen.", false));
            TermData.Add(CVID.PATO_anaerobic__for_occurrence_, new TermInfo(CVID.PATO_anaerobic__for_occurrence_, @"PATO", @"PATO:0001460", @"anaerobic (for occurrence)", @"A sensitivity of a process inhering in a biological process by virtue of the process unfolding in a location without oxygen.", false));
            TermData.Add(CVID.PATO_surface_tension, new TermInfo(CVID.PATO_surface_tension, @"PATO", @"PATO:0001461", @"surface tension", @"A physical quality inhering in a liquid by virtue of the bearer's ability to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces.", false));
            TermData.Add(CVID.PATO_membrane_potential, new TermInfo(CVID.PATO_membrane_potential, @"PATO", @"PATO:0001462", @"membrane potential", @"A quality inhering in a cell's plasma membrane by virtue of the electrical potential difference across it.", false));
            TermData.Add(CVID.PATO_action_potential, new TermInfo(CVID.PATO_action_potential, @"PATO", @"PATO:0001463", @"action potential", @"A quality inhering in a cell's plasma membrane by virtue of a brief fluctuation in the bearer's potential caused by the rapid opening and closing of voltage-gated ion channels.", false));
            TermData.Add(CVID.PATO_electric_potential, new TermInfo(CVID.PATO_electric_potential, @"PATO", @"PATO:0001464", @"electric potential", @"A quality that is equal to the potential energy per unit charge associated with a static (time-invariant) electric field, also called the electrostatic potential.", false));
            TermData.Add(CVID.PATO_monstrous, new TermInfo(CVID.PATO_monstrous, @"PATO", @"PATO:0001465", @"monstrous", @"A malformed quality inhering in a bearer by virtue of the bearer's all-encompassing, grotesque morphological defects.", false));
            TermData.Add(CVID.PATO_curved_rostral, new TermInfo(CVID.PATO_curved_rostral, @"PATO", @"PATO:0001466", @"curved rostral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the front of an organism.", false));
            TermData.Add(CVID.PATO_curved_caudal, new TermInfo(CVID.PATO_curved_caudal, @"PATO", @"PATO:0001467", @"curved caudal", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the part of the body from which the tail arises.", false));
            TermData.Add(CVID.PATO_curved_dorsal, new TermInfo(CVID.PATO_curved_dorsal, @"PATO", @"PATO:0001468", @"curved dorsal", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the back or upper surface of an organism.", false));
            TermData.Add(CVID.PATO_curved_ventral, new TermInfo(CVID.PATO_curved_ventral, @"PATO", @"PATO:0001469", @"curved ventral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the abdomen of an organism.", false));
            TermData.Add(CVID.PATO_proportionality_to, new TermInfo(CVID.PATO_proportionality_to, @"PATO", @"PATO:0001470", @"proportionality to", @"A quality inhering in a bearer by virtue of the bearer's magnitude in respect to a related entity.", false));
            TermData.Add(CVID.PATO_decreased_depth, new TermInfo(CVID.PATO_decreased_depth, @"PATO", @"PATO:0001472", @"decreased depth", @"A depth which is relatively low.", false));
            TermData.Add(CVID.PATO_duplicated, new TermInfo(CVID.PATO_duplicated, @"PATO", @"PATO:0001473", @"duplicated", @"A quality inhering in a bearer by virtue of the bearer's being present in two copies.", false));
            TermData.Add(CVID.PATO_anteverted, new TermInfo(CVID.PATO_anteverted, @"PATO", @"PATO:0001474", @"anteverted", @"An oriented quality inhering in a bearer by virtue of the bearer's axis being positioned forward.", false));
            TermData.Add(CVID.PATO_increased_position, new TermInfo(CVID.PATO_increased_position, @"PATO", @"PATO:0001475", @"increased position", @"A position which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_position, new TermInfo(CVID.PATO_decreased_position, @"PATO", @"PATO:0001476", @"decreased position", @"A positional which is relatively low.", false));
            TermData.Add(CVID.PATO_retracted, new TermInfo(CVID.PATO_retracted, @"PATO", @"PATO:0001477", @"retracted", @"A positional quality inhering in a bearer by virtue of the bearer's being drawn in or pulled back from any given point.", false));
            TermData.Add(CVID.PATO_collapsed, new TermInfo(CVID.PATO_collapsed, @"PATO", @"PATO:0001478", @"collapsed", @"A structural quality inhering in a bearer by virtue of the bearer's being broken down; caved in.", false));
            TermData.Add(CVID.PATO_spongy, new TermInfo(CVID.PATO_spongy, @"PATO", @"PATO:0001480", @"spongy", @"A structural quality inhering in a bearer by virtue of the bearer's resembling a sponge in elasticity, absorbency, or porousness.", false));
            TermData.Add(CVID.PATO_sloped, new TermInfo(CVID.PATO_sloped, @"PATO", @"PATO:0001481", @"sloped", @"A shape quality inhering in a bearer by virtue of the bearer's having an oblique or slanted direction.", false));
            TermData.Add(CVID.PATO_prominent, new TermInfo(CVID.PATO_prominent, @"PATO", @"PATO:0001482", @"prominent", @"A quality inhering in a bearer by virtue of the bearer's standing out or projecting beyond a surface or line.", false));
            TermData.Add(CVID.PATO_aplastic, new TermInfo(CVID.PATO_aplastic, @"PATO", @"PATO:0001483", @"aplastic", @"Absence of an organ, tissue or cell due to failure to develop from a primordium or precursor cell.", false));
            TermData.Add(CVID.PATO_recent, new TermInfo(CVID.PATO_recent, @"PATO", @"PATO:0001484", @"recent", @"A quality of a process which occurs near to or not long before the present.", false));
            TermData.Add(CVID.PATO_condensed, new TermInfo(CVID.PATO_condensed, @"PATO", @"PATO:0001485", @"condensed", @"A structural quality inhering in a bearer by virtue of the bearer's being thicker or more closely packed together; pressed tightly together.", false));
            TermData.Add(CVID.PATO_chronological_age, new TermInfo(CVID.PATO_chronological_age, @"PATO", @"PATO:0001486", @"chronological age", @"An age quality that exists by virtue of the time (years and months) that the bearer has existed.", false));
            TermData.Add(CVID.PATO_senescent, new TermInfo(CVID.PATO_senescent, @"PATO", @"PATO:0001487", @"senescent", @"A time quality inhering in a bearer by virtue of the bearer's growing old; aging.", false));
            TermData.Add(CVID.PATO_cellular_motility, new TermInfo(CVID.PATO_cellular_motility, @"PATO", @"PATO:0001488", @"cellular motility", @"A cellular quality inhering in a cell by virtue of whether the bearer exhibits the ability to move spontaneously.", false));
            TermData.Add(CVID.PATO_heterochronic_growth, new TermInfo(CVID.PATO_heterochronic_growth, @"PATO", @"PATO:0001490", @"heterochronic growth", @"A growth quality of a process inhering in an organism, structure, or group of organisms by virtue of the bearer's reduced or increased growth.", false));
            TermData.Add(CVID.PATO_neotenous_growth, new TermInfo(CVID.PATO_neotenous_growth, @"PATO", @"PATO:0001491", @"neotenous growth", @"A paedomorphic growth quality which is due to a reduced rate.", false));
            TermData.Add(CVID.PATO_growth_rate, new TermInfo(CVID.PATO_growth_rate, @"PATO", @"PATO:0001492", @"growth rate", @"", false));
            TermData.Add(CVID.PATO_hypertrophic_growth, new TermInfo(CVID.PATO_hypertrophic_growth, @"PATO", @"PATO:0001493", @"hypertrophic growth", @"", false));
            TermData.Add(CVID.PATO_hypotrophic_growth, new TermInfo(CVID.PATO_hypotrophic_growth, @"PATO", @"PATO:0001494", @"hypotrophic growth", @"", false));
            TermData.Add(CVID.PATO_notched, new TermInfo(CVID.PATO_notched, @"PATO", @"PATO:0001495", @"notched", @"A concave quality inhering in a bearer by virtue of the bearer's shape being a V-shaped cut.", false));
            TermData.Add(CVID.PATO_brood_quality, new TermInfo(CVID.PATO_brood_quality, @"PATO", @"PATO:0001496", @"brood quality", @"A reproductive quality inhering in the young of an animal by virtue of the bearer's being cared for at one time.", false));
            TermData.Add(CVID.PATO_brood_viability, new TermInfo(CVID.PATO_brood_viability, @"PATO", @"PATO:0001497", @"brood viability", @"A reproductive quality inhering in the young of an animal by virtue of the bearer's disposition to survive and develop normally.", false));
            TermData.Add(CVID.PATO_spherical, new TermInfo(CVID.PATO_spherical, @"PATO", @"PATO:0001499", @"spherical", @"A spheroid quality inhering in a bearer by virtue of the bearer's resembling a ball (a sphere whose equatorial diameter is equal to the polar diameter).", false));
            TermData.Add(CVID.PATO_tapered, new TermInfo(CVID.PATO_tapered, @"PATO", @"PATO:0001500", @"tapered", @"A shape quality inhering in a bearer by virtue of the bearer's being gradually narrower or thinner toward one end.", false));
            TermData.Add(CVID.PATO_immature, new TermInfo(CVID.PATO_immature, @"PATO", @"PATO:0001501", @"immature", @"A quality inhering in a bearer by virtue of the bearer's lacking complete growth, differentiation, or development.", false));
            TermData.Add(CVID.PATO_complexity, new TermInfo(CVID.PATO_complexity, @"PATO", @"PATO:0001502", @"complexity", @"A monadic quality of continuant inhering in a bearer by virtue of the bearer's being intricate and compounded.", false));
            TermData.Add(CVID.PATO_simple, new TermInfo(CVID.PATO_simple, @"PATO", @"PATO:0001503", @"simple", @"A complexity quality in a bearer by virtue of the bearer's having few parts or being complicated or compound.", false));
            TermData.Add(CVID.PATO_complex, new TermInfo(CVID.PATO_complex, @"PATO", @"PATO:0001504", @"complex", @"A complexity quality inhering in a bearer by virtue of the bearer's being intricate and compounded.", false));
            TermData.Add(CVID.PATO_separated_from, new TermInfo(CVID.PATO_separated_from, @"PATO", @"PATO:0001505", @"separated from", @"A structural quality inhering in a bearer by virtue of the bearer's not being in contact with another entity, or of no longer being connected or joined with another entity.", false));
            TermData.Add(CVID.PATO_diastatic, new TermInfo(CVID.PATO_diastatic, @"PATO", @"PATO:0001506", @"diastatic", @"A structural quality inhering in a bearer by virtue of the bearer's separation of normally joined parts, such as the separation of adjacent bones without fracture or of certain abdominal muscles during pregnancy.", false));
            TermData.Add(CVID.PATO_disrupted, new TermInfo(CVID.PATO_disrupted, @"PATO", @"PATO:0001507", @"disrupted", @"A quality of a single process inhering in a bearer by virtue of the bearer's being interrupted of its normal course.", false));
            TermData.Add(CVID.PATO_functionality, new TermInfo(CVID.PATO_functionality, @"PATO", @"PATO:0001509", @"functionality", @"A quality of a single physical entity that arises by virtue of whether the bearer exhibits the ability to perform a regular function(s).", false));
            TermData.Add(CVID.PATO_functional, new TermInfo(CVID.PATO_functional, @"PATO", @"PATO:0001510", @"functional", @"A functionality quality held by the bearer when the latter is able to perform a regular function(s).", false));
            TermData.Add(CVID.PATO_non_functional, new TermInfo(CVID.PATO_non_functional, @"PATO", @"PATO:0001511", @"non-functional", @"A disfunctional quality held by the bearer when the latter is unable to perform a regular function(s).", false));
            TermData.Add(CVID.PATO_punctate, new TermInfo(CVID.PATO_punctate, @"PATO", @"PATO:0001512", @"punctate", @"A pattern inhering in a surface by virtue of the bearer's being marked by the presence of dots, punctures, points or pits.", false));
            TermData.Add(CVID.PATO_delaminated, new TermInfo(CVID.PATO_delaminated, @"PATO", @"PATO:0001514", @"delaminated", @"A structural quality inhering in a bearer by virtue of the bearer's lacking some outer layer.", false));
            TermData.Add(CVID.PATO_variable_color, new TermInfo(CVID.PATO_variable_color, @"PATO", @"PATO:0001515", @"variable color", @"A color quality inhering in a bearer by virtue of the bearer's being uneven in color.", false));
            TermData.Add(CVID.PATO_focus, new TermInfo(CVID.PATO_focus, @"PATO", @"PATO:0001516", @"focus", @"An optical quality where light rays originating from a point on the object converge.", false));
            TermData.Add(CVID.PATO_focused, new TermInfo(CVID.PATO_focused, @"PATO", @"PATO:0001517", @"focused", @"An optical quality inhering in a bearer by virtue of the bearer's having focus.", false));
            TermData.Add(CVID.PATO_blurry, new TermInfo(CVID.PATO_blurry, @"PATO", @"PATO:0001518", @"blurry", @"An optical quality inhering in a bearer by virtue of the bearer's lacking focus.", false));
            TermData.Add(CVID.PATO_sound_quality, new TermInfo(CVID.PATO_sound_quality, @"PATO", @"PATO:0001519", @"sound quality", @"A quality inhering in a bearer by virtue of vibration, as perceived by the sense of hearing.", false));
            TermData.Add(CVID.PATO_sound_frequency, new TermInfo(CVID.PATO_sound_frequency, @"PATO", @"PATO:0001520", @"sound frequency", @"The frequency of transmitted vibrations.", false));
            TermData.Add(CVID.PATO_sound_amplitude, new TermInfo(CVID.PATO_sound_amplitude, @"PATO", @"PATO:0001521", @"sound amplitude", @"A physical quality inhering in a sound wave by virtue of the maximum magnitude (value without regard to sign) of its disturbance.", false));
            TermData.Add(CVID.PATO_sound_speed, new TermInfo(CVID.PATO_sound_speed, @"PATO", @"PATO:0001522", @"sound speed", @"A physical quality inhering in sound by virtue of the bearer's travelling speed in a given medium under specified conditions.", false));
            TermData.Add(CVID.PATO_sound_wavelength, new TermInfo(CVID.PATO_sound_wavelength, @"PATO", @"PATO:0001523", @"sound wavelength", @"A physical quality which is equal to the quotient of the speed of a sound wave divided by its wavelength.", false));
            TermData.Add(CVID.PATO_intrasonic, new TermInfo(CVID.PATO_intrasonic, @"PATO", @"PATO:0001524", @"intrasonic", @"A sound frequency in the range of 0-20 Hz.", false));
            TermData.Add(CVID.PATO_sonic, new TermInfo(CVID.PATO_sonic, @"PATO", @"PATO:0001525", @"sonic", @"A sound frequency in the range of 20 to 20.000 Hz.", false));
            TermData.Add(CVID.PATO_ultrasonic, new TermInfo(CVID.PATO_ultrasonic, @"PATO", @"PATO:0001526", @"ultrasonic", @"A sound frequency in the range of 20 000 + Hz.", false));
            TermData.Add(CVID.PATO_quiet, new TermInfo(CVID.PATO_quiet, @"PATO", @"PATO:0001527", @"quiet", @"A sound amplitude which is relatively low.", false));
            TermData.Add(CVID.PATO_loud, new TermInfo(CVID.PATO_loud, @"PATO", @"PATO:0001528", @"loud", @"A sound amplitude which is relatively high.", false));
            TermData.Add(CVID.PATO_cellular_spatiotemporal_quality, new TermInfo(CVID.PATO_cellular_spatiotemporal_quality, @"PATO", @"PATO:0001529", @"cellular spatiotemporal quality", @"A spatiotemporal quality inhering in a cell.", false));
            TermData.Add(CVID.PATO_behavioral_quality_of_a_process, new TermInfo(CVID.PATO_behavioral_quality_of_a_process, @"PATO", @"PATO:0001530", @"behavioral quality of a process", @"A quality of a single process inhering in a bearer by virtue of the bearer's behavior.", false));
            TermData.Add(CVID.PATO_cellular_adhesivity, new TermInfo(CVID.PATO_cellular_adhesivity, @"PATO", @"PATO:0001531", @"cellular adhesivity", @"A cellular quality that exists by virtue of the disposition of the cell to adhere to other cells and molecules, through the emergent action of the molecular parts of the cell surface.", false));
            TermData.Add(CVID.PATO_mono_colored, new TermInfo(CVID.PATO_mono_colored, @"PATO", @"PATO:0001532", @"mono-colored", @"A color pattern inhering in a bearer by virtue of the bearer's having one hue.", false));
            TermData.Add(CVID.PATO_multi_colored, new TermInfo(CVID.PATO_multi_colored, @"PATO", @"PATO:0001533", @"multi-colored", @"A color pattern inhering in a bearer by virtue of bearer's having two or more hues or degrees of saturation.", false));
            TermData.Add(CVID.PATO_motley, new TermInfo(CVID.PATO_motley, @"PATO", @"PATO:0001534", @"motley", @"A color pattern inhering in a bearer by virtue of bearer's having 3 or more hues or degrees of saturations.", false));
            TermData.Add(CVID.PATO_dappled, new TermInfo(CVID.PATO_dappled, @"PATO", @"PATO:0001535", @"dappled", @"A color pattern inhering in a bearer by virtue of bearer's being marked with small spots, patches, or specks of hue or degree of saturation differing from that of the background.", false));
            TermData.Add(CVID.PATO_solubility, new TermInfo(CVID.PATO_solubility, @"PATO", @"PATO:0001536", @"solubility", @"A molecular quality that inheres in a molecular entity by virtue of the bearer's disposition to dissolve in a liquid.", false));
            TermData.Add(CVID.PATO_soluble_in, new TermInfo(CVID.PATO_soluble_in, @"PATO", @"PATO:0001537", @"soluble in", @"A solubility quality inhering in a substance by virtue of the bearer's disposition to dissolve in a liquid.", false));
            TermData.Add(CVID.PATO_insoluble_in, new TermInfo(CVID.PATO_insoluble_in, @"PATO", @"PATO:0001538", @"insoluble in", @"A solubility quality inhering in a substance by virtue of the bearer's inability of a substance to dissolve in a liquid.", false));
            TermData.Add(CVID.PATO_amylose_composition, new TermInfo(CVID.PATO_amylose_composition, @"PATO", @"PATO:0001539", @"amylose composition", @"A compositional quality inhering in an bearer by virtue of the bearer's quantities or relative ratios of amylose of the inhering entity.", false));
            TermData.Add(CVID.PATO_glutinous, new TermInfo(CVID.PATO_glutinous, @"PATO", @"PATO:0001540", @"glutinous", @"An amylose composition quality inhering in an bearer by virtue of the bearer's having negligible or no amylose content.", false));
            TermData.Add(CVID.PATO_non_glutinous, new TermInfo(CVID.PATO_non_glutinous, @"PATO", @"PATO:0001541", @"non-glutinous", @"An amylose composition quality inhering in an bearer by virtue of the bearer's having high amount of amylose content.", false));
            TermData.Add(CVID.PATO_delayed_phase, new TermInfo(CVID.PATO_delayed_phase, @"PATO", @"PATO:0001542", @"delayed phase", @"A phase which starts later than natural start point.", false));
            TermData.Add(CVID.PATO_flexibility, new TermInfo(CVID.PATO_flexibility, @"PATO", @"PATO:0001543", @"flexibility", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to being turned, bowed, or twisted without breaking.", false));
            TermData.Add(CVID.PATO_flexible, new TermInfo(CVID.PATO_flexible, @"PATO", @"PATO:0001544", @"flexible", @"A physical quality inhering in a bearer by virtue of the bearer's ability of being turned, bowed, or twisted without breaking.", false));
            TermData.Add(CVID.PATO_inflexible, new TermInfo(CVID.PATO_inflexible, @"PATO", @"PATO:0001545", @"inflexible", @"A physical quality inhering in a bearer by virtue of the bearer's inability of being turned, bowed, or twisted without breaking.", false));
            TermData.Add(CVID.PATO_quality_of_a_solid, new TermInfo(CVID.PATO_quality_of_a_solid, @"PATO", @"PATO:0001546", @"quality of a solid", @"A physical quality inhering in a bearer by virtue of the bearer's exhibiting the physical characteristics of an entity characterized by particles arranged such that their shape and volume are relatively stable.", false));
            TermData.Add(CVID.PATO_quality_of_a_gas, new TermInfo(CVID.PATO_quality_of_a_gas, @"PATO", @"PATO:0001547", @"quality of a gas", @"A physical quality inhering in a bearer by virtue of the bearer's exhibiting the physical characteristics of an entity consisting of particles that have neither a defined volume nor defined shape.", false));
            TermData.Add(CVID.PATO_quality_of_a_liquid, new TermInfo(CVID.PATO_quality_of_a_liquid, @"PATO", @"PATO:0001548", @"quality of a liquid", @"A physical quality inhering in an entity exhibiting the physical characteristics of an amorphous (non-crystalline) form of matter between a gas and a solid that has a definite volume, but no definite shape.", false));
            TermData.Add(CVID.PATO_increased_sensitivity_toward, new TermInfo(CVID.PATO_increased_sensitivity_toward, @"PATO", @"PATO:0001549", @"increased sensitivity toward", @"A sensitivity toward an external stimulus which is higher than normal/average.", false));
            TermData.Add(CVID.PATO_decreased_sensitivity_toward, new TermInfo(CVID.PATO_decreased_sensitivity_toward, @"PATO", @"PATO:0001550", @"decreased sensitivity toward", @"A sensitivity toward an external stimulus which is lower than normal/average.", false));
            TermData.Add(CVID.PATO_increased_sensitivity_of_a_process, new TermInfo(CVID.PATO_increased_sensitivity_of_a_process, @"PATO", @"PATO:0001551", @"increased sensitivity of a process", @"A sensitivity of a process which is higher than normal or average.", false));
            TermData.Add(CVID.PATO_decreased_sensitivity_of_a_process, new TermInfo(CVID.PATO_decreased_sensitivity_of_a_process, @"PATO", @"PATO:0001552", @"decreased sensitivity of a process", @"A sensitivity of a process which is lower than normal or average.", false));
            TermData.Add(CVID.PATO_increased_sensitivity_of_a_process_to_oxygen, new TermInfo(CVID.PATO_increased_sensitivity_of_a_process_to_oxygen, @"PATO", @"PATO:0001553", @"increased sensitivity of a process to oxygen", @"A sensitivity of occurrent to oxygen which is higher than normal or average.", false));
            TermData.Add(CVID.PATO_decreased_sensitivity_of_a_process_to_oxygen, new TermInfo(CVID.PATO_decreased_sensitivity_of_a_process_to_oxygen, @"PATO", @"PATO:0001554", @"decreased sensitivity of a process to oxygen", @"A sensitivity of a process to oxygen which is lower than normal or average.", false));
            TermData.Add(CVID.PATO_has_number_of, new TermInfo(CVID.PATO_has_number_of, @"PATO", @"PATO:0001555", @"has number of", @"The number of parts of a particular type that the bearer entity has. This is a relational quality, and thus holds between two entities: the bearer of the quality, and the type of parts.", false));
            TermData.Add(CVID.PATO_lacking_processual_parts, new TermInfo(CVID.PATO_lacking_processual_parts, @"PATO", @"PATO:0001558", @"lacking processual parts", @"A quality of a process inhering in a bearer by virtue of the bearer's lacking a processual part as specified by the additional entity.", false));
            TermData.Add(CVID.PATO_having_extra_function, new TermInfo(CVID.PATO_having_extra_function, @"PATO", @"PATO:0001559", @"having extra function", @"A functionality quality which is held by the bearer when the latter is able to perform additional or different function(s).", false));
            TermData.Add(CVID.PATO_having_extra_processual_parts, new TermInfo(CVID.PATO_having_extra_processual_parts, @"PATO", @"PATO:0001561", @"having extra processual parts", @"A quality of a process inhering in a bearer by virtue of the bearer's having additional processual parts.", false));
            TermData.Add(CVID.PATO_decreased_mass, new TermInfo(CVID.PATO_decreased_mass, @"PATO", @"PATO:0001562", @"decreased mass", @"A mass which is lower than normal or average.", false));
            TermData.Add(CVID.PATO_increased_mass, new TermInfo(CVID.PATO_increased_mass, @"PATO", @"PATO:0001563", @"increased mass", @"A mass which is higher than normal or average.", false));
            TermData.Add(CVID.PATO_extra_or_missing_processual_parts, new TermInfo(CVID.PATO_extra_or_missing_processual_parts, @"PATO", @"PATO:0001564", @"extra or missing processual parts", @"A quality of a process inhering in a bearer by virtue of the bearer's processual parts.", false));
            TermData.Add(CVID.PATO_distributed, new TermInfo(CVID.PATO_distributed, @"PATO", @"PATO:0001566", @"distributed", @"A spatial pattern inhering in a bearer by virtue of the bearer's being spread out or scattered about or divided up.", false));
            TermData.Add(CVID.PATO_undistributed, new TermInfo(CVID.PATO_undistributed, @"PATO", @"PATO:0001567", @"undistributed", @"A spatial pattern inhering in a bearer by virtue of the bearer's not being spread out or scattered about or divided up.", false));
            TermData.Add(CVID.PATO_having_decreased_processual_parts, new TermInfo(CVID.PATO_having_decreased_processual_parts, @"PATO", @"PATO:0001570", @"having decreased processual parts", @"A quality of a process inhering in a bearer by virtue of the bearer's having fewer processual parts.", false));
            TermData.Add(CVID.PATO_dilated, new TermInfo(CVID.PATO_dilated, @"PATO", @"PATO:0001571", @"dilated", @"A size quality inhering in a bearer by virtue of the bearer's being made wider or larger in all dimensions.", false));
            TermData.Add(CVID.PATO_isometrical, new TermInfo(CVID.PATO_isometrical, @"PATO", @"PATO:0001573", @"isometrical", @"A symmetry quality inhering in a bearer by virtue of the bearer's having equal dimensions or measurements.", false));
            TermData.Add(CVID.PATO_flow_rate, new TermInfo(CVID.PATO_flow_rate, @"PATO", @"PATO:0001574", @"flow rate", @"A physical quality inhering in a bearer by virtue of the bearer's motion characteristic.", false));
            TermData.Add(CVID.PATO_decreased_pressure, new TermInfo(CVID.PATO_decreased_pressure, @"PATO", @"PATO:0001575", @"decreased pressure", @"A pressure which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_pressure, new TermInfo(CVID.PATO_increased_pressure, @"PATO", @"PATO:0001576", @"increased pressure", @"A pressure which is relatively high.", false));
            TermData.Add(CVID.PATO_increased_permeability, new TermInfo(CVID.PATO_increased_permeability, @"PATO", @"PATO:0001577", @"increased permeability", @"A permeability which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_permeability, new TermInfo(CVID.PATO_decreased_permeability, @"PATO", @"PATO:0001578", @"decreased permeability", @"A permeability which is relatively low.", false));
            TermData.Add(CVID.PATO_contractility, new TermInfo(CVID.PATO_contractility, @"PATO", @"PATO:0001579", @"contractility", @"A physical quality that is the ability to contract or shrink.", false));
            TermData.Add(CVID.PATO_increased_contractility, new TermInfo(CVID.PATO_increased_contractility, @"PATO", @"PATO:0001580", @"increased contractility", @"A contractility which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_contractility, new TermInfo(CVID.PATO_decreased_contractility, @"PATO", @"PATO:0001581", @"decreased contractility", @"A contractility which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_relaxational_quality_OBSOLETE, new TermInfo(CVID.PATO_obsolete_relaxational_quality_OBSOLETE, @"PATO", @"PATO:0001582", @"obsolete relaxational quality", @"A spatial quality inhering in an inactive muscle or muscle fibers by virtue of the bearer's exhibiting gradual lengthening.", true));
            TermData.Add(CVID.PATO_decreased_variability, new TermInfo(CVID.PATO_decreased_variability, @"PATO", @"PATO:0001583", @"decreased variability", @"A variability which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_variability, new TermInfo(CVID.PATO_increased_variability, @"PATO", @"PATO:0001584", @"increased variability", @"A variability which is relatively high.", false));
            TermData.Add(CVID.PATO_conductivity, new TermInfo(CVID.PATO_conductivity, @"PATO", @"PATO:0001585", @"conductivity", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to transmit of an entity through a medium.", false));
            TermData.Add(CVID.PATO_variability_of_rate, new TermInfo(CVID.PATO_variability_of_rate, @"PATO", @"PATO:0001586", @"variability of rate", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits rate variation or change.", false));
            TermData.Add(CVID.PATO_increased_variability_of_rate, new TermInfo(CVID.PATO_increased_variability_of_rate, @"PATO", @"PATO:0001587", @"increased variability of rate", @"A variability of rate which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_variability_of_rate, new TermInfo(CVID.PATO_decreased_variability_of_rate, @"PATO", @"PATO:0001588", @"decreased variability of rate", @"A variability of rate which is relatively low.", false));
            TermData.Add(CVID.PATO_obsolete_enhanced_OBSOLETE, new TermInfo(CVID.PATO_obsolete_enhanced_OBSOLETE, @"PATO", @"PATO:0001589", @"obsolete enhanced", @"Increased, intensified.", true));
            TermData.Add(CVID.PATO_overlap_with, new TermInfo(CVID.PATO_overlap_with, @"PATO", @"PATO:0001590", @"overlap with", @"A structural quality inhering in a bearer by virtue of the bearer's coinciding spatially, partially or wholly with another entity.", false));
            TermData.Add(CVID.PATO_curvature, new TermInfo(CVID.PATO_curvature, @"PATO", @"PATO:0001591", @"curvature", @"A surface shape quality inhering in a bearer by virtue of the bearer's exhibiting a degree of bending.", false));
            TermData.Add(CVID.PATO_increased_curvature, new TermInfo(CVID.PATO_increased_curvature, @"PATO", @"PATO:0001592", @"increased curvature", @"A curvature which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_curvature, new TermInfo(CVID.PATO_decreased_curvature, @"PATO", @"PATO:0001593", @"decreased curvature", @"A curvature which is relatively low.", false));
            TermData.Add(CVID.PATO_arched, new TermInfo(CVID.PATO_arched, @"PATO", @"PATO:0001594", @"arched", @"A concave quality inhering in a bearer by virtue of the bearer's forming or resembling an arch.", false));
            TermData.Add(CVID.PATO_depth, new TermInfo(CVID.PATO_depth, @"PATO", @"PATO:0001595", @"depth", @"A 1-D extent quality inhering in a bearer by virtue of the bearer's downward or backward or inward dimenision.", false));
            TermData.Add(CVID.PATO_increased_depth, new TermInfo(CVID.PATO_increased_depth, @"PATO", @"PATO:0001596", @"increased depth", @"A depth quality which is relatively high.", false));
            TermData.Add(CVID.PATO_everted, new TermInfo(CVID.PATO_everted, @"PATO", @"PATO:0001597", @"everted", @"An oriented quality inhering in a bearer by virtue of the bearer's being turned outward in placement.", false));
            TermData.Add(CVID.PATO_protruding, new TermInfo(CVID.PATO_protruding, @"PATO", @"PATO:0001598", @"protruding", @"A quality inhering in a bearer by virtue of the bearer's extending out above or beyond a surface or boundary.", false));
            TermData.Add(CVID.PATO_rotated, new TermInfo(CVID.PATO_rotated, @"PATO", @"PATO:0001599", @"rotated", @"An oriented quality inhering in a bearer by virtue of the bearer's being relocated around an axis.", false));
            TermData.Add(CVID.PATO_posteriorly_rotated, new TermInfo(CVID.PATO_posteriorly_rotated, @"PATO", @"PATO:0001600", @"posteriorly rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the rear of organism.", false));
            TermData.Add(CVID.PATO_anteriorly_rotated, new TermInfo(CVID.PATO_anteriorly_rotated, @"PATO", @"PATO:0001601", @"anteriorly rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the front of an organism.", false));
            TermData.Add(CVID.PATO_distended, new TermInfo(CVID.PATO_distended, @"PATO", @"PATO:0001602", @"distended", @"A size quality inhering in a bearer by virtue of the bearer's being abnormally expanded or increased in size.", false));
            TermData.Add(CVID.PATO_increased_life_span, new TermInfo(CVID.PATO_increased_life_span, @"PATO", @"PATO:0001603", @"increased life span", @"A life span which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_life_span, new TermInfo(CVID.PATO_decreased_life_span, @"PATO", @"PATO:0001604", @"decreased life span", @"A life span which is relatively low.", false));
            TermData.Add(CVID.PATO_disheveled, new TermInfo(CVID.PATO_disheveled, @"PATO", @"PATO:0001605", @"disheveled", @"A spatial pattern inhering in a bearer by virtue of the bearer's being in disarray; extremely disorderly.", false));
            TermData.Add(CVID.PATO_greasy, new TermInfo(CVID.PATO_greasy, @"PATO", @"PATO:0001606", @"greasy", @"A coating which is oily and slippery.", false));
            TermData.Add(CVID.PATO_matted, new TermInfo(CVID.PATO_matted, @"PATO", @"PATO:0001607", @"matted", @"A tangled quality inhering in a bearer by virtue of the bearer's being not possible to unravel.", false));
            TermData.Add(CVID.PATO_patchy, new TermInfo(CVID.PATO_patchy, @"PATO", @"PATO:0001608", @"patchy", @"A spatial pattern inhering in a bearer by virtue of the bearer's being marked by, consisting of, or diversified with patches.", false));
            TermData.Add(CVID.PATO_sparse, new TermInfo(CVID.PATO_sparse, @"PATO", @"PATO:0001609", @"sparse", @"A spatial pattern inhering in a bearer by virtue of the bearer's being scattered; spread irregularly, and at a distance from each other.", false));
            TermData.Add(CVID.PATO_variability_of_color, new TermInfo(CVID.PATO_variability_of_color, @"PATO", @"PATO:0001611", @"variability of color", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits color variation or change.", false));
            TermData.Add(CVID.PATO_increased_variability_of_color, new TermInfo(CVID.PATO_increased_variability_of_color, @"PATO", @"PATO:0001612", @"increased variability of color", @"A variability of color which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_variability_of_color, new TermInfo(CVID.PATO_decreased_variability_of_color, @"PATO", @"PATO:0001613", @"decreased variability of color", @"A variability of color which is relatively low.", false));
            TermData.Add(CVID.PATO_invariant_color, new TermInfo(CVID.PATO_invariant_color, @"PATO", @"PATO:0001614", @"invariant color", @"A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of color.", false));
            TermData.Add(CVID.PATO_variant_color, new TermInfo(CVID.PATO_variant_color, @"PATO", @"PATO:0001615", @"variant color", @"A variability quality inhering in a bearer by virtue of the bearer's having or exhibiting variation of colour.", false));
            TermData.Add(CVID.PATO_deformed, new TermInfo(CVID.PATO_deformed, @"PATO", @"PATO:0001617", @"deformed", @"A morphological quality inhering in a bearer by virtue of the bearer's being distorted in form.", false));
            TermData.Add(CVID.PATO_increased_tonicity, new TermInfo(CVID.PATO_increased_tonicity, @"PATO", @"PATO:0001618", @"increased tonicity", @"A tonicity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_tonicity, new TermInfo(CVID.PATO_decreased_tonicity, @"PATO", @"PATO:0001619", @"decreased tonicity", @"A tonicity which is relatively low.", false));
            TermData.Add(CVID.PATO_turgor, new TermInfo(CVID.PATO_turgor, @"PATO", @"PATO:0001620", @"turgor", @"A structural quality inhering in a cell or blood vessel or capillary by virtue of the bearer's being in a rigid state of fullness resulting from pressure of the contents against the wall or membrane.", false));
            TermData.Add(CVID.PATO_decreased_turgor, new TermInfo(CVID.PATO_decreased_turgor, @"PATO", @"PATO:0001621", @"decreased turgor", @"A turgor which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_turgor, new TermInfo(CVID.PATO_increased_turgor, @"PATO", @"PATO:0001622", @"increased turgor", @"A turgor which is relatively high.", false));
            TermData.Add(CVID.PATO_atrophied, new TermInfo(CVID.PATO_atrophied, @"PATO", @"PATO:0001623", @"atrophied", @"A size quality inhering in a bearer by virtue of a part or parts of the bearer's being decreased in size due to reduction in tissue mass through wasting.", false));
            TermData.Add(CVID.PATO_decreased_functionality, new TermInfo(CVID.PATO_decreased_functionality, @"PATO", @"PATO:0001624", @"decreased functionality", @"A functionality quality held by the bearer when the latter exhibits decreased ability to perform a regular function(s).", false));
            TermData.Add(CVID.PATO_increased_functionality, new TermInfo(CVID.PATO_increased_functionality, @"PATO", @"PATO:0001625", @"increased functionality", @"A functional quality held by the bearer when the latter exhibits increased ability to perform a regular function(s).", false));
            TermData.Add(CVID.PATO_sufficiency, new TermInfo(CVID.PATO_sufficiency, @"PATO", @"PATO:0001626", @"sufficiency", @"A structural quality inhering in a bearer by virtue of whether the bearer has enough functionality.", false));
            TermData.Add(CVID.PATO_sufficient, new TermInfo(CVID.PATO_sufficient, @"PATO", @"PATO:0001627", @"sufficient", @"A wholeness quality inhering in a bearer by virtue of the bearer's has enough functionality.", false));
            TermData.Add(CVID.PATO_insufficient, new TermInfo(CVID.PATO_insufficient, @"PATO", @"PATO:0001628", @"insufficient", @"A wholeness quality inhering in a bearer by virtue of the bearer's lacks enough functionality.", false));
            TermData.Add(CVID.PATO_aggregated, new TermInfo(CVID.PATO_aggregated, @"PATO", @"PATO:0001629", @"aggregated", @"A spatial pattern inhering in a bearer by virtue of the bearer's being gathered or tending to gather into a mass or whole.", false));
            TermData.Add(CVID.PATO_dispersed, new TermInfo(CVID.PATO_dispersed, @"PATO", @"PATO:0001630", @"dispersed", @"A positional quality inhering in a bearer by virtue of the bearer's being distributed or spread over a considerable extent.", false));
            TermData.Add(CVID.PATO_anterior_to, new TermInfo(CVID.PATO_anterior_to, @"PATO", @"PATO:0001632", @"anterior to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_posterior_to, new TermInfo(CVID.PATO_posterior_to, @"PATO", @"PATO:0001633", @"posterior to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_necessity__continuant_, new TermInfo(CVID.PATO_necessity__continuant_, @"PATO", @"PATO:0001634", @"necessity (continuant)", @"A quality of a single physical entity inhering in a bearer by virtue of whether the bearer is essential or indispensable.", false));
            TermData.Add(CVID.PATO_necessary__continuant_, new TermInfo(CVID.PATO_necessary__continuant_, @"PATO", @"PATO:0001635", @"necessary (continuant)", @"A necessity quality (continuant) inhering in a bearer by virtue of the bearer's being essential or indispensable.", false));
            TermData.Add(CVID.PATO_unnecessary__continuant_, new TermInfo(CVID.PATO_unnecessary__continuant_, @"PATO", @"PATO:0001636", @"unnecessary (continuant)", @"A necessity quality (continuant) inhering in a bearer by virtue of the bearer's being non-essential or dispensable.", false));
            TermData.Add(CVID.PATO_necessity_of_occurrent, new TermInfo(CVID.PATO_necessity_of_occurrent, @"PATO", @"PATO:0001637", @"necessity of occurrent", @"A quality of single process inhering in a bearer by virtue of whether the bearer is essential or indispensable.", false));
            TermData.Add(CVID.PATO_necessary__occurrent_, new TermInfo(CVID.PATO_necessary__occurrent_, @"PATO", @"PATO:0001638", @"necessary (occurrent)", @"A necessity quality inhering in a process by virtue of the bearer's being essential or indispensable.", false));
            TermData.Add(CVID.PATO_unnecessary__occurrent_, new TermInfo(CVID.PATO_unnecessary__occurrent_, @"PATO", @"PATO:0001639", @"unnecessary (occurrent)", @"A necessity quality inhering in a process by virtue of the bearer's being non-essential or dispensable.", false));
            TermData.Add(CVID.PATO_stubby, new TermInfo(CVID.PATO_stubby, @"PATO", @"PATO:0001643", @"stubby", @"A size quality inhering in a bearer by virtue of the bearer's having a short, stocky build.", false));
            TermData.Add(CVID.PATO_protruding_into, new TermInfo(CVID.PATO_protruding_into, @"PATO", @"PATO:0001645", @"protruding into", @"A quality inhering into a bearer by virtue of the bearer's extending out above or beyond its surface or boundary into the surface or boundary of another entity.", false));
            TermData.Add(CVID.PATO_protruding_out_of, new TermInfo(CVID.PATO_protruding_out_of, @"PATO", @"PATO:0001646", @"protruding out of", @"A quality inhering into a bearer by virtue of the bearer's extending out above or beyond its surface or boundary and outwards in relation to the physical space occupied by another entity.", false));
            TermData.Add(CVID.PATO_circumference, new TermInfo(CVID.PATO_circumference, @"PATO", @"PATO:0001648", @"circumference", @"An 1-D extent quality which is equal to the length of the closed curve of a circle.", false));
            TermData.Add(CVID.PATO_curved_lateral, new TermInfo(CVID.PATO_curved_lateral, @"PATO", @"PATO:0001649", @"curved lateral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the side.", false));
            TermData.Add(CVID.PATO_increased_resistance_to, new TermInfo(CVID.PATO_increased_resistance_to, @"PATO", @"PATO:0001650", @"increased resistance to", @"A resistance to a stimulus which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_resistance_to, new TermInfo(CVID.PATO_decreased_resistance_to, @"PATO", @"PATO:0001651", @"decreased resistance to", @"A resistance to a stimulus which is relatively low.", false));
            TermData.Add(CVID.PATO_alignment, new TermInfo(CVID.PATO_alignment, @"PATO", @"PATO:0001652", @"alignment", @"A spatial quality inhering in a bearer by virtue of the bearer's spatial positioning with respect to an additional entity.", false));
            TermData.Add(CVID.PATO_aligned_with, new TermInfo(CVID.PATO_aligned_with, @"PATO", @"PATO:0001653", @"aligned with", @"An alignment quality inhering in a bearer by virtue of the bearer's being in a proper spatial positioning with respect to an additional entity.", false));
            TermData.Add(CVID.PATO_misaligned_with, new TermInfo(CVID.PATO_misaligned_with, @"PATO", @"PATO:0001654", @"misaligned with", @"An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning with respect to an additional entity.", false));
            TermData.Add(CVID.PATO_osmolarity, new TermInfo(CVID.PATO_osmolarity, @"PATO", @"PATO:0001655", @"osmolarity", @"A concentration quality inhering in a bearer by virtue of the bearer's amount of osmoles of solute per liter of solution.", false));
            TermData.Add(CVID.PATO_decreased_osmolarity, new TermInfo(CVID.PATO_decreased_osmolarity, @"PATO", @"PATO:0001656", @"decreased osmolarity", @"A osmolarity which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_osmolarity, new TermInfo(CVID.PATO_increased_osmolarity, @"PATO", @"PATO:0001657", @"increased osmolarity", @"A osmolarity which is relatively high.", false));
            TermData.Add(CVID.PATO_dorsally_rotated, new TermInfo(CVID.PATO_dorsally_rotated, @"PATO", @"PATO:0001658", @"dorsally rotated", @"A rotatiotion quality inhering in a bearer by virtue of being rotated towards the back or upper surface of an organism.", false));
            TermData.Add(CVID.PATO_ventrally_rotated, new TermInfo(CVID.PATO_ventrally_rotated, @"PATO", @"PATO:0001659", @"ventrally rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the abdomen of an organism.", false));
            TermData.Add(CVID.PATO_obsolete_decreased_action_potential_OBSOLETE, new TermInfo(CVID.PATO_obsolete_decreased_action_potential_OBSOLETE, @"PATO", @"PATO:0001660", @"obsolete decreased action potential", @"An action potential which is relatively low.", true));
            TermData.Add(CVID.PATO_obsolete_increased_action_potential_OBSOLETE, new TermInfo(CVID.PATO_obsolete_increased_action_potential_OBSOLETE, @"PATO", @"PATO:0001661", @"obsolete increased action potential", @"An action potential which is relatively high.", true));
            TermData.Add(CVID.PATO_fragility, new TermInfo(CVID.PATO_fragility, @"PATO", @"PATO:0001662", @"fragility", @"A structural quality inhering in a bearer by virtue of the bearer's disposition to being damaged or destroyed.", false));
            TermData.Add(CVID.PATO_increased_solubility, new TermInfo(CVID.PATO_increased_solubility, @"PATO", @"PATO:0001663", @"increased solubility", @"A solubility which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_solubility, new TermInfo(CVID.PATO_decreased_solubility, @"PATO", @"PATO:0001664", @"decreased solubility", @"A solubility which is relatively low.", false));
            TermData.Add(CVID.PATO_superficial, new TermInfo(CVID.PATO_superficial, @"PATO", @"PATO:0001665", @"superficial", @"A spatial pattern inhering in a bearer by virtue of the bearer's being located near a surface.", false));
            TermData.Add(CVID.PATO_attached_to, new TermInfo(CVID.PATO_attached_to, @"PATO", @"PATO:0001667", @"attached to", @"An attachment quality inhering in a bearer by virtue of the bearer's connection or association with another entity.", false));
            TermData.Add(CVID.PATO_associated_with, new TermInfo(CVID.PATO_associated_with, @"PATO", @"PATO:0001668", @"associated with", @"A structural quality inhering in a bearer by virtue of the bearer's being in close proximity and physically interacting with another entity.", false));
            TermData.Add(CVID.PATO_increased_susceptibility_toward, new TermInfo(CVID.PATO_increased_susceptibility_toward, @"PATO", @"PATO:0001669", @"increased susceptibility toward", @"A susceptibility toward an external stimulus which is higher than normal/average.", false));
            TermData.Add(CVID.PATO_decreased_susceptibility_toward, new TermInfo(CVID.PATO_decreased_susceptibility_toward, @"PATO", @"PATO:0001670", @"decreased susceptibility toward", @"A susceptibility toward an external stimulus which is lower than normal/average.", false));
            TermData.Add(CVID.PATO_increased_distribution, new TermInfo(CVID.PATO_increased_distribution, @"PATO", @"PATO:0001671", @"increased distribution", @"A distribution which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_distribution, new TermInfo(CVID.PATO_decreased_distribution, @"PATO", @"PATO:0001672", @"decreased distribution", @"A distribution which is relatively low.", false));
            TermData.Add(CVID.PATO_cystic, new TermInfo(CVID.PATO_cystic, @"PATO", @"PATO:0001673", @"cystic", @"Structure quality that is the presence of closed epithelium bounded capsules containing one or more liquid or solid organism substances.", false));
            TermData.Add(CVID.PATO_catalytic__activity__concentration, new TermInfo(CVID.PATO_catalytic__activity__concentration, @"PATO", @"PATO:0001674", @"catalytic (activity) concentration", @"A concentration quality inhering in a bearer by virtue of the bearer's catalytic activity divided by the volume of the system.", false));
            TermData.Add(CVID.PATO_decreased_efficiency, new TermInfo(CVID.PATO_decreased_efficiency, @"PATO", @"PATO:0001675", @"decreased efficiency", @"An efficiency which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_efficiency, new TermInfo(CVID.PATO_increased_efficiency, @"PATO", @"PATO:0001676", @"increased efficiency", @"An efficiency which is relatively high.", false));
            TermData.Add(CVID.PATO_inefficient, new TermInfo(CVID.PATO_inefficient, @"PATO", @"PATO:0001677", @"inefficient", @"An efficiency quality inhering in a bearer by virtue of the bearer's lacking efficiency.", false));
            TermData.Add(CVID.PATO_efficient, new TermInfo(CVID.PATO_efficient, @"PATO", @"PATO:0001678", @"efficient", @"An efficiency quality inhering in a bearer by virtue of the bearer's having efficiency.", false));
            TermData.Add(CVID.PATO_specific_volume, new TermInfo(CVID.PATO_specific_volume, @"PATO", @"PATO:0001679", @"specific volume", @"A volume quality inhering in a mass of substance by virtue of the amount of 3-dimensional space it occupies.", false));
            TermData.Add(CVID.PATO_molar_volume, new TermInfo(CVID.PATO_molar_volume, @"PATO", @"PATO:0001680", @"molar volume", @"A volume quality inhering in a homogeneous substance containing 6.02 x 1023 atoms or molecules by virtue of the amount of 3-dimensional space it occupies.", false));
            TermData.Add(CVID.PATO_molar_mass, new TermInfo(CVID.PATO_molar_mass, @"PATO", @"PATO:0001681", @"molar mass", @"A physical quality that inheres in a homogeneous substance containing 6.02 x 1023 atoms or molecules.", false));
            TermData.Add(CVID.PATO_magnetism, new TermInfo(CVID.PATO_magnetism, @"PATO", @"PATO:0001682", @"magnetism", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to exert an attractive or repulsive force on other entities.", false));
            TermData.Add(CVID.PATO_increased_magnetism, new TermInfo(CVID.PATO_increased_magnetism, @"PATO", @"PATO:0001683", @"increased magnetism", @"A magnetism which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_magnetism, new TermInfo(CVID.PATO_decreased_magnetism, @"PATO", @"PATO:0001684", @"decreased magnetism", @"A magnetism which is relatively low.", false));
            TermData.Add(CVID.PATO_magnetic, new TermInfo(CVID.PATO_magnetic, @"PATO", @"PATO:0001685", @"magnetic", @"A magnetic quality inhering in a bearer by virtue of the bearer's ability to exert magnitism.", false));
            TermData.Add(CVID.PATO_non_magnetic, new TermInfo(CVID.PATO_non_magnetic, @"PATO", @"PATO:0001686", @"non-magnetic", @"A magnetic quality inhering in a bearer by virtue of the bearer's inability to exert magnitism.", false));
            TermData.Add(CVID.PATO_elevation, new TermInfo(CVID.PATO_elevation, @"PATO", @"PATO:0001687", @"elevation", @"A positional quality inhering in a bearer by virtue of the bearer's vertical distance of a point above or below a reference surface.", false));
            TermData.Add(CVID.PATO_increased_elevation, new TermInfo(CVID.PATO_increased_elevation, @"PATO", @"PATO:0001688", @"increased elevation", @"An elevation which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_elevation, new TermInfo(CVID.PATO_decreased_elevation, @"PATO", @"PATO:0001689", @"decreased elevation", @"An elevation which is relatively low.", false));
            TermData.Add(CVID.PATO_contractile, new TermInfo(CVID.PATO_contractile, @"PATO", @"PATO:0001690", @"contractile", @"A contractility quality inhering in a bearer by virtue of the bearer's ability of contracting or being contracted.", false));
            TermData.Add(CVID.PATO_non_contractile, new TermInfo(CVID.PATO_non_contractile, @"PATO", @"PATO:0001691", @"non-contractile", @"A contractility quality inhering in a bearer by virtue of the bearer's inability of contracting or being contracted.", false));
            TermData.Add(CVID.PATO_increased_viscosity, new TermInfo(CVID.PATO_increased_viscosity, @"PATO", @"PATO:0001693", @"increased viscosity", @"A viscosity which relatively high.", false));
            TermData.Add(CVID.PATO_decreased_viscosity, new TermInfo(CVID.PATO_decreased_viscosity, @"PATO", @"PATO:0001694", @"decreased viscosity", @"A viscosity which relatively low.", false));
            TermData.Add(CVID.PATO_increased_fecundity, new TermInfo(CVID.PATO_increased_fecundity, @"PATO", @"PATO:0001695", @"increased fecundity", @"A fecundity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_fecundity, new TermInfo(CVID.PATO_decreased_fecundity, @"PATO", @"PATO:0001696", @"decreased fecundity", @"A fecundity which is relatively low.", false));
            TermData.Add(CVID.PATO_decreased_photosensitivity, new TermInfo(CVID.PATO_decreased_photosensitivity, @"PATO", @"PATO:0001697", @"decreased photosensitivity", @"A photosensitivity which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_photosensitivity, new TermInfo(CVID.PATO_increased_photosensitivity, @"PATO", @"PATO:0001698", @"increased photosensitivity", @"A photosensitivity which is relatively high.", false));
            TermData.Add(CVID.PATO_regular_sleep_pattern, new TermInfo(CVID.PATO_regular_sleep_pattern, @"PATO", @"PATO:0001699", @"regular sleep pattern", @"A sleep pattern which has regular start and/or end times.", false));
            TermData.Add(CVID.PATO_irregular_sleep_pattern, new TermInfo(CVID.PATO_irregular_sleep_pattern, @"PATO", @"PATO:0001700", @"irregular sleep pattern", @"A sleep pattern which has irregular start and/or end times.", false));
            TermData.Add(CVID.PATO_mature, new TermInfo(CVID.PATO_mature, @"PATO", @"PATO:0001701", @"mature", @"A quality inhering in a bearer by virtue of the bearer's exhibiting complete growth, differentiation, or development.", false));
            TermData.Add(CVID.PATO_saturated_violet, new TermInfo(CVID.PATO_saturated_violet, @"PATO", @"PATO:0001702", @"saturated violet", @"A color consisting of violet hue and high saturation.", false));
            TermData.Add(CVID.PATO_desaturated_violet, new TermInfo(CVID.PATO_desaturated_violet, @"PATO", @"PATO:0001703", @"desaturated violet", @"A color consisting of violet hue and low saturation.", false));
            TermData.Add(CVID.PATO_light_violet, new TermInfo(CVID.PATO_light_violet, @"PATO", @"PATO:0001704", @"light violet", @"A color consisting of violet hue and high brightness.", false));
            TermData.Add(CVID.PATO_dark_violet, new TermInfo(CVID.PATO_dark_violet, @"PATO", @"PATO:0001705", @"dark violet", @"A color consisting of violet hue and low brightness.", false));
            TermData.Add(CVID.PATO_behavioural_inactive, new TermInfo(CVID.PATO_behavioural_inactive, @"PATO", @"PATO:0001706", @"behavioural inactive", @"A behavioral quality inhering in a bearer by virtue of the bearer's disposition to lack activity.", false));
            TermData.Add(CVID.PATO_behavioural_active, new TermInfo(CVID.PATO_behavioural_active, @"PATO", @"PATO:0001707", @"behavioural active", @"A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting marked activity.", false));
            TermData.Add(CVID.PATO_1_D_extent, new TermInfo(CVID.PATO_1_D_extent, @"PATO", @"PATO:0001708", @"1-D extent", @"A size quality inhering in an bearer by virtue of the bearer's extension in one dimension.", false));
            TermData.Add(CVID.PATO_2_D_extent, new TermInfo(CVID.PATO_2_D_extent, @"PATO", @"PATO:0001709", @"2-D extent", @"A size quality inhering in an bearer by virtue of the bearer's extension in two dimensions.", false));
            TermData.Add(CVID.PATO_3_D_extent, new TermInfo(CVID.PATO_3_D_extent, @"PATO", @"PATO:0001710", @"3-D extent", @"A size quality inhering in an bearer by virtue of the bearer's extension in three dimensions.", false));
            TermData.Add(CVID.PATO_perimeter, new TermInfo(CVID.PATO_perimeter, @"PATO", @"PATO:0001711", @"perimeter", @"An 1-D extent quality inhering in two-dimensional bearer by virtue of being equal to the distance around it.", false));
            TermData.Add(CVID.PATO_increased_perimeter, new TermInfo(CVID.PATO_increased_perimeter, @"PATO", @"PATO:0001712", @"increased perimeter", @"A perimeter which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_perimeter, new TermInfo(CVID.PATO_decreased_perimeter, @"PATO", @"PATO:0001713", @"decreased perimeter", @"A perimeter which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_diameter, new TermInfo(CVID.PATO_increased_diameter, @"PATO", @"PATO:0001714", @"increased diameter", @"A diameter which is relatively large.", false));
            TermData.Add(CVID.PATO_decreased_diameter, new TermInfo(CVID.PATO_decreased_diameter, @"PATO", @"PATO:0001715", @"decreased diameter", @"A diameter which is relatively small.", false));
            TermData.Add(CVID.PATO_non_fragile, new TermInfo(CVID.PATO_non_fragile, @"PATO", @"PATO:0001716", @"non-fragile", @"A structural quality inhering in a bearer by virtue of the bearer's ability to withstand great strain without tearing or breaking.", false));
            TermData.Add(CVID.PATO_radiation_emitting_intensity_quality, new TermInfo(CVID.PATO_radiation_emitting_intensity_quality, @"PATO", @"PATO:0001717", @"radiation emitting intensity quality", @"A radiation emitting quality which obtains by the intensity of the bearer emitted radiation.", false));
            TermData.Add(CVID.PATO_luminance, new TermInfo(CVID.PATO_luminance, @"PATO", @"PATO:0001718", @"luminance", @"A quality that exists by virtue of the luminous intensity per unit area projected in a given direction.", false));
            TermData.Add(CVID.PATO_receptivity, new TermInfo(CVID.PATO_receptivity, @"PATO", @"PATO:0001719", @"receptivity", @"A behavioral quality which holds by virtue of whether the bearer exhibits the ability to receive another agentitive entity.", false));
            TermData.Add(CVID.PATO_female_receptivity, new TermInfo(CVID.PATO_female_receptivity, @"PATO", @"PATO:0001720", @"female receptivity", @"A behavioral quality which holds by virtue of extent of the receptiveness of a female to male advances.", false));
            TermData.Add(CVID.PATO_male_receptivity, new TermInfo(CVID.PATO_male_receptivity, @"PATO", @"PATO:0001721", @"male receptivity", @"A behavioral quality which holds by virtue of extent of the receptiveness of a male to female advances.", false));
            TermData.Add(CVID.PATO_increased_female_receptivity, new TermInfo(CVID.PATO_increased_female_receptivity, @"PATO", @"PATO:0001723", @"increased female receptivity", @"A female receptivity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_female_receptivity, new TermInfo(CVID.PATO_decreased_female_receptivity, @"PATO", @"PATO:0001724", @"decreased female receptivity", @"A female receptivity which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_male_receptivity, new TermInfo(CVID.PATO_increased_male_receptivity, @"PATO", @"PATO:0001725", @"increased male receptivity", @"A male receptivity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_male_receptivity, new TermInfo(CVID.PATO_decreased_male_receptivity, @"PATO", @"PATO:0001726", @"decreased male receptivity", @"A male receptivity which is relatively low.", false));
            TermData.Add(CVID.PATO_disposition, new TermInfo(CVID.PATO_disposition, @"PATO", @"PATO:0001727", @"disposition", @"A quality inhering in a bearer by virtue of the bearer's prevailing tendency, mood, or inclination.", false));
            TermData.Add(CVID.PATO_multi_cellular_organismal_disposition, new TermInfo(CVID.PATO_multi_cellular_organismal_disposition, @"PATO", @"PATO:0001728", @"multi-cellular organismal disposition", @"A disposition inhering in a multi-cellular organism.", false));
            TermData.Add(CVID.PATO_shedability, new TermInfo(CVID.PATO_shedability, @"PATO", @"PATO:0001729", @"shedability", @"An organismal quality inhering in a bearer by virtue of the bearer's disposition to lose an entitity by natural process.", false));
            TermData.Add(CVID.PATO_deciduous__generic_, new TermInfo(CVID.PATO_deciduous__generic_, @"PATO", @"PATO:0001730", @"deciduous (generic)", @"A quality inhering in a bearer by virtue of the bearer's disposition to shed body parts.", false));
            TermData.Add(CVID.PATO_deciduous__plant_, new TermInfo(CVID.PATO_deciduous__plant_, @"PATO", @"PATO:0001731", @"deciduous (plant)", @"A quality inhering in a plant by virtue of the bearer's disposition to shed foliage.", false));
            TermData.Add(CVID.PATO_non_deciduous__any_body_part_, new TermInfo(CVID.PATO_non_deciduous__any_body_part_, @"PATO", @"PATO:0001732", @"non-deciduous (any body part)", @"A quality inhering in a plant by virtue of the bearer's disposition to not shed any body part.", false));
            TermData.Add(CVID.PATO_evergreen__plant_, new TermInfo(CVID.PATO_evergreen__plant_, @"PATO", @"PATO:0001733", @"evergreen (plant)", @"A quality inhering in a plant by virtue of the bearer's disposition to retain foliage.", false));
            TermData.Add(CVID.PATO_semi_deciduous_plant_, new TermInfo(CVID.PATO_semi_deciduous_plant_, @"PATO", @"PATO:0001734", @"semi-deciduous(plant)", @"A quality inhering in a plant by virtue of the bearer's disposition to being between evergeen and deciduous.", false));
            TermData.Add(CVID.PATO_liquid_configuration, new TermInfo(CVID.PATO_liquid_configuration, @"PATO", @"PATO:0001735", @"liquid configuration", @"A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of liquids.", false));
            TermData.Add(CVID.PATO_solid_configuration, new TermInfo(CVID.PATO_solid_configuration, @"PATO", @"PATO:0001736", @"solid configuration", @"A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of solids.", false));
            TermData.Add(CVID.PATO_gaseus_configuration, new TermInfo(CVID.PATO_gaseus_configuration, @"PATO", @"PATO:0001737", @"gaseus configuration", @"A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of gases.", false));
            TermData.Add(CVID.PATO_dissociated_from, new TermInfo(CVID.PATO_dissociated_from, @"PATO", @"PATO:0001738", @"dissociated from", @"A structural quality inhering in a bearer by virtue of the bearer's lacking physically interaction with another entity.", false));
            TermData.Add(CVID.PATO_radiation_quality, new TermInfo(CVID.PATO_radiation_quality, @"PATO", @"PATO:0001739", @"radiation quality", @"A quality that inheres in an bearer by virtue of how that bearer interacts with radiation.", false));
            TermData.Add(CVID.PATO_activity__of_a_radionuclide_, new TermInfo(CVID.PATO_activity__of_a_radionuclide_, @"PATO", @"PATO:0001740", @"activity (of a radionuclide)", @"A radiation quality inhering in a radioactive substance by virtue of its transformation (disintegration) rate.", false));
            TermData.Add(CVID.PATO_radioactive, new TermInfo(CVID.PATO_radioactive, @"PATO", @"PATO:0001741", @"radioactive", @"A radiation quality inhering in bearer by virtue of the bearer's exhibiting or being caused by radioactivity.", false));
            TermData.Add(CVID.PATO_increased_radioactivity, new TermInfo(CVID.PATO_increased_radioactivity, @"PATO", @"PATO:0001742", @"increased radioactivity", @"A radioactivity which is relatively low.", false));
            TermData.Add(CVID.PATO_decreased_radioactivity, new TermInfo(CVID.PATO_decreased_radioactivity, @"PATO", @"PATO:0001743", @"decreased radioactivity", @"A radioactivity which is relatively high.", false));
            TermData.Add(CVID.PATO_radiation_exposure, new TermInfo(CVID.PATO_radiation_exposure, @"PATO", @"PATO:0001744", @"radiation exposure", @"A radiation quality inhering in a bearer by virtue of what the bearer receives as a result of being exposed to ionizing radiation.", false));
            TermData.Add(CVID.PATO_radiation_absorbed_dose, new TermInfo(CVID.PATO_radiation_absorbed_dose, @"PATO", @"PATO:0001745", @"radiation absorbed dose", @"A radiation exposure quality inhering in a substance by virtue of the radiation energy \ deposited\  in a kilogram of a substance.", false));
            TermData.Add(CVID.PATO_radiation_equivalent_dose, new TermInfo(CVID.PATO_radiation_equivalent_dose, @"PATO", @"PATO:0001746", @"radiation equivalent dose", @"A radiation exposure quality inhering in a tissue by virtue of the relation between the absorbed dose to the effective biological damage of the radiation to that tissue.", false));
            TermData.Add(CVID.PATO_radiation_effective_dose, new TermInfo(CVID.PATO_radiation_effective_dose, @"PATO", @"PATO:0001747", @"radiation effective dose", @"A radiation exposure quality inhering in an organ by virtue of the multiplication of an equivalent dose to that organ multiplied by the tissue weighting factor for that organ.", false));
            TermData.Add(CVID.PATO_invaginated, new TermInfo(CVID.PATO_invaginated, @"PATO", @"PATO:0001748", @"invaginated", @"A shape quality in which a portion of the outermost boundary of an entity folds in space such that a portion that was originally convex is now concave.", false));
            TermData.Add(CVID.PATO_paedomorphic_growth, new TermInfo(CVID.PATO_paedomorphic_growth, @"PATO", @"PATO:0001749", @"paedomorphic growth", @"A heterochronic growth quality inhering in an organism, structure, or group of organisms by virtue of the bearer's reduced growth.", false));
            TermData.Add(CVID.PATO_postdisplaced_growth, new TermInfo(CVID.PATO_postdisplaced_growth, @"PATO", @"PATO:0001750", @"postdisplaced growth", @"A paedomorphic growth quality which is due to a delayed onset.", false));
            TermData.Add(CVID.PATO_progenetic_growth, new TermInfo(CVID.PATO_progenetic_growth, @"PATO", @"PATO:0001751", @"progenetic growth", @"A paedomorphic growth quality which is due to an ealier offset.", false));
            TermData.Add(CVID.PATO_peramorphic_growth, new TermInfo(CVID.PATO_peramorphic_growth, @"PATO", @"PATO:0001752", @"peramorphic growth", @"A heterochronic growth quality inhering in an organism, structure, or group of organisms by virtue of the bearer's increased growth.", false));
            TermData.Add(CVID.PATO_accelerated_growth, new TermInfo(CVID.PATO_accelerated_growth, @"PATO", @"PATO:0001753", @"accelerated growth", @"A peramorphic growth quality which is due to an increased rate.", false));
            TermData.Add(CVID.PATO_predisplaced_growth, new TermInfo(CVID.PATO_predisplaced_growth, @"PATO", @"PATO:0001754", @"predisplaced growth", @"A peramorphic growth quality which is due to an earlier onset.", false));
            TermData.Add(CVID.PATO_hypermorphic_growth, new TermInfo(CVID.PATO_hypermorphic_growth, @"PATO", @"PATO:0001755", @"hypermorphic growth", @"A peramorphic growth quality which is due to a delayed offset.", false));
            TermData.Add(CVID.PATO_heat_conductivity, new TermInfo(CVID.PATO_heat_conductivity, @"PATO", @"PATO:0001756", @"heat conductivity", @"A conductivity quality inhering in a bearer by virtue of the bearer's disposition to spontaneous transfer of thermal energy from a region of higher temperature to a region of lower temperature.", false));
            TermData.Add(CVID.PATO_electrical_conductivity, new TermInfo(CVID.PATO_electrical_conductivity, @"PATO", @"PATO:0001757", @"electrical conductivity", @"A conductivity quality inhering in a bearer by virtue of the bearer's ability to convey electricity.", false));
            TermData.Add(CVID.PATO_nerve_conductivity, new TermInfo(CVID.PATO_nerve_conductivity, @"PATO", @"PATO:0001758", @"nerve conductivity", @"A conductivity quality inhering in motor and sensory nerves by virtue of the bearer's ability to convey electricity.", false));
            TermData.Add(CVID.PATO_granular, new TermInfo(CVID.PATO_granular, @"PATO", @"PATO:0001759", @"granular", @"A composition quality inhering in a bearer by virtue of the bearer's containing granules.", false));
            TermData.Add(CVID.PATO_female_semi_fertile, new TermInfo(CVID.PATO_female_semi_fertile, @"PATO", @"PATO:0001760", @"female semi-fertile", @"", false));
            TermData.Add(CVID.PATO_male_semi_fertile, new TermInfo(CVID.PATO_male_semi_fertile, @"PATO", @"PATO:0001761", @"male semi-fertile", @"", false));
            TermData.Add(CVID.PATO_male_semi_sterile, new TermInfo(CVID.PATO_male_semi_sterile, @"PATO", @"PATO:0001762", @"male semi-sterile", @"", false));
            TermData.Add(CVID.PATO_female_semi_sterile, new TermInfo(CVID.PATO_female_semi_sterile, @"PATO", @"PATO:0001763", @"female semi-sterile", @"", false));
            TermData.Add(CVID.PATO_increased_age, new TermInfo(CVID.PATO_increased_age, @"PATO", @"PATO:0001764", @"increased age", @"An age which is high relative to the normal or average.", false));
            TermData.Add(CVID.PATO_decreased_age, new TermInfo(CVID.PATO_decreased_age, @"PATO", @"PATO:0001765", @"decreased age", @"An age which is low relative to the normal or average.", false));
            TermData.Add(CVID.PATO_obsolete_cellular_polarity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_cellular_polarity_OBSOLETE, @"PATO", @"PATO:0001766", @"obsolete cellular polarity", @"A cellular quality inhering in a cell by virtue of its anisotropic intracellular organization.", true));
            TermData.Add(CVID.PATO_semi_fertile, new TermInfo(CVID.PATO_semi_fertile, @"PATO", @"PATO:0001767", @"semi-fertile", @"", false));
            TermData.Add(CVID.PATO_semi_lethal__sensu_genetics_, new TermInfo(CVID.PATO_semi_lethal__sensu_genetics_, @"PATO", @"PATO:0001768", @"semi-lethal (sensu genetics)", @"A viability quality inhering in a bearer or a population by virtue of some of it's members' inability to survive to reproduce.", false));
            TermData.Add(CVID.PATO_positional_polarity, new TermInfo(CVID.PATO_positional_polarity, @"PATO", @"PATO:0001769", @"positional polarity", @"A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along an axis.", false));
            TermData.Add(CVID.PATO_semi_viable, new TermInfo(CVID.PATO_semi_viable, @"PATO", @"PATO:0001770", @"semi-viable", @"A viability quality inhering in a population by virtue of some of it's members' ability to survive.", false));
            TermData.Add(CVID.PATO_surrounding, new TermInfo(CVID.PATO_surrounding, @"PATO", @"PATO:0001772", @"surrounding", @"A spatial quality inhering in a bearer by virtue of the bearer's being extended on all sides of another entity simultaneously.", false));
            TermData.Add(CVID.PATO_monophasic, new TermInfo(CVID.PATO_monophasic, @"PATO", @"PATO:0001773", @"monophasic", @"A quality inhering in a bearer by virtue of the bearer's having only one phase or stage.", false));
            TermData.Add(CVID.PATO_polyphasic, new TermInfo(CVID.PATO_polyphasic, @"PATO", @"PATO:0001774", @"polyphasic", @"A quality inhering in a bearer by virtue of the bearer's having or existing in many phases.", false));
            TermData.Add(CVID.PATO_dorsal_ventral_polarity, new TermInfo(CVID.PATO_dorsal_ventral_polarity, @"PATO", @"PATO:0001775", @"dorsal-ventral polarity", @"A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the dorsal-ventral axis.", false));
            TermData.Add(CVID.PATO_increased_flexibility, new TermInfo(CVID.PATO_increased_flexibility, @"PATO", @"PATO:0001776", @"increased flexibility", @"A flexibility which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_flexibility, new TermInfo(CVID.PATO_decreased_flexibility, @"PATO", @"PATO:0001777", @"decreased flexibility", @"A flexibility which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_strength, new TermInfo(CVID.PATO_increased_strength, @"PATO", @"PATO:0001778", @"increased strength", @"A strength which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_strength, new TermInfo(CVID.PATO_decreased_strength, @"PATO", @"PATO:0001779", @"decreased strength", @"A strength which is relatively low.", false));
            TermData.Add(CVID.PATO_dystrophic, new TermInfo(CVID.PATO_dystrophic, @"PATO", @"PATO:0001780", @"dystrophic", @"A size quality inhering in a bearer by virtue of the bearer's being abnormally developed, usually due to malnutrition.", false));
            TermData.Add(CVID.PATO_irregular_thickness, new TermInfo(CVID.PATO_irregular_thickness, @"PATO", @"PATO:0001781", @"irregular thickness", @"A thickness quality which lacks pattern.", false));
            TermData.Add(CVID.PATO_increased_intensity, new TermInfo(CVID.PATO_increased_intensity, @"PATO", @"PATO:0001782", @"increased intensity", @"An intensity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_intensity, new TermInfo(CVID.PATO_decreased_intensity, @"PATO", @"PATO:0001783", @"decreased intensity", @"An intensity which is relatively low.", false));
            TermData.Add(CVID.PATO_bifurcated, new TermInfo(CVID.PATO_bifurcated, @"PATO", @"PATO:0001784", @"bifurcated", @"A branched quality inhering in a bearer by virtue of the bearer's being divided into two branches.", false));
            TermData.Add(CVID.PATO_splayed, new TermInfo(CVID.PATO_splayed, @"PATO", @"PATO:0001785", @"splayed", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outward.", false));
            TermData.Add(CVID.PATO_split, new TermInfo(CVID.PATO_split, @"PATO", @"PATO:0001786", @"split", @"A shape quality inhering in a bearer by virtue of the bearer's being divided or broken up into parts or divisions.", false));
            TermData.Add(CVID.PATO_rotational_curvature, new TermInfo(CVID.PATO_rotational_curvature, @"PATO", @"PATO:0001787", @"rotational curvature", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved around an axis.", false));
            TermData.Add(CVID.PATO_increased_mass_density, new TermInfo(CVID.PATO_increased_mass_density, @"PATO", @"PATO:0001788", @"increased mass density", @"A density which is higher relative to the normal or average.", false));
            TermData.Add(CVID.PATO_domed, new TermInfo(CVID.PATO_domed, @"PATO", @"PATO:0001789", @"domed", @"A curvature quality inhering in a bearer by virtue of the bearer's having a shape resembling a dome.", false));
            TermData.Add(CVID.PATO_decreased_mass_density, new TermInfo(CVID.PATO_decreased_mass_density, @"PATO", @"PATO:0001790", @"decreased mass density", @"A density which is lower relative to the normal or average.", false));
            TermData.Add(CVID.PATO_multi_localised, new TermInfo(CVID.PATO_multi_localised, @"PATO", @"PATO:0001791", @"multi-localised", @"A spatial pattern inhering in a bearer by virtue of the bearer's being confined or restricted to multiple locations.", false));
            TermData.Add(CVID.PATO_left_side_of, new TermInfo(CVID.PATO_left_side_of, @"PATO", @"PATO:0001792", @"left side of", @"A spatial quality inhering in a bearer by virtue of the bearer's being located on left side of from the a another entity.", false));
            TermData.Add(CVID.PATO_right_side_of, new TermInfo(CVID.PATO_right_side_of, @"PATO", @"PATO:0001793", @"right side of", @"A spatial quality inhering in a bearer by virtue of the bearer's being located on right side of a another entity.", false));
            TermData.Add(CVID.PATO_coiling, new TermInfo(CVID.PATO_coiling, @"PATO", @"PATO:0001794", @"coiling", @"A shape quality inhering in a bearer by virtue of the bearer's being wound in a continuous series of loops.", false));
            TermData.Add(CVID.PATO_increased_coiling, new TermInfo(CVID.PATO_increased_coiling, @"PATO", @"PATO:0001795", @"increased coiling", @"A coiling which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_coiling, new TermInfo(CVID.PATO_decreased_coiling, @"PATO", @"PATO:0001796", @"decreased coiling", @"A coiling which is relatively low.", false));
            TermData.Add(CVID.PATO_kinked, new TermInfo(CVID.PATO_kinked, @"PATO", @"PATO:0001798", @"kinked", @"A shape quality inhering in a bearer by virtue of the bearer's having multiple angles in its length.", false));
            TermData.Add(CVID.PATO_ruffled, new TermInfo(CVID.PATO_ruffled, @"PATO", @"PATO:0001799", @"ruffled", @"A shape quality inhering in a bearer by virtue of the bearer's exhibiting disturbance of its smoothness or regularity.", false));
            TermData.Add(CVID.PATO_water_composition, new TermInfo(CVID.PATO_water_composition, @"PATO", @"PATO:0001800", @"water composition", @"A composition quality inhering in an bearer by virtue of the quantities or relative ratios of water of the inhering entity.", false));
            TermData.Add(CVID.PATO_decreased_water_composition, new TermInfo(CVID.PATO_decreased_water_composition, @"PATO", @"PATO:0001801", @"decreased water composition", @"A composition quality inhering in an bearer by virtue of the reduction in amount of water the bearer contains.", false));
            TermData.Add(CVID.PATO_loose, new TermInfo(CVID.PATO_loose, @"PATO", @"PATO:0001802", @"loose", @"A pattern quality inhering in a bearer by virtue of the bearer's not being compact or dense in arrangement.", false));
            TermData.Add(CVID.PATO_phototoxic, new TermInfo(CVID.PATO_phototoxic, @"PATO", @"PATO:0001803", @"phototoxic", @"A photosensitivity quality inhering in a bearer by virtue of the bearer's disposition to being susceptible to damage by light.", false));
            TermData.Add(CVID.PATO_scaly, new TermInfo(CVID.PATO_scaly, @"PATO", @"PATO:0001804", @"scaly", @"A texture quality inhering in a bearer by virtue of the bearer's being covered or partially covered with scales.", false));
            TermData.Add(CVID.PATO_flaky, new TermInfo(CVID.PATO_flaky, @"PATO", @"PATO:0001805", @"flaky", @"A texture quality inhering in a bearer by virtue of the bearer's formed or tending to form flakes or thin, crisp fragments.", false));
            TermData.Add(CVID.PATO_sensitivity_to_irradiation, new TermInfo(CVID.PATO_sensitivity_to_irradiation, @"PATO", @"PATO:0001806", @"sensitivity to irradiation", @"A sensitivity quality inhering in a bearer by virtue of the bearer's exposure to radiation.", false));
            TermData.Add(CVID.PATO_decreased_sensitivity_to_irradiation, new TermInfo(CVID.PATO_decreased_sensitivity_to_irradiation, @"PATO", @"PATO:0001807", @"decreased sensitivity to irradiation", @"A sensitivity to irradiation which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_sensitivity_to_irradiation, new TermInfo(CVID.PATO_increased_sensitivity_to_irradiation, @"PATO", @"PATO:0001808", @"increased sensitivity to irradiation", @"A sensitivity to irradiation which is relatively high.", false));
            TermData.Add(CVID.PATO_tight, new TermInfo(CVID.PATO_tight, @"PATO", @"PATO:0001809", @"tight", @"A pattern quality inhering in a bearer by virtue of the bearer's being compact or dense in arrangement.", false));
            TermData.Add(CVID.PATO_wrinkled, new TermInfo(CVID.PATO_wrinkled, @"PATO", @"PATO:0001810", @"wrinkled", @"A grooved texture quality inhering in a bearer by virtue of the bearer's being marked by one or more creases in a normally smooth surface.", false));
            TermData.Add(CVID.PATO_obsolete_increased_relaxation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_increased_relaxation_OBSOLETE, @"PATO", @"PATO:0001811", @"obsolete increased relaxation", @"A relaxation which is relatively high.", true));
            TermData.Add(CVID.PATO_obsolete_decreased_relaxation_OBSOLETE, new TermInfo(CVID.PATO_obsolete_decreased_relaxation_OBSOLETE, @"PATO", @"PATO:0001812", @"obsolete decreased relaxation", @"A relaxation which is relatively low.", true));
            TermData.Add(CVID.PATO_atonicity, new TermInfo(CVID.PATO_atonicity, @"PATO", @"PATO:0001813", @"atonicity", @"A structural quality inhering in a bearer by virtue of the bearer's lack elastic tension that facilitate response to stimuli.", false));
            TermData.Add(CVID.PATO_dystonicity, new TermInfo(CVID.PATO_dystonicity, @"PATO", @"PATO:0001814", @"dystonicity", @"A structural quality inhering in a bearer by virtue of the bearer's impaired elastic tension that facilitate response to stimuli.", false));
            TermData.Add(CVID.PATO_fatigability, new TermInfo(CVID.PATO_fatigability, @"PATO", @"PATO:0001815", @"fatigability", @"A strength quality inhering in a bearer by virtue of the bearer's disposition to lose strength.", false));
            TermData.Add(CVID.PATO_increased_fatigability, new TermInfo(CVID.PATO_increased_fatigability, @"PATO", @"PATO:0001816", @"increased fatigability", @"A fatigability which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_fatigability, new TermInfo(CVID.PATO_decreased_fatigability, @"PATO", @"PATO:0001817", @"decreased fatigability", @"A fatigability which is relatively low.", false));
            TermData.Add(CVID.PATO_progressive, new TermInfo(CVID.PATO_progressive, @"PATO", @"PATO:0001818", @"progressive", @"A quality of a single process inhering in a bearer by virtue of the bearer's increasing over time.", false));
            TermData.Add(CVID.PATO_atretic, new TermInfo(CVID.PATO_atretic, @"PATO", @"PATO:0001819", @"atretic", @"A morphological quality inhering in a bearer by virtue of the bearer's absence or closure of a normal body orifice or tubular passage.", false));
            TermData.Add(CVID.PATO_imperforate, new TermInfo(CVID.PATO_imperforate, @"PATO", @"PATO:0001821", @"imperforate", @"A structural quality inhering in a bearer by virtue of the bearer's having no opening.", false));
            TermData.Add(CVID.PATO_wetness, new TermInfo(CVID.PATO_wetness, @"PATO", @"PATO:0001822", @"wetness", @"A quality inhering in a bearer by virtue of whether the bearer's being covered by a liquid.", false));
            TermData.Add(CVID.PATO_wet, new TermInfo(CVID.PATO_wet, @"PATO", @"PATO:0001823", @"wet", @"A wetness quality inhering in a bearer by virtue of the bearer's being covered by a liquid.", false));
            TermData.Add(CVID.PATO_dry, new TermInfo(CVID.PATO_dry, @"PATO", @"PATO:0001824", @"dry", @"A wetness quality inhering in a bearer by virtue of the bearer's not being covered by a liquid.", false));
            TermData.Add(CVID.PATO_increased_wetness, new TermInfo(CVID.PATO_increased_wetness, @"PATO", @"PATO:0001825", @"increased wetness", @"A wetness quality that is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_wetness, new TermInfo(CVID.PATO_decreased_wetness, @"PATO", @"PATO:0001826", @"decreased wetness", @"A wetness quality that is relatively low.", false));
            TermData.Add(CVID.PATO_pseudohermaphrodite, new TermInfo(CVID.PATO_pseudohermaphrodite, @"PATO", @"PATO:0001827", @"pseudohermaphrodite", @"A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of one sex and external sexual characteristics of the other sex.", false));
            TermData.Add(CVID.PATO_male_pseudohermaphrodite, new TermInfo(CVID.PATO_male_pseudohermaphrodite, @"PATO", @"PATO:0001828", @"male pseudohermaphrodite", @"A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of male and external sexual characteristics of female.", false));
            TermData.Add(CVID.PATO_female_pseudohermaphrodite, new TermInfo(CVID.PATO_female_pseudohermaphrodite, @"PATO", @"PATO:0001829", @"female pseudohermaphrodite", @"A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of female and external sexual characteristics of male.", false));
            TermData.Add(CVID.PATO_decreased_female_fertility, new TermInfo(CVID.PATO_decreased_female_fertility, @"PATO", @"PATO:0001830", @"decreased female fertility", @"A female fertility which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_female_fertility, new TermInfo(CVID.PATO_increased_female_fertility, @"PATO", @"PATO:0001831", @"increased female fertility", @"A female fertility which is relatively high.", false));
            TermData.Add(CVID.PATO_increased_male_fertility, new TermInfo(CVID.PATO_increased_male_fertility, @"PATO", @"PATO:0001832", @"increased male fertility", @"A male fertility which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_male_fertility, new TermInfo(CVID.PATO_decreased_male_fertility, @"PATO", @"PATO:0001833", @"decreased male fertility", @"A male fertility which is relatively low.", false));
            TermData.Add(CVID.PATO_decreased_fertility, new TermInfo(CVID.PATO_decreased_fertility, @"PATO", @"PATO:0001834", @"decreased fertility", @"A fertility which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_fertility, new TermInfo(CVID.PATO_increased_fertility, @"PATO", @"PATO:0001835", @"increased fertility", @"A fertility which is relatively high.", false));
            TermData.Add(CVID.PATO_congested, new TermInfo(CVID.PATO_congested, @"PATO", @"PATO:0001836", @"congested", @"A structural quality inhering in a bearer with some kind of aperture or opening that is blocked or clogged.", false));
            TermData.Add(CVID.PATO_decreased_fluid_flow, new TermInfo(CVID.PATO_decreased_fluid_flow, @"PATO", @"PATO:0001838", @"decreased fluid flow", @"A flow that is relatively low.", false));
            TermData.Add(CVID.PATO_increased_fluid_flow, new TermInfo(CVID.PATO_increased_fluid_flow, @"PATO", @"PATO:0001839", @"increased fluid flow", @"A fluid flow that is relatively high.", false));
            TermData.Add(CVID.PATO_remittent_intensity, new TermInfo(CVID.PATO_remittent_intensity, @"PATO", @"PATO:0001841", @"remittent intensity", @"An intensity which is characterized by temporary abatement in severity.", false));
            TermData.Add(CVID.PATO_acidity, new TermInfo(CVID.PATO_acidity, @"PATO", @"PATO:0001842", @"acidity", @"A concentration quality inhering in a bearer by virtue of the bearer's containing acid (hydrogen ions).", false));
            TermData.Add(CVID.PATO_decreased_acidity, new TermInfo(CVID.PATO_decreased_acidity, @"PATO", @"PATO:0001843", @"decreased acidity", @"An acidity which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_acidity, new TermInfo(CVID.PATO_increased_acidity, @"PATO", @"PATO:0001844", @"increased acidity", @"An acidity which is relatively high.", false));
            TermData.Add(CVID.PATO_irregular_rhythm, new TermInfo(CVID.PATO_irregular_rhythm, @"PATO", @"PATO:0001845", @"irregular rhythm", @"A rhythm quality inhering in a bearer by virtue of the bearer's lacking rhythm lacking pattern.", false));
            TermData.Add(CVID.PATO_tangled, new TermInfo(CVID.PATO_tangled, @"PATO", @"PATO:0001846", @"tangled", @"A structural quality inhering in a bearer by virtue of the bearer's being entwined and difficult to unravel.", false));
            TermData.Add(CVID.PATO_constricted, new TermInfo(CVID.PATO_constricted, @"PATO", @"PATO:0001847", @"constricted", @"A structural quality inhering in a bearer by virtue of the bearer's being drawn together, compressed or squeezed physically.", false));
            TermData.Add(CVID.PATO_asymmetrically_curved, new TermInfo(CVID.PATO_asymmetrically_curved, @"PATO", @"PATO:0001848", @"asymmetrically curved", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved asymmetrically.", false));
            TermData.Add(CVID.PATO_abrased, new TermInfo(CVID.PATO_abrased, @"PATO", @"PATO:0001849", @"abrased", @"A texture quality inhering in a bearer by virtue of a portion of the bearer's surface being scraped away.", false));
            TermData.Add(CVID.PATO_scarred, new TermInfo(CVID.PATO_scarred, @"PATO", @"PATO:0001850", @"scarred", @"A structural quality inhering in a bearer by virtue of the bearer's being fibrous tissue that replaces normal tissue destroyed by injury or disease.", false));
            TermData.Add(CVID.PATO_swollen, new TermInfo(CVID.PATO_swollen, @"PATO", @"PATO:0001851", @"swollen", @"A structure quality inhering in a bearer by virtue of the bearer's exhibiting transient abnormal enlargement, not due to cell proliferation.", false));
            TermData.Add(CVID.PATO_dislocated, new TermInfo(CVID.PATO_dislocated, @"PATO", @"PATO:0001852", @"dislocated", @"A positional quality inhering in a bearer by virtue of the bearer's being out of its usual or proper place, or position.", false));
            TermData.Add(CVID.PATO_hydrocephalic, new TermInfo(CVID.PATO_hydrocephalic, @"PATO", @"PATO:0001853", @"hydrocephalic", @"A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of cerebral spinal fluid.", false));
            TermData.Add(CVID.PATO_vertical, new TermInfo(CVID.PATO_vertical, @"PATO", @"PATO:0001854", @"vertical", @"A spatial pattern inhering in a bearer by virtue of the bearer's being situated at right angles to the horizon.", false));
            TermData.Add(CVID.PATO_horizontal, new TermInfo(CVID.PATO_horizontal, @"PATO", @"PATO:0001855", @"horizontal", @"A positional quality inhering in a bearer by virtue of the bearer's being in the plane of the horizon.", false));
            TermData.Add(CVID.PATO_introverted, new TermInfo(CVID.PATO_introverted, @"PATO", @"PATO:0001856", @"introverted", @"An oriented quality inhering in a bearer by virtue of the bearer's being turned inward upon itself.", false));
            TermData.Add(CVID.PATO_concave, new TermInfo(CVID.PATO_concave, @"PATO", @"PATO:0001857", @"concave", @"A shape quality in a bearer by virtue of the bearer's curving inward.", false));
            TermData.Add(CVID.PATO_partially_paralysed, new TermInfo(CVID.PATO_partially_paralysed, @"PATO", @"PATO:0001858", @"partially paralysed", @"A functionality quality inhering in a bearer by virtue of being not completely paralysed.", false));
            TermData.Add(CVID.PATO_increased_coordination, new TermInfo(CVID.PATO_increased_coordination, @"PATO", @"PATO:0001859", @"increased coordination", @"A coordination which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_coordination, new TermInfo(CVID.PATO_decreased_coordination, @"PATO", @"PATO:0001860", @"decreased coordination", @"A coordination which is relatively low.", false));
            TermData.Add(CVID.PATO_fasciculated, new TermInfo(CVID.PATO_fasciculated, @"PATO", @"PATO:0001861", @"fasciculated", @"A structural quality inhering in a bearer by virtue of the bearer's forming a bundle of aligned anatomical fibers, as of muscle or nerve.", false));
            TermData.Add(CVID.PATO_lack_of_fertility_in_offspring, new TermInfo(CVID.PATO_lack_of_fertility_in_offspring, @"PATO", @"PATO:0001862", @"lack of fertility in offspring", @"A fertility quality inhering in a bearer by virtue of the bearer's disposition to make its offspring sterile.", false));
            TermData.Add(CVID.PATO_chronic, new TermInfo(CVID.PATO_chronic, @"PATO", @"PATO:0001863", @"chronic", @"A duration quality of a process inhering in a bearer by virtue of the bearer's having slow progressive course of indefinite duration.", false));
            TermData.Add(CVID.PATO_spheroid, new TermInfo(CVID.PATO_spheroid, @"PATO", @"PATO:0001865", @"spheroid", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's having a quadric surface in three dimensions obtained by rotating an ellipse about one of its principal axes. Includes spheres and oblate/prolate spheroids.", false));
            TermData.Add(CVID.PATO_prolate, new TermInfo(CVID.PATO_prolate, @"PATO", @"PATO:0001866", @"prolate", @"A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a polar diameter longer than its equatorial diameter.", false));
            TermData.Add(CVID.PATO_rectangular, new TermInfo(CVID.PATO_rectangular, @"PATO", @"PATO:0001867", @"rectangular", @"A shape quality inhering in a bearer by virtue of it being a quadrilateral polygon in which all four angles are right angles.", false));
            TermData.Add(CVID.PATO_autofluorescence, new TermInfo(CVID.PATO_autofluorescence, @"PATO", @"PATO:0001868", @"autofluorescence", @"A fluorescence quality inhering in a bearer by virtue of the bearer's exhibiting fluorescence which is self-induced.", false));
            TermData.Add(CVID.PATO_pathological, new TermInfo(CVID.PATO_pathological, @"PATO", @"PATO:0001869", @"pathological", @"A quality inhering in a bearer by virtue of the bearer's being abnormal and having a destructive effect on living tissue.", false));
            TermData.Add(CVID.PATO_crescent_shaped, new TermInfo(CVID.PATO_crescent_shaped, @"PATO", @"PATO:0001870", @"crescent-shaped", @"A shape quality inhering in a circular disk by virtue of the bearer's having a segment of another circle removed from its edge, so that what remains is a shape enclosed by two circular arcs of different diameters which intersect at two points (usually in such a manner that the enclosed shape does not include the center of the original circle).", false));
            TermData.Add(CVID.PATO_reniform, new TermInfo(CVID.PATO_reniform, @"PATO", @"PATO:0001871", @"reniform", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having the shape of a kidney.", false));
            TermData.Add(CVID.PATO_cuboid, new TermInfo(CVID.PATO_cuboid, @"PATO", @"PATO:0001872", @"cuboid", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resemblance to a cube (a 3-D shape with a square cross section).", false));
            TermData.Add(CVID.PATO_cylindrical, new TermInfo(CVID.PATO_cylindrical, @"PATO", @"PATO:0001873", @"cylindrical", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's exhibiting a consistently-sized round cross section.", false));
            TermData.Add(CVID.PATO_discoid, new TermInfo(CVID.PATO_discoid, @"PATO", @"PATO:0001874", @"discoid", @"A shape quality inhering in a bearer by virtue of the bearer's being cylindrical, in which the height is less than the diameter.", false));
            TermData.Add(CVID.PATO_triangular, new TermInfo(CVID.PATO_triangular, @"PATO", @"PATO:0001875", @"triangular", @"A shape quality inhering in a bearer by virtue of the bearer's having three angles.", false));
            TermData.Add(CVID.PATO_dumbbell_shaped, new TermInfo(CVID.PATO_dumbbell_shaped, @"PATO", @"PATO:0001876", @"dumbbell-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having two parts, roughly spherical and of equal size, connected by a bar.", false));
            TermData.Add(CVID.PATO_lanceolate, new TermInfo(CVID.PATO_lanceolate, @"PATO", @"PATO:0001877", @"lanceolate", @"A shape quality inhering in a bearer by virtue of the bearer's being shaped like a lance-head, considerably longer than wide, tapering towards the tip from below the middle; attached at the broad end.", false));
            TermData.Add(CVID.PATO_sigmoid, new TermInfo(CVID.PATO_sigmoid, @"PATO", @"PATO:0001878", @"sigmoid", @"A shape quality inhering in a bearer by virtue of the bearer's consisting of two curves, in opposite directions. S-shaped.", false));
            TermData.Add(CVID.PATO_U_shaped, new TermInfo(CVID.PATO_U_shaped, @"PATO", @"PATO:0001879", @"U-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter U.", false));
            TermData.Add(CVID.PATO_caudate, new TermInfo(CVID.PATO_caudate, @"PATO", @"PATO:0001880", @"caudate", @"A quality inhering in a bearer by virtue of the bearer's having a tail or tail-like projection.", false));
            TermData.Add(CVID.PATO_arrow_shaped, new TermInfo(CVID.PATO_arrow_shaped, @"PATO", @"PATO:0001881", @"arrow-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's forming two equal obtuse triangles with a short side in common.", false));
            TermData.Add(CVID.PATO_limaciform, new TermInfo(CVID.PATO_limaciform, @"PATO", @"PATO:0001882", @"limaciform", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a slug.", false));
            TermData.Add(CVID.PATO_clavate, new TermInfo(CVID.PATO_clavate, @"PATO", @"PATO:0001883", @"clavate", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's gradually becoming thicker towards the end.", false));
            TermData.Add(CVID.PATO_hydrophobicity, new TermInfo(CVID.PATO_hydrophobicity, @"PATO", @"PATO:0001884", @"hydrophobicity", @"A physical quality inhering in a bearer by virtue the bearer's disposition to being water-repellent; tending to repel and not absorb water.", false));
            TermData.Add(CVID.PATO_hydrophobic, new TermInfo(CVID.PATO_hydrophobic, @"PATO", @"PATO:0001885", @"hydrophobic", @"A quality inhering in a bearer by virtue of the bearer's lacking affinity for water; tending to repel and not absorb water; tending not to dissolve in or mix with or be wetted by water.", false));
            TermData.Add(CVID.PATO_hydrophilicity, new TermInfo(CVID.PATO_hydrophilicity, @"PATO", @"PATO:0001886", @"hydrophilicity", @"A physical quality inhering in a bearer by virtue the bearer's disposition to having an affinity for water; it is readily absorbing or dissolving in water.", false));
            TermData.Add(CVID.PATO_hydrophilic, new TermInfo(CVID.PATO_hydrophilic, @"PATO", @"PATO:0001887", @"hydrophilic", @"A quality inhering in a bearer by virtue of the bearer's disposition to having a strong affinity for water; tending to dissolve in, mix with, or be wetted by water.", false));
            TermData.Add(CVID.PATO_miscibility, new TermInfo(CVID.PATO_miscibility, @"PATO", @"PATO:0001888", @"miscibility", @"A quality of a liquid inhering in a bearer by virtue of the bearer's ability to mix with (dissolve in) another liquid.", false));
            TermData.Add(CVID.PATO_scalloped, new TermInfo(CVID.PATO_scalloped, @"PATO", @"PATO:0001889", @"scalloped", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having the border, edge, or outline cut into a series of segments of circles resembling a scallop-shell.", false));
            TermData.Add(CVID.PATO_tripartite, new TermInfo(CVID.PATO_tripartite, @"PATO", @"PATO:0001890", @"tripartite", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being divided into three branches.", false));
            TermData.Add(CVID.PATO_ovate, new TermInfo(CVID.PATO_ovate, @"PATO", @"PATO:0001891", @"ovate", @"A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a continuous convex surface with an axis of symmetry and one axis longer than the other; egg-shaped.", false));
            TermData.Add(CVID.PATO_decreased_odor, new TermInfo(CVID.PATO_decreased_odor, @"PATO", @"PATO:0001892", @"decreased odor", @"An odor quality of having decreased odor.", false));
            TermData.Add(CVID.PATO_increased_odor, new TermInfo(CVID.PATO_increased_odor, @"PATO", @"PATO:0001893", @"increased odor", @"An odor quality of having increased odor.", false));
            TermData.Add(CVID.PATO_phenotypic_sex, new TermInfo(CVID.PATO_phenotypic_sex, @"PATO", @"PATO:0001894", @"phenotypic sex", @"An organismal quality inhering in a bearer by virtue of the bearer's physical expression of sexual characteristics.", false));
            TermData.Add(CVID.PATO_mating_type, new TermInfo(CVID.PATO_mating_type, @"PATO", @"PATO:0001895", @"mating type", @"A biological sex quality inhering in an individual or a population that undergo sexual reproduction.", false));
            TermData.Add(CVID.PATO_unlumenized, new TermInfo(CVID.PATO_unlumenized, @"PATO", @"PATO:0001896", @"unlumenized", @"A structure quality inhering in a bearer by virtue of the bearer's lacking of a three dimensional space surrounded by one or more anatomical structures and containing one or more anatomical substances.", false));
            TermData.Add(CVID.PATO_lumenized, new TermInfo(CVID.PATO_lumenized, @"PATO", @"PATO:0001897", @"lumenized", @"A structure quality inhering in a bearer by virtue of the bearer's having a three dimensional space surrounded by one or more anatomical structures and containing one or more anatomical substances.", false));
            TermData.Add(CVID.PATO_increased_circumference, new TermInfo(CVID.PATO_increased_circumference, @"PATO", @"PATO:0001898", @"increased circumference", @"A circumference which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_circumference, new TermInfo(CVID.PATO_decreased_circumference, @"PATO", @"PATO:0001899", @"decreased circumference", @"A circumference which is relatively low.", false));
            TermData.Add(CVID.PATO_front, new TermInfo(CVID.PATO_front, @"PATO", @"PATO:0001900", @"front", @"A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the south when it faces north.", false));
            TermData.Add(CVID.PATO_back, new TermInfo(CVID.PATO_back, @"PATO", @"PATO:0001901", @"back", @"A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces south.", false));
            TermData.Add(CVID.PATO_unidirectional, new TermInfo(CVID.PATO_unidirectional, @"PATO", @"PATO:0001902", @"unidirectional", @"A directional quality inhering in a bearer by virtue of the bearer's having one direction only.", false));
            TermData.Add(CVID.PATO_bi_directional, new TermInfo(CVID.PATO_bi_directional, @"PATO", @"PATO:0001903", @"bi-directional", @"A directional quality inhering in a bearer by virtue of the bearer's having two directions.", false));
            TermData.Add(CVID.PATO_circling_direction, new TermInfo(CVID.PATO_circling_direction, @"PATO", @"PATO:0001904", @"circling direction", @"A directional quality inhering in a bearer by virtue of the bearer's direction approximating the shape of a circle.", false));
            TermData.Add(CVID.PATO_has_normal_numbers_of_parts_of_type, new TermInfo(CVID.PATO_has_normal_numbers_of_parts_of_type, @"PATO", @"PATO:0001905", @"has normal numbers of parts of type", @"The bearer of this quality has_part = n, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part.", false));
            TermData.Add(CVID.PATO_movement_quality, new TermInfo(CVID.PATO_movement_quality, @"PATO", @"PATO:0001906", @"movement quality", @"A physical quality inhering in a bearer by virtue of the bearer's participation in movement.", false));
            TermData.Add(CVID.PATO_botryoidal, new TermInfo(CVID.PATO_botryoidal, @"PATO", @"PATO:0001907", @"botryoidal", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's being like the surface of a compact mass of grapes.", false));
            TermData.Add(CVID.PATO_multinucleate, new TermInfo(CVID.PATO_multinucleate, @"PATO", @"PATO:0001908", @"multinucleate", @"A nucleate quality inhering in a bearer by virtue of the bearer's having more than one nucleus.", false));
            TermData.Add(CVID.PATO_trinucleate, new TermInfo(CVID.PATO_trinucleate, @"PATO", @"PATO:0001909", @"trinucleate", @"A nucleate quality inhering in a bearer by virtue of the bearer's having three nuclei.", false));
            TermData.Add(CVID.PATO_folded, new TermInfo(CVID.PATO_folded, @"PATO", @"PATO:0001910", @"folded", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's one part being layered over another connected part.", false));
            TermData.Add(CVID.PATO_circling, new TermInfo(CVID.PATO_circling, @"PATO", @"PATO:0001911", @"circling", @"A behavioral quality inhering in a bearer by virtue of the bearer's exhibiting movement in a circular course.", false));
            TermData.Add(CVID.PATO_physiological_state, new TermInfo(CVID.PATO_physiological_state, @"PATO", @"PATO:0001912", @"physiological state", @"A quality of a single process inhering in a bearer by virtue of the state of bearer's mechanical, physical, and biochemical processes.", false));
            TermData.Add(CVID.PATO_ictal, new TermInfo(CVID.PATO_ictal, @"PATO", @"PATO:0001913", @"ictal", @"A physiological state which is characterized by periods of high-frequency high amplitude electrical activity in neuronal tissue.", false));
            TermData.Add(CVID.PATO_non_ictal, new TermInfo(CVID.PATO_non_ictal, @"PATO", @"PATO:0001914", @"non-ictal", @"A physiological state which is characterized by normal electrical activity in neuronal tissue.", false));
            TermData.Add(CVID.PATO_anterodorsal_to, new TermInfo(CVID.PATO_anterodorsal_to, @"PATO", @"PATO:0001915", @"anterodorsal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front and upper surface of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_posterodorsal_to, new TermInfo(CVID.PATO_posterodorsal_to, @"PATO", @"PATO:0001916", @"posterodorsal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and upper surface of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_anteroventral_to, new TermInfo(CVID.PATO_anteroventral_to, @"PATO", @"PATO:0001917", @"anteroventral to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front and abdomen of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_posteroventral_to, new TermInfo(CVID.PATO_posteroventral_to, @"PATO", @"PATO:0001918", @"posteroventral to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and abdomen of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_mislocalised_dorsally, new TermInfo(CVID.PATO_mislocalised_dorsally, @"PATO", @"PATO:0001919", @"mislocalised dorsally", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the back or upper surface of an organism.", false));
            TermData.Add(CVID.PATO_mislocalised_ventrally, new TermInfo(CVID.PATO_mislocalised_ventrally, @"PATO", @"PATO:0001920", @"mislocalised ventrally", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the abdomen of an organism.", false));
            TermData.Add(CVID.PATO_mislocalised_anteriorly, new TermInfo(CVID.PATO_mislocalised_anteriorly, @"PATO", @"PATO:0001921", @"mislocalised anteriorly", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the front of an organism.", false));
            TermData.Add(CVID.PATO_mislocalised_posteriorly, new TermInfo(CVID.PATO_mislocalised_posteriorly, @"PATO", @"PATO:0001922", @"mislocalised posteriorly", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the rear of an organism.", false));
            TermData.Add(CVID.PATO_mislocalised_laterally, new TermInfo(CVID.PATO_mislocalised_laterally, @"PATO", @"PATO:0001923", @"mislocalised laterally", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the side of an organism.", false));
            TermData.Add(CVID.PATO_mislocalised_medially, new TermInfo(CVID.PATO_mislocalised_medially, @"PATO", @"PATO:0001924", @"mislocalised medially", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the middle of an organism.", false));
            TermData.Add(CVID.PATO_surface_feature_shape, new TermInfo(CVID.PATO_surface_feature_shape, @"PATO", @"PATO:0001925", @"surface feature shape", @"A surface shape quality inhering in a bearer by virtue of the bearer's shape of features present on its surface or outer shell.", false));
            TermData.Add(CVID.PATO_increased_fluorescence, new TermInfo(CVID.PATO_increased_fluorescence, @"PATO", @"PATO:0001926", @"increased fluorescence", @"A fluorescence which is higher than normal.", false));
            TermData.Add(CVID.PATO_decreased_fluorescence, new TermInfo(CVID.PATO_decreased_fluorescence, @"PATO", @"PATO:0001927", @"decreased fluorescence", @"A fluorescence which is lower than normal.", false));
            TermData.Add(CVID.PATO_blistered, new TermInfo(CVID.PATO_blistered, @"PATO", @"PATO:0001928", @"blistered", @"A texture quality inhering in a bearer by virtue of a local accumulation of fluid underneath the surface of the bearer.", false));
            TermData.Add(CVID.PATO_variability_of_shape, new TermInfo(CVID.PATO_variability_of_shape, @"PATO", @"PATO:0001929", @"variability of shape", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits shape variation or change.", false));
            TermData.Add(CVID.PATO_variant_shape, new TermInfo(CVID.PATO_variant_shape, @"PATO", @"PATO:0001930", @"variant shape", @"A quality inhering in a bearer by virtue the bearer's having or exhibiting variation its shape.", false));
            TermData.Add(CVID.PATO_invariant_shape, new TermInfo(CVID.PATO_invariant_shape, @"PATO", @"PATO:0001931", @"invariant shape", @"A quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of shape.", false));
            TermData.Add(CVID.PATO_alternate_placement, new TermInfo(CVID.PATO_alternate_placement, @"PATO", @"PATO:0001932", @"alternate placement", @"A pattern quality inhering in a bearer by virtue of the bearer's being placed alternately one above the other.", false));
            TermData.Add(CVID.PATO_opposite, new TermInfo(CVID.PATO_opposite, @"PATO", @"PATO:0001933", @"opposite", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned on opposite sides on the same plane.", false));
            TermData.Add(CVID.PATO_orbicular, new TermInfo(CVID.PATO_orbicular, @"PATO", @"PATO:0001934", @"orbicular", @"A shape quality inhering in a bearer by virtue of the bearer's being perfectly circular.", false));
            TermData.Add(CVID.PATO_obtuse, new TermInfo(CVID.PATO_obtuse, @"PATO", @"PATO:0001935", @"obtuse", @"A shape quality inhering in a bearer by virtue of the bearer's being roundish, a little inclining to be oblong.", false));
            TermData.Add(CVID.PATO_obovate, new TermInfo(CVID.PATO_obovate, @"PATO", @"PATO:0001936", @"obovate", @"A spheroid quality inhering in a bearer by virtue of the bearer's being egg-shaped and flat, with the narrow end attached to the base.", false));
            TermData.Add(CVID.PATO_spatulate, new TermInfo(CVID.PATO_spatulate, @"PATO", @"PATO:0001937", @"spatulate", @"A shape quality inhering in a bearer by virtue of the bearer's being oblong, with the lower end very much attenuated.", false));
            TermData.Add(CVID.PATO_rhomboid, new TermInfo(CVID.PATO_rhomboid, @"PATO", @"PATO:0001938", @"rhomboid", @"A spheroid quality inhering in a bearer by virtue of the bearer's being oval and a little angular in the middle.", false));
            TermData.Add(CVID.PATO_gigantic, new TermInfo(CVID.PATO_gigantic, @"PATO", @"PATO:0001940", @"gigantic", @"A size quality inhering in a bearer by virtue of the bearer's being many folds greater relative to the normal average.", false));
            TermData.Add(CVID.PATO_yellow_green, new TermInfo(CVID.PATO_yellow_green, @"PATO", @"PATO:0001941", @"yellow green", @"A color consisting of yellow and green hues.", false));
            TermData.Add(CVID.PATO_brown_green, new TermInfo(CVID.PATO_brown_green, @"PATO", @"PATO:0001942", @"brown green", @"A color consisting of brown and green hues.", false));
            TermData.Add(CVID.PATO_lilac, new TermInfo(CVID.PATO_lilac, @"PATO", @"PATO:0001943", @"lilac", @"A purple color which has low saturation and low brightness.", false));
            TermData.Add(CVID.PATO_yellow_orange, new TermInfo(CVID.PATO_yellow_orange, @"PATO", @"PATO:0001944", @"yellow orange", @"A color consisting of yellow and orange hue.", false));
            TermData.Add(CVID.PATO_ochre, new TermInfo(CVID.PATO_ochre, @"PATO", @"PATO:0001945", @"ochre", @"A moderate yellow-orange to orange color.", false));
            TermData.Add(CVID.PATO_banded, new TermInfo(CVID.PATO_banded, @"PATO", @"PATO:0001946", @"banded", @"A color pattern inhering in a bearer by virtue of bearer's exhibiting transverse stripes of one hue or degree of saturation crossing another.", false));
            TermData.Add(CVID.PATO_netted, new TermInfo(CVID.PATO_netted, @"PATO", @"PATO:0001947", @"netted", @"A color pattern inhering in a bearer by virtue of bearer's being covered with reticulated lines of a different hue or degree of saturation.", false));
            TermData.Add(CVID.PATO_furrowed, new TermInfo(CVID.PATO_furrowed, @"PATO", @"PATO:0001948", @"furrowed", @"A grooved texture quality inhering in a bearer by virtue of the bearer's being marked by two or more parallel channels.", false));
            TermData.Add(CVID.PATO_pointleted, new TermInfo(CVID.PATO_pointleted, @"PATO", @"PATO:0001949", @"pointleted", @"A shape quality inhering in a bearer by virtue of the bearer's terminating abruptly in a little point.", false));
            TermData.Add(CVID.PATO_blunt, new TermInfo(CVID.PATO_blunt, @"PATO", @"PATO:0001950", @"blunt", @"A shape quality inhering in a bearer by virtue of the bearer's terminating gradually in a rounded end.", false));
            TermData.Add(CVID.PATO_whorled, new TermInfo(CVID.PATO_whorled, @"PATO", @"PATO:0001951", @"whorled", @"A spatial pattern inhering in a bearer by virtue of the bearer's being in opposition round a common axis.", false));
            TermData.Add(CVID.PATO_distichous, new TermInfo(CVID.PATO_distichous, @"PATO", @"PATO:0001952", @"distichous", @"A spatial quality inhering in a bearer by virtue of the bearer's being arranged in two opposite rows (and hence in the same plane).", false));
            TermData.Add(CVID.PATO_decussate, new TermInfo(CVID.PATO_decussate, @"PATO", @"PATO:0001953", @"decussate", @"A pattern quality inhering in a bearer by virtue of the bearer's consisting of paired parts that alternately cross each other.", false));
            TermData.Add(CVID.PATO_subulate, new TermInfo(CVID.PATO_subulate, @"PATO", @"PATO:0001954", @"subulate", @"A shape quality inhering in a bearer by virtue of the bearer's being linear, very narrow, tapering to a very fine point from a narrow base.", false));
            TermData.Add(CVID.PATO_cuneate, new TermInfo(CVID.PATO_cuneate, @"PATO", @"PATO:0001955", @"cuneate", @"A shape quality inhering in a bearer by virtue of the bearer's being narrowly triangular, wider at the apex and tapering toward the base.", false));
            TermData.Add(CVID.PATO_variability_of_size, new TermInfo(CVID.PATO_variability_of_size, @"PATO", @"PATO:0001956", @"variability of size", @"A variability quality inhering in a bearer by virtue of whether the bearer exhibits size variation or change.", false));
            TermData.Add(CVID.PATO_decreased_variability_of_size, new TermInfo(CVID.PATO_decreased_variability_of_size, @"PATO", @"PATO:0001957", @"decreased variability of size", @"A variability of size which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_variability_of_size, new TermInfo(CVID.PATO_increased_variability_of_size, @"PATO", @"PATO:0001958", @"increased variability of size", @"A variability of size which is relatively high.", false));
            TermData.Add(CVID.PATO_defasciculated, new TermInfo(CVID.PATO_defasciculated, @"PATO", @"PATO:0001959", @"defasciculated", @"A structural quality inhering in a bearer by virtue of the bearer's in which bundles of aligned anatomical fibers have become separated.", false));
            TermData.Add(CVID.PATO_interdigitated, new TermInfo(CVID.PATO_interdigitated, @"PATO", @"PATO:0001960", @"interdigitated", @"A shape quality inhering in a bearer by virtue of the bearer's parts or projections being interlocked; for example, the fingers of two hands that are clasped.", false));
            TermData.Add(CVID.PATO_in_contact_with, new TermInfo(CVID.PATO_in_contact_with, @"PATO", @"PATO:0001961", @"in contact with", @"A structural quality inhering in a bearer by virtue of the bearer's touching another entity.", false));
            TermData.Add(CVID.PATO_involute, new TermInfo(CVID.PATO_involute, @"PATO", @"PATO:0001962", @"involute", @"A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled inwards spirally on each side.", false));
            TermData.Add(CVID.PATO_revolute, new TermInfo(CVID.PATO_revolute, @"PATO", @"PATO:0001963", @"revolute", @"A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled backwards spirally on each side.", false));
            TermData.Add(CVID.PATO_circinate, new TermInfo(CVID.PATO_circinate, @"PATO", @"PATO:0001964", @"circinate", @"A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled spirally downwards.", false));
            TermData.Add(CVID.PATO_reclinate, new TermInfo(CVID.PATO_reclinate, @"PATO", @"PATO:0001965", @"reclinate", @"A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being bent down upon their stalk.", false));
            TermData.Add(CVID.PATO_convolute, new TermInfo(CVID.PATO_convolute, @"PATO", @"PATO:0001966", @"convolute", @"A curled quality inhering in a bearer by virtue of the bearer's one edge of its surface being wholly rolled up in another.", false));
            TermData.Add(CVID.PATO_actinodromous, new TermInfo(CVID.PATO_actinodromous, @"PATO", @"PATO:0001967", @"actinodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having three or more primary branches diverging radially from a single point.", false));
            TermData.Add(CVID.PATO_parallelodromous, new TermInfo(CVID.PATO_parallelodromous, @"PATO", @"PATO:0001968", @"parallelodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having two or more parallel primary branches originate beside each other and converge apically.", false));
            TermData.Add(CVID.PATO_craspedodromous, new TermInfo(CVID.PATO_craspedodromous, @"PATO", @"PATO:0001969", @"craspedodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having secondary branches terminating at the margin.", false));
            TermData.Add(CVID.PATO_brochidodromous, new TermInfo(CVID.PATO_brochidodromous, @"PATO", @"PATO:0001970", @"brochidodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having secondary branches joined together in a series of prominent arches.", false));
            TermData.Add(CVID.PATO_cladodromous, new TermInfo(CVID.PATO_cladodromous, @"PATO", @"PATO:0001971", @"cladodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having secondary branches freely branching toward the margin.", false));
            TermData.Add(CVID.PATO_reticulodromous, new TermInfo(CVID.PATO_reticulodromous, @"PATO", @"PATO:0001972", @"reticulodromous", @"A branched quality inhering in a bearer by virtue of the bearer's having secondary branches branching into a reticulum toward the margin.", false));
            TermData.Add(CVID.PATO_cuspidate, new TermInfo(CVID.PATO_cuspidate, @"PATO", @"PATO:0001973", @"cuspidate", @"A shape quality inhering in a bearer by virtue of the bearer's being tapering gradually into a rigid point.", false));
            TermData.Add(CVID.PATO_retuse, new TermInfo(CVID.PATO_retuse, @"PATO", @"PATO:0001974", @"retuse", @"A shape quality inhering in a bearer by virtue of the bearer's terminating in a round end, the centre of which is depressed.", false));
            TermData.Add(CVID.PATO_unserrated, new TermInfo(CVID.PATO_unserrated, @"PATO", @"PATO:0001975", @"unserrated", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's lacking sharp straight-edged teeth pointing to the apex.", false));
            TermData.Add(CVID.PATO_serration, new TermInfo(CVID.PATO_serration, @"PATO", @"PATO:0001976", @"serration", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's having or lacking sharp straight-edged teeth pointing to the apex.", false));
            TermData.Add(CVID.PATO_angular, new TermInfo(CVID.PATO_angular, @"PATO", @"PATO:0001977", @"angular", @"A shape quality inhering in a bearer by virtue of the bearer's having at least one salient angle on the margin.", false));
            TermData.Add(CVID.PATO_cut, new TermInfo(CVID.PATO_cut, @"PATO", @"PATO:0001978", @"cut", @"A shape quality inhering in a bearer by virtue of the bearer's being regularly divided by deep incisions.", false));
            TermData.Add(CVID.PATO_lobed, new TermInfo(CVID.PATO_lobed, @"PATO", @"PATO:0001979", @"lobed", @"A shape quality inhering in a bearer by virtue of the bearer's being partly divided into a determinate number of regions.", false));
            TermData.Add(CVID.PATO_digitate, new TermInfo(CVID.PATO_digitate, @"PATO", @"PATO:0001980", @"digitate", @"A shape quality inhering in a bearer by virtue of the bearer's having distinct parts arising from a common point or center.", false));
            TermData.Add(CVID.PATO_auriculate, new TermInfo(CVID.PATO_auriculate, @"PATO", @"PATO:0001981", @"auriculate", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape resembling an ear.", false));
            TermData.Add(CVID.PATO_attenuate, new TermInfo(CVID.PATO_attenuate, @"PATO", @"PATO:0001982", @"attenuate", @"A shape quality inhering in a bearer by virtue of the bearer's gradually tapering to a slender point.", false));
            TermData.Add(CVID.PATO_perfoliate, new TermInfo(CVID.PATO_perfoliate, @"PATO", @"PATO:0001983", @"perfoliate", @"A structural quality inhering in a bearer by virtue of the bearer's two basal lobes being united together.", false));
            TermData.Add(CVID.PATO_decurrent, new TermInfo(CVID.PATO_decurrent, @"PATO", @"PATO:0001984", @"decurrent", @"A shape quality inhering in a bearer by virtue of the bearer's being prolonged below the point of insertion.", false));
            TermData.Add(CVID.PATO_frozen, new TermInfo(CVID.PATO_frozen, @"PATO", @"PATO:0001985", @"frozen", @"A quality inhering in a bearer by virtue of the bearer's being kept below its freezing point.", false));
            TermData.Add(CVID.PATO_dissolved, new TermInfo(CVID.PATO_dissolved, @"PATO", @"PATO:0001986", @"dissolved", @"A quality inhering in a bearer by virtue of the bearer's passing into solution.", false));
            TermData.Add(CVID.PATO_saccular, new TermInfo(CVID.PATO_saccular, @"PATO", @"PATO:0001987", @"saccular", @"A structural quality inhering in a bearer by virtue of the bearer's having a three dimensional cavity with a narrow or no opening, and often containing an anatomical substance.", false));
            TermData.Add(CVID.PATO_quadrangular, new TermInfo(CVID.PATO_quadrangular, @"PATO", @"PATO:0001988", @"quadrangular", @"A shape quality inhering in a bearer by virtue of the bearer's having four angles and four sides.", false));
            TermData.Add(CVID.PATO_sinuous, new TermInfo(CVID.PATO_sinuous, @"PATO", @"PATO:0001989", @"sinuous", @"A curvature quality inhering in a bearer by virtue of the bearer's having many curves and turns.", false));
            TermData.Add(CVID.PATO_duration_of_disease, new TermInfo(CVID.PATO_duration_of_disease, @"PATO", @"PATO:0001990", @"duration of disease", @"A duration quality of a process inhering in a disease by virtue of the bearer's duration of an impairment of health or of a condition of abnormal functioning.", false));
            TermData.Add(CVID.PATO_immortal, new TermInfo(CVID.PATO_immortal, @"PATO", @"PATO:0001991", @"immortal", @"A quality inhering in a bearer by virtue of the bearer's disposition to being capable of indefinite growth or division.", false));
            TermData.Add(CVID.PATO_cellularity, new TermInfo(CVID.PATO_cellularity, @"PATO", @"PATO:0001992", @"cellularity", @"An organismal quality inhering in a bearer by virtue of the bearer's consisting cells.", false));
            TermData.Add(CVID.PATO_multicellular, new TermInfo(CVID.PATO_multicellular, @"PATO", @"PATO:0001993", @"multicellular", @"A cellularity quality inhering in a bearer by virtue of the bearer's consisting of more than one cell.", false));
            TermData.Add(CVID.PATO_unicellular, new TermInfo(CVID.PATO_unicellular, @"PATO", @"PATO:0001994", @"unicellular", @"A cellularity quality inhering in a bearer by virtue of the bearer's consisting of exactly one cell.", false));
            TermData.Add(CVID.PATO_organismal_quality, new TermInfo(CVID.PATO_organismal_quality, @"PATO", @"PATO:0001995", @"organismal quality", @"A quality that inheres in an entire organism or part of an organism.", false));
            TermData.Add(CVID.PATO_decreased_amount, new TermInfo(CVID.PATO_decreased_amount, @"PATO", @"PATO:0001997", @"decreased amount", @"An amount which is relatively low.", false));
            TermData.Add(CVID.PATO_conspicuousness, new TermInfo(CVID.PATO_conspicuousness, @"PATO", @"PATO:0001998", @"conspicuousness", @"A quality inhering in a bearer by virtue of its visibility.", false));
            TermData.Add(CVID.PATO_lacks_parts_or_has_fewer_parts_of_type, new TermInfo(CVID.PATO_lacks_parts_or_has_fewer_parts_of_type, @"PATO", @"PATO:0001999", @"lacks parts or has fewer parts of type", @"The bearer of this quality has_part < n of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part. Formally: If a bearer entity e has fewer parts of type X at time t, then the number of instances x of X at t such that x part_of e is < n, where n is either the normal number for comparable entities, or n is stated explicitly. This case includes the limit case, where the bearer lacks all parts of the specified type.", false));
            TermData.Add(CVID.PATO_lacks_all_parts_of_type, new TermInfo(CVID.PATO_lacks_all_parts_of_type, @"PATO", @"PATO:0002000", @"lacks all parts of type", @"A quality of physical entities inhering in a bearer by virtue of the bearer's lacking a physical part as specified by the additional entity.", false));
            TermData.Add(CVID.PATO_has_fewer_parts_of_type, new TermInfo(CVID.PATO_has_fewer_parts_of_type, @"PATO", @"PATO:0002001", @"has fewer parts of type", @"The bearer of this quality has_part < n AND has_part > 0 of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part. Formally: If a bearer entity e has fewer parts of type X at time t, then the number of instances x of X at t such that x part_of e is < n, where n is either the normal number for comparable entities, or n is stated explicitly.", false));
            TermData.Add(CVID.PATO_has_extra_parts_of_type, new TermInfo(CVID.PATO_has_extra_parts_of_type, @"PATO", @"PATO:0002002", @"has extra parts of type", @"The bearer of this quality has_part > n of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part.", false));
            TermData.Add(CVID.PATO_population_quality, new TermInfo(CVID.PATO_population_quality, @"PATO", @"PATO:0002003", @"population quality", @"A quality that inheres in an entire population or part of a population.", false));
            TermData.Add(CVID.PATO_obsolete_surface_shape_OBSOLETE, new TermInfo(CVID.PATO_obsolete_surface_shape_OBSOLETE, @"PATO", @"PATO:0002004", @"obsolete surface shape", @"A shape that inheres in a part of a surface. An object can have different surface shapes on different parts of its surface.", true));
            TermData.Add(CVID.PATO_concavity, new TermInfo(CVID.PATO_concavity, @"PATO", @"PATO:0002005", @"concavity", @"Surface shape that refers to the inward or outward curvature of the surface.", false));
            TermData.Add(CVID.PATO_2_D_shape, new TermInfo(CVID.PATO_2_D_shape, @"PATO", @"PATO:0002006", @"2-D shape", @"A shape that inheres in a 2 dimensional entity, such as a cross section or projection of a 3 dimensional entity.", false));
            TermData.Add(CVID.PATO_convex_3_D_shape, new TermInfo(CVID.PATO_convex_3_D_shape, @"PATO", @"PATO:0002007", @"convex 3-D shape", @"A complete three dimensional shape in which for every line connecting pair of points on the object is within the object. Or: a shape lacking cavities. Contrast: concave.", false));
            TermData.Add(CVID.PATO_concave_3_D_shape, new TermInfo(CVID.PATO_concave_3_D_shape, @"PATO", @"PATO:0002008", @"concave 3-D shape", @"A complete three dimensional shape in which there is a line connecting pair of points on the object that lies outside the object. Or: a shape with cavities. Contrast: concave.", false));
            TermData.Add(CVID.PATO_branchiness, new TermInfo(CVID.PATO_branchiness, @"PATO", @"PATO:0002009", @"branchiness", @"A shape quality inhering in a bearer by virtue of the degree to which there are subdivisions or offshoots in a bearer entity.", false));
            TermData.Add(CVID.PATO_looseness, new TermInfo(CVID.PATO_looseness, @"PATO", @"PATO:0002010", @"looseness", @"A texture quality inhering in a bearer by virtue of the bearer's bing full of small openings or gaps.", false));
            TermData.Add(CVID.PATO_neoplastic, new TermInfo(CVID.PATO_neoplastic, @"PATO", @"PATO:0002011", @"neoplastic", @"A structural quality which is held by a bearer when the latter's disposition the presence of abnormally proliferating masses of cells.", false));
            TermData.Add(CVID.PATO_coating, new TermInfo(CVID.PATO_coating, @"PATO", @"PATO:0002012", @"coating", @"A texture quality that exists through a liquid cover on the surface of the bearer.", false));
            TermData.Add(CVID.PATO_fasciculation, new TermInfo(CVID.PATO_fasciculation, @"PATO", @"PATO:0002013", @"fasciculation", @"A structural quality inhering in a bearer by virtue of whether the bearer forms a bundle of anatomical fibers, as of muscle or nerve.", false));
            TermData.Add(CVID.PATO_structure__cavities, new TermInfo(CVID.PATO_structure__cavities, @"PATO", @"PATO:0002014", @"structure, cavities", @"A structural quality that inheres in a bearer by virtue of the bearer's containing hollow areas.", false));
            TermData.Add(CVID.PATO_magnitude, new TermInfo(CVID.PATO_magnitude, @"PATO", @"PATO:0002016", @"magnitude", @"", false));
            TermData.Add(CVID.PATO_increased_magnitude, new TermInfo(CVID.PATO_increased_magnitude, @"PATO", @"PATO:0002017", @"increased magnitude", @"", false));
            TermData.Add(CVID.PATO_decreased_magnitude, new TermInfo(CVID.PATO_decreased_magnitude, @"PATO", @"PATO:0002018", @"decreased magnitude", @"", false));
            TermData.Add(CVID.PATO_aplastic_growth, new TermInfo(CVID.PATO_aplastic_growth, @"PATO", @"PATO:0002019", @"aplastic growth", @"A growth quality of occurrent in which the growth of an organism, structure or group of organisms does not occur.", false));
            TermData.Add(CVID.PATO_pale_pink, new TermInfo(CVID.PATO_pale_pink, @"PATO", @"PATO:0002020", @"pale pink", @"Pink color having high brightness and low saturation.", false));
            TermData.Add(CVID.PATO_conical, new TermInfo(CVID.PATO_conical, @"PATO", @"PATO:0002021", @"conical", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a cone (a 3-D shape with a round cross section that tapers).", false));
            TermData.Add(CVID.PATO_villiform, new TermInfo(CVID.PATO_villiform, @"PATO", @"PATO:0002022", @"villiform", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a minute projection (villus).", false));
            TermData.Add(CVID.PATO_apical_basal_polarity, new TermInfo(CVID.PATO_apical_basal_polarity, @"PATO", @"PATO:0002023", @"apical-basal polarity", @"A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along an apical-basal axis.", false));
            TermData.Add(CVID.PATO_anterior_posterior_polarity, new TermInfo(CVID.PATO_anterior_posterior_polarity, @"PATO", @"PATO:0002024", @"anterior-posterior polarity", @"A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the anterior-posterior axis.", false));
            TermData.Add(CVID.PATO_external_angle, new TermInfo(CVID.PATO_external_angle, @"PATO", @"PATO:0002025", @"external angle", @"A convex angle that is formed by one side of a polygon and a line extended from an adjacent side.", false));
            TermData.Add(CVID.PATO_non_progressive, new TermInfo(CVID.PATO_non_progressive, @"PATO", @"PATO:0002026", @"non-progressive", @"A quality of a single process inhering in a bearer by virtue of the bearer's not increasing over time.", false));
            TermData.Add(CVID.PATO_osmolality, new TermInfo(CVID.PATO_osmolality, @"PATO", @"PATO:0002027", @"osmolality", @"A concentration quality inhering in a bearer by virtue of the bearer's amount of osmoles of solute per kilogram of solvent.", false));
            TermData.Add(CVID.PATO_decreased_osmolality, new TermInfo(CVID.PATO_decreased_osmolality, @"PATO", @"PATO:0002028", @"decreased osmolality", @"An osmolality which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_osmolality, new TermInfo(CVID.PATO_increased_osmolality, @"PATO", @"PATO:0002029", @"increased osmolality", @"An osmolality which is relatively high.", false));
            TermData.Add(CVID.PATO_specificity_to, new TermInfo(CVID.PATO_specificity_to, @"PATO", @"PATO:0002030", @"specificity to", @"A molecular quality that inheres in a molecular entity by virtue of whether the bearer exhibits the ability of a probe to react precisely with a specific target molecule.", false));
            TermData.Add(CVID.PATO_upturned, new TermInfo(CVID.PATO_upturned, @"PATO", @"PATO:0002031", @"upturned", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved or tilted such that the tip points upwards.", false));
            TermData.Add(CVID.PATO_forward_scatter, new TermInfo(CVID.PATO_forward_scatter, @"PATO", @"PATO:0002032", @"forward scatter", @"A reflectivity quality inhering in light by virtue of the bearer's scattering occurring at small angle to the incident beam.", false));
            TermData.Add(CVID.PATO_side_scatter, new TermInfo(CVID.PATO_side_scatter, @"PATO", @"PATO:0002033", @"side scatter", @"A reflective quality that is the light scattering occurring at wide angle (around 90 degrees) to the incident beam.", false));
            TermData.Add(CVID.PATO_undivided, new TermInfo(CVID.PATO_undivided, @"PATO", @"PATO:0002034", @"undivided", @"A shape quality inhering in a bearer by virtue of the bearer's being unseparated into parts or divisions.", false));
            TermData.Add(CVID.PATO_ipsilateral_to, new TermInfo(CVID.PATO_ipsilateral_to, @"PATO", @"PATO:0002035", @"ipsilateral to", @"A spatial quality inhering in a bearer by virtue of the bearer's being on the same side in relation to another structure.", false));
            TermData.Add(CVID.PATO_axial_to, new TermInfo(CVID.PATO_axial_to, @"PATO", @"PATO:0002036", @"axial to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located towards the central axis of the organism or an extremity.", false));
            TermData.Add(CVID.PATO_degeneration, new TermInfo(CVID.PATO_degeneration, @"PATO", @"PATO:0002037", @"degeneration", @"A structural quality inhering in a bearer by virtue of the bearer exhibiting deterioration of its structure.", false));
            TermData.Add(CVID.PATO_non_degenerate, new TermInfo(CVID.PATO_non_degenerate, @"PATO", @"PATO:0002038", @"non-degenerate", @"A structural quality inhering in a bearer whose structure which does not deteriorate.", false));
            TermData.Add(CVID.PATO_biconcave, new TermInfo(CVID.PATO_biconcave, @"PATO", @"PATO:0002039", @"biconcave", @"A concave quality inhering in a bearer by virtue of the bearer's curving inward on both sides or surfaces.", false));
            TermData.Add(CVID.PATO_biconvex, new TermInfo(CVID.PATO_biconvex, @"PATO", @"PATO:0002040", @"biconvex", @"A shape quality inhering in a bearer by virtue of the bearer's being convex on both sides or surface.", false));
            TermData.Add(CVID.PATO_anterior_posterior_diameter, new TermInfo(CVID.PATO_anterior_posterior_diameter, @"PATO", @"PATO:0002041", @"anterior-posterior diameter", @"A diameter that is along the anterior-posterior axis.", false));
            TermData.Add(CVID.PATO_decreased_anterior_posterior_diameter, new TermInfo(CVID.PATO_decreased_anterior_posterior_diameter, @"PATO", @"PATO:0002042", @"decreased anterior-posterior diameter", @"An anterior-posterior diameter quality which is relatively small.", false));
            TermData.Add(CVID.PATO_increased_anterior_posterior_diameter, new TermInfo(CVID.PATO_increased_anterior_posterior_diameter, @"PATO", @"PATO:0002043", @"increased anterior-posterior diameter", @"An anterior-posterior diameter quality which is relatively large.", false));
            TermData.Add(CVID.PATO_trapezoid, new TermInfo(CVID.PATO_trapezoid, @"PATO", @"PATO:0002044", @"trapezoid", @"A shape quality inhering in a bearer by virtue of the bearer's being a quadrilateral with two parallel sides.", false));
            TermData.Add(CVID.PATO_dendritic, new TermInfo(CVID.PATO_dendritic, @"PATO", @"PATO:0002045", @"dendritic", @"A branched quality inhering in a bearer by virtue of the bearer's having smaller branches arising from larger branches. Resembling a tree in branching structure.", false));
            TermData.Add(CVID.PATO_abaxial_to, new TermInfo(CVID.PATO_abaxial_to, @"PATO", @"PATO:0002046", @"abaxial to", @"A spatial quality inhering in a bearer by virtue of the bearer's being away from or on the opposite side of the central axis.", false));
            TermData.Add(CVID.PATO_adaxial_to, new TermInfo(CVID.PATO_adaxial_to, @"PATO", @"PATO:0002047", @"adaxial to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located on the side nearest to the axis of an organ or organism.", false));
            TermData.Add(CVID.PATO_mosaicism, new TermInfo(CVID.PATO_mosaicism, @"PATO", @"PATO:0002048", @"mosaicism", @"An organismal quality inhering in a bearer by virtue of the bearer's having two or more cell populations that differ in genetic makeup. This situation can affect any type of cell, including blood cells, gametes (egg and sperm cells), and skin.", false));
            TermData.Add(CVID.PATO_lateral_and_rotional_curvature, new TermInfo(CVID.PATO_lateral_and_rotional_curvature, @"PATO", @"PATO:0002049", @"lateral and rotional curvature", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved around an axis and towards the side.", false));
            TermData.Add(CVID.PATO_normal_amount, new TermInfo(CVID.PATO_normal_amount, @"PATO", @"PATO:0002050", @"normal amount", @"An amount which normal.", false));
            TermData.Add(CVID.PATO_increased_occurrence, new TermInfo(CVID.PATO_increased_occurrence, @"PATO", @"PATO:0002051", @"increased occurrence", @"An occurrence which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_occurrence, new TermInfo(CVID.PATO_decreased_occurrence, @"PATO", @"PATO:0002052", @"decreased occurrence", @"An occurrence which is relatively low.", false));
            TermData.Add(CVID.PATO_dorso_ventrally_flattened, new TermInfo(CVID.PATO_dorso_ventrally_flattened, @"PATO", @"PATO:0002053", @"dorso-ventrally flattened", @"A quality inhering in a bearer by virtue of the bearer's being flattened along dorso-ventral axis.", false));
            TermData.Add(CVID.PATO_laterally_compressed, new TermInfo(CVID.PATO_laterally_compressed, @"PATO", @"PATO:0002054", @"laterally compressed", @"A quality inhering in a bearer by virtue of the bearer's being flattened along transverse axis.", false));
            TermData.Add(CVID.PATO_increased_fragility, new TermInfo(CVID.PATO_increased_fragility, @"PATO", @"PATO:0002055", @"increased fragility", @"A fragility which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_fragility, new TermInfo(CVID.PATO_decreased_fragility, @"PATO", @"PATO:0002056", @"decreased fragility", @"A fragility which is relatively low.", false));
            TermData.Add(CVID.PATO_increased_area, new TermInfo(CVID.PATO_increased_area, @"PATO", @"PATO:0002057", @"increased area", @"An area which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_area, new TermInfo(CVID.PATO_decreased_area, @"PATO", @"PATO:0002058", @"decreased area", @"An area which is relatively low.", false));
            TermData.Add(CVID.PATO_emmision_wavelength, new TermInfo(CVID.PATO_emmision_wavelength, @"PATO", @"PATO:0002059", @"emmision wavelength", @"The specific wavelength of light emitted by a fluorescent molecule, such as a labelled probe, upon absorption of light at the (higher) excitation wavelength.", false));
            TermData.Add(CVID.PATO_absorption_wavelength, new TermInfo(CVID.PATO_absorption_wavelength, @"PATO", @"PATO:0002060", @"absorption wavelength", @"The specific wavelength of radiation that can be retained by a bearer.", false));
            TermData.Add(CVID.PATO_physical_quality_of_a_process, new TermInfo(CVID.PATO_physical_quality_of_a_process, @"PATO", @"PATO:0002062", @"physical quality of a process", @"", false));
            TermData.Add(CVID.PATO_columnar, new TermInfo(CVID.PATO_columnar, @"PATO", @"PATO:0002063", @"columnar", @"A shape inhering in a bearer by virtue of the bearer's being elongated and cylindrical.", false));
            TermData.Add(CVID.PATO_fenestrated, new TermInfo(CVID.PATO_fenestrated, @"PATO", @"PATO:0002064", @"fenestrated", @"A structure quality inhering in a bearer by virtue of the bearer's delimited by a surface with holes.", false));
            TermData.Add(CVID.PATO_star_shaped, new TermInfo(CVID.PATO_star_shaped, @"PATO", @"PATO:0002065", @"star shaped", @"A shape quality inhering in a bearer by virtue of the bearer's being arranged like rays or radii; radiating from a common center.", false));
            TermData.Add(CVID.PATO_crystal_configuration, new TermInfo(CVID.PATO_crystal_configuration, @"PATO", @"PATO:0002066", @"crystal configuration", @"A solid configuration inhering in a material entity by virtue of its constituent atoms, molecules, or ions being arranged in an orderly repeating pattern extending in all three spatial dimensions.", false));
            TermData.Add(CVID.PATO_stratification, new TermInfo(CVID.PATO_stratification, @"PATO", @"PATO:0002067", @"stratification", @"A spatial pattern inhering in a bearer by virtue of the bearer's layered configuration.", false));
            TermData.Add(CVID.PATO_stratified, new TermInfo(CVID.PATO_stratified, @"PATO", @"PATO:0002068", @"stratified", @"A spatial pattern inhering in a bearer by virtue of the bearer's exhibiting a layered configuration.", false));
            TermData.Add(CVID.PATO_unstratified, new TermInfo(CVID.PATO_unstratified, @"PATO", @"PATO:0002069", @"unstratified", @"A spatial pattern inhering in a bearer by virtue of the bearer's lacking a layered configuration.", false));
            TermData.Add(CVID.PATO_affinity, new TermInfo(CVID.PATO_affinity, @"PATO", @"PATO:0002070", @"affinity", @"A molecular quality that arises from the molecular attraction exerted between two atoms or compounds.", false));
            TermData.Add(CVID.PATO_increased_affinity, new TermInfo(CVID.PATO_increased_affinity, @"PATO", @"PATO:0002071", @"increased affinity", @"An affinity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_affinity, new TermInfo(CVID.PATO_decreased_affinity, @"PATO", @"PATO:0002072", @"decreased affinity", @"An affinity which is relatively low.", false));
            TermData.Add(CVID.PATO_avidity, new TermInfo(CVID.PATO_avidity, @"PATO", @"PATO:0002073", @"avidity", @"A molecular quality that arises from the synergistic strength of bond affinities between multiple bond interactions.", false));
            TermData.Add(CVID.PATO_increased_avidity, new TermInfo(CVID.PATO_increased_avidity, @"PATO", @"PATO:0002074", @"increased avidity", @"An avidity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_avidity, new TermInfo(CVID.PATO_decreased_avidity, @"PATO", @"PATO:0002075", @"decreased avidity", @"An avidity which is relatively low.", false));
            TermData.Add(CVID.PATO_movement_behavioral_quality, new TermInfo(CVID.PATO_movement_behavioral_quality, @"PATO", @"PATO:0002076", @"movement behavioral quality", @"A behavioral quality inhering in a bearer by virtue of the bearer's movement.", false));
            TermData.Add(CVID.PATO_stacked, new TermInfo(CVID.PATO_stacked, @"PATO", @"PATO:0002077", @"stacked", @"A spatial quality inhering in a bearer by virtue of the bearer's being positioned with multiple entities of the same type above and below.", false));
            TermData.Add(CVID.PATO_hollow, new TermInfo(CVID.PATO_hollow, @"PATO", @"PATO:0002078", @"hollow", @"A quality inhering in a bearer by virtue of the bearer's having an empty space or cavity within.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 3</summary>
        private static void PopulateTermData_PATO_Part3()
        {
            TermData.Add(CVID.PATO_broken_into_two_pieces, new TermInfo(CVID.PATO_broken_into_two_pieces, @"PATO", @"PATO:0002080", @"broken into two pieces", @"A broken quality inhering in a bearer by virtue of the bearer's being seperated into two contiguous wholes.", false));
            TermData.Add(CVID.PATO_shattered, new TermInfo(CVID.PATO_shattered, @"PATO", @"PATO:0002081", @"shattered", @"A broken quality inhering in a bearer by virtue of the bearer's being broken into multiple contiguous wholes.", false));
            TermData.Add(CVID.PATO_partially_broken, new TermInfo(CVID.PATO_partially_broken, @"PATO", @"PATO:0002082", @"partially broken", @"A broken quality inhering in a bearer by virtue of the bearer's being still one contiguous whole but structurally damaged such that in danger of become two or more.", false));
            TermData.Add(CVID.PATO_altered_number_of, new TermInfo(CVID.PATO_altered_number_of, @"PATO", @"PATO:0002083", @"altered number of", @"Having extra or fewer parts.", false));
            TermData.Add(CVID.PATO_obsolete_post_mortem_OBSOLETE, new TermInfo(CVID.PATO_obsolete_post_mortem_OBSOLETE, @"PATO", @"PATO:0002084", @"obsolete post-mortem", @"The period after death of the organism.", true));
            TermData.Add(CVID.PATO_obsolete_pre_mortem_OBSOLETE, new TermInfo(CVID.PATO_obsolete_pre_mortem_OBSOLETE, @"PATO", @"PATO:0002085", @"obsolete pre-mortem", @"The period before death of the organism.", true));
            TermData.Add(CVID.PATO_bullet_shaped, new TermInfo(CVID.PATO_bullet_shaped, @"PATO", @"PATO:0002087", @"bullet-shaped", @"A quality inhering in a bearer by virtue of the bearer's being short and wide and tapered distally.", false));
            TermData.Add(CVID.PATO_monocystic, new TermInfo(CVID.PATO_monocystic, @"PATO", @"PATO:0002088", @"monocystic", @"A structure quality inhering in a bearer by virtue of the bearer's body consisting of one sac.", false));
            TermData.Add(CVID.PATO_polycystic, new TermInfo(CVID.PATO_polycystic, @"PATO", @"PATO:0002089", @"polycystic", @"A structure quality inhering in a bearer by virtue of the bearer's body containing more than one cyst - formations of an epithelium bounded cavity not associated with neoplasia.", false));
            TermData.Add(CVID.PATO_adenomatous, new TermInfo(CVID.PATO_adenomatous, @"PATO", @"PATO:0002090", @"adenomatous", @"A morphology quality inhering in a tumour by virtue of the bearer's exhbiting the morphological characteristics of a glandular epithelial cell.", false));
            TermData.Add(CVID.PATO_subacute, new TermInfo(CVID.PATO_subacute, @"PATO", @"PATO:0002091", @"subacute", @"A quality of a single process inhering in a bearer by virtue of the bearer's having an onset and time course between acute and chronic.", false));
            TermData.Add(CVID.PATO_anaplastic, new TermInfo(CVID.PATO_anaplastic, @"PATO", @"PATO:0002092", @"anaplastic", @"A morphology quality inhering in a neoplastic cell by virtue of the bearer's exhibiting breakdown of cell-cell interaction maintaining tissue architecture, proliferative dysregulation and bizarre modification to nucleus size and shape.", false));
            TermData.Add(CVID.PATO_ballooning, new TermInfo(CVID.PATO_ballooning, @"PATO", @"PATO:0002093", @"ballooning", @"A volume quality inhering in a degenerating cell by virtue of the bearer's exhibiting an increase in volume associated with cytoplasmic abnormalities.", false));
            TermData.Add(CVID.PATO_basophilic, new TermInfo(CVID.PATO_basophilic, @"PATO", @"PATO:0002094", @"basophilic", @"An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for basic dyes under specific ph conditions.", false));
            TermData.Add(CVID.PATO_obsolete_neoplasm_disposition_OBSOLETE, new TermInfo(CVID.PATO_obsolete_neoplasm_disposition_OBSOLETE, @"PATO", @"PATO:0002095", @"obsolete neoplasm disposition", @"A disposition inhering in a tumour to progress or fail to progress during it's life time.", true));
            TermData.Add(CVID.PATO_neoplastic__non_malignant, new TermInfo(CVID.PATO_neoplastic__non_malignant, @"PATO", @"PATO:0002096", @"neoplastic, non-malignant", @"A disposition inhering in a tumour by virtue of the bearer's disposition not to progress, invade surrounding tissues or metastasize.", false));
            TermData.Add(CVID.PATO_neoplastic__malignant, new TermInfo(CVID.PATO_neoplastic__malignant, @"PATO", @"PATO:0002097", @"neoplastic, malignant", @"A disposition inhering in a tumour by virtue of the bearer's disposition to progress, invade surrounding tissues or metastasize.", false));
            TermData.Add(CVID.PATO_neoplastic__metastatic, new TermInfo(CVID.PATO_neoplastic__metastatic, @"PATO", @"PATO:0002098", @"neoplastic, metastatic", @"A disposition inhering in a tumour by virtue of the bearer's disposition to spread and invade distant tissues.", false));
            TermData.Add(CVID.PATO_differentiated, new TermInfo(CVID.PATO_differentiated, @"PATO", @"PATO:0002099", @"differentiated", @"A cellular quality inhering in a bearer by virtue of its stable specialization to a particular cell type.", false));
            TermData.Add(CVID.PATO_undifferentiated, new TermInfo(CVID.PATO_undifferentiated, @"PATO", @"PATO:0002100", @"undifferentiated", @"A cellular quality inhering in a bearer by virtue of having not yet acquired a special structure of function.", false));
            TermData.Add(CVID.PATO_metaplastic, new TermInfo(CVID.PATO_metaplastic, @"PATO", @"PATO:0002101", @"metaplastic", @"A cellular quality inhering in a bearer by virtue of having changed from one fully differentiated state into another.", false));
            TermData.Add(CVID.PATO_proliferative, new TermInfo(CVID.PATO_proliferative, @"PATO", @"PATO:0002102", @"proliferative", @"A cellular quality inhering in a cell that arises by virtue of whether the bearer exhibits the ability to grow and proliferate in number through cell division.", false));
            TermData.Add(CVID.PATO_infiltrative, new TermInfo(CVID.PATO_infiltrative, @"PATO", @"PATO:0002103", @"infiltrative", @"A structural quality inhering in a bearer by virtue of the bearer's penetrating or permeating another substance or area.", false));
            TermData.Add(CVID.PATO_inflamed, new TermInfo(CVID.PATO_inflamed, @"PATO", @"PATO:0002104", @"inflamed", @"A compositional quality inhering in an bearer by virtue of the bearer's infiltration by leukocytes, local edema and accumulation of plasma proteins.", false));
            TermData.Add(CVID.PATO_hemorrhagic, new TermInfo(CVID.PATO_hemorrhagic, @"PATO", @"PATO:0002105", @"hemorrhagic", @"A structural quality inhering in a bearer by virtue of the bearer's exhibiting excessive discharge of blood from the blood vessels.", false));
            TermData.Add(CVID.PATO_poorly_differentiated, new TermInfo(CVID.PATO_poorly_differentiated, @"PATO", @"PATO:0002106", @"poorly differentiated", @"A cellular quality inhering in a bearer by virtue of its lacking most of the cellular characteristics which would allow it to be fully differentiated.", false));
            TermData.Add(CVID.PATO_peripheral, new TermInfo(CVID.PATO_peripheral, @"PATO", @"PATO:0002107", @"peripheral", @"A positional quality inhering in a bearer by virtue of the bearer's being at the edge or boundary of a related entity.", false));
            TermData.Add(CVID.PATO_papillary, new TermInfo(CVID.PATO_papillary, @"PATO", @"PATO:0002108", @"papillary", @"A quality inhering in a bearer by virtue of the bearer's resembling small nipple like projection.", false));
            TermData.Add(CVID.PATO_caseous, new TermInfo(CVID.PATO_caseous, @"PATO", @"PATO:0002109", @"caseous", @"A structural quality inhering in a bearer by virtue of the bearer's resembling cheese.", false));
            TermData.Add(CVID.PATO_well_differentiated, new TermInfo(CVID.PATO_well_differentiated, @"PATO", @"PATO:0002110", @"well differentiated", @"A cellular quality inhering in a bearer by virtue of its having most of the cellular characteristics of the tissue of origin.", false));
            TermData.Add(CVID.PATO_moderately_well_differentiated, new TermInfo(CVID.PATO_moderately_well_differentiated, @"PATO", @"PATO:0002111", @"moderately well differentiated", @"A cellular quality inhering in a bearer by virtue of its lacking few of the cellular characteristics which would allow it to be fully differentiated.", false));
            TermData.Add(CVID.PATO_perforate, new TermInfo(CVID.PATO_perforate, @"PATO", @"PATO:0002112", @"perforate", @"A structural quality inhering in a bearer by virtue of the bearer's having a hole or holes, especially a row or array of small holes.", false));
            TermData.Add(CVID.PATO_cribriform, new TermInfo(CVID.PATO_cribriform, @"PATO", @"PATO:0002113", @"cribriform", @"Perforated like a sieve.", false));
            TermData.Add(CVID.PATO_fatty, new TermInfo(CVID.PATO_fatty, @"PATO", @"PATO:0002114", @"fatty", @"A composition quality inhering in a bearer by virtue of the bearer's containing excess lipid.", false));
            TermData.Add(CVID.PATO_fibrinoid, new TermInfo(CVID.PATO_fibrinoid, @"PATO", @"PATO:0002115", @"fibrinoid", @"A composition quality inhering in a bearer by virtue of the bearer's containing fibrin.", false));
            TermData.Add(CVID.PATO_fibrinopurulent, new TermInfo(CVID.PATO_fibrinopurulent, @"PATO", @"PATO:0002116", @"fibrinopurulent", @"A composition quality inhering in exudate by virtue of the bearer's containing fibrin.", false));
            TermData.Add(CVID.PATO_glandular, new TermInfo(CVID.PATO_glandular, @"PATO", @"PATO:0002117", @"glandular", @"A morphology quality inhering in a bearer by virtue of the bearer's exhbiting the morphological characteristics of a gland.", false));
            TermData.Add(CVID.PATO_multiple, new TermInfo(CVID.PATO_multiple, @"PATO", @"PATO:0002118", @"multiple", @"A quality inhering in a bearer by virtue of the bearer's being present in more than two copies.", false));
            TermData.Add(CVID.PATO_hydropic, new TermInfo(CVID.PATO_hydropic, @"PATO", @"PATO:0002119", @"hydropic", @"A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of intracellular fluid.", false));
            TermData.Add(CVID.PATO_suppurative, new TermInfo(CVID.PATO_suppurative, @"PATO", @"PATO:0002120", @"suppurative", @"A quality inhering a bearer by virtue of the bearer's ability to generate pus.", false));
            TermData.Add(CVID.PATO_trabecular, new TermInfo(CVID.PATO_trabecular, @"PATO", @"PATO:0002121", @"trabecular", @"A spatial pattern inhering in a bearer by virtue of the bearer's structureresembling an irregular meshwork with cross-linking struts.", false));
            TermData.Add(CVID.PATO_mixed, new TermInfo(CVID.PATO_mixed, @"PATO", @"PATO:0002122", @"mixed", @"A composition quality inhering in a bearer by virtue of the bearer's being composed of more than one identifiable entities.", false));
            TermData.Add(CVID.PATO_minimal, new TermInfo(CVID.PATO_minimal, @"PATO", @"PATO:0002123", @"minimal", @"Being smallest in amount, extent or degree.", false));
            TermData.Add(CVID.PATO_laminar, new TermInfo(CVID.PATO_laminar, @"PATO", @"PATO:0002124", @"laminar", @"A quality inhering in a bearer by virtue of the bearer's processing the form of a thin plate sheet or layer.", false));
            TermData.Add(CVID.PATO_nodular, new TermInfo(CVID.PATO_nodular, @"PATO", @"PATO:0002125", @"nodular", @"A quality inhering in a bearer by virtue of the bearer's consisting a knot-like mass.", false));
            TermData.Add(CVID.PATO_osseous, new TermInfo(CVID.PATO_osseous, @"PATO", @"PATO:0002126", @"osseous", @"A quality inhering in a bearer by virtue of the bearer's containing bone.", false));
            TermData.Add(CVID.PATO_scirrhous, new TermInfo(CVID.PATO_scirrhous, @"PATO", @"PATO:0002127", @"scirrhous", @"A hardness quality of being rigid and resistant to pressure and fibrous.", false));
            TermData.Add(CVID.PATO_serous, new TermInfo(CVID.PATO_serous, @"PATO", @"PATO:0002128", @"serous", @"A quality inhering a bearer by virtue of the bearer's containing or resembling serum.", false));
            TermData.Add(CVID.PATO_neoplastic__invasive, new TermInfo(CVID.PATO_neoplastic__invasive, @"PATO", @"PATO:0002129", @"neoplastic, invasive", @"A disposition inhering in a tumour by virtue of the bearer's disposition to invade surrounding tissues.", false));
            TermData.Add(CVID.PATO_neoplastic__deeply_invasive, new TermInfo(CVID.PATO_neoplastic__deeply_invasive, @"PATO", @"PATO:0002130", @"neoplastic, deeply invasive", @"A disposition inhering in a tumour by virtue of the bearer's disposition to invade surrounding tissues to a large extend.", false));
            TermData.Add(CVID.PATO_abduction, new TermInfo(CVID.PATO_abduction, @"PATO", @"PATO:0002131", @"abduction", @"A displaced angular placement quality inhering in a body part by virtue of the bearer's movement away from the medial plane of the body.", false));
            TermData.Add(CVID.PATO_neoplastic__non_invasive, new TermInfo(CVID.PATO_neoplastic__non_invasive, @"PATO", @"PATO:0002132", @"neoplastic, non-invasive", @"A disposition inhering in a tumour by virtue of the bearer's disposition not to invade surrounding tissues.", false));
            TermData.Add(CVID.PATO_adduction, new TermInfo(CVID.PATO_adduction, @"PATO", @"PATO:0002133", @"adduction", @"A displaced angular placement quality inhering in a body part by virtue of the bearer's movement closer the medial plane of the body.", false));
            TermData.Add(CVID.PATO_fibrillary, new TermInfo(CVID.PATO_fibrillary, @"PATO", @"PATO:0002134", @"fibrillary", @"A composition quaity inhering in a bearer by virtue of the bearer's containing of or pertaining to fibrils, or nanoscale fibers.", false));
            TermData.Add(CVID.PATO_delayed_closure, new TermInfo(CVID.PATO_delayed_closure, @"PATO", @"PATO:0002135", @"delayed closure", @"A duration quality of a process inhering in a bearer by virtue of the bearer's delay to complete the closure of the opening of an anatomical entity.", false));
            TermData.Add(CVID.PATO_radiopacity, new TermInfo(CVID.PATO_radiopacity, @"PATO", @"PATO:0002136", @"radiopacity", @"A quality inhering in a bearer by virtue of the bearer's relative inability of electromagnetism to pass through a particular material, particularly X-rays.", false));
            TermData.Add(CVID.PATO_radiopaque, new TermInfo(CVID.PATO_radiopaque, @"PATO", @"PATO:0002137", @"radiopaque", @"A readiopacity quality inhering in a bearer by virtue of the bearer's prevention of the passage of electromagnetic radiation.", false));
            TermData.Add(CVID.PATO_edibility, new TermInfo(CVID.PATO_edibility, @"PATO", @"PATO:0002138", @"edibility", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to being fit to be eaten.", false));
            TermData.Add(CVID.PATO_edible, new TermInfo(CVID.PATO_edible, @"PATO", @"PATO:0002139", @"edible", @"A physical quality inhering in a bearer by virtue of the bearer being suitable for use as food.", false));
            TermData.Add(CVID.PATO_inedible, new TermInfo(CVID.PATO_inedible, @"PATO", @"PATO:0002140", @"inedible", @"A physical quality inhering in a bearer by virtue of the bearer not being suitable for use as food.", false));
            TermData.Add(CVID.PATO_irregular_density, new TermInfo(CVID.PATO_irregular_density, @"PATO", @"PATO:0002141", @"irregular density", @"A density quality which lacks pattern.", false));
            TermData.Add(CVID.PATO_bracket, new TermInfo(CVID.PATO_bracket, @"PATO", @"PATO:0002142", @"bracket", @"", false));
            TermData.Add(CVID.PATO_sloped_downward, new TermInfo(CVID.PATO_sloped_downward, @"PATO", @"PATO:0002143", @"sloped downward", @"", false));
            TermData.Add(CVID.PATO_increased_radiopacity, new TermInfo(CVID.PATO_increased_radiopacity, @"PATO", @"PATO:0002144", @"increased radiopacity", @"A radiopacity that is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_radiopacity, new TermInfo(CVID.PATO_decreased_radiopacity, @"PATO", @"PATO:0002145", @"decreased radiopacity", @"A radiopacity that is relatively low.", false));
            TermData.Add(CVID.PATO_virulence, new TermInfo(CVID.PATO_virulence, @"PATO", @"PATO:0002146", @"virulence", @"A quality inhering in a bearer by virtue of the severity of infectious disease caused by the bearer in a target organism.", false));
            TermData.Add(CVID.PATO_reduced_virulence, new TermInfo(CVID.PATO_reduced_virulence, @"PATO", @"PATO:0002147", @"reduced virulence", @"A virulence that is relatively low.", false));
            TermData.Add(CVID.PATO_increased_virulence, new TermInfo(CVID.PATO_increased_virulence, @"PATO", @"PATO:0002148", @"increased virulence", @"A virulence that is relatively high.", false));
            TermData.Add(CVID.PATO_ivory, new TermInfo(CVID.PATO_ivory, @"PATO", @"PATO:0002149", @"ivory", @"A quality inhering in a bearer by virtue of the bearer exhibiting increased density resulting in exhibiting increased degree of radiopacity (in X-rays).", false));
            TermData.Add(CVID.PATO_splayed_caudal, new TermInfo(CVID.PATO_splayed_caudal, @"PATO", @"PATO:0002150", @"splayed caudal", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the part of the body from which the tail arises.", false));
            TermData.Add(CVID.PATO_splayed_dorsal, new TermInfo(CVID.PATO_splayed_dorsal, @"PATO", @"PATO:0002151", @"splayed dorsal", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the back or upper surface of an organism.", false));
            TermData.Add(CVID.PATO_splayed_lateral, new TermInfo(CVID.PATO_splayed_lateral, @"PATO", @"PATO:0002152", @"splayed lateral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the side.", false));
            TermData.Add(CVID.PATO_splayed_rostral, new TermInfo(CVID.PATO_splayed_rostral, @"PATO", @"PATO:0002153", @"splayed rostral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards the front of an organism.", false));
            TermData.Add(CVID.PATO_splayed_ventral, new TermInfo(CVID.PATO_splayed_ventral, @"PATO", @"PATO:0002154", @"splayed ventral", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards the abdomen of an organism.", false));
            TermData.Add(CVID.PATO_medially_rotated, new TermInfo(CVID.PATO_medially_rotated, @"PATO", @"PATO:0002155", @"medially rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the middle of an organism.", false));
            TermData.Add(CVID.PATO_laterally_rotated, new TermInfo(CVID.PATO_laterally_rotated, @"PATO", @"PATO:0002156", @"laterally rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the side of an organism.", false));
            TermData.Add(CVID.PATO_partially_dislocated, new TermInfo(CVID.PATO_partially_dislocated, @"PATO", @"PATO:0002157", @"partially dislocated", @"A positional quality inhering in a bearer by virtue of the bearer's being slightly out of its usual or proper place, or position.", false));
            TermData.Add(CVID.PATO_bicornuate, new TermInfo(CVID.PATO_bicornuate, @"PATO", @"PATO:0002161", @"bicornuate", @"Having two horns or horn-shaped branches.", false));
            TermData.Add(CVID.PATO_high_arched, new TermInfo(CVID.PATO_high_arched, @"PATO", @"PATO:0002162", @"high-arched", @"A concave quality inhering in a bearer by virtue of the bearer's forming or resembling an arch of an increased apical height.", false));
            TermData.Add(CVID.PATO_herniated_into, new TermInfo(CVID.PATO_herniated_into, @"PATO", @"PATO:0002163", @"herniated into", @"A quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded through an abnormal opening in the wall that contains it into the surface or boundary of another entity.", false));
            TermData.Add(CVID.PATO_curved_medial, new TermInfo(CVID.PATO_curved_medial, @"PATO", @"PATO:0002164", @"curved medial", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the middle.", false));
            TermData.Add(CVID.PATO_drooping, new TermInfo(CVID.PATO_drooping, @"PATO", @"PATO:0002165", @"drooping", @"To bent or hang downwards.", false));
            TermData.Add(CVID.PATO_premature_closure, new TermInfo(CVID.PATO_premature_closure, @"PATO", @"PATO:0002166", @"premature closure", @"A duration quality of a process inhering in a bearer by virtue of the bearer's premature completion of the closure of the opening of an anatomical entity.", false));
            TermData.Add(CVID.PATO_herniated_out_of, new TermInfo(CVID.PATO_herniated_out_of, @"PATO", @"PATO:0002167", @"herniated out of", @"A protruding quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded out of the surface or boundary of another entity.", false));
            TermData.Add(CVID.PATO_displaced_to, new TermInfo(CVID.PATO_displaced_to, @"PATO", @"PATO:0002168", @"displaced to", @"An angular placement quality inhering in a bearer by virtue of the bearer being changed in position in relation to another entity.", false));
            TermData.Add(CVID.PATO_split_medially, new TermInfo(CVID.PATO_split_medially, @"PATO", @"PATO:0002169", @"split medially", @"A shape quality inhering in a bearer by virtue of the bearer's being split along the median axis.", false));
            TermData.Add(CVID.PATO_split_laterally, new TermInfo(CVID.PATO_split_laterally, @"PATO", @"PATO:0002170", @"split laterally", @"A shape quality inhering in a bearer by virtue of the bearer's being split asymmetrically on one side.", false));
            TermData.Add(CVID.PATO_split_bilaterally, new TermInfo(CVID.PATO_split_bilaterally, @"PATO", @"PATO:0002171", @"split bilaterally", @"A shape quality inhering in a bearer by virtue of the bearer's being split on two side.", false));
            TermData.Add(CVID.PATO_split_radially, new TermInfo(CVID.PATO_split_radially, @"PATO", @"PATO:0002172", @"split radially", @"A shape quality inhering in a bearer by virtue of the bearer's being split along the radial axis.", false));
            TermData.Add(CVID.PATO_misaligned_towards, new TermInfo(CVID.PATO_misaligned_towards, @"PATO", @"PATO:0002173", @"misaligned towards", @"An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning towards an additional entity.", false));
            TermData.Add(CVID.PATO_misaligned_away_from, new TermInfo(CVID.PATO_misaligned_away_from, @"PATO", @"PATO:0002174", @"misaligned away from", @"An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning away from an additional entity.", false));
            TermData.Add(CVID.PATO_deviation, new TermInfo(CVID.PATO_deviation, @"PATO", @"PATO:0002175", @"deviation", @"A spatial quality inhering in a bearer by virtue of the bearer's changed direction of position towards another entity.", false));
            TermData.Add(CVID.PATO_deviation_towards_the_lateral_side, new TermInfo(CVID.PATO_deviation_towards_the_lateral_side, @"PATO", @"PATO:0002176", @"deviation towards the lateral side", @"A deviation quality inhering in a bearer by virtue of the bearer's changed direction of position towards the side.", false));
            TermData.Add(CVID.PATO_deviation_towards_the_medial_side, new TermInfo(CVID.PATO_deviation_towards_the_medial_side, @"PATO", @"PATO:0002177", @"deviation towards the medial side", @"A deviation quality inhering in a bearer by virtue of the bearer's changed direction of position towards the middle.", false));
            TermData.Add(CVID.PATO_mislocalised_radially, new TermInfo(CVID.PATO_mislocalised_radially, @"PATO", @"PATO:0002178", @"mislocalised radially", @"A positional quality inhering in a bearer by virtue of the bearer's being out of its usual or proper place, or position around a central point or axis.", false));
            TermData.Add(CVID.PATO_mislocalised_proximally, new TermInfo(CVID.PATO_mislocalised_proximally, @"PATO", @"PATO:0002179", @"mislocalised proximally", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards to point of attachment or origin.", false));
            TermData.Add(CVID.PATO_straight, new TermInfo(CVID.PATO_straight, @"PATO", @"PATO:0002180", @"straight", @"A shape quality inhering in a bearer by virtue of the bearer's being free of curves, bends, or angles.", false));
            TermData.Add(CVID.PATO_displaced, new TermInfo(CVID.PATO_displaced, @"PATO", @"PATO:0002181", @"displaced", @"A positional quality inhering in a bearer by virtue the bearer's being changed in position.", false));
            TermData.Add(CVID.PATO_molecular_quality, new TermInfo(CVID.PATO_molecular_quality, @"PATO", @"PATO:0002182", @"molecular quality", @"A quality which inheres in a molecular entity, a single molecule, atom, ion, radical etc.", false));
            TermData.Add(CVID.PATO_cyclicity, new TermInfo(CVID.PATO_cyclicity, @"PATO", @"PATO:0002183", @"cyclicity", @"A molecular quality that inheres in a molecular entity by virtue of whether that there is a presence of cycles in the connection of the atoms within the molecular entity.", false));
            TermData.Add(CVID.PATO_cyclic_cyclicity, new TermInfo(CVID.PATO_cyclic_cyclicity, @"PATO", @"PATO:0002184", @"cyclic cyclicity", @"Cyclic cyclicity inheres in a molecule when the atoms of the molecule do contain at least one cycle in the atom-atom connection paths (through bonds).", false));
            TermData.Add(CVID.PATO_acyclic_cyclicity, new TermInfo(CVID.PATO_acyclic_cyclicity, @"PATO", @"PATO:0002185", @"acyclic cyclicity", @"Acyclic cyclicity inheres in a molecule when the atoms within the molecule do not contain at least one cycle in the atom-atom connection paths (through the bonds).", false));
            TermData.Add(CVID.PATO_polarity, new TermInfo(CVID.PATO_polarity, @"PATO", @"PATO:0002186", @"polarity", @"A molecular quality that inheres in a molecular entity by virtue of whether or not the molecular entity has a separation of electric charge which leads to the molecule having an electric dipole.", false));
            TermData.Add(CVID.PATO_polar_polarity, new TermInfo(CVID.PATO_polar_polarity, @"PATO", @"PATO:0002187", @"polar polarity", @"Polar polarity is a quality that inheres in a molecular entity when the molecular entity is polar, i.e. does possess an electric dipole.", false));
            TermData.Add(CVID.PATO_nonpolar_polarity, new TermInfo(CVID.PATO_nonpolar_polarity, @"PATO", @"PATO:0002188", @"nonpolar polarity", @"A molecular quality which inheres in a molecular entity when the molecular entity does not possess an electrical dipole.", false));
            TermData.Add(CVID.PATO_electric_polarizability, new TermInfo(CVID.PATO_electric_polarizability, @"PATO", @"PATO:0002189", @"electric polarizability", @"The ease of distortion of the electron cloud of a molecular entity by an electric field.", false));
            TermData.Add(CVID.PATO_aromaticity, new TermInfo(CVID.PATO_aromaticity, @"PATO", @"PATO:0002190", @"aromaticity", @"A molecular quality that inheres in a molecular entity by virtue of the presence of a conjugated ring of unsaturated bonds, lone pairs, or empty orbitals that exhibit a stabilization stronger than would be expected by the stabilization of conjugation alone.", false));
            TermData.Add(CVID.PATO_aromatic, new TermInfo(CVID.PATO_aromatic, @"PATO", @"PATO:0002191", @"aromatic", @"A molecular quality that inheres in a molecular entity when it possesses at least one ring that is aromatic, i.e. A conjugated ring of unsaturated bonds, lone pairs, or empty orbitals that exhibit a stabilization stronger than would be expected by the stabilization of conjugation alone.", false));
            TermData.Add(CVID.PATO_non_aromatic, new TermInfo(CVID.PATO_non_aromatic, @"PATO", @"PATO:0002192", @"non-aromatic", @"A quality that inheres in a molecular entity by virtue of the molecule possessing no rings that are aromatic.", false));
            TermData.Add(CVID.PATO_electric_charge, new TermInfo(CVID.PATO_electric_charge, @"PATO", @"PATO:0002193", @"electric charge", @"A molecular quality that inheres in a molecular entity by virtue of the overall electric charge of the molecule, which is due to a comparison between the total number of electrons and the total number of protons.", false));
            TermData.Add(CVID.PATO_neutral_charge, new TermInfo(CVID.PATO_neutral_charge, @"PATO", @"PATO:0002194", @"neutral charge", @"A quality which inheres in a molecular entity by virtue of the molecular entity possessing the same amount of electrons overall as protons, thus having an overall neutral charge.", false));
            TermData.Add(CVID.PATO_positive_charge, new TermInfo(CVID.PATO_positive_charge, @"PATO", @"PATO:0002195", @"positive charge", @"A quality which inheres in a molecular entity by virtue of the molecular entity possessing more protons overall than electrons, thus having an overall positive charge.", false));
            TermData.Add(CVID.PATO_negative_charge, new TermInfo(CVID.PATO_negative_charge, @"PATO", @"PATO:0002196", @"negative charge", @"A quality which inheres in a molecular entity by virtue of the molecular entity possessing more electrons overall than protons, thus having an overall negative charge.", false));
            TermData.Add(CVID.PATO_electronegativity, new TermInfo(CVID.PATO_electronegativity, @"PATO", @"PATO:0002197", @"electronegativity", @"A quality that describes the power of an atom to attract electrons to itself .", false));
            TermData.Add(CVID.PATO_quality_of_a_substance, new TermInfo(CVID.PATO_quality_of_a_substance, @"PATO", @"PATO:0002198", @"quality of a substance", @"A quality inhering in a bearer by virtue of its constitution.", false));
            TermData.Add(CVID.PATO_meltability, new TermInfo(CVID.PATO_meltability, @"PATO", @"PATO:0002199", @"meltability", @"A quality which inheres in a substance by virtue of the ease with which the substance can be changed from a solid to a liquid state especially by the application of heat.", false));
            TermData.Add(CVID.PATO_vaporizability, new TermInfo(CVID.PATO_vaporizability, @"PATO", @"PATO:0002200", @"vaporizability", @"A quality which inheres in a substance by virtue of the ease with which the substance can be changed into a gaseous state.", false));
            TermData.Add(CVID.PATO_handedness, new TermInfo(CVID.PATO_handedness, @"PATO", @"PATO:0002201", @"handedness", @"A behavioral quality inhering ina bearer by virtue of the bearer's unequal distribution of fine motor skill between its left and right hands or feet.", false));
            TermData.Add(CVID.PATO_left_handedness, new TermInfo(CVID.PATO_left_handedness, @"PATO", @"PATO:0002202", @"left handedness", @"Handedness where the organism preferentially uses the left hand or foot for tasks requiring the use of a single hand or foot or a dominant hand or foot.", false));
            TermData.Add(CVID.PATO_right_handedness, new TermInfo(CVID.PATO_right_handedness, @"PATO", @"PATO:0002203", @"right handedness", @"Handedness where the organism preferentially uses the right hand or foot for tasks requiring the use of a single hand or foot or a dominant hand or foot.", false));
            TermData.Add(CVID.PATO_ambidextrous_handedness, new TermInfo(CVID.PATO_ambidextrous_handedness, @"PATO", @"PATO:0002204", @"ambidextrous handedness", @"Handedness where the organism exhibits no overall dominance in the use of right or left hand or foot in the performance of tasks that require one hand or foot or a dominant hand or foot.", false));
            TermData.Add(CVID.PATO_capacitance, new TermInfo(CVID.PATO_capacitance, @"PATO", @"PATO:0002205", @"capacitance", @"A quality inhering in a bearer by virtue of the bearer's ability to hold an electrical charge.", false));
            TermData.Add(CVID.PATO_neonatal, new TermInfo(CVID.PATO_neonatal, @"PATO", @"PATO:0002206", @"neonatal", @"A maturity quality inhering to a bearer by virtue of the bearer's being at the point or short after birth.", false));
            TermData.Add(CVID.PATO_insertion_depth, new TermInfo(CVID.PATO_insertion_depth, @"PATO", @"PATO:0002207", @"insertion depth", @"A quality that is the distance between the end of the inserted object and the surface of the object into which it penetrates.", false));
            TermData.Add(CVID.PATO_spoon_shaped, new TermInfo(CVID.PATO_spoon_shaped, @"PATO", @"PATO:0002208", @"spoon-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of a spoon.", false));
            TermData.Add(CVID.PATO_incisiform, new TermInfo(CVID.PATO_incisiform, @"PATO", @"PATO:0002209", @"incisiform", @"A shape quality inhering in a bearer by virtue of the bearer's having the shape of an incisor tooth.", false));
            TermData.Add(CVID.PATO_bulbous, new TermInfo(CVID.PATO_bulbous, @"PATO", @"PATO:0002210", @"bulbous", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a teardrop.", false));
            TermData.Add(CVID.PATO_recurved, new TermInfo(CVID.PATO_recurved, @"PATO", @"PATO:0002211", @"recurved", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved backward or inward.", false));
            TermData.Add(CVID.PATO_slender, new TermInfo(CVID.PATO_slender, @"PATO", @"PATO:0002212", @"slender", @"A shape quality inhering in a bearer by virtue of the bearer's being small or narrow in circumference or width in proportion to length or height.", false));
            TermData.Add(CVID.PATO_obclavate, new TermInfo(CVID.PATO_obclavate, @"PATO", @"PATO:0002213", @"obclavate", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape being inversely clavate.", false));
            TermData.Add(CVID.PATO_bilobed, new TermInfo(CVID.PATO_bilobed, @"PATO", @"PATO:0002214", @"bilobed", @"A lobed quality inhering in a bearer by virtue of the bearer's being divided into or having two lobes.", false));
            TermData.Add(CVID.PATO_falciform, new TermInfo(CVID.PATO_falciform, @"PATO", @"PATO:0002215", @"falciform", @"A shape quality inhering in a bearer by virtue of the bearer's having the shape of a scythe or sickle.", false));
            TermData.Add(CVID.PATO_ubiquinated, new TermInfo(CVID.PATO_ubiquinated, @"PATO", @"PATO:0002216", @"ubiquinated", @"A molecular quality that pertains to the post-translational modification of a protein by the covalent attachment of one or more ubiquitin monomer.", false));
            TermData.Add(CVID.PATO_nitrated, new TermInfo(CVID.PATO_nitrated, @"PATO", @"PATO:0002217", @"nitrated", @"A molecular quality inhering in a bearer by virtue of the bearer's being combined, or impregnated, with nitric acid, or some of its compounds.", false));
            TermData.Add(CVID.PATO_demyelinated, new TermInfo(CVID.PATO_demyelinated, @"PATO", @"PATO:0002218", @"demyelinated", @"A quality inhering in a bearer by virtue of the bearer's loss of myelin sheath.", false));
            TermData.Add(CVID.PATO_fan_shaped, new TermInfo(CVID.PATO_fan_shaped, @"PATO", @"PATO:0002219", @"fan-shaped", @"A quality inhering in a bearer that is shaped in the form of a fan.", false));
            TermData.Add(CVID.PATO_phosphorylated, new TermInfo(CVID.PATO_phosphorylated, @"PATO", @"PATO:0002220", @"phosphorylated", @"A quality inhering in a protein or a molecule by virtue of the bearer's having a phosphate (PO4) group.", false));
            TermData.Add(CVID.PATO_increased_phosphorylation, new TermInfo(CVID.PATO_increased_phosphorylation, @"PATO", @"PATO:0002221", @"increased phosphorylation", @"A quality inhering in a bearer by virtue of the bearer's being phosphorylated to a more than normal extent, or fully saturated with phosphate groups.", false));
            TermData.Add(CVID.PATO_decreased_phosphorylation, new TermInfo(CVID.PATO_decreased_phosphorylation, @"PATO", @"PATO:0002222", @"decreased phosphorylation", @"A quality inhering in a bearer by virtue of the bearer's being phosphorylated to a lesser than normal extent, or less than fully.", false));
            TermData.Add(CVID.PATO_oxidized, new TermInfo(CVID.PATO_oxidized, @"PATO", @"PATO:0002223", @"oxidized", @"A quality inhering in a bearer by virtue of the bearer's having reacted with oxygen, or been modified by oxidation (the reaction in which the atoms of an element lose electrons and the valence of the element increases).", false));
            TermData.Add(CVID.PATO_V_shaped, new TermInfo(CVID.PATO_V_shaped, @"PATO", @"PATO:0002224", @"V-shaped", @"An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of the letter V.", false));
            TermData.Add(CVID.PATO_L_shaped, new TermInfo(CVID.PATO_L_shaped, @"PATO", @"PATO:0002225", @"L-shaped", @"An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of the letter L.", false));
            TermData.Add(CVID.PATO_subcylindrical, new TermInfo(CVID.PATO_subcylindrical, @"PATO", @"PATO:0002226", @"subcylindrical", @"A cylindrical shape quality inhering in a bearer by virtue of the bearer's being imperfectly cylindrical or approximately cylindrical.", false));
            TermData.Add(CVID.PATO_cup_shaped, new TermInfo(CVID.PATO_cup_shaped, @"PATO", @"PATO:0002227", @"cup-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape form resembling the shape of a cup.", false));
            TermData.Add(CVID.PATO_acuminate, new TermInfo(CVID.PATO_acuminate, @"PATO", @"PATO:0002228", @"acuminate", @"A tapered shape quality inhering in a bearer by virtue of the bearer's tapering gradually to a sharp point.", false));
            TermData.Add(CVID.PATO_subrectangular, new TermInfo(CVID.PATO_subrectangular, @"PATO", @"PATO:0002229", @"subrectangular", @"A quadrangular shape quality inhering in a bearer by virtue of the bearer's being approximately rectangular.", false));
            TermData.Add(CVID.PATO_subtriangular, new TermInfo(CVID.PATO_subtriangular, @"PATO", @"PATO:0002230", @"subtriangular", @"A triangular shape quality inhering in a bearer by virtue of the bearer's being nearly, but not perfectly, triangular.", false));
            TermData.Add(CVID.PATO_multifid, new TermInfo(CVID.PATO_multifid, @"PATO", @"PATO:0002231", @"multifid", @"A split shape quality inhering in a bearer by virtue of the bearer's having or being divided into many lobes or similar segments.", false));
            TermData.Add(CVID.PATO_semicircular, new TermInfo(CVID.PATO_semicircular, @"PATO", @"PATO:0002232", @"semicircular", @"A 2-D shape quality inhering in a bearer by virtue of the bearer's having shape or form of half a circle.", false));
            TermData.Add(CVID.PATO_far_from, new TermInfo(CVID.PATO_far_from, @"PATO", @"PATO:0002233", @"far from", @"A spatial quality inhering in a bearer by virtue of the bearer's being located far (not close to) in space in relation to another entity.", false));
            TermData.Add(CVID.PATO_emarginate, new TermInfo(CVID.PATO_emarginate, @"PATO", @"PATO:0002234", @"emarginate", @"A notched shape quality inhering in a bearer by virtue of the bearer's having a notched tip or edge.", false));
            TermData.Add(CVID.PATO_blade_like, new TermInfo(CVID.PATO_blade_like, @"PATO", @"PATO:0002235", @"blade-like", @"A tapered shape quality inhering in a bearer by virtue of the bearer's being flat, slender, and tapering to a point.", false));
            TermData.Add(CVID.PATO_aliform, new TermInfo(CVID.PATO_aliform, @"PATO", @"PATO:0002236", @"aliform", @"Shape quality inhering in a bearer by virtue of the bearer's being shaped like a wing.", false));
            TermData.Add(CVID.PATO_retrorse, new TermInfo(CVID.PATO_retrorse, @"PATO", @"PATO:0002237", @"retrorse", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved backward or downward.", false));
            TermData.Add(CVID.PATO_antrorse, new TermInfo(CVID.PATO_antrorse, @"PATO", @"PATO:0002238", @"antrorse", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved forward or upward.", false));
            TermData.Add(CVID.PATO_hourglass_shaped, new TermInfo(CVID.PATO_hourglass_shaped, @"PATO", @"PATO:0002239", @"hourglass-shaped", @"A concave 3-D shape that inheres in the bearer by virtue of the bearer's nearly) symmetric shape wide at its ends and narrow in the middle, resembling the figure of number 8.", false));
            TermData.Add(CVID.PATO_teardrop_shaped, new TermInfo(CVID.PATO_teardrop_shaped, @"PATO", @"PATO:0002240", @"teardrop-shaped", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's shape resembling falling drop.", false));
            TermData.Add(CVID.PATO_trilobed, new TermInfo(CVID.PATO_trilobed, @"PATO", @"PATO:0002241", @"trilobed", @"A lobed quality inhering in a bearer by virtue of the bearer's being divided into or having three lobes.", false));
            TermData.Add(CVID.PATO_velocity, new TermInfo(CVID.PATO_velocity, @"PATO", @"PATO:0002242", @"velocity", @"A physical quality inhering in a bearer by virtue of the bearer's rate of change of the position.", false));
            TermData.Add(CVID.PATO_fluid_flow_rate, new TermInfo(CVID.PATO_fluid_flow_rate, @"PATO", @"PATO:0002243", @"fluid flow rate", @"A physical quality inhering in a fluid (liquid or gas) by virtue of the amount of fluid which passes through a given surface per unit time.", false));
            TermData.Add(CVID.PATO_mass_flow_rate, new TermInfo(CVID.PATO_mass_flow_rate, @"PATO", @"PATO:0002244", @"mass flow rate", @"A flow rate quality inhering in a substance by virtue of the mass of substance which passes through a given surface per unit time.", false));
            TermData.Add(CVID.PATO_increased_force, new TermInfo(CVID.PATO_increased_force, @"PATO", @"PATO:0002245", @"increased force", @"A force which relative high.", false));
            TermData.Add(CVID.PATO_decreased_force, new TermInfo(CVID.PATO_decreased_force, @"PATO", @"PATO:0002246", @"decreased force", @"A force which is relative low.", false));
            TermData.Add(CVID.PATO_degree_of_pigmentation, new TermInfo(CVID.PATO_degree_of_pigmentation, @"PATO", @"PATO:0002247", @"degree of pigmentation", @"A quality inhering in a bearer by virtue of the bearer's having or lacking of substances produced by living organisms that have a color resulting from selective color absorption.", false));
            TermData.Add(CVID.PATO_pigmented, new TermInfo(CVID.PATO_pigmented, @"PATO", @"PATO:0002248", @"pigmented", @"A degree of pigmentation quality inhering in a bearer by virtue of the bearer's having substances produced by living organisms that have a color resulting from selective color absorption.", false));
            TermData.Add(CVID.PATO_unpigmented, new TermInfo(CVID.PATO_unpigmented, @"PATO", @"PATO:0002249", @"unpigmented", @"A degree of pigmentation quality inhering in a bearer by virtue of the bearer's lacking substances produced by living organisms that have a color resulting from selective color absorption.", false));
            TermData.Add(CVID.PATO_increased_pigmentation, new TermInfo(CVID.PATO_increased_pigmentation, @"PATO", @"PATO:0002250", @"increased pigmentation", @"A degree of pigmentation quality that is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_pigmentation, new TermInfo(CVID.PATO_decreased_pigmentation, @"PATO", @"PATO:0002251", @"decreased pigmentation", @"A degree of pigmentation quality that is relative low.", false));
            TermData.Add(CVID.PATO_antero_posteriorly_flattened, new TermInfo(CVID.PATO_antero_posteriorly_flattened, @"PATO", @"PATO:0002252", @"antero-posteriorly flattened", @"A quality inhering in a bearer by virtue of the bearer's being flattened along the antero-posterior axis.", false));
            TermData.Add(CVID.PATO_platelike, new TermInfo(CVID.PATO_platelike, @"PATO", @"PATO:0002253", @"platelike", @"A quality inhering in a bearer by virtue of the bearer's being roundish, flattish shape, possibly with a slightly angled edge.", false));
            TermData.Add(CVID.PATO_flattened, new TermInfo(CVID.PATO_flattened, @"PATO", @"PATO:0002254", @"flattened", @"A quality inhering in a bearer by virtue of the bearer's surface becoming more extended in a plane.", false));
            TermData.Add(CVID.PATO_grooved, new TermInfo(CVID.PATO_grooved, @"PATO", @"PATO:0002255", @"grooved", @"Texture quality inhering in a bearer by virtue of the bearer's being marked with one or more channels.", false));
            TermData.Add(CVID.PATO_tricuspidate, new TermInfo(CVID.PATO_tricuspidate, @"PATO", @"PATO:0002256", @"tricuspidate", @"A cuscpidate quality inhering in a bearer by virtue of the bearer possessing three cusps.", false));
            TermData.Add(CVID.PATO_multicuspidate, new TermInfo(CVID.PATO_multicuspidate, @"PATO", @"PATO:0002257", @"multicuspidate", @"A cuscpidate quality inhering in a bearer by virtue of the bearer possessing more than one cusp.", false));
            TermData.Add(CVID.PATO_pointed, new TermInfo(CVID.PATO_pointed, @"PATO", @"PATO:0002258", @"pointed", @"A shape quality inhering in a bearer by virtue of the bearer's having a point.", false));
            TermData.Add(CVID.PATO_adjacent_to, new TermInfo(CVID.PATO_adjacent_to, @"PATO", @"PATO:0002259", @"adjacent to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located near in space in relation to another entity.", false));
            TermData.Add(CVID.PATO_semi_erect, new TermInfo(CVID.PATO_semi_erect, @"PATO", @"PATO:0002260", @"semi erect", @"A quality inhering in a bearer by virtue of the bearer's being partially upright in position or posture.", false));
            TermData.Add(CVID.PATO_located_in, new TermInfo(CVID.PATO_located_in, @"PATO", @"PATO:0002261", @"located in", @"A spatial quality inhering in a bearer by virtue of the bearer's location within another entity.", false));
            TermData.Add(CVID.PATO_phosphorylation, new TermInfo(CVID.PATO_phosphorylation, @"PATO", @"PATO:0002262", @"phosphorylation", @"A quality inhering in a protein or a molecule by virtue of the addition of a phosphate (PO4) group to the bearer.", false));
            TermData.Add(CVID.PATO_dephosphorylated, new TermInfo(CVID.PATO_dephosphorylated, @"PATO", @"PATO:0002263", @"dephosphorylated", @"A quality inhering in a protein or a molecule by virtue of the bearer's lacking a phosphate (PO4) group.", false));
            TermData.Add(CVID.PATO_organization_quality, new TermInfo(CVID.PATO_organization_quality, @"PATO", @"PATO:0002264", @"organization quality", @"A structural quality inhering in a bearer by virtue of the bearer's being arranged in a systematic fashion.", false));
            TermData.Add(CVID.PATO_behavioural_activity, new TermInfo(CVID.PATO_behavioural_activity, @"PATO", @"PATO:0002265", @"behavioural activity", @"A behavioral quality of a process inhering in a bearer by virtue of the bearer's disposition to exhibit marked activity.", false));
            TermData.Add(CVID.PATO_3_D_shape, new TermInfo(CVID.PATO_3_D_shape, @"PATO", @"PATO:0002266", @"3-D shape", @"A shape that inheres in a 3 dimensional entity.", false));
            TermData.Add(CVID.PATO_edge_shape, new TermInfo(CVID.PATO_edge_shape, @"PATO", @"PATO:0002267", @"edge shape", @"", false));
            TermData.Add(CVID.PATO_centered, new TermInfo(CVID.PATO_centered, @"PATO", @"PATO:0002268", @"centered", @"A positional quality inhering in a bearer by virtue of the bearer's being located in a position equidistant from edges.", false));
            TermData.Add(CVID.PATO_accumulation, new TermInfo(CVID.PATO_accumulation, @"PATO", @"PATO:0002269", @"accumulation", @"A structural quality of the collection or massing of one physical object within another physical object.", false));
            TermData.Add(CVID.PATO_increased_accumulation, new TermInfo(CVID.PATO_increased_accumulation, @"PATO", @"PATO:0002270", @"increased accumulation", @"An increased number of physical objects that are accumulated within another physical object usually as a result of a failure to break down or remove objects in a timely manner.", false));
            TermData.Add(CVID.PATO_decreased_accumulation, new TermInfo(CVID.PATO_decreased_accumulation, @"PATO", @"PATO:0002271", @"decreased accumulation", @"An accumulation which is relative low.", false));
            TermData.Add(CVID.PATO_parallel_to, new TermInfo(CVID.PATO_parallel_to, @"PATO", @"PATO:0002272", @"parallel to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located at the same continuous distance relative to another object.", false));
            TermData.Add(CVID.PATO_marbled, new TermInfo(CVID.PATO_marbled, @"PATO", @"PATO:0002273", @"marbled", @"Multicolored quality inhering in a bearer by virtue of the bearer's being colored with a variegated pattern resembling marble,.", false));
            TermData.Add(CVID.PATO_mottled, new TermInfo(CVID.PATO_mottled, @"PATO", @"PATO:0002274", @"mottled", @"Multicolored quality inhering in a bearer by virtue of the bearer's being dappled with spots, patches, or blotches of different colors.", false));
            TermData.Add(CVID.PATO_high_contrast_color_pattern, new TermInfo(CVID.PATO_high_contrast_color_pattern, @"PATO", @"PATO:0002275", @"high contrast color pattern", @"A color pattern quality inhering in a bearer by virtue of the bearer's color pattern in which light and dark colors (for example white and black) are codistributed to create a visual impression.", false));
            TermData.Add(CVID.PATO_barred, new TermInfo(CVID.PATO_barred, @"PATO", @"PATO:0002276", @"barred", @"A color pattern inhering in a bearer by virtue of bearer's exhibiting vertical bars of one hue or degree of saturation crossing another.", false));
            TermData.Add(CVID.PATO_iridescent, new TermInfo(CVID.PATO_iridescent, @"PATO", @"PATO:0002277", @"iridescent", @"A quality of certain surfaces which appear to change colour as the angle of view changes.", false));
            TermData.Add(CVID.PATO_articulated_with, new TermInfo(CVID.PATO_articulated_with, @"PATO", @"PATO:0002278", @"articulated with", @"A structural quality inhering in a bearer by virtue of the bearer's participating in a joint with another entity.", false));
            TermData.Add(CVID.PATO_tightly_articulated_with, new TermInfo(CVID.PATO_tightly_articulated_with, @"PATO", @"PATO:0002279", @"tightly articulated with", @"A structural quality inhering in a bearer by virtue of the bearer's being strongly articulated with another entity.", false));
            TermData.Add(CVID.PATO_broadly_articulated_with, new TermInfo(CVID.PATO_broadly_articulated_with, @"PATO", @"PATO:0002280", @"broadly articulated with", @"A structural quality inhering in a bearer by virtue of the bearer's possessing a broad surface in articulation with another entity.", false));
            TermData.Add(CVID.PATO_biscupidate, new TermInfo(CVID.PATO_biscupidate, @"PATO", @"PATO:0002281", @"biscupidate", @"A cuscpidate quality inhering in a bearer by virtue of the bearer possessing two cusps.", false));
            TermData.Add(CVID.PATO_increased_mobility, new TermInfo(CVID.PATO_increased_mobility, @"PATO", @"PATO:0002282", @"increased mobility", @"A mobility which is relative high.", false));
            TermData.Add(CVID.PATO_decreased_mobility, new TermInfo(CVID.PATO_decreased_mobility, @"PATO", @"PATO:0002283", @"decreased mobility", @"A mobility which is relative low.", false));
            TermData.Add(CVID.PATO_tension, new TermInfo(CVID.PATO_tension, @"PATO", @"PATO:0002284", @"tension", @"A physical quality that pertains by virtue of a pulling force that is directed away from the bearer and attempts to stretch or elongate the bearer.", false));
            TermData.Add(CVID.PATO_increased_branchiness, new TermInfo(CVID.PATO_increased_branchiness, @"PATO", @"PATO:0002285", @"increased branchiness", @"Branchiness quality inhering in a bearer by virtue of increasing the degree to which there are subdivisions or offshoots in a bearer entity.", false));
            TermData.Add(CVID.PATO_decreased_branchiness, new TermInfo(CVID.PATO_decreased_branchiness, @"PATO", @"PATO:0002286", @"decreased branchiness", @"Branchiness quality inhering in a bearer by virtue of decreasing the degree to which there are subdivisions or offshoots in a bearer entity.", false));
            TermData.Add(CVID.PATO_increased_elasticity, new TermInfo(CVID.PATO_increased_elasticity, @"PATO", @"PATO:0002287", @"increased elasticity", @"An elasticity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_elasticity, new TermInfo(CVID.PATO_decreased_elasticity, @"PATO", @"PATO:0002288", @"decreased elasticity", @"An elasticity which is relatively low.", false));
            TermData.Add(CVID.PATO_setose, new TermInfo(CVID.PATO_setose, @"PATO", @"PATO:0002289", @"setose", @"A hairy quality inhering in a bearer by virtue of the bearer's being covered with setae.", false));
            TermData.Add(CVID.PATO_aplastic_hypoplastic, new TermInfo(CVID.PATO_aplastic_hypoplastic, @"PATO", @"PATO:0002290", @"aplastic/hypoplastic", @"", false));
            TermData.Add(CVID.PATO_agenesis, new TermInfo(CVID.PATO_agenesis, @"PATO", @"PATO:0002291", @"agenesis", @"Absence of a tissue or organ due to failure to develop.", false));
            TermData.Add(CVID.PATO_transient, new TermInfo(CVID.PATO_transient, @"PATO", @"PATO:0002292", @"transient", @"A structural quality inhering in a bearer by virtue of the bearer's underlying structure being capable of change.", false));
            TermData.Add(CVID.PATO_permanent, new TermInfo(CVID.PATO_permanent, @"PATO", @"PATO:0002293", @"permanent", @"A structural quality inhering in a bearer by virtue of the bearer's underlying structure not changing over time.", false));
            TermData.Add(CVID.PATO_scrobiculate, new TermInfo(CVID.PATO_scrobiculate, @"PATO", @"PATO:0002294", @"scrobiculate", @"A texture that is uniformly covered in short, oblong, or trench-like depressions.", false));
            TermData.Add(CVID.PATO_areolate, new TermInfo(CVID.PATO_areolate, @"PATO", @"PATO:0002295", @"areolate", @"A surface feature shape inhering in a surface by virtue of the bearer's being divided by ridge-like structures into a number of small, irregular spaces.", false));
            TermData.Add(CVID.PATO_foveate, new TermInfo(CVID.PATO_foveate, @"PATO", @"PATO:0002296", @"foveate", @"A texture quality inhering in a surface by virtue of the bearer's being marked by the presence of small, shallow, regular depressions called fovae.", false));
            TermData.Add(CVID.PATO_decreased_cellular_motility, new TermInfo(CVID.PATO_decreased_cellular_motility, @"PATO", @"PATO:0002297", @"decreased cellular motility", @"A cellular motility which is lower relative to the normal or average.", false));
            TermData.Add(CVID.PATO_increased_cellular_motility, new TermInfo(CVID.PATO_increased_cellular_motility, @"PATO", @"PATO:0002298", @"increased cellular motility", @"A cellular motility which is higher relative to the normal or average.", false));
            TermData.Add(CVID.PATO_tubular, new TermInfo(CVID.PATO_tubular, @"PATO", @"PATO:0002299", @"tubular", @"A cylindrical shape that is hollow.", false));
            TermData.Add(CVID.PATO_increased_quality, new TermInfo(CVID.PATO_increased_quality, @"PATO", @"PATO:0002300", @"increased quality", @"A quality that has a value that is increased compared to normal or average.", false));
            TermData.Add(CVID.PATO_decreased_quality, new TermInfo(CVID.PATO_decreased_quality, @"PATO", @"PATO:0002301", @"decreased quality", @"A quality that has a value that is decreased compared to normal or average.", false));
            TermData.Add(CVID.PATO_decreased_process_quality, new TermInfo(CVID.PATO_decreased_process_quality, @"PATO", @"PATO:0002302", @"decreased process quality", @"A quality of a process that has a value that is decreased compared to normal or average.", false));
            TermData.Add(CVID.PATO_decreased_object_quality, new TermInfo(CVID.PATO_decreased_object_quality, @"PATO", @"PATO:0002303", @"decreased object quality", @"A quality of an object that has a value that is decreased compared to normal or average.", false));
            TermData.Add(CVID.PATO_increased_process_quality, new TermInfo(CVID.PATO_increased_process_quality, @"PATO", @"PATO:0002304", @"increased process quality", @"A quality of a process that has a value that is increased compared to normal or average.", false));
            TermData.Add(CVID.PATO_increased_object_quality, new TermInfo(CVID.PATO_increased_object_quality, @"PATO", @"PATO:0002305", @"increased object quality", @"A quality of an object that has a value that is increased compared to normal or average.", false));
            TermData.Add(CVID.PATO_equilateral_triangular, new TermInfo(CVID.PATO_equilateral_triangular, @"PATO", @"PATO:0002306", @"equilateral triangular", @"A triangular quality inhering in a bearer by virtue of the bearer's having all sides of the same length.", false));
            TermData.Add(CVID.PATO_isosceles_triangular, new TermInfo(CVID.PATO_isosceles_triangular, @"PATO", @"PATO:0002307", @"isosceles triangular", @"A triangular quality inhering in a bearer by virtue of the bearer's having two sides have the same length.", false));
            TermData.Add(CVID.PATO_scalene_triangular, new TermInfo(CVID.PATO_scalene_triangular, @"PATO", @"PATO:0002308", @"scalene triangular", @"A triangular quality inhering in a bearer by virtue of the bearer's having all sides of unequal length.", false));
            TermData.Add(CVID.PATO_fiber_shaped, new TermInfo(CVID.PATO_fiber_shaped, @"PATO", @"PATO:0002309", @"fiber shaped", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's exhibiting a by virtue of the bearer's exhibiting a consistently sized and approximately round cross-section along its length, which is many times larger than its diameter.", false));
            TermData.Add(CVID.PATO_robust, new TermInfo(CVID.PATO_robust, @"PATO", @"PATO:0002310", @"robust", @"A quality inhering in a bearer by virtue of the bearer's being strong, thick or sturdy.", false));
            TermData.Add(CVID.PATO_fimbriated, new TermInfo(CVID.PATO_fimbriated, @"PATO", @"PATO:0002311", @"fimbriated", @"Having a fringe or border of hairlike or fingerlike projections.", false));
            TermData.Add(CVID.PATO_segmented, new TermInfo(CVID.PATO_segmented, @"PATO", @"PATO:0002312", @"segmented", @"Consisting of segments or similar parts arranged in a longitudinal series.", false));
            TermData.Add(CVID.PATO_telescopic, new TermInfo(CVID.PATO_telescopic, @"PATO", @"PATO:0002313", @"telescopic", @"Having or resembling the shape of a telescope.", false));
            TermData.Add(CVID.PATO_ligamentous, new TermInfo(CVID.PATO_ligamentous, @"PATO", @"PATO:0002314", @"ligamentous", @"Having the nature or characteristic of, a ligament; composed of the tissue proper to ligaments.", false));
            TermData.Add(CVID.PATO_brush_like_shape, new TermInfo(CVID.PATO_brush_like_shape, @"PATO", @"PATO:0002315", @"brush-like shape", @"A shape quality inhering in a bearer by virtue of the bearer's resembling the end of a brush with a multitude of bristles.", false));
            TermData.Add(CVID.PATO_autogenous, new TermInfo(CVID.PATO_autogenous, @"PATO", @"PATO:0002316", @"autogenous", @"Being separate or discrete from other skeletal elements.", false));
            TermData.Add(CVID.PATO_parallelogram, new TermInfo(CVID.PATO_parallelogram, @"PATO", @"PATO:0002317", @"parallelogram", @"A convex quadrilateral is a parallelogram if and only if any one of the following statements are true:\n1. Each diagonal divides the quadrilateral into two congruent triangles with the same orientation.\n2. The opposite sides are congruent in pairs.\n3. The diagonals bisect each other.\n4. The opposite angles are congruent in pairs.\n5. The sum of the squares of the sides equals the sum of the squares of the diagonals. (This is the parallelogram law)\n6.It possesses rotational symmetry.\n7.One pair of opposite sides are parallel and congruent.\n8.Two pairs of adjacent angles are supplementary.", false));
            TermData.Add(CVID.PATO_superelliptic, new TermInfo(CVID.PATO_superelliptic, @"PATO", @"PATO:0002318", @"superelliptic", @"A shape constituting a transition between a rectangle and a circle; a closed curve, of which the circle and ellipse are special cases, whose parametric equation is x = a.cos2/rt, y = b.cos2/rt", false));
            TermData.Add(CVID.PATO_squircle, new TermInfo(CVID.PATO_squircle, @"PATO", @"PATO:0002319", @"squircle", @"A shape with properties between those of a square and those of a circle.", false));
            TermData.Add(CVID.PATO_diamond_shaped, new TermInfo(CVID.PATO_diamond_shaped, @"PATO", @"PATO:0002320", @"diamond shaped", @"A superelptic shape inhering in a bearer by virtue of the bearer's shape resembling a diamond.", false));
            TermData.Add(CVID.PATO_hypoelliptic, new TermInfo(CVID.PATO_hypoelliptic, @"PATO", @"PATO:0002321", @"hypoelliptic", @"", false));
            TermData.Add(CVID.PATO_hyperelliptic, new TermInfo(CVID.PATO_hyperelliptic, @"PATO", @"PATO:0002322", @"hyperelliptic", @"", false));
            TermData.Add(CVID.PATO_temporal_distribution_quality, new TermInfo(CVID.PATO_temporal_distribution_quality, @"PATO", @"PATO:0002323", @"temporal distribution quality", @"A temporal distribution pattern of process occurrences within a regulation/reference process.", false));
            TermData.Add(CVID.PATO_offset_quality, new TermInfo(CVID.PATO_offset_quality, @"PATO", @"PATO:0002324", @"offset quality", @"The temporal relation between the end of the process with respect to a reference process.", false));
            TermData.Add(CVID.PATO_onset_quality, new TermInfo(CVID.PATO_onset_quality, @"PATO", @"PATO:0002325", @"onset quality", @"The temporal relation between the start of the process with respect to a reference process.", false));
            TermData.Add(CVID.PATO_angle, new TermInfo(CVID.PATO_angle, @"PATO", @"PATO:0002326", @"angle", @"An orientation inhering in a bearer by virtue of the bearer's placement at an angle.", false));
            TermData.Add(CVID.PATO_increased_angle_to, new TermInfo(CVID.PATO_increased_angle_to, @"PATO", @"PATO:0002327", @"increased angle to", @"An angle which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_angle_to, new TermInfo(CVID.PATO_decreased_angle_to, @"PATO", @"PATO:0002328", @"decreased angle to", @"An angle which is relatively low.", false));
            TermData.Add(CVID.PATO_hyponastic, new TermInfo(CVID.PATO_hyponastic, @"PATO", @"PATO:0002329", @"hyponastic", @"A shape quality inhering in a bearer by virtue of the bearer's exhibiting a upward bending of its leaves or other plant parts.", false));
            TermData.Add(CVID.PATO_oblanceolate, new TermInfo(CVID.PATO_oblanceolate, @"PATO", @"PATO:0002330", @"oblanceolate", @"A quality inhering in a bearer by virtue of the bearer's being extended along a straight line, and is shaped like a reversed lance-point, with the tapering point attached to the leafstalk.", false));
            TermData.Add(CVID.PATO_adhesive, new TermInfo(CVID.PATO_adhesive, @"PATO", @"PATO:0002331", @"adhesive", @"A physical quality inhering in a bearer by virtue of the bearer exhibiting molecular attraction to another entity in contact.", false));
            TermData.Add(CVID.PATO_non_adhesive, new TermInfo(CVID.PATO_non_adhesive, @"PATO", @"PATO:0002332", @"non-adhesive", @"A physical quality inhering in a bearer by virtue of the bearer not exhibiting molecular attraction to another entity in contact.", false));
            TermData.Add(CVID.PATO_increased_adhesivity, new TermInfo(CVID.PATO_increased_adhesivity, @"PATO", @"PATO:0002333", @"increased adhesivity", @"A adhesivity which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_adhesivity, new TermInfo(CVID.PATO_decreased_adhesivity, @"PATO", @"PATO:0002334", @"decreased adhesivity", @"A adhesivity which is relatively low.", false));
            TermData.Add(CVID.PATO_tholiform, new TermInfo(CVID.PATO_tholiform, @"PATO", @"PATO:0002335", @"tholiform", @"A shape quality inhering in a bearer by virtue of the bearer's being dome-shaped.", false));
            TermData.Add(CVID.PATO_pyramidal, new TermInfo(CVID.PATO_pyramidal, @"PATO", @"PATO:0002336", @"pyramidal", @"A shape quality inhering in a bearer by virtue of the bearer's having triangular faces that meet at a common point and containing a polygonal shaped base.", false));
            TermData.Add(CVID.PATO_lance_ovate, new TermInfo(CVID.PATO_lance_ovate, @"PATO", @"PATO:0002337", @"lance-ovate", @"A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a continuous convex surface with an axis of symmetry and one axis longer than the other; characterized with an egg-shaped form crossed with a lance-head shaped form.", false));
            TermData.Add(CVID.PATO_lanceolate_triangular, new TermInfo(CVID.PATO_lanceolate_triangular, @"PATO", @"PATO:0002338", @"lanceolate-triangular", @"A shape quality inhering in a bearer by virtue of the bearer's being shaped like a lance-head, considerably longer than wide, tapering towards the tip from below the middle together forming three angles; attached at the broad end.", false));
            TermData.Add(CVID.PATO_hispid, new TermInfo(CVID.PATO_hispid, @"PATO", @"PATO:0002339", @"hispid", @"A quality of being covered with stiff or rough hairs.", false));
            TermData.Add(CVID.PATO_hispidulous, new TermInfo(CVID.PATO_hispidulous, @"PATO", @"PATO:0002340", @"hispidulous", @"A quality of being minutely hispid.", false));
            TermData.Add(CVID.PATO_tomentose, new TermInfo(CVID.PATO_tomentose, @"PATO", @"PATO:0002341", @"tomentose", @"A quality of being covered with short, dense, matted hairs.", false));
            TermData.Add(CVID.PATO_cupulate, new TermInfo(CVID.PATO_cupulate, @"PATO", @"PATO:0002342", @"cupulate", @"A quality inhering in a bearer by virtue of the bearer's being a cupule, with a structure similar to a cup that also encloses the ovule in partiality.", false));
            TermData.Add(CVID.PATO_decumbent, new TermInfo(CVID.PATO_decumbent, @"PATO", @"PATO:0002343", @"decumbent", @"A positional quality inhering in a bearer by virtue of the bearer's lying or growing on the ground but with erect or rising tips.", false));
            TermData.Add(CVID.PATO_arachnose, new TermInfo(CVID.PATO_arachnose, @"PATO", @"PATO:0002344", @"arachnose", @"A quality inhering in a bearer by virtue of the bearer's being characterized by fine, entangled hairs giving the appearance of cobweb.", false));
            TermData.Add(CVID.PATO_lemon_shaped, new TermInfo(CVID.PATO_lemon_shaped, @"PATO", @"PATO:0002345", @"lemon-shaped", @"A convex 3-D shape quality inhering in a bearer by virtue of the bearer's having a quadric surface in three dimensions obtained by rotating less than half of a circular arc about an axis passing through the endpoints of the arc", false));
            TermData.Add(CVID.PATO_snowman_shaped, new TermInfo(CVID.PATO_snowman_shaped, @"PATO", @"PATO:0002346", @"snowman-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having two connected parts, roughly spherical, of different sizes.", false));
            TermData.Add(CVID.PATO_obconical, new TermInfo(CVID.PATO_obconical, @"PATO", @"PATO:0002347", @"obconical", @"A conical quality inhering in a bearer by virtue of the bearer's resembling a cone, with the pointed end attached to an organism.", false));
            TermData.Add(CVID.PATO_ligneous, new TermInfo(CVID.PATO_ligneous, @"PATO", @"PATO:0002348", @"ligneous", @"A structural quality inhering in a bearer by virtue of the bearer resembling wood.", false));
            TermData.Add(CVID.PATO_basal_to, new TermInfo(CVID.PATO_basal_to, @"PATO", @"PATO:0002349", @"basal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the base of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_cauline_to, new TermInfo(CVID.PATO_cauline_to, @"PATO", @"PATO:0002350", @"cauline to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the stalk of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_fleshy, new TermInfo(CVID.PATO_fleshy, @"PATO", @"PATO:0002351", @"fleshy", @"A structural quality inhering in a bearer by virtue of the bearer resembling or containing flesh.", false));
            TermData.Add(CVID.PATO_herbaceous, new TermInfo(CVID.PATO_herbaceous, @"PATO", @"PATO:0002352", @"herbaceous", @"A quality inhering in a bearer by virtue of the bearer's upper parts die back to the rootstock at the end of the growing season.", false));
            TermData.Add(CVID.PATO_activation_quality, new TermInfo(CVID.PATO_activation_quality, @"PATO", @"PATO:0002353", @"activation quality", @"A quality that inheres in a bearer in virtue of its realizing one of its functions.", false));
            TermData.Add(CVID.PATO_active, new TermInfo(CVID.PATO_active, @"PATO", @"PATO:0002354", @"active", @"A quality of an physical object that is currently realizing one of its functions.", false));
            TermData.Add(CVID.PATO_inactive, new TermInfo(CVID.PATO_inactive, @"PATO", @"PATO:0002355", @"inactive", @"A quality of a physical object that is currently realizing none of its functions.", false));
            TermData.Add(CVID.PATO_constitutively_active, new TermInfo(CVID.PATO_constitutively_active, @"PATO", @"PATO:0002356", @"constitutively active", @"A quality of a physical object that has been constantly realizing some of its functions.", false));
            TermData.Add(CVID.PATO_D_shaped, new TermInfo(CVID.PATO_D_shaped, @"PATO", @"PATO:0002357", @"D-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's having a strait side and an arched side giving the bearer the form of the letter D.", false));
            TermData.Add(CVID.PATO_ridged, new TermInfo(CVID.PATO_ridged, @"PATO", @"PATO:0002358", @"ridged", @"An elongated raised margin or border.", false));
            TermData.Add(CVID.PATO_broad, new TermInfo(CVID.PATO_broad, @"PATO", @"PATO:0002359", @"broad", @"A quality inhering in a bearer by virtue of the bearer's width being notably higher than its length.", false));
            TermData.Add(CVID.PATO_tendency, new TermInfo(CVID.PATO_tendency, @"PATO", @"PATO:0002360", @"tendency", @"A disposition that can be compared on a linear scale - that is that it can be increased or decreased.", false));
            TermData.Add(CVID.PATO_increased_tendency, new TermInfo(CVID.PATO_increased_tendency, @"PATO", @"PATO:0002361", @"increased tendency", @"A tendency which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_tendency, new TermInfo(CVID.PATO_decreased_tendency, @"PATO", @"PATO:0002362", @"decreased tendency", @"A tendency which is relatively low.", false));
            TermData.Add(CVID.PATO_bronze, new TermInfo(CVID.PATO_bronze, @"PATO", @"PATO:0002363", @"bronze", @"A medium brown color with a metallic sheen, resembles the actual alloy bronze.", false));
            TermData.Add(CVID.PATO_shortened, new TermInfo(CVID.PATO_shortened, @"PATO", @"PATO:0002364", @"shortened", @"A quality inhering in a bearer by virtue of the bearer's length being notably lower than its width.", false));
            TermData.Add(CVID.PATO_intact_female, new TermInfo(CVID.PATO_intact_female, @"PATO", @"PATO:0002365", @"intact female", @"Female quality of having complete, unaltered reproductive organs", false));
            TermData.Add(CVID.PATO_intact_male, new TermInfo(CVID.PATO_intact_male, @"PATO", @"PATO:0002366", @"intact male", @"Male quality of having complete, unaltered reproductive organs.", false));
            TermData.Add(CVID.PATO_castrated_male, new TermInfo(CVID.PATO_castrated_male, @"PATO", @"PATO:0002367", @"castrated male", @"Male quality of being incapable to reproduce because of functional loss of the testicles from surgical removal or chemical means.", false));
            TermData.Add(CVID.PATO_nulliparous, new TermInfo(CVID.PATO_nulliparous, @"PATO", @"PATO:0002368", @"nulliparous", @"A viviparous organism having never given birth.", false));
            TermData.Add(CVID.PATO_multiparous, new TermInfo(CVID.PATO_multiparous, @"PATO", @"PATO:0002369", @"multiparous", @"A viviparous organism that has given birth two or more times.", false));
            TermData.Add(CVID.PATO_parity, new TermInfo(CVID.PATO_parity, @"PATO", @"PATO:0002370", @"parity", @"The number of time that a viviparous organism has given birth.", false));
            TermData.Add(CVID.PATO_primiparous, new TermInfo(CVID.PATO_primiparous, @"PATO", @"PATO:0002371", @"primiparous", @"A viviparous organism having given birth one time.", false));
            TermData.Add(CVID.PATO_grand_multi_arous, new TermInfo(CVID.PATO_grand_multi_arous, @"PATO", @"PATO:0002372", @"grand multi[arous", @"A viviparous organism that has given birth five or more times.", false));
            TermData.Add(CVID.PATO_mediolateral_polarity, new TermInfo(CVID.PATO_mediolateral_polarity, @"PATO", @"PATO:0002373", @"mediolateral polarity", @"A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the mediolateral axis.", false));
            TermData.Add(CVID.PATO_fluctuating, new TermInfo(CVID.PATO_fluctuating, @"PATO", @"PATO:0002374", @"fluctuating", @"Recurrent and often more or less cyclic alteration.", false));
            TermData.Add(CVID.PATO_trumpet_shaped, new TermInfo(CVID.PATO_trumpet_shaped, @"PATO", @"PATO:0002375", @"trumpet-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape form resembling the shape of a trumpet.", false));
            TermData.Add(CVID.PATO_inflated, new TermInfo(CVID.PATO_inflated, @"PATO", @"PATO:0002376", @"inflated", @"A structure quality inhering in a bearer by virtue of the bearer's being filled with air.", false));
            TermData.Add(CVID.PATO_uninflated, new TermInfo(CVID.PATO_uninflated, @"PATO", @"PATO:0002377", @"uninflated", @"A structure quality inhering in a bearer by virtue of the bearer's being not filed with air.", false));
            TermData.Add(CVID.PATO_acinus, new TermInfo(CVID.PATO_acinus, @"PATO", @"PATO:0002378", @"acinus", @"Having a shape that resembles a many-lobed \ berry,\  such as a raspberry.", false));
            TermData.Add(CVID.PATO_ovariohysterectomized_female, new TermInfo(CVID.PATO_ovariohysterectomized_female, @"PATO", @"PATO:0002379", @"ovariohysterectomized female", @"A female fertility quality inhering in a female by virtue of the bearer's not being capable of reproducing because of surgical removal of ovaries and uterus.", false));
            TermData.Add(CVID.PATO_ovariectomized_female, new TermInfo(CVID.PATO_ovariectomized_female, @"PATO", @"PATO:0002380", @"ovariectomized female", @"A female fertility quality inhering in a female by virtue of the bearer's not being capable of reproducing because of surgical removal of ovaries.", false));
            TermData.Add(CVID.PATO_waxiness, new TermInfo(CVID.PATO_waxiness, @"PATO", @"PATO:0002381", @"waxiness", @"A composition quality inhering in an bearer by virtue of the presence of long chain aliphatic lipids on the surface of an organism.", false));
            TermData.Add(CVID.PATO_increased_waxiness, new TermInfo(CVID.PATO_increased_waxiness, @"PATO", @"PATO:0002382", @"increased waxiness", @"A waxiness which is relatively high.", false));
            TermData.Add(CVID.PATO_decreased_waxiness, new TermInfo(CVID.PATO_decreased_waxiness, @"PATO", @"PATO:0002383", @"decreased waxiness", @"A waxiness which is relatively low.", false));
            TermData.Add(CVID.PATO_waxy, new TermInfo(CVID.PATO_waxy, @"PATO", @"PATO:0002384", @"waxy", @"Presence of long chain aliphatic lipids on the surface of an organism.", false));
            TermData.Add(CVID.PATO_striate_angular, new TermInfo(CVID.PATO_striate_angular, @"PATO", @"PATO:0002385", @"striate-angular", @"A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines, usually parallel, with at least one salient angle on the margin", false));
            TermData.Add(CVID.PATO_anvil, new TermInfo(CVID.PATO_anvil, @"PATO", @"PATO:0002386", @"anvil", @"A concave 3-D shape that inheres in the bearer by virtue of the bearer's shape that is wider at one end and narrow in the middle.", false));
            TermData.Add(CVID.PATO_peracute, new TermInfo(CVID.PATO_peracute, @"PATO", @"PATO:0002387", @"peracute", @"Extremely acute and aggressive onset of a pathological process.", false));
            TermData.Add(CVID.PATO_pedunculate, new TermInfo(CVID.PATO_pedunculate, @"PATO", @"PATO:0002388", @"pedunculate", @"Being supported by a peduncle or stalk.", false));
            TermData.Add(CVID.PATO_procumbent, new TermInfo(CVID.PATO_procumbent, @"PATO", @"PATO:0002389", @"procumbent", @"Growing horizontal to the ground without setting roots.", false));
            TermData.Add(CVID.PATO_radius, new TermInfo(CVID.PATO_radius, @"PATO", @"PATO:0002390", @"radius", @"A length quality which is equal to the length of any straight line segment that passes from the center of a circle to any endpoint on the circular boundary. The radius is half of the diameter.", false));
            TermData.Add(CVID.PATO_triradiate, new TermInfo(CVID.PATO_triradiate, @"PATO", @"PATO:0002391", @"triradiate", @"A shape quality inhering in a bearer by virtue of the bearer's having three rays or radiating branches.", false));
            TermData.Add(CVID.PATO_diagonal_to, new TermInfo(CVID.PATO_diagonal_to, @"PATO", @"PATO:0002392", @"diagonal to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located on a sloping line joining two nonconsecutive points of an entity relative to another entity.", false));
            TermData.Add(CVID.PATO_increased_tolerance_to, new TermInfo(CVID.PATO_increased_tolerance_to, @"PATO", @"PATO:0002393", @"increased tolerance to", @"A tolerance quality inhering in a bearer by virtue of the bearer's increased ability to endure a stimulus.", false));
            TermData.Add(CVID.PATO_decreased_tolerance_to, new TermInfo(CVID.PATO_decreased_tolerance_to, @"PATO", @"PATO:0002394", @"decreased tolerance to", @"A tolerance quality inhering in a bearer by virtue of the bearer's decreased ability to endure a stimulus.", false));
            TermData.Add(CVID.PATO_mislocalized_abaxially, new TermInfo(CVID.PATO_mislocalized_abaxially, @"PATO", @"PATO:0002395", @"mislocalized abaxially", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned away from the axis of an organism.", false));
            TermData.Add(CVID.PATO_mislocalized_adaxially, new TermInfo(CVID.PATO_mislocalized_adaxially, @"PATO", @"PATO:0002396", @"mislocalized adaxially", @"A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the axis of an organism.", false));
            TermData.Add(CVID.PATO_subcircular, new TermInfo(CVID.PATO_subcircular, @"PATO", @"PATO:0002397", @"subcircular", @"A circular shape quality inhering in a bearer by virtue of the bearer's being nearly, but not perfectly, circular.", false));
            TermData.Add(CVID.PATO_obsolete__new_term__OBSOLETE, new TermInfo(CVID.PATO_obsolete__new_term__OBSOLETE, @"PATO", @"PATO:0002398", @"obsolete <new term>", @"", true));
            TermData.Add(CVID.PATO_anteromedially_rotated, new TermInfo(CVID.PATO_anteromedially_rotated, @"PATO", @"PATO:0002399", @"anteromedially rotated", @"A rotation quality inhering in a bearer by virtue of being rotated towards the front and the middle of an organism.", false));
            TermData.Add(CVID.PATO_fusiform, new TermInfo(CVID.PATO_fusiform, @"PATO", @"PATO:0002400", @"fusiform", @"Having a spindle-like shape that is wide in the middle and tapers at both ends.", false));
            TermData.Add(CVID.PATO_random_pattern, new TermInfo(CVID.PATO_random_pattern, @"PATO", @"PATO:0002401", @"random pattern", @"characterised by an unidentifiable pattern.", false));
            TermData.Add(CVID.PATO_multifocal_to_coalescing, new TermInfo(CVID.PATO_multifocal_to_coalescing, @"PATO", @"PATO:0002402", @"multifocal to coalescing", @"Multiple lesions some interconnecting with each other.", false));
            TermData.Add(CVID.PATO_generalized, new TermInfo(CVID.PATO_generalized, @"PATO", @"PATO:0002403", @"generalized", @"Affecting all regions without specificity of distribution.", false));
            TermData.Add(CVID.PATO_segmental, new TermInfo(CVID.PATO_segmental, @"PATO", @"PATO:0002404", @"segmental", @"Affecting a segment or segments.", false));
            TermData.Add(CVID.PATO_friability, new TermInfo(CVID.PATO_friability, @"PATO", @"PATO:0002405", @"friability", @"A structural quality inhering in a bearer by virtue of the bearer's disposition to be reduced to smaller pieces with little effort.", false));
            TermData.Add(CVID.PATO_friable, new TermInfo(CVID.PATO_friable, @"PATO", @"PATO:0002406", @"friable", @"Easily reduced to powder or easily fragmentable or crumbly.", false));
            TermData.Add(CVID.PATO_indurated, new TermInfo(CVID.PATO_indurated, @"PATO", @"PATO:0002407", @"indurated", @"Having become firm or hard especially by increase of fibrous elements.", false));
            TermData.Add(CVID.PATO_watery, new TermInfo(CVID.PATO_watery, @"PATO", @"PATO:0002408", @"watery", @"Having the consistency of water.", false));
            TermData.Add(CVID.PATO_fluid_filled, new TermInfo(CVID.PATO_fluid_filled, @"PATO", @"PATO:0002409", @"fluid-filled", @"Bounded structure filled with fluid.", false));
            TermData.Add(CVID.PATO_beige, new TermInfo(CVID.PATO_beige, @"PATO", @"PATO:0002410", @"beige", @"A colour that is very pale yellowish brown.", false));
            TermData.Add(CVID.PATO_yellow_brown, new TermInfo(CVID.PATO_yellow_brown, @"PATO", @"PATO:0002411", @"yellow brown", @"A color consisting of yellow and brown hue.", false));
            TermData.Add(CVID.PATO_dark_yellow_brown, new TermInfo(CVID.PATO_dark_yellow_brown, @"PATO", @"PATO:0002412", @"dark yellow brown", @"A color consisting of yellow and brown hue and low brightness.", false));
            TermData.Add(CVID.PATO_light_yellow_brown, new TermInfo(CVID.PATO_light_yellow_brown, @"PATO", @"PATO:0002413", @"light yellow brown", @"A color consisting of yellow and brown hue and high brightness.", false));
            TermData.Add(CVID.PATO_chronic_active, new TermInfo(CVID.PATO_chronic_active, @"PATO", @"PATO:0002414", @"chronic-active", @"A quality of duration having progressive course of indefinite duration with active, acute-like elements.", false));
            TermData.Add(CVID.PATO_focally_extensive, new TermInfo(CVID.PATO_focally_extensive, @"PATO", @"PATO:0002415", @"focally extensive", @"Single lesion with expansion into surrounding tissue.", false));
            TermData.Add(CVID.PATO_sunken, new TermInfo(CVID.PATO_sunken, @"PATO", @"PATO:0002416", @"sunken", @"Flattened from above downward; below the normal level or the level of the surrounding parts.", false));
            TermData.Add(CVID.PATO_transmural, new TermInfo(CVID.PATO_transmural, @"PATO", @"PATO:0002417", @"transmural", @"Extending through or affecting the entire thickness of the wall of an organ or cavity or boundary.", false));
            TermData.Add(CVID.PATO_acidophilic, new TermInfo(CVID.PATO_acidophilic, @"PATO", @"PATO:0002418", @"acidophilic", @"An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for acidic dyes under specific ph conditions.", false));
            TermData.Add(CVID.PATO_eosinophilic, new TermInfo(CVID.PATO_eosinophilic, @"PATO", @"PATO:0002419", @"eosinophilic", @"An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for eosin dye.", false));
            TermData.Add(CVID.PATO_amphiphilic, new TermInfo(CVID.PATO_amphiphilic, @"PATO", @"PATO:0002420", @"amphiphilic", @"Having both hydrophilic and hydrophobic (or lipophilic) groups.", false));
            TermData.Add(CVID.PATO_cicatricial, new TermInfo(CVID.PATO_cicatricial, @"PATO", @"PATO:0002421", @"cicatricial", @"Having or resembling the characteristic of a cicatrix - a scar resulting from formation and contraction of fibrous tissue.", false));
            TermData.Add(CVID.PATO_acinar, new TermInfo(CVID.PATO_acinar, @"PATO", @"PATO:0002422", @"acinar", @"Pertaining to the individual parts making up an aggregate fruit like a many-lobed \ berry,\  such as a raspberry.", false));
            TermData.Add(CVID.PATO_papillomatous, new TermInfo(CVID.PATO_papillomatous, @"PATO", @"PATO:0002423", @"papillomatous", @"A round or lobulated protruding form resembling a nipple.", false));
            TermData.Add(CVID.PATO_divergent_from, new TermInfo(CVID.PATO_divergent_from, @"PATO", @"PATO:0002424", @"divergent from", @"A positional quality inhering in a bearer by virtue of the bearer's having two or more entities that extend from a common point in different directions.", false));
            TermData.Add(CVID.PATO_exposed, new TermInfo(CVID.PATO_exposed, @"PATO", @"PATO:0002425", @"exposed", @"Open to view or not covered by another entity.", false));
            TermData.Add(CVID.PATO_scaphoid, new TermInfo(CVID.PATO_scaphoid, @"PATO", @"PATO:0002426", @"scaphoid", @"A shape quality inhering in a bearer by virtue of the bearer's being shaped like a boat.", false));
            TermData.Add(CVID.PATO_knobbled, new TermInfo(CVID.PATO_knobbled, @"PATO", @"PATO:0002427", @"knobbled", @"A surface feature shape having numerous very small circular rounded projections or protuberances.", false));
            TermData.Add(CVID.PATO_tripodal, new TermInfo(CVID.PATO_tripodal, @"PATO", @"PATO:0002428", @"tripodal", @"A 3-D shape with three supports or legs.", false));
            TermData.Add(CVID.PATO_x_shaped, new TermInfo(CVID.PATO_x_shaped, @"PATO", @"PATO:0002429", @"x-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter X.", false));
            TermData.Add(CVID.PATO_strap_shaped, new TermInfo(CVID.PATO_strap_shaped, @"PATO", @"PATO:0002430", @"strap-shaped", @"A shape quality in which the bearer is shaped like a narrow band; ligulate.", false));
            TermData.Add(CVID.PATO_waisted, new TermInfo(CVID.PATO_waisted, @"PATO", @"PATO:0002431", @"waisted", @"A shape quality in which the bearer possesses a gradual, yet distinct, thinning from a wide starting point.", false));
            TermData.Add(CVID.PATO_spade_shaped, new TermInfo(CVID.PATO_spade_shaped, @"PATO", @"PATO:0002432", @"spade-shaped", @"A shape that is in the form of a spade.", false));
            TermData.Add(CVID.PATO_sculpted_surface, new TermInfo(CVID.PATO_sculpted_surface, @"PATO", @"PATO:0002433", @"sculpted surface", @"A surface feature shape marked by large amounts of relief, often with multiple ridges and grooves in close association. Topographically complex.", false));
            TermData.Add(CVID.PATO_perpendicular_to, new TermInfo(CVID.PATO_perpendicular_to, @"PATO", @"PATO:0002434", @"perpendicular to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located at a right angle relative to another entity.", false));
            TermData.Add(CVID.PATO_abutting, new TermInfo(CVID.PATO_abutting, @"PATO", @"PATO:0002435", @"abutting", @"A positional quality inhering in a bearer by virtue of the bearer touching another entity along a border or with a projecting part.", false));
            TermData.Add(CVID.PATO_offset, new TermInfo(CVID.PATO_offset, @"PATO", @"PATO:0002436", @"offset", @"A positional quality inhering in a bearer by virtue of the bearer's position being displaced from a reference point.", false));
            TermData.Add(CVID.PATO_interlocked_with, new TermInfo(CVID.PATO_interlocked_with, @"PATO", @"PATO:0002437", @"interlocked with", @"A structural quality inhering in a bearer by virtue of the bearer's being locked together or interconnected to another entity.", false));
            TermData.Add(CVID.PATO_subdermal, new TermInfo(CVID.PATO_subdermal, @"PATO", @"PATO:0002438", @"subdermal", @"A structural quality inhering in a bearer by virtue of the bearer's being located or placed beneath the skin.", false));
            TermData.Add(CVID.PATO_w_shaped, new TermInfo(CVID.PATO_w_shaped, @"PATO", @"PATO:0002439", @"w-shaped", @"An angular shape quality inhering in a bearer by virtue of the bearer's having two angles in its length giving the bearer the form of the letter W.", false));
            TermData.Add(CVID.PATO_ornamentation, new TermInfo(CVID.PATO_ornamentation, @"PATO", @"PATO:0002440", @"ornamentation", @"A surface feature shape quality inhering in a bearer by virtue of the degree of the bearer's highly topographical with ridges, pits, rugosity or other surface structures.", false));
            TermData.Add(CVID.PATO_ornamented, new TermInfo(CVID.PATO_ornamented, @"PATO", @"PATO:0002441", @"ornamented", @"A surface feature shape in which the bearer's surface is highly topographical with ridges, pits, rugosity or other surface structures.", false));
            TermData.Add(CVID.PATO_unornamented, new TermInfo(CVID.PATO_unornamented, @"PATO", @"PATO:0002442", @"unornamented", @"A surface feature shape in which the bearer's surface is lacking ridges, pits, rugosity or other surface structures.", false));
            TermData.Add(CVID.PATO_level_with, new TermInfo(CVID.PATO_level_with, @"PATO", @"PATO:0002443", @"level with", @"A positional quality inhering in a bearer by virtue of the bearer's being located at the same level as another entity.", false));
            TermData.Add(CVID.PATO_mineralized, new TermInfo(CVID.PATO_mineralized, @"PATO", @"PATO:0002444", @"mineralized", @"A composition quality inhering in a bearer by virtue of the bearer's being composed of or possessing inorganic material.", false));
            TermData.Add(CVID.PATO_torsioned, new TermInfo(CVID.PATO_torsioned, @"PATO", @"PATO:0002445", @"torsioned", @"A shape quality inhering in a bearer by virtue of the bearer's being twisted or turned.", false));
            TermData.Add(CVID.PATO_anchor_shaped, new TermInfo(CVID.PATO_anchor_shaped, @"PATO", @"PATO:0002446", @"anchor-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape resembling an anchor.", false));
            TermData.Add(CVID.PATO_quadripartite, new TermInfo(CVID.PATO_quadripartite, @"PATO", @"PATO:0002447", @"quadripartite", @"A shape quality inhering in a bearer by virtue of the bearer being divided into four parts.", false));
            TermData.Add(CVID.PATO_oriented_towards, new TermInfo(CVID.PATO_oriented_towards, @"PATO", @"PATO:0002448", @"oriented towards", @"A quality inhering in a bearer by virtue of the bearer's being aligned or positioned towards another entity.", false));
            TermData.Add(CVID.PATO_posteromedial_to, new TermInfo(CVID.PATO_posteromedial_to, @"PATO", @"PATO:0002449", @"posteromedial to", @"A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and mid-line surface of an organism relative to another entity.", false));
            TermData.Add(CVID.PATO_firm, new TermInfo(CVID.PATO_firm, @"PATO", @"PATO:0002450", @"firm", @"A hardness quality of giving significant resistance to pressure.", false));
            TermData.Add(CVID.PATO_sexually_dimorphic, new TermInfo(CVID.PATO_sexually_dimorphic, @"PATO", @"PATO:0002451", @"sexually dimorphic", @"A quality inhering in a bearer by virtue of the bearer's exhibiting a phenotypic difference between males and females of the same species.", false));
            TermData.Add(CVID.PATO_decondensed, new TermInfo(CVID.PATO_decondensed, @"PATO", @"PATO:0002452", @"decondensed", @"A structural quality inhering in a bearer by virtue of the bearer being thinner or more losely packed.", false));
            TermData.Add(CVID.PATO_eroding, new TermInfo(CVID.PATO_eroding, @"PATO", @"PATO:0002453", @"eroding", @"A structural quality inhering in a bearer by virtue of the bearer bring gradually worn away.", false));
            TermData.Add(CVID.PATO_carpel_like, new TermInfo(CVID.PATO_carpel_like, @"PATO", @"PATO:0002454", @"carpel-like", @"A quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a carpel.", false));
            TermData.Add(CVID.PATO_corymb_like, new TermInfo(CVID.PATO_corymb_like, @"PATO", @"PATO:0002455", @"corymb-like", @"A quality inhering in a bearer by virtue of the bearer's architecture bearing resemblence to a corymb type of inflorescence.", false));
            TermData.Add(CVID.PATO_inflorescence_like, new TermInfo(CVID.PATO_inflorescence_like, @"PATO", @"PATO:0002456", @"inflorescence-like", @"A quality inhering in a bearer by virtue of the bearer's similarity to the appearance of an inflorescence.", false));
            TermData.Add(CVID.PATO_leaf_like, new TermInfo(CVID.PATO_leaf_like, @"PATO", @"PATO:0002457", @"leaf-like", @"A structural quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a leaf.", false));
            TermData.Add(CVID.PATO_pin_like, new TermInfo(CVID.PATO_pin_like, @"PATO", @"PATO:0002458", @"pin-like", @"A quality inhering in a bearer by virtue of the bearer being thin and lacking outgrowths.", false));
            TermData.Add(CVID.PATO_sepal_like, new TermInfo(CVID.PATO_sepal_like, @"PATO", @"PATO:0002459", @"sepal-like", @"A structural quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a sepal,", false));
            TermData.Add(CVID.PATO_shriveled, new TermInfo(CVID.PATO_shriveled, @"PATO", @"PATO:0002460", @"shriveled", @"A structural quality inhering in a bearer by virtue of the bearer being smaller and contracted, expecially due to loss of moisture.", false));
            TermData.Add(CVID.PATO_wilty, new TermInfo(CVID.PATO_wilty, @"PATO", @"PATO:0002461", @"wilty", @"To bend or hang downwards due to loss of water", false));
            TermData.Add(CVID.PATO_collagenous, new TermInfo(CVID.PATO_collagenous, @"PATO", @"PATO:0002462", @"collagenous", @"A composition quality inhering in an bearer by virtue of the bearer's consisting of collagen.", false));
            TermData.Add(CVID.PATO_extends_to, new TermInfo(CVID.PATO_extends_to, @"PATO", @"PATO:0002463", @"extends to", @"A positional quality inhering in a bearer by virtue of some aspect of the bearer extending to the position of another entity.", false));
            TermData.Add(CVID.PATO_extends_beyond, new TermInfo(CVID.PATO_extends_beyond, @"PATO", @"PATO:0002464", @"extends beyond", @"A positional quality inhering in a bearer by virtue of some aspect of the bearer extending past the position of another entity.", false));
            TermData.Add(CVID.PATO_prism_shaped, new TermInfo(CVID.PATO_prism_shaped, @"PATO", @"PATO:0002465", @"prism shaped", @"A quality inhering in a bearer by virtue of the bearer's resembling a prism.", false));
            TermData.Add(CVID.PATO_keyhole_shaped, new TermInfo(CVID.PATO_keyhole_shaped, @"PATO", @"PATO:0002466", @"keyhole shaped", @"A shape quality inhering in a bearer by virtue of the bearer resembling a keyhole.", false));
            TermData.Add(CVID.PATO_lathlike, new TermInfo(CVID.PATO_lathlike, @"PATO", @"PATO:0002467", @"lathlike", @"A shape quality inhering in a bearer by virtue of the bearer resembling a thin narrow strip.", false));
            TermData.Add(CVID.PATO_distensible, new TermInfo(CVID.PATO_distensible, @"PATO", @"PATO:0002468", @"distensible", @"A structure quality inhering in a bearer by virtue of the bearer's being capable of swelling or stretching.", false));
            TermData.Add(CVID.PATO_sutured_to, new TermInfo(CVID.PATO_sutured_to, @"PATO", @"PATO:0002469", @"sutured to", @"Structural quality inhereing in a bearer in which a joint has apposed bony surfaces united by fibrous tissue, permitting no movement; found only between bones.", false));
            TermData.Add(CVID.PATO_transformed_to, new TermInfo(CVID.PATO_transformed_to, @"PATO", @"PATO:0002470", @"transformed to", @"A morphological quality between two bearers inhering that one bearer is subject to change the nature, function, or condition of itself to become the other.", false));
            TermData.Add(CVID.PATO_increased_velocity, new TermInfo(CVID.PATO_increased_velocity, @"PATO", @"PATO:0002471", @"increased velocity", @"A physical quality inhering in a bearer by virtue of the bearer's increased rate of change of the position.", false));
            TermData.Add(CVID.PATO_decreased_velocity, new TermInfo(CVID.PATO_decreased_velocity, @"PATO", @"PATO:0002472", @"decreased velocity", @"A physical quality inhering in a bearer by virtue of the bearer's decreased rate of change of the position.", false));
            TermData.Add(CVID.PATO_neoplastic__spontaneous, new TermInfo(CVID.PATO_neoplastic__spontaneous, @"PATO", @"PATO:0002473", @"neoplastic, spontaneous", @"A disposition inhering in a tumour by virtue of the bearer's disposition to spontaneously arise.", false));
            TermData.Add(CVID.PATO_bitter, new TermInfo(CVID.PATO_bitter, @"PATO", @"PATO:0002474", @"bitter", @"A flavor quality inhering in a bearer by virtue of the bearer's having an acrid, sharp, or disagreeable flavor.", false));
            TermData.Add(CVID.PATO_subterminal, new TermInfo(CVID.PATO_subterminal, @"PATO", @"PATO:0002475", @"subterminal", @"A position quality inhering in a bearer by virtue of the bearer's existing near the end of another entity.", false));
            TermData.Add(CVID.PATO_terminal, new TermInfo(CVID.PATO_terminal, @"PATO", @"PATO:0002476", @"terminal", @"A position quality inhering in a bearer by virtue of the bearer's forming the end of another entity.", false));
            TermData.Add(CVID.PATO_brittle, new TermInfo(CVID.PATO_brittle, @"PATO", @"PATO:0002477", @"brittle", @"A structural quality inhering in a bearer by virtue of the bearer's disposition to breaks without significant deformation (strain) when subjected to stress.", false));
            TermData.Add(CVID.PATO_transversely_striated, new TermInfo(CVID.PATO_transversely_striated, @"PATO", @"PATO:0002478", @"transversely striated", @"A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel, that are oriented transversely relative to the long axis of the bearer.", false));
            TermData.Add(CVID.PATO_obliquely_striated, new TermInfo(CVID.PATO_obliquely_striated, @"PATO", @"PATO:0002479", @"obliquely striated", @"A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel, that are oriented obliquely relative to the long axis of the bearer.", false));
            TermData.Add(CVID.PATO_poorly_ossified, new TermInfo(CVID.PATO_poorly_ossified, @"PATO", @"PATO:0002480", @"poorly ossified", @"A quality inhering in an bearer by virtue of the bearer's possessing only minor levels of ossification.", false));
            TermData.Add(CVID.PATO_oblique_orientation, new TermInfo(CVID.PATO_oblique_orientation, @"PATO", @"PATO:0002481", @"oblique orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a slanting direction or position : neither perpendicular nor parallel.", false));
            TermData.Add(CVID.PATO_slit_like, new TermInfo(CVID.PATO_slit_like, @"PATO", @"PATO:0002482", @"slit-like", @"Shape quality inhering in a bearer by virtue of the bearer exhibiting a narrow and elongate opening.", false));
            TermData.Add(CVID.PATO_external_to, new TermInfo(CVID.PATO_external_to, @"PATO", @"PATO:0002483", @"external to", @"Positional quality in which an entity is located outside of another entity.", false));
            TermData.Add(CVID.PATO_inverted_V_shaped, new TermInfo(CVID.PATO_inverted_V_shaped, @"PATO", @"PATO:0002484", @"inverted-V shaped", @"An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of an inverted letter V.", false));
            TermData.Add(CVID.PATO_parallel_sided, new TermInfo(CVID.PATO_parallel_sided, @"PATO", @"PATO:0002485", @"parallel-sided", @"A shape quality inhering in a bearer by virtue of the bearer's possessing two sides that are at the same continuous distance relative to each other.", false));
            TermData.Add(CVID.PATO_multi_organismal_process_quality, new TermInfo(CVID.PATO_multi_organismal_process_quality, @"PATO", @"PATO:0002486", @"multi-organismal process quality", @"A quality inhering in a process by virtue of that process having two or more organisms as participants.", false));
            TermData.Add(CVID.PATO_single_organismal_process_quality, new TermInfo(CVID.PATO_single_organismal_process_quality, @"PATO", @"PATO:0002487", @"single organismal process quality", @"A quality inhering in a process by virtue of that process having exactly one organism as a participant.", false));
            TermData.Add(CVID.PATO_overlapping, new TermInfo(CVID.PATO_overlapping, @"PATO", @"PATO:0002488", @"overlapping", @"Overlap with quality inhering in a bearer by virtue of the bearer's being positioned over another entity so as to cover some portion of it.", false));
            TermData.Add(CVID.PATO_overlapped_by, new TermInfo(CVID.PATO_overlapped_by, @"PATO", @"PATO:0002489", @"overlapped by", @"Overlap with quality inhering in a bearer by virtue of the bearer's being positioned under another entity so as to be covered by some portion of it.", false));
            TermData.Add(CVID.PATO_anterior_orientation, new TermInfo(CVID.PATO_anterior_orientation, @"PATO", @"PATO:0002490", @"anterior orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteriorly.", false));
            TermData.Add(CVID.PATO_anterodorsal_orientation, new TermInfo(CVID.PATO_anterodorsal_orientation, @"PATO", @"PATO:0002491", @"anterodorsal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterodorsally.", false));
            TermData.Add(CVID.PATO_anterolateral_orientation, new TermInfo(CVID.PATO_anterolateral_orientation, @"PATO", @"PATO:0002492", @"anterolateral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterolaterally.", false));
            TermData.Add(CVID.PATO_anteroventral_orientation, new TermInfo(CVID.PATO_anteroventral_orientation, @"PATO", @"PATO:0002493", @"anteroventral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteroventrally.", false));
            TermData.Add(CVID.PATO_distal_orientation, new TermInfo(CVID.PATO_distal_orientation, @"PATO", @"PATO:0002494", @"distal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed distally.", false));
            TermData.Add(CVID.PATO_dorsal_orientation, new TermInfo(CVID.PATO_dorsal_orientation, @"PATO", @"PATO:0002495", @"dorsal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed dorsally.", false));
            TermData.Add(CVID.PATO_dorsolateral_orientation, new TermInfo(CVID.PATO_dorsolateral_orientation, @"PATO", @"PATO:0002496", @"dorsolateral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed dorsolaterally.", false));
            TermData.Add(CVID.PATO_lateral_orientation, new TermInfo(CVID.PATO_lateral_orientation, @"PATO", @"PATO:0002497", @"lateral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed laterally.", false));
            TermData.Add(CVID.PATO_medial_orientation, new TermInfo(CVID.PATO_medial_orientation, @"PATO", @"PATO:0002498", @"medial orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed medially.", false));
            TermData.Add(CVID.PATO_posterior_orientation, new TermInfo(CVID.PATO_posterior_orientation, @"PATO", @"PATO:0002499", @"posterior orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posteriorly.", false));
            TermData.Add(CVID.PATO_ventrolaterally_orientation, new TermInfo(CVID.PATO_ventrolaterally_orientation, @"PATO", @"PATO:0002500", @"ventrolaterally orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed ventrolaterally.", false));
            TermData.Add(CVID.PATO_ventral_orientation, new TermInfo(CVID.PATO_ventral_orientation, @"PATO", @"PATO:0002501", @"ventral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed ventrally.", false));
            TermData.Add(CVID.PATO_transverse_orientation, new TermInfo(CVID.PATO_transverse_orientation, @"PATO", @"PATO:0002502", @"transverse orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed transversely.", false));
            TermData.Add(CVID.PATO_posterolateral_orientation, new TermInfo(CVID.PATO_posterolateral_orientation, @"PATO", @"PATO:0002503", @"posterolateral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterolaterally.", false));
            TermData.Add(CVID.PATO_posterodorsal_orientation, new TermInfo(CVID.PATO_posterodorsal_orientation, @"PATO", @"PATO:0002504", @"posterodorsal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterodorsally.", false));
            TermData.Add(CVID.PATO_nucleated, new TermInfo(CVID.PATO_nucleated, @"PATO", @"PATO:0002505", @"nucleated", @"A nucleate quality inhering in a bearer by virtue of the bearer's having one or more nucleus.", false));
            TermData.Add(CVID.PATO_alobate, new TermInfo(CVID.PATO_alobate, @"PATO", @"PATO:0002506", @"alobate", @"A surface feature shape quality inhering in a bearer by virtue of the bearer's not having undulating edges forming lobes.", false));
            TermData.Add(CVID.PATO_keratinous, new TermInfo(CVID.PATO_keratinous, @"PATO", @"PATO:0002507", @"keratinous", @"A composition quality inhering in a bearer by virtue of the bearer's consisting of keratin.", false));
            TermData.Add(CVID.PATO_concealed, new TermInfo(CVID.PATO_concealed, @"PATO", @"PATO:0002508", @"concealed", @"A positional quality inhering in a bearer by virtue of the bearer being hidden from view.", false));
            TermData.Add(CVID.PATO_hexagonal, new TermInfo(CVID.PATO_hexagonal, @"PATO", @"PATO:0002509", @"hexagonal", @"A 2-D shape quality inhering in a bearer by virtue of the bearer's having six angles and six sides.", false));
            TermData.Add(CVID.PATO_multipartite, new TermInfo(CVID.PATO_multipartite, @"PATO", @"PATO:0002510", @"multipartite", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer being divided into multiple parts.", false));
            TermData.Add(CVID.PATO_cane_like, new TermInfo(CVID.PATO_cane_like, @"PATO", @"PATO:0002511", @"cane-like", @"A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a cane.", false));
            TermData.Add(CVID.PATO_confluent_with, new TermInfo(CVID.PATO_confluent_with, @"PATO", @"PATO:0002512", @"confluent with", @"A positional quality inhering in a bearer by virtue of the bearer flowing or coming together with another entity.", false));
            TermData.Add(CVID.PATO_oblique_to, new TermInfo(CVID.PATO_oblique_to, @"PATO", @"PATO:0002513", @"oblique to", @"A positional quality inhering in a bearer by virtue of the bearer's having a slanting direction (neither perpendicular nor parallel) relative to another entity.", false));
            TermData.Add(CVID.PATO_anteromedial_orientation, new TermInfo(CVID.PATO_anteromedial_orientation, @"PATO", @"PATO:0002514", @"anteromedial orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteromedially.", false));
            TermData.Add(CVID.PATO_increased_elevation_relative_to, new TermInfo(CVID.PATO_increased_elevation_relative_to, @"PATO", @"PATO:0002515", @"increased elevation relative to", @"An elevation quality inhering in a bearer by virtue the bearer's being in a high position relative to another entity.", false));
            TermData.Add(CVID.PATO_concealed_by, new TermInfo(CVID.PATO_concealed_by, @"PATO", @"PATO:0002516", @"concealed by", @"A positional quality inhering in a bearer by virtue of the bearer being hidden from view or covered by another entity.", false));
            TermData.Add(CVID.PATO_saddle_shaped, new TermInfo(CVID.PATO_saddle_shaped, @"PATO", @"PATO:0002517", @"saddle-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a saddle.", false));
            TermData.Add(CVID.PATO_flush, new TermInfo(CVID.PATO_flush, @"PATO", @"PATO:0002518", @"flush", @"A positional quality inhering in a bearer by virtue of the bearer being level or even with another surface.", false));
            TermData.Add(CVID.PATO_cancellous, new TermInfo(CVID.PATO_cancellous, @"PATO", @"PATO:0002519", @"cancellous", @"A structural quality inhering in a bearer by virtue of the bearer's having an open, latticed, or porous structure; used especially of bone.", false));
            TermData.Add(CVID.PATO_scute_like, new TermInfo(CVID.PATO_scute_like, @"PATO", @"PATO:0002520", @"scute-like", @"A shape quality inhering in a bearer by virtue of the bearer being shaped like a scute or an osteoderm.", false));
            TermData.Add(CVID.PATO_funnel_shaped, new TermInfo(CVID.PATO_funnel_shaped, @"PATO", @"PATO:0002521", @"funnel-shaped", @"A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a funnel.", false));
            TermData.Add(CVID.PATO_keel_shaped, new TermInfo(CVID.PATO_keel_shaped, @"PATO", @"PATO:0002522", @"keel-shaped", @"A shape quality inhering in a bearer by virtue of the bearer having an elongate structure, similar to a ridge, that extends longitudinally along an anatomical entity.", false));
            TermData.Add(CVID.PATO_vertical_to, new TermInfo(CVID.PATO_vertical_to, @"PATO", @"PATO:0002523", @"vertical to", @"A positional quality inhering in a bearer by virtue of the bearer's being located at a right angle relative to another entity and to the horizon.", false));
            TermData.Add(CVID.PATO_mesiolateral_orientation, new TermInfo(CVID.PATO_mesiolateral_orientation, @"PATO", @"PATO:0002524", @"mesiolateral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed mesiolaterally.", false));
            TermData.Add(CVID.PATO_separating, new TermInfo(CVID.PATO_separating, @"PATO", @"PATO:0002525", @"separating", @"A structural quality inhering in a bearer by virtue of the bearer being in a position that produces a separation in, or acting to separate, another entity.", false));
            TermData.Add(CVID.PATO_anterodistal_orientation, new TermInfo(CVID.PATO_anterodistal_orientation, @"PATO", @"PATO:0002526", @"anterodistal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterodistally.", false));
            TermData.Add(CVID.PATO_posterodistal_orientation, new TermInfo(CVID.PATO_posterodistal_orientation, @"PATO", @"PATO:0002527", @"posterodistal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterodistally.", false));
            TermData.Add(CVID.PATO_obsolete_borderline_intensity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_borderline_intensity_OBSOLETE, @"PATO", @"PATO:0002528", @"obsolete borderline intensity", @"", true));
            TermData.Add(CVID.PATO_obsolete_profound_intensity_OBSOLETE, new TermInfo(CVID.PATO_obsolete_profound_intensity_OBSOLETE, @"PATO", @"PATO:0002529", @"obsolete profound intensity", @"", true));
            TermData.Add(CVID.PATO_obsolete_episodic_OBSOLETE, new TermInfo(CVID.PATO_obsolete_episodic_OBSOLETE, @"PATO", @"PATO:0002530", @"obsolete episodic", @"", true));
            TermData.Add(CVID.PATO_obsolete_refractory_OBSOLETE, new TermInfo(CVID.PATO_obsolete_refractory_OBSOLETE, @"PATO", @"PATO:0002531", @"obsolete refractory", @"", true));
            TermData.Add(CVID.PATO_obsolete_secondary_OBSOLETE, new TermInfo(CVID.PATO_obsolete_secondary_OBSOLETE, @"PATO", @"PATO:0002532", @"obsolete secondary", @"", true));
            TermData.Add(CVID.PATO_bipartite, new TermInfo(CVID.PATO_bipartite, @"PATO", @"PATO:0002533", @"bipartite", @"A multipartite quality inhering in a bearer by virtue of the bearer being divided into two parts.", false));
            TermData.Add(CVID.PATO_plowshare_shaped, new TermInfo(CVID.PATO_plowshare_shaped, @"PATO", @"PATO:0002534", @"plowshare shaped", @"A shape quality inhering in a bearer by virtue of the bearer's being shaped like a plowshare.", false));
            TermData.Add(CVID.PATO_peg_like, new TermInfo(CVID.PATO_peg_like, @"PATO", @"PATO:0002535", @"peg-like", @"A shape quality inhering in a bearer by virtue of the bearer's having a short and stout cylindrical shape.", false));
            TermData.Add(CVID.PATO_boomerang_shaped, new TermInfo(CVID.PATO_boomerang_shaped, @"PATO", @"PATO:0002536", @"boomerang shaped", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape like a boomerang, with two arms connected at an angle.", false));
            TermData.Add(CVID.PATO_subovoid, new TermInfo(CVID.PATO_subovoid, @"PATO", @"PATO:0002537", @"subovoid", @"A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a shape not quite ovoid. approximately ovoid.", false));
            TermData.Add(CVID.PATO_concavo_convex, new TermInfo(CVID.PATO_concavo_convex, @"PATO", @"PATO:0002538", @"concavo-convex", @"A shape quality that obtains by virtue of the bearer being concave on one side and convex on the other.", false));
            TermData.Add(CVID.PATO_ring_shaped, new TermInfo(CVID.PATO_ring_shaped, @"PATO", @"PATO:0002539", @"ring shaped", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape like a ring (a circular shape enclosing a space).", false));
            TermData.Add(CVID.PATO_spur_shaped, new TermInfo(CVID.PATO_spur_shaped, @"PATO", @"PATO:0002540", @"spur shaped", @"A shape quality inhering in a bearer by virtue of the bearer's possessing a small, spike-like shape.", false));
            TermData.Add(CVID.PATO_homeostatic, new TermInfo(CVID.PATO_homeostatic, @"PATO", @"PATO:0002541", @"homeostatic", @"Pertaining to the ability or tendency of an organism or cell to maintain internal equilibrium by adjusting its physiological processes.", false));
            TermData.Add(CVID.PATO_borderline_intensity, new TermInfo(CVID.PATO_borderline_intensity, @"PATO", @"PATO:0002628", @"borderline intensity", @"An intensity which is borderline in it its effect or force as compared to baseline or normal.", false));
            TermData.Add(CVID.PATO_profound_intensity, new TermInfo(CVID.PATO_profound_intensity, @"PATO", @"PATO:0002629", @"profound intensity", @"An intensity which is characterized by being very severe.", false));
            TermData.Add(CVID.PATO_episodic, new TermInfo(CVID.PATO_episodic, @"PATO", @"PATO:0002630", @"episodic", @"An occurrence quality inhering in a bearer by virtue of the bearer's having a course that occurs occasionally.", false));
            TermData.Add(CVID.PATO_refractory, new TermInfo(CVID.PATO_refractory, @"PATO", @"PATO:0002631", @"refractory", @"An occurrence of a process during which time there is an inability to change the course, extent, or repetition of the process.", false));
            TermData.Add(CVID.PATO_secondary, new TermInfo(CVID.PATO_secondary, @"PATO", @"PATO:0002632", @"secondary", @"A quality in which the effect or outcome is not primary or the focus of the observation.", false));
            TermData.Add(CVID.PATO_hemispheroid, new TermInfo(CVID.PATO_hemispheroid, @"PATO", @"PATO:0005000", @"hemispheroid", @"A 3-D shape that is half of a sphere.", false));
            TermData.Add(CVID.PATO_variability_of_count, new TermInfo(CVID.PATO_variability_of_count, @"PATO", @"PATO:0005001", @"variability of count", @"A variability quality inhering in the bearer by virtue of the bearer having a variable number or count of an entity.", false));
            TermData.Add(CVID.PATO_pear_shaped, new TermInfo(CVID.PATO_pear_shaped, @"PATO", @"PATO:0005002", @"pear shaped", @"Having the shape of a pear; tapering near the top and bulging toward the base or bottom. From thefreedictionary.com", false));
            TermData.Add(CVID.PATO_paddle_shaped, new TermInfo(CVID.PATO_paddle_shaped, @"PATO", @"PATO:0005003", @"paddle shaped", @"A quality inhering in a bearer by virtue of the bearer's resembling the form of a paddle.", false));
            TermData.Add(CVID.PATO_subelliptical, new TermInfo(CVID.PATO_subelliptical, @"PATO", @"PATO:0005004", @"subelliptical", @"A shape that is almost an ellipse.", false));
            TermData.Add(CVID.PATO_radiating, new TermInfo(CVID.PATO_radiating, @"PATO", @"PATO:0005005", @"radiating", @"Shape quality inhering in a bearer expanding outward, or having parts expanding outward, from a center point.", false));
            TermData.Add(CVID.PATO_differentiated_from, new TermInfo(CVID.PATO_differentiated_from, @"PATO", @"PATO:0005006", @"differentiated from", @"A morphology quality inhering in a bearer by virtue of the bearer's being morphologically distinguishable from another entity.", false));
            TermData.Add(CVID.PATO_hypsodont, new TermInfo(CVID.PATO_hypsodont, @"PATO", @"PATO:0005007", @"hypsodont", @"A 3-D shape inhering in a bearer by virtue of the bearer's having dentition characterized by high-crowned teeth and enamel which extends far past the gum line, which provides extra material for wear and tear.", false));
            TermData.Add(CVID.PATO_brachydont, new TermInfo(CVID.PATO_brachydont, @"PATO", @"PATO:0005008", @"brachydont", @"A 3-D shape inhering in a bearer by virtue of the bearer's having dentition characterized by low-crowned teeth. Human teeth are brachydont.", false));
            TermData.Add(CVID.PATO_molariform, new TermInfo(CVID.PATO_molariform, @"PATO", @"PATO:0005009", @"molariform", @"A 3-D shape inhering in a bearer by virtue of the bearer's having an entity in the form of a molar tooth.", false));
            TermData.Add(CVID.PATO_plumose, new TermInfo(CVID.PATO_plumose, @"PATO", @"PATO:0005010", @"plumose", @"A branched quality inhering in a bearer by virtue of the bearer's having many fine filaments or branches that give a feathery appearance: for example, resembling a feather.", false));
            TermData.Add(CVID.PATO_continuous_with, new TermInfo(CVID.PATO_continuous_with, @"PATO", @"PATO:0005011", @"continuous with", @"A positional quality inhering in a bearer by virtue of the bearer possessing an uninterrupted or unbroken connection or spatial distribution relative to the position of another entity.", false));
            TermData.Add(CVID.PATO_complete_structure, new TermInfo(CVID.PATO_complete_structure, @"PATO", @"PATO:0005012", @"complete structure", @"A structural quality inhering in a bearer by virtue of the bearer being fully formed compared to entities lacking parts.", false));
            TermData.Add(CVID.PATO_incomplete_structure, new TermInfo(CVID.PATO_incomplete_structure, @"PATO", @"PATO:0005013", @"incomplete structure", @"A structural quality inhering in a bearer by virtue of the bearer's lacking parts or having a reduced form compared to fully formed entities.", false));
            TermData.Add(CVID.PATO_subspherical, new TermInfo(CVID.PATO_subspherical, @"PATO", @"PATO:0005014", @"subspherical", @"A spheroid shape quality inhering in a bearer by virtue of the bearer's being nearly, but not perfectly, spherical.", false));
            TermData.Add(CVID.PATO_tapered_size, new TermInfo(CVID.PATO_tapered_size, @"PATO", @"PATO:0005015", @"tapered size", @"A size quality inhering in an entity or set of entities in which size increases or decreases along the extent of the entity or set.", false));
            TermData.Add(CVID.PATO_surrounded_by, new TermInfo(CVID.PATO_surrounded_by, @"PATO", @"PATO:0005016", @"surrounded by", @"A positional quality inhering in a bearer by virtue of the bearer's being enclosed on all sides by another entity.", false));
            TermData.Add(CVID.PATO_labiolingually_compressed, new TermInfo(CVID.PATO_labiolingually_compressed, @"PATO", @"PATO:0005017", @"labiolingually compressed", @"A quality inhering in a bearer by virtue of the bearer's being compressed from the side facing the lips to the side facing the tongue.", false));
            TermData.Add(CVID.PATO_mesiodistally_compressed, new TermInfo(CVID.PATO_mesiodistally_compressed, @"PATO", @"PATO:0005018", @"mesiodistally compressed", @"A quality inhering in a bearer by virtue of the bearer's being compressed from the side facing the midline of the jaw to the side opposite the midline.", false));
            TermData.Add(CVID.PATO_curved_lingually, new TermInfo(CVID.PATO_curved_lingually, @"PATO", @"PATO:0005019", @"curved lingually", @"A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the tongue.", false));
            TermData.Add(CVID.PATO_irregularly_shaped, new TermInfo(CVID.PATO_irregularly_shaped, @"PATO", @"PATO:0005020", @"irregularly shaped", @"A shape quality inhering on a bearer by virtue of a bearer's shape lacking in pattern or uniformity; for example, it may have sides of different lengths, different curvatures, or unequal angles.", false));
            TermData.Add(CVID.PATO_unicuspidate, new TermInfo(CVID.PATO_unicuspidate, @"PATO", @"PATO:0005021", @"unicuspidate", @"Cuspidate quality inhering in a bearer by virtue of the bearer's possessing a single cusp.", false));
            TermData.Add(CVID.PATO_uniform_diameter, new TermInfo(CVID.PATO_uniform_diameter, @"PATO", @"PATO:0005022", @"uniform diameter", @"A diameter that remains constant throughout the extent of an entity.", false));
            TermData.Add(CVID.PATO_parasagittal_orientation, new TermInfo(CVID.PATO_parasagittal_orientation, @"PATO", @"PATO:0005023", @"parasagittal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is in the parasagittal plane.", false));
            TermData.Add(CVID.PATO_longitudinal_orientation, new TermInfo(CVID.PATO_longitudinal_orientation, @"PATO", @"PATO:0005024", @"longitudinal orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed along the longitudinal or anterior-posterior axis.", false));
            TermData.Add(CVID.PATO_maximally_connected, new TermInfo(CVID.PATO_maximally_connected, @"PATO", @"PATO:0010000", @"maximally connected", @"A structural quality inhering in the bearer by virtue of the bearer consisting of a single, maximally connected structure.", false));
            TermData.Add(CVID.PATO_disconnected, new TermInfo(CVID.PATO_disconnected, @"PATO", @"PATO:0010001", @"disconnected", @"A structural quality inhering in the bearer by virtue of the bearer consisting of multiple structures lacking any physical connection to each other.", false));
            TermData.Add(CVID.PATO_propagation_velocity, new TermInfo(CVID.PATO_propagation_velocity, @"PATO", @"PATO:0010002", @"propagation velocity", @"The velocity of spatial propagation of a process. Examples include the velocity of propagation of an action potential along an axon.", false));
            TermData.Add(CVID.PATO_increased_propagation_velocity, new TermInfo(CVID.PATO_increased_propagation_velocity, @"PATO", @"PATO:0010003", @"increased propagation velocity", @"A propagation velocity that is higher than normal.", false));
            TermData.Add(CVID.PATO_decreased_propagation_velocity, new TermInfo(CVID.PATO_decreased_propagation_velocity, @"PATO", @"PATO:0010004", @"decreased propagation velocity", @"A propagation velocity that is lower than normal.", false));
            TermData.Add(CVID.PATO_spatial_distribution_of_a_process, new TermInfo(CVID.PATO_spatial_distribution_of_a_process, @"PATO", @"PATO:0010005", @"spatial distribution of a process", @"A physical quality of a process that is its spatial distribution.  For example, bone mineralization follows stereotypical spatial distribution patterns during development, which may be altered in some phenotypes.", false));
            TermData.Add(CVID.PATO_absence_due_to_degeneration, new TermInfo(CVID.PATO_absence_due_to_degeneration, @"PATO", @"PATO:0015001", @"absence due to degeneration", @"Absence due to a degenerative process.", false));
            TermData.Add(CVID.PATO_process_efficacy, new TermInfo(CVID.PATO_process_efficacy, @"PATO", @"PATO:0015002", @"process efficacy", @"The ability of a process to produce its output.", false));
            TermData.Add(CVID.PATO_decreased_efficacy, new TermInfo(CVID.PATO_decreased_efficacy, @"PATO", @"PATO:0015003", @"decreased efficacy", @"A decrease in the ability of a process to produce its output.", false));
            TermData.Add(CVID.PATO_increased_efficacy, new TermInfo(CVID.PATO_increased_efficacy, @"PATO", @"PATO:0015004", @"increased efficacy", @"A increase in the ability of a process to produce its output.", false));
            TermData.Add(CVID.PATO_tendrilous, new TermInfo(CVID.PATO_tendrilous, @"PATO", @"PATO:0015005", @"tendrilous", @"Slender and spirally coiled.", false));
            TermData.Add(CVID.PATO_polymeric, new TermInfo(CVID.PATO_polymeric, @"PATO", @"PATO:0015006", @"polymeric", @"A quality inhering in a structure by virtue of it consisting of many of repeated, similar or identical subunits, arranged in some orderly array.", false));
            TermData.Add(CVID.PATO_prominence, new TermInfo(CVID.PATO_prominence, @"PATO", @"PATO:0015007", @"prominence", @"A quality inhering in a bearer by virtue of the degree to which the bearers stands out or projects beyond a surface or line.", false));
            TermData.Add(CVID.PATO_distensibility, new TermInfo(CVID.PATO_distensibility, @"PATO", @"PATO:0015008", @"distensibility", @"A quality inhering in a bearer by virtue of the extent to which the bearer is capable of being stretched or swollen.", false));
            TermData.Add(CVID.PATO_humidity, new TermInfo(CVID.PATO_humidity, @"PATO", @"PATO:0015009", @"humidity", @"A quality inhering in air by virtue of the partial pressure exerted by the bearer's water vapour content.", false));
            TermData.Add(CVID.PATO_increased_humidity, new TermInfo(CVID.PATO_increased_humidity, @"PATO", @"PATO:0015010", @"increased humidity", @"An increase in humidity.", false));
            TermData.Add(CVID.PATO_decreased_humidity, new TermInfo(CVID.PATO_decreased_humidity, @"PATO", @"PATO:0015011", @"decreased humidity", @"An decrease in humidity.", false));
            TermData.Add(CVID.PATO_quality_of_a_plasma, new TermInfo(CVID.PATO_quality_of_a_plasma, @"PATO", @"PATO:0015012", @"quality of a plasma", @"A physical quality inhering in a bearer by virtue of the bearer's exhibiting the physical characteristics of an entity consisting of roughly equal proportions of positively and negatively charged particles, having neither a defined volume nor defined shape, having internal magnetic fields, and being electrically conductive.", false));
            TermData.Add(CVID.PATO_degree_of_illumination, new TermInfo(CVID.PATO_degree_of_illumination, @"PATO", @"PATO:0015013", @"degree of illumination", @"The degree to which the bearer is exposed to visible light.", false));
            TermData.Add(CVID.PATO_increased_degree_of_illumination, new TermInfo(CVID.PATO_increased_degree_of_illumination, @"PATO", @"PATO:0015014", @"increased degree of illumination", @"An increase in illumination.", false));
            TermData.Add(CVID.PATO_decreased_degree_of_illumination, new TermInfo(CVID.PATO_decreased_degree_of_illumination, @"PATO", @"PATO:0015015", @"decreased degree of illumination", @"An decrease in illumination.", false));
            TermData.Add(CVID.PATO_stepped, new TermInfo(CVID.PATO_stepped, @"PATO", @"PATO:0015016", @"stepped", @"Having a shape or form that resembles a step of a stairway (e.g., a ledge or offset margin).", false));
            TermData.Add(CVID.PATO_quality_of_a_colloid, new TermInfo(CVID.PATO_quality_of_a_colloid, @"PATO", @"PATO:0015017", @"quality of a colloid", @"A physical quality inhering in an entity by virtue of a portion of the bearer's molecular or polymolecular constituents present in one phase being dispersed in a portion of the bearer's constituents present in another phase.", false));
            TermData.Add(CVID.PATO_quality_of_an_aerosol, new TermInfo(CVID.PATO_quality_of_an_aerosol, @"PATO", @"PATO:0015018", @"quality of an aerosol", @"A physical quality inhering in an entity by virtue of the bearer's solid or liquid constituents being suspended in a gas.", false));
            TermData.Add(CVID.PATO_C_shaped, new TermInfo(CVID.PATO_C_shaped, @"PATO", @"PATO:0015019", @"C-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter C.", false));
            TermData.Add(CVID.PATO_J_shaped, new TermInfo(CVID.PATO_J_shaped, @"PATO", @"PATO:0015020", @"J-shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter J.", false));
            TermData.Add(CVID.PATO_combustibility, new TermInfo(CVID.PATO_combustibility, @"PATO", @"PATO:0015021", @"combustibility", @"The propensity of a material to undergo combustion. Combustion encompasses smouldering and flaming combustion. Combustibility is usually applied to solids.", false));
            TermData.Add(CVID.PATO_increased_combustibility, new TermInfo(CVID.PATO_increased_combustibility, @"PATO", @"PATO:0015022", @"increased combustibility", @"An increase in combustibility.", false));
            TermData.Add(CVID.PATO_decreased_combustibility, new TermInfo(CVID.PATO_decreased_combustibility, @"PATO", @"PATO:0015023", @"decreased combustibility", @"An decrease in combustibility.", false));
            TermData.Add(CVID.PATO_increased_porosity, new TermInfo(CVID.PATO_increased_porosity, @"PATO", @"PATO:0015024", @"increased porosity", @"An increase in porosity.", false));
            TermData.Add(CVID.PATO_decreased_porosity, new TermInfo(CVID.PATO_decreased_porosity, @"PATO", @"PATO:0015025", @"decreased porosity", @"An decrease in porosity.", false));
            TermData.Add(CVID.PATO_stability, new TermInfo(CVID.PATO_stability, @"PATO", @"PATO:0015026", @"stability", @"quality, state, or degree of being stable.", false));
            TermData.Add(CVID.PATO_increased_stability, new TermInfo(CVID.PATO_increased_stability, @"PATO", @"PATO:0015027", @"increased stability", @"An increase in stability.", false));
            TermData.Add(CVID.PATO_decreased_stability, new TermInfo(CVID.PATO_decreased_stability, @"PATO", @"PATO:0015028", @"decreased stability", @"A decrease in stability.", false));
            TermData.Add(CVID.PATO_quality_of_a_suspension, new TermInfo(CVID.PATO_quality_of_a_suspension, @"PATO", @"PATO:0015029", @"quality of a suspension", @"A physical quality inhering in an entity by virtue of the bearer's solid or liquid constituents being transiently dispersed in a solid, liquid, or gas before settling due to gravity or centrifugal forces.", false));
            TermData.Add(CVID.PATO_plume_shaped, new TermInfo(CVID.PATO_plume_shaped, @"PATO", @"PATO:0015030", @"plume-shaped", @"A shape that ineres in a bearer by virtue of the bearer's mass being distributed in a feather-like fashion.", false));
            TermData.Add(CVID.PATO_genotypic_sex, new TermInfo(CVID.PATO_genotypic_sex, @"PATO", @"PATO:0020000", @"genotypic sex", @"A biological sex quality inhering in an individual based upon genotypic composition of sex chromosomes.", false));
            TermData.Add(CVID.PATO_male_genotypic_sex, new TermInfo(CVID.PATO_male_genotypic_sex, @"PATO", @"PATO:0020001", @"male genotypic sex", @"A biological sex quality inhering in an individual based upon genotypic composition that confers the capability for an organism to differentiate male gonads.", false));
            TermData.Add(CVID.PATO_female_genotypic_sex, new TermInfo(CVID.PATO_female_genotypic_sex, @"PATO", @"PATO:0020002", @"female genotypic sex", @"A biological sex quality inhering in an individual or a population based upon genotypic composition that confers the capability for an organism to differentiate female gonads.", false));
            TermData.Add(CVID.PATO_potability, new TermInfo(CVID.PATO_potability, @"PATO", @"PATO:0025000", @"potability", @"A physical quality inhering in a bearer by virtue of the bearer's disposition to being fit to be used as a safe means of hydration.", false));
            TermData.Add(CVID.PATO_non_potable, new TermInfo(CVID.PATO_non_potable, @"PATO", @"PATO:0025001", @"non-potable", @"A physical quality inhering in a bearer by virtue of the bearer not being suitable for use as a safe means of hydration.", false));
            TermData.Add(CVID.PATO_potable, new TermInfo(CVID.PATO_potable, @"PATO", @"PATO:0025002", @"potable", @"A physical quality inhering in a bearer by virtue of the bearer being suitable for use as a safe means of hydration.", false));
            TermData.Add(CVID.PATO_anterioralized, new TermInfo(CVID.PATO_anterioralized, @"PATO", @"PATO:0030000", @"anterioralized", @"A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally anterior structures and missing some or all of what are normally posterior structures.", false));
            TermData.Add(CVID.PATO_dorsalized, new TermInfo(CVID.PATO_dorsalized, @"PATO", @"PATO:0030001", @"dorsalized", @"A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally dorsal structures and missing some or all of what are normally ventral structures.", false));
            TermData.Add(CVID.PATO_posterioralized, new TermInfo(CVID.PATO_posterioralized, @"PATO", @"PATO:0030002", @"posterioralized", @"A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally posterior structures and missing some or all of what are normally anterior structures.", false));
            TermData.Add(CVID.PATO_ventralized, new TermInfo(CVID.PATO_ventralized, @"PATO", @"PATO:0030003", @"ventralized", @"A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally ventral structures and missing some or all of what are normally dorsal structures.", false));
            TermData.Add(CVID.PATO_partially_anterioralized, new TermInfo(CVID.PATO_partially_anterioralized, @"PATO", @"PATO:0030004", @"partially anterioralized", @"An anterioralized quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally anterior structures and missing some but not all of what are normally posterior structures.", false));
            TermData.Add(CVID.PATO_partially_dorsalized, new TermInfo(CVID.PATO_partially_dorsalized, @"PATO", @"PATO:0030005", @"partially dorsalized", @"A dorsalized quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally dorsal structures and missing some but not all of what are normally ventral structures.", false));
            TermData.Add(CVID.PATO_partially_posterioralized, new TermInfo(CVID.PATO_partially_posterioralized, @"PATO", @"PATO:0030006", @"partially posterioralized", @"A posterioralized quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally posterior structures and missing some but not all of what are normally anterior structures.", false));
            TermData.Add(CVID.PATO_partially_ventralized, new TermInfo(CVID.PATO_partially_ventralized, @"PATO", @"PATO:0030007", @"partially ventralized", @"A ventralized quality inhering in a bearer by virtue of the bearer's gross morphology containing what are normally ventral structures and missing some but not all of what are normally dorsal structures.", false));
            TermData.Add(CVID.PATO_heterotaxic, new TermInfo(CVID.PATO_heterotaxic, @"PATO", @"PATO:0040000", @"heterotaxic", @"An oriented quality inhering in a bearer by virtue of the bearer's being abnormally placed or arranged.", false));
            TermData.Add(CVID.PATO_ring_shaped1, new TermInfo(CVID.PATO_ring_shaped1, @"PATO", @"PATO:0040001", @"ring-shaped", @"Shaped like a ring", false));
            TermData.Add(CVID.PATO_originates_from, new TermInfo(CVID.PATO_originates_from, @"PATO", @"PATO:0040002", @"originates from", @"A positional quality inhering in a bearer by virtue of some aspect of that bearer beginning from a position on another entity.", false));
            TermData.Add(CVID.PATO_pathogenicity, new TermInfo(CVID.PATO_pathogenicity, @"PATO", @"PATO:0040003", @"pathogenicity", @"The ability of a pathogen to produce an infectious disease or disorder in an another organism.", false));
            TermData.Add(CVID.PATO_plush, new TermInfo(CVID.PATO_plush, @"PATO", @"PATO:0040004", @"plush", @"A texture quality inhering in a bearer by virtue of the bearer's being covered or partially covered with hair that has increased thickness and softness.", false));
            TermData.Add(CVID.PATO_posteroventral_orientation, new TermInfo(CVID.PATO_posteroventral_orientation, @"PATO", @"PATO:0040005", @"posteroventral orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posteroventrally.", false));
            TermData.Add(CVID.PATO_crown_like, new TermInfo(CVID.PATO_crown_like, @"PATO", @"PATO:0040006", @"crown like", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape like a crown.", false));
            TermData.Add(CVID.PATO_shell_shaped, new TermInfo(CVID.PATO_shell_shaped, @"PATO", @"PATO:0040007", @"shell shaped", @"A shape quality inhering in a bearer by virtue of the bearer's having a shape like a shell.", false));
            TermData.Add(CVID.PATO_fringed, new TermInfo(CVID.PATO_fringed, @"PATO", @"PATO:0040008", @"fringed", @"A shape quality inhering in a bearer by virtue of the bearer's having an ornamental border consisting of short straight or twisted threads or strips hanging from cut or raveled edges or from a separate band.", false));
            TermData.Add(CVID.PATO_bowl_shaped, new TermInfo(CVID.PATO_bowl_shaped, @"PATO", @"PATO:0040009", @"bowl shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of a bowl.", false));
            TermData.Add(CVID.PATO_mobile_relative_to, new TermInfo(CVID.PATO_mobile_relative_to, @"PATO", @"PATO:0040010", @"mobile relative to", @"Mobility relative to a second entity.", false));
            TermData.Add(CVID.PATO_immobile_relative_to, new TermInfo(CVID.PATO_immobile_relative_to, @"PATO", @"PATO:0040011", @"immobile relative to", @"Immobility relative to a second entity.", false));
            TermData.Add(CVID.PATO_plug_shaped, new TermInfo(CVID.PATO_plug_shaped, @"PATO", @"PATO:0040012", @"plug shaped", @"A shape that is in the form of a plug, being tube-like and expanded on one end.", false));
            TermData.Add(CVID.PATO_dorsomedial_orientation, new TermInfo(CVID.PATO_dorsomedial_orientation, @"PATO", @"PATO:0040013", @"dorsomedial orientation", @"An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed dorsomedially.", false));
            TermData.Add(CVID.PATO_band_shaped, new TermInfo(CVID.PATO_band_shaped, @"PATO", @"PATO:0040014", @"band shaped", @"A shape that is in the form of a narrow strip encircling an object.", false));
            TermData.Add(CVID.PATO_trough_shaped, new TermInfo(CVID.PATO_trough_shaped, @"PATO", @"PATO:0040015", @"trough shaped", @"A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape resembling that of a trough, being narrow, long, and boxlike in shape.", false));
            TermData.Add(CVID.PATO_pentagonal, new TermInfo(CVID.PATO_pentagonal, @"PATO", @"PATO:0040016", @"pentagonal", @"A shape quality inhering in a bearer by virtue of the bearer's having five angles and five sides.", false));
            TermData.Add(CVID.PATO_dysplastic_growth, new TermInfo(CVID.PATO_dysplastic_growth, @"PATO", @"PATO:0040017", @"dysplastic growth", @"A growth quality of occurrent in which the growth of an organism, structure or group of organisms is abnormal.", false));
            TermData.Add(CVID.PATO_fibrotic, new TermInfo(CVID.PATO_fibrotic, @"PATO", @"PATO:0040019", @"fibrotic", @"Fibrosis is the formation of excess fibrous connective tissue in an organ or tissue in a reparative or reactive process.", false));
            TermData.Add(CVID.PATO_spayed_female, new TermInfo(CVID.PATO_spayed_female, @"PATO", @"PATO:0040020", @"spayed female", @"Female quality of being incapable to reproduce because of functional loss of the ovaries and/or uterus from surgical removal.", false));
            TermData.Add(CVID.PATO_lesioned, new TermInfo(CVID.PATO_lesioned, @"PATO", @"PATO:0040025", @"lesioned", @"A structural quality which is held by a bearer where a localized pathological or traumatic structural change, damage, deformity, or discontinuity of tissue, organ, or body part is present.", false));
            TermData.Add(CVID.PATO_normal_rate, new TermInfo(CVID.PATO_normal_rate, @"PATO", @"PATO:0045000", @"normal rate", @"A rate which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_object_quality, new TermInfo(CVID.PATO_normal_object_quality, @"PATO", @"PATO:0045001", @"normal object quality", @"A quality of an object that has a value that is normal or average.", false));
            TermData.Add(CVID.PATO_normal_acidity, new TermInfo(CVID.PATO_normal_acidity, @"PATO", @"PATO:0045002", @"normal acidity", @"An acidity which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_adhesivity, new TermInfo(CVID.PATO_normal_adhesivity, @"PATO", @"PATO:0045003", @"normal adhesivity", @"A adhesivity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_affinity, new TermInfo(CVID.PATO_normal_affinity, @"PATO", @"PATO:0045004", @"normal affinity", @"An affinity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_age, new TermInfo(CVID.PATO_normal_age, @"PATO", @"PATO:0045005", @"normal age", @"An age which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_avidity, new TermInfo(CVID.PATO_normal_avidity, @"PATO", @"PATO:0045006", @"normal avidity", @"An avidity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_behavioural_activity, new TermInfo(CVID.PATO_normal_behavioural_activity, @"PATO", @"PATO:0045007", @"normal behavioural activity", @"A behavioural quality of a process inhering in a bearer by virtue of the bearer's exhibiting normal or average activity.", false));
            TermData.Add(CVID.PATO_normal_cellular_motility, new TermInfo(CVID.PATO_normal_cellular_motility, @"PATO", @"PATO:0045008", @"normal cellular motility", @"A cellular motility which is normal or average.", false));
            TermData.Add(CVID.PATO_normal_coiling, new TermInfo(CVID.PATO_normal_coiling, @"PATO", @"PATO:0045009", @"normal coiling", @"A coiling which is normal or average.", false));
            TermData.Add(CVID.PATO_normal_concentration, new TermInfo(CVID.PATO_normal_concentration, @"PATO", @"PATO:0045010", @"normal concentration", @"A concentration which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_contractility, new TermInfo(CVID.PATO_normal_contractility, @"PATO", @"PATO:0045011", @"normal contractility", @"A contractility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_coordination, new TermInfo(CVID.PATO_normal_coordination, @"PATO", @"PATO:0045012", @"normal coordination", @"A coordination which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_curvature, new TermInfo(CVID.PATO_normal_curvature, @"PATO", @"PATO:0045013", @"normal curvature", @"A curvature which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_distance, new TermInfo(CVID.PATO_normal_distance, @"PATO", @"PATO:0045014", @"normal distance", @"A distance which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_efficiency, new TermInfo(CVID.PATO_normal_efficiency, @"PATO", @"PATO:0045015", @"normal efficiency", @"An efficiency which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_elasticity, new TermInfo(CVID.PATO_normal_elasticity, @"PATO", @"PATO:0045016", @"normal elasticity", @"An elasticity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_fecundity, new TermInfo(CVID.PATO_normal_fecundity, @"PATO", @"PATO:0045017", @"normal fecundity", @"A fecundity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_female_fertility, new TermInfo(CVID.PATO_normal_female_fertility, @"PATO", @"PATO:0045018", @"normal female fertility", @"A female fertility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_female_receptivity, new TermInfo(CVID.PATO_normal_female_receptivity, @"PATO", @"PATO:0045019", @"normal female receptivity", @"A female receptivity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_fertility, new TermInfo(CVID.PATO_normal_fertility, @"PATO", @"PATO:0045020", @"normal fertility", @"A fertility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_flexibility, new TermInfo(CVID.PATO_normal_flexibility, @"PATO", @"PATO:0045021", @"normal flexibility", @"A flexibility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_fluid_flow, new TermInfo(CVID.PATO_normal_fluid_flow, @"PATO", @"PATO:0045022", @"normal fluid flow", @"A fluid flow which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_fluorescence, new TermInfo(CVID.PATO_normal_fluorescence, @"PATO", @"PATO:0045023", @"normal fluorescence", @"A fluorescence which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_force, new TermInfo(CVID.PATO_normal_force, @"PATO", @"PATO:0045024", @"normal force", @"A force which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_fragility, new TermInfo(CVID.PATO_normal_fragility, @"PATO", @"PATO:0045025", @"normal fragility", @"A fragility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_life_span, new TermInfo(CVID.PATO_normal_life_span, @"PATO", @"PATO:0045026", @"normal life span", @"A life span which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_magnetism, new TermInfo(CVID.PATO_normal_magnetism, @"PATO", @"PATO:0045027", @"normal magnetism", @"A magnetism which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_male_fertility, new TermInfo(CVID.PATO_normal_male_fertility, @"PATO", @"PATO:0045028", @"normal male fertility", @"A male fertility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_male_receptivity, new TermInfo(CVID.PATO_normal_male_receptivity, @"PATO", @"PATO:0045029", @"normal male receptivity", @"A male receptivity which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_mass, new TermInfo(CVID.PATO_normal_mass, @"PATO", @"PATO:0045030", @"normal mass", @"A mass which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_mass_density, new TermInfo(CVID.PATO_normal_mass_density, @"PATO", @"PATO:0045031", @"normal mass density", @"A density which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_mobility, new TermInfo(CVID.PATO_normal_mobility, @"PATO", @"PATO:0045032", @"normal mobility", @"A mobility which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_odor, new TermInfo(CVID.PATO_normal_odor, @"PATO", @"PATO:0045033", @"normal odor", @"An odor quality of having relatively normal or average odor.", false));
            TermData.Add(CVID.PATO_normal_osmolality, new TermInfo(CVID.PATO_normal_osmolality, @"PATO", @"PATO:0045034", @"normal osmolality", @"An osmolality which is relatively normal or average odor.", false));
            TermData.Add(CVID.PATO_normal_osmolarity, new TermInfo(CVID.PATO_normal_osmolarity, @"PATO", @"PATO:0045035", @"normal osmolarity", @"An osmolarity which is relatively normal or average odor.", false));
            TermData.Add(CVID.PATO_normal_permeability, new TermInfo(CVID.PATO_normal_permeability, @"PATO", @"PATO:0045036", @"normal permeability", @"A permeability which is relatively normal or average.", false));
            TermData.Add(CVID.PATO_normal_phosphorylation, new TermInfo(CVID.PATO_normal_phosphorylation, @"PATO", @"PATO:0045037", @"normal phosphorylation", @"A quality inhering in a bearer by virtue of the bearer's being phosphorylated to a normal or average extent.", false));
            TermData.Add(CVID.PATO_normal_photosensitivity, new TermInfo(CVID.PATO_normal_photosensitivity, @"PATO", @"PATO:0045038", @"normal photosensitivity", @"A photosensitivity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_pigmentation, new TermInfo(CVID.PATO_normal_pigmentation, @"PATO", @"PATO:0045039", @"normal pigmentation", @"A degree of pigmentation quality which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_position, new TermInfo(CVID.PATO_normal_position, @"PATO", @"PATO:0045040", @"normal position", @"A position which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_angle_to, new TermInfo(CVID.PATO_normal_angle_to, @"PATO", @"PATO:0045041", @"normal angle to", @"An angle which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_distribution, new TermInfo(CVID.PATO_normal_distribution, @"PATO", @"PATO:0045042", @"normal distribution", @"A distribution which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_elevation, new TermInfo(CVID.PATO_normal_elevation, @"PATO", @"PATO:0045043", @"normal elevation", @"An elevation which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_pressure, new TermInfo(CVID.PATO_normal_pressure, @"PATO", @"PATO:0045044", @"normal pressure", @"A pressure which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_radioactivity, new TermInfo(CVID.PATO_normal_radioactivity, @"PATO", @"PATO:0045045", @"normal radioactivity", @"A radioactivity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_radiopacity, new TermInfo(CVID.PATO_normal_radiopacity, @"PATO", @"PATO:0045046", @"normal radiopacity", @"A radiopacity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_resistance_to, new TermInfo(CVID.PATO_normal_resistance_to, @"PATO", @"PATO:0045047", @"normal resistance to", @"A resistance to a stimulus which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_sensitivity_to_irradiation, new TermInfo(CVID.PATO_normal_sensitivity_to_irradiation, @"PATO", @"PATO:0045048", @"normal sensitivity to irradiation", @"A sensitivity to irradiation which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_sensitivity_toward, new TermInfo(CVID.PATO_normal_sensitivity_toward, @"PATO", @"PATO:0045049", @"normal sensitivity toward", @"A sensitivity toward an external stimulus which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_size, new TermInfo(CVID.PATO_normal_size, @"PATO", @"PATO:0045050", @"normal size", @"A size quality which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_area, new TermInfo(CVID.PATO_normal_area, @"PATO", @"PATO:0045051", @"normal area", @"An area which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_depth, new TermInfo(CVID.PATO_normal_depth, @"PATO", @"PATO:0045052", @"normal depth", @"A depth quality which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_height, new TermInfo(CVID.PATO_normal_height, @"PATO", @"PATO:0045053", @"normal height", @"A height which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_length, new TermInfo(CVID.PATO_normal_length, @"PATO", @"PATO:0045054", @"normal length", @"A length quality which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_diameter, new TermInfo(CVID.PATO_normal_diameter, @"PATO", @"PATO:0045055", @"normal diameter", @"A diameter which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_anterior_posterior_diameter, new TermInfo(CVID.PATO_normal_anterior_posterior_diameter, @"PATO", @"PATO:0045056", @"normal anterior-posterior diameter", @"An anterior-posterior diameter which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_perimeter, new TermInfo(CVID.PATO_normal_perimeter, @"PATO", @"PATO:0045057", @"normal perimeter", @"A perimeter which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_circumference, new TermInfo(CVID.PATO_normal_circumference, @"PATO", @"PATO:0045058", @"normal circumference", @"A circumference which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_thickness, new TermInfo(CVID.PATO_normal_thickness, @"PATO", @"PATO:0045059", @"normal thickness", @"A thickness which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_volume, new TermInfo(CVID.PATO_normal_volume, @"PATO", @"PATO:0045060", @"normal volume", @"A volume which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_width, new TermInfo(CVID.PATO_normal_width, @"PATO", @"PATO:0045061", @"normal width", @"A width which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_solubility, new TermInfo(CVID.PATO_normal_solubility, @"PATO", @"PATO:0045062", @"normal solubility", @"A solubility which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_speed, new TermInfo(CVID.PATO_normal_speed, @"PATO", @"PATO:0045063", @"normal speed", @"A speed which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_strength, new TermInfo(CVID.PATO_normal_strength, @"PATO", @"PATO:0045064", @"normal strength", @"A strength which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_fatigability, new TermInfo(CVID.PATO_normal_fatigability, @"PATO", @"PATO:0045065", @"normal fatigability", @"A fatigability which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_susceptibility_toward, new TermInfo(CVID.PATO_normal_susceptibility_toward, @"PATO", @"PATO:0045066", @"normal susceptibility toward", @"A susceptibility toward an external stimulus which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_temperature, new TermInfo(CVID.PATO_normal_temperature, @"PATO", @"PATO:0045067", @"normal temperature", @"A temperature which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_tendency, new TermInfo(CVID.PATO_normal_tendency, @"PATO", @"PATO:0045068", @"normal tendency", @"A tendency which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_threshold, new TermInfo(CVID.PATO_normal_threshold, @"PATO", @"PATO:0045069", @"normal threshold", @"A threshold which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_tolerance_to, new TermInfo(CVID.PATO_normal_tolerance_to, @"PATO", @"PATO:0045070", @"normal tolerance to", @"A tolerance to an external stimulus which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_tonicity, new TermInfo(CVID.PATO_normal_tonicity, @"PATO", @"PATO:0045071", @"normal tonicity", @"A tonicity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_turgor, new TermInfo(CVID.PATO_normal_turgor, @"PATO", @"PATO:0045072", @"normal turgor", @"A turgor which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_process_quality, new TermInfo(CVID.PATO_normal_process_quality, @"PATO", @"PATO:0045073", @"normal process quality", @"A quality of aprocess that has a value that is normal or average.", false));
            TermData.Add(CVID.PATO_normal_variability, new TermInfo(CVID.PATO_normal_variability, @"PATO", @"PATO:0045074", @"normal variability", @"A variability which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_variability_of_color, new TermInfo(CVID.PATO_normal_variability_of_color, @"PATO", @"PATO:0045075", @"normal variability of color", @"A variability which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_variability_of_rate, new TermInfo(CVID.PATO_normal_variability_of_rate, @"PATO", @"PATO:0045076", @"normal variability of rate", @"A variability of rate which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_variability_of_size, new TermInfo(CVID.PATO_normal_variability_of_size, @"PATO", @"PATO:0045077", @"normal variability of size", @"A variability of size which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_variability_of_temperature, new TermInfo(CVID.PATO_normal_variability_of_temperature, @"PATO", @"PATO:0045078", @"normal variability of temperature", @"A variability of temperature which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_velocity, new TermInfo(CVID.PATO_normal_velocity, @"PATO", @"PATO:0045079", @"normal velocity", @"A velocity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_virulence, new TermInfo(CVID.PATO_normal_virulence, @"PATO", @"PATO:0045080", @"normal virulence", @"A virulence which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_viscosity, new TermInfo(CVID.PATO_normal_viscosity, @"PATO", @"PATO:0045081", @"normal viscosity", @"A viscosity which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_waxiness, new TermInfo(CVID.PATO_normal_waxiness, @"PATO", @"PATO:0045082", @"normal waxiness", @"A waxiness which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_wetness, new TermInfo(CVID.PATO_normal_wetness, @"PATO", @"PATO:0045083", @"normal wetness", @"A wetness which is relatively normal or average", false));
            TermData.Add(CVID.PATO_normal_duration, new TermInfo(CVID.PATO_normal_duration, @"PATO", @"PATO:0045084", @"normal duration", @"A duration quality of a process which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_duration_of_temperature, new TermInfo(CVID.PATO_normal_duration_of_temperature, @"PATO", @"PATO:0045085", @"normal duration of temperature", @"A duration quality of temperature quality of a process which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_occurrence, new TermInfo(CVID.PATO_normal_occurrence, @"PATO", @"PATO:0045086", @"normal occurrence", @"An occurrence which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_frequency, new TermInfo(CVID.PATO_normal_frequency, @"PATO", @"PATO:0045087", @"normal frequency", @"A frequency which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_sensitivity_of_a_process, new TermInfo(CVID.PATO_normal_sensitivity_of_a_process, @"PATO", @"PATO:0045088", @"normal sensitivity of a process", @"A sensitivity of a process which is relatively normal.", false));
            TermData.Add(CVID.PATO_normal_sensitivity_of_a_process_to_oxygen, new TermInfo(CVID.PATO_normal_sensitivity_of_a_process_to_oxygen, @"PATO", @"PATO:0045089", @"normal sensitivity of a process to oxygen", @"A sensitivity of occurrent to oxygen which is relatively normal.", false));
            TermData.Add(CVID.PATO_cardinal_direction, new TermInfo(CVID.PATO_cardinal_direction, @"PATO", @"PATO:0045090", @"cardinal direction", @"The four cardinal directions or cardinal points are the directions north, east, south, and west, commonly denoted by their initials, N, E, S, W. East and west are at right angles to north and south, with east being in the clockwise direction of rotation from north and west being directly opposite east.", false));
            TermData.Add(CVID.PATO_north, new TermInfo(CVID.PATO_north, @"PATO", @"PATO:0045091", @"north", @"North is one of the four compass points or cardinal directions. It is the opposite of south and is perpendicular to east and west.", false));
            TermData.Add(CVID.PATO_east, new TermInfo(CVID.PATO_east, @"PATO", @"PATO:0045092", @"east", @"East is one of the four cardinal directions or points of the compass. It is the opposite direction from west.", false));
            TermData.Add(CVID.PATO_south, new TermInfo(CVID.PATO_south, @"PATO", @"PATO:0045093", @"south", @"South is one of the four cardinal directions or compass points. South is the polar opposite of north and is perpendicular to east and west.", false));
            TermData.Add(CVID.PATO_west, new TermInfo(CVID.PATO_west, @"PATO", @"PATO:0045094", @"west", @"West is one of the four cardinal directions or points of the compass. It is the opposite direction from east.", false));
            TermData.Add(CVID.PATO_rate_of_occurence, new TermInfo(CVID.PATO_rate_of_occurence, @"PATO", @"PATO:0050000", @"rate of occurence", @"The number of repeated events per unit time, occurring in a repeating series. (e.g. the number of heart beats occurring over 1 minute)", false));
            TermData.Add(CVID.PATO_rate_of_continuous_process, new TermInfo(CVID.PATO_rate_of_continuous_process, @"PATO", @"PATO:0050001", @"rate of continuous process", @"The rate of output of a continuous process. Example include: growth rate, cell migration rate, enzyme reaction rate.", false));
            TermData.Add(CVID.PATO_decreased_spatial_extent_of_a_process, new TermInfo(CVID.PATO_decreased_spatial_extent_of_a_process, @"PATO", @"PATO:0055001", @"decreased spatial extent of a process", @"A spatial distribution of a process in which the process occupies a smaller length, area, or volume than the reference process. For example, heterochromatin may form over a shorter length of a chromosome in a mutant than in wild type.", false));
            TermData.Add(CVID.PATO_increased_spatial_extent_of_a_process, new TermInfo(CVID.PATO_increased_spatial_extent_of_a_process, @"PATO", @"PATO:0055002", @"increased spatial extent of a process", @"A spatial distribution of a process in which the process occupies a greater length, area, or volume than the reference process. For example, heterochromatin may form over a shorter length of a chromosome in a mutant than in wild type.", false));
            TermData.Add(CVID.PATO_sex_specific, new TermInfo(CVID.PATO_sex_specific, @"PATO", @"PATO:0060001", @"sex-specific", @"A quality inhering in a bearer by virtue of the bearer's being present in one sex and absent from the other in members of the same species.", false));
            TermData.Add(CVID.PATO_male_specific, new TermInfo(CVID.PATO_male_specific, @"PATO", @"PATO:0060002", @"male-specific", @"A quality inhering in a bearer by virtue of the bearer's being present in males and absent from females in members of the same species.", false));
            TermData.Add(CVID.PATO_female_specific, new TermInfo(CVID.PATO_female_specific, @"PATO", @"PATO:0060003", @"female-specific", @"A quality inhering in a bearer by virtue of the bearer's being present in females and absent from males in members of the same species.", false));
        }

        /// <summary>Populate the CV Term data objects, breakdown part 1</summary>
        private static void PopulateTermData_UO_Part1()
        {
            TermData.Add(CVID.UO_unit, new TermInfo(CVID.UO_unit, @"UO", @"UO:0000000", @"unit", @"A unit of measurement is a standardized quantity of a physical quality.", false));
            TermData.Add(CVID.UO_length_unit, new TermInfo(CVID.UO_length_unit, @"UO", @"UO:0000001", @"length unit", @"A unit which is a standard measure of the distance between two points.", false));
            TermData.Add(CVID.UO_mass_unit, new TermInfo(CVID.UO_mass_unit, @"UO", @"UO:0000002", @"mass unit", @"A unit which is a standard measure of the amount of matter/energy of a physical object.", false));
            TermData.Add(CVID.UO_time_unit, new TermInfo(CVID.UO_time_unit, @"UO", @"UO:0000003", @"time unit", @"A unit which is a standard measure of the dimension in which events occur in sequence.", false));
            TermData.Add(CVID.UO_electric_current_unit, new TermInfo(CVID.UO_electric_current_unit, @"UO", @"UO:0000004", @"electric current unit", @"A unit which is a standard measure of the flow of electric charge.", false));
            TermData.Add(CVID.UO_temperature_unit, new TermInfo(CVID.UO_temperature_unit, @"UO", @"UO:0000005", @"temperature unit", @"A unit which is a standard measure of the average kinetic energy of the particles in a sample of matter.", false));
            TermData.Add(CVID.UO_substance_unit, new TermInfo(CVID.UO_substance_unit, @"UO", @"UO:0000006", @"substance unit", @"A unit which is a standardised quantity of an element or compound with uniform composition.", false));
            TermData.Add(CVID.UO_luminous_intensity_unit, new TermInfo(CVID.UO_luminous_intensity_unit, @"UO", @"UO:0000007", @"luminous intensity unit", @"A unit which is a standard measure of the wavelength-weighted power emitted by a light source in a particular direction.", false));
            TermData.Add(CVID.UO_meter, new TermInfo(CVID.UO_meter, @"UO", @"UO:0000008", @"meter", @"A length unit which is equal to the length of the path traveled by light in vacuum during a time interval of 1/299 792 458 of a second.", false));
            TermData.Add(CVID.UO_kilogram, new TermInfo(CVID.UO_kilogram, @"UO", @"UO:0000009", @"kilogram", @"A mass unit which is equal to the mass of the International Prototype Kilogram kept by the BIPM at Svres, France.", false));
            TermData.Add(CVID.UO_second, new TermInfo(CVID.UO_second, @"UO", @"UO:0000010", @"second", @"A time unit which is equal to the duration of 9 192 631 770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.", false));
            TermData.Add(CVID.UO_ampere, new TermInfo(CVID.UO_ampere, @"UO", @"UO:0000011", @"ampere", @"An electric current unit which is equal to the constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 m apart in vacuum, would produce between these conductors a force equal to 2 x 10^", false));
            TermData.Add(CVID.UO_kelvin, new TermInfo(CVID.UO_kelvin, @"UO", @"UO:0000012", @"kelvin", @"A thermodynamic temperature unit which is equal to the fraction 1/273.16 of the thermodynamic temperature of the triple point of water.", false));
            TermData.Add(CVID.UO_mole, new TermInfo(CVID.UO_mole, @"UO", @"UO:0000013", @"mole", @"A substance unit which is equal to the amount of substance of a molecular system which contains as many elementary entities as there are atoms in 0.012 kilogram of carbon 12.", false));
            TermData.Add(CVID.UO_candela, new TermInfo(CVID.UO_candela, @"UO", @"UO:0000014", @"candela", @"A luminous intensity unit which equal to the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540 x 1012 hertz and that has a radiant intensity in that direction of 1/683 watt per steradian.", false));
            TermData.Add(CVID.UO_centimeter, new TermInfo(CVID.UO_centimeter, @"UO", @"UO:0000015", @"centimeter", @"A length unit which is equal to one hundredth of a meter or 10^", false));
            TermData.Add(CVID.UO_millimeter, new TermInfo(CVID.UO_millimeter, @"UO", @"UO:0000016", @"millimeter", @"A length unit which is equal to one thousandth of a meter or 10^", false));
            TermData.Add(CVID.UO_micrometer, new TermInfo(CVID.UO_micrometer, @"UO", @"UO:0000017", @"micrometer", @"A length unit which is equal to one millionth of a meter or 10^", false));
            TermData.Add(CVID.UO_nanometer, new TermInfo(CVID.UO_nanometer, @"UO", @"UO:0000018", @"nanometer", @"A length unit which is equal to one thousandth of one millionth of a meter or 10^", false));
            TermData.Add(CVID.UO_angstrom, new TermInfo(CVID.UO_angstrom, @"UO", @"UO:0000019", @"angstrom", @"A length unit which is equal to 10", false));
            TermData.Add(CVID.UO_picometer, new TermInfo(CVID.UO_picometer, @"UO", @"UO:0000020", @"picometer", @"A length unit which is equal to 10^", false));
            TermData.Add(CVID.UO_gram, new TermInfo(CVID.UO_gram, @"UO", @"UO:0000021", @"gram", @"A mass unit which is equal to one thousandth of a kilogram or 10^", false));
            TermData.Add(CVID.UO_milligram, new TermInfo(CVID.UO_milligram, @"UO", @"UO:0000022", @"milligram", @"A mass unit which is equal to one thousandth of a gram or 10^", false));
            TermData.Add(CVID.UO_microgram, new TermInfo(CVID.UO_microgram, @"UO", @"UO:0000023", @"microgram", @"A mass unit which is equal to one millionth of a gram or 10^", false));
            TermData.Add(CVID.UO_nanogram, new TermInfo(CVID.UO_nanogram, @"UO", @"UO:0000024", @"nanogram", @"A mass unit which is equal to one thousandth of one millionth of a gram or 10^", false));
            TermData.Add(CVID.UO_picogram, new TermInfo(CVID.UO_picogram, @"UO", @"UO:0000025", @"picogram", @"A mass unit which is equal to 10^", false));
            TermData.Add(CVID.UO_femtogram, new TermInfo(CVID.UO_femtogram, @"UO", @"UO:0000026", @"femtogram", @"A mass unit which is equal to 10^", false));
            TermData.Add(CVID.UO_degree_Celsius, new TermInfo(CVID.UO_degree_Celsius, @"UO", @"UO:0000027", @"degree Celsius", @"A temperature unit which is equal to one kelvin degree. However, they have their zeros at different points. The centigrade scale has its zero at 273.15 K.", false));
            TermData.Add(CVID.UO_millisecond, new TermInfo(CVID.UO_millisecond, @"UO", @"UO:0000028", @"millisecond", @"A time unit which is equal to one thousandth of a second or 10^", false));
            TermData.Add(CVID.UO_microsecond, new TermInfo(CVID.UO_microsecond, @"UO", @"UO:0000029", @"microsecond", @"A time unit which is equal to one millionth of a second or 10^", false));
            TermData.Add(CVID.UO_picosecond, new TermInfo(CVID.UO_picosecond, @"UO", @"UO:0000030", @"picosecond", @"A time unit which is equal to 10^", false));
            TermData.Add(CVID.UO_minute, new TermInfo(CVID.UO_minute, @"UO", @"UO:0000031", @"minute", @"A time unit which is equal to 60 seconds.", false));
            TermData.Add(CVID.UO_hour, new TermInfo(CVID.UO_hour, @"UO", @"UO:0000032", @"hour", @"A time unit which is equal to 3600 seconds or 60 minutes.", false));
            TermData.Add(CVID.UO_day, new TermInfo(CVID.UO_day, @"UO", @"UO:0000033", @"day", @"A time unit which is equal to 24 hours.", false));
            TermData.Add(CVID.UO_week, new TermInfo(CVID.UO_week, @"UO", @"UO:0000034", @"week", @"A time unit which is equal to 7 days.", false));
            TermData.Add(CVID.UO_month, new TermInfo(CVID.UO_month, @"UO", @"UO:0000035", @"month", @"A time unit which is approximately equal to the length of time of one of cycle of the moon's phases which in science is taken to be equal to 30 days.", false));
            TermData.Add(CVID.UO_year, new TermInfo(CVID.UO_year, @"UO", @"UO:0000036", @"year", @"A time unit which is equal to 12 months which in science is taken to be equal to 365.25 days.", false));
            TermData.Add(CVID.UO_milliampere, new TermInfo(CVID.UO_milliampere, @"UO", @"UO:0000037", @"milliampere", @"An electric current unit current which is equal to one thousandth of an ampere or 10^", false));
            TermData.Add(CVID.UO_microampere, new TermInfo(CVID.UO_microampere, @"UO", @"UO:0000038", @"microampere", @"An electric current unit current which is equal to one millionth of an ampere or 10^", false));
            TermData.Add(CVID.UO_micromole, new TermInfo(CVID.UO_micromole, @"UO", @"UO:0000039", @"micromole", @"A substance unit equal to a millionth of a mol or 10^", false));
            TermData.Add(CVID.UO_millimole, new TermInfo(CVID.UO_millimole, @"UO", @"UO:0000040", @"millimole", @"A substance unit equal to a thousandth of a mol or 10^", false));
            TermData.Add(CVID.UO_nanomole, new TermInfo(CVID.UO_nanomole, @"UO", @"UO:0000041", @"nanomole", @"A substance unit equal to one thousandth of one millionth of a mole or 10^", false));
            TermData.Add(CVID.UO_picomole, new TermInfo(CVID.UO_picomole, @"UO", @"UO:0000042", @"picomole", @"A substance unit equal to 10^", false));
            TermData.Add(CVID.UO_femtomole, new TermInfo(CVID.UO_femtomole, @"UO", @"UO:0000043", @"femtomole", @"A substance unit equal to 10^", false));
            TermData.Add(CVID.UO_attomole, new TermInfo(CVID.UO_attomole, @"UO", @"UO:0000044", @"attomole", @"A substance unit equal to 10^", false));
            TermData.Add(CVID.UO_base_unit, new TermInfo(CVID.UO_base_unit, @"UO", @"UO:0000045", @"base unit", @"A unit which is one of a particular measure to which all measures of that type can be related.", false));
            TermData.Add(CVID.UO_prefix, new TermInfo(CVID.UO_prefix, @"UO", @"UO:0000046", @"prefix", @"", false));
            TermData.Add(CVID.UO_area_unit, new TermInfo(CVID.UO_area_unit, @"UO", @"UO:0000047", @"area unit", @"A unit which is a standard measure of the amount of a 2-dimensional flat surface.", false));
            TermData.Add(CVID.UO_acceleration_unit, new TermInfo(CVID.UO_acceleration_unit, @"UO", @"UO:0000048", @"acceleration unit", @"A unit which is a standard measure of the rate of change of velocity in either speed or direction.", false));
            TermData.Add(CVID.UO_angular_velocity_unit, new TermInfo(CVID.UO_angular_velocity_unit, @"UO", @"UO:0000049", @"angular velocity unit", @"A unit which is a standard measure of the rate of angular movement about an axis; the angle rotated in a given time.", false));
            TermData.Add(CVID.UO_angular_acceleration_unit, new TermInfo(CVID.UO_angular_acceleration_unit, @"UO", @"UO:0000050", @"angular acceleration unit", @"A unit which is a standard measure of the rate of change of angular velocity.", false));
            TermData.Add(CVID.UO_concentration_unit, new TermInfo(CVID.UO_concentration_unit, @"UO", @"UO:0000051", @"concentration unit", @"A unit which represents a standard measurement of how much of a given substance there is mixed with another substance.", false));
            TermData.Add(CVID.UO_mass_density_unit, new TermInfo(CVID.UO_mass_density_unit, @"UO", @"UO:0000052", @"mass density unit", @"A density unit which is a standard measure of the mass of a substance in a given volume.", false));
            TermData.Add(CVID.UO_luminance_unit, new TermInfo(CVID.UO_luminance_unit, @"UO", @"UO:0000053", @"luminance unit", @"A unit which is a standard measure of the luminous intensity impinging on a given area.", false));
            TermData.Add(CVID.UO_area_density_unit, new TermInfo(CVID.UO_area_density_unit, @"UO", @"UO:0000054", @"area density unit", @"A density unit which is a standard measure of the mass exerting an influence on a given area.", false));
            TermData.Add(CVID.UO_molar_mass_unit, new TermInfo(CVID.UO_molar_mass_unit, @"UO", @"UO:0000055", @"molar mass unit", @"A unit which is a standard measure of the mass of a homogeneous substance containing 6.02 x 1023 atoms or molecules.", false));
            TermData.Add(CVID.UO_molar_volume_unit, new TermInfo(CVID.UO_molar_volume_unit, @"UO", @"UO:0000056", @"molar volume unit", @"A unit which is a standard measure of the volume of a homogeneous substance containing 6.02 x 1023 atoms or molecules.", false));
            TermData.Add(CVID.UO_momentum_unit, new TermInfo(CVID.UO_momentum_unit, @"UO", @"UO:0000057", @"momentum unit", @"A unit which is a standard measure of the quantity of motion measured by the product of mass and velocity.", false));
            TermData.Add(CVID.UO_rotational_frequency_unit, new TermInfo(CVID.UO_rotational_frequency_unit, @"UO", @"UO:0000058", @"rotational frequency unit", @"A unit which is a standard measure of the number of rotations in a given time.", false));
            TermData.Add(CVID.UO_specific_volume_unit, new TermInfo(CVID.UO_specific_volume_unit, @"UO", @"UO:0000059", @"specific volume unit", @"A unit which is a standard measure of the volume of a given mass of substance (the reciprocal of density).", false));
            TermData.Add(CVID.UO_speed_velocity_unit, new TermInfo(CVID.UO_speed_velocity_unit, @"UO", @"UO:0000060", @"speed/velocity unit", @"A unit which is a standard measure of the rate of movement. Speed is measured in the same physical units of measurement as velocity, but does not contain the element of direction that velocity has. Speed is thus the magnitude component of velocity.", false));
            TermData.Add(CVID.UO_unit_of_molarity, new TermInfo(CVID.UO_unit_of_molarity, @"UO", @"UO:0000061", @"unit of molarity", @"A concentration unit which is a standard measure of the number of moles of a given substance per liter of solution.", false));
            TermData.Add(CVID.UO_molar, new TermInfo(CVID.UO_molar, @"UO", @"UO:0000062", @"molar", @"A unit of concentration which expresses a concentration of 1 mole of solute per liter of solution (mol/L).", false));
            TermData.Add(CVID.UO_millimolar, new TermInfo(CVID.UO_millimolar, @"UO", @"UO:0000063", @"millimolar", @"A unit of molarity which is equal to one thousandth of a molar or 10^", false));
            TermData.Add(CVID.UO_micromolar, new TermInfo(CVID.UO_micromolar, @"UO", @"UO:0000064", @"micromolar", @"A unit of molarity which is equal to one millionth of a molar or 10^", false));
            TermData.Add(CVID.UO_nanomolar, new TermInfo(CVID.UO_nanomolar, @"UO", @"UO:0000065", @"nanomolar", @"A unit of molarity which is equal to one thousandth of one millionth of a molar or 10^", false));
            TermData.Add(CVID.UO_picomolar, new TermInfo(CVID.UO_picomolar, @"UO", @"UO:0000066", @"picomolar", @"A unit of molarity which is equal to 10^", false));
            TermData.Add(CVID.UO_unit_of_molality, new TermInfo(CVID.UO_unit_of_molality, @"UO", @"UO:0000067", @"unit of molality", @"A concentration unit which is a standard measure of the number of moles of a given substance per kilogram of solvent.", false));
            TermData.Add(CVID.UO_molal, new TermInfo(CVID.UO_molal, @"UO", @"UO:0000068", @"molal", @"A unit of concentration which expresses a concentration of a solution of 1 mole per kilogram of solvent (mol/kg).", false));
            TermData.Add(CVID.UO_millimolal, new TermInfo(CVID.UO_millimolal, @"UO", @"UO:0000069", @"millimolal", @"A molality unit which is equal to one thousandth of a molal or 10^", false));
            TermData.Add(CVID.UO_micromolal, new TermInfo(CVID.UO_micromolal, @"UO", @"UO:0000070", @"micromolal", @"A molality unit which is equal to one millionth of a molal or 10^", false));
            TermData.Add(CVID.UO_nanomolal, new TermInfo(CVID.UO_nanomolal, @"UO", @"UO:0000071", @"nanomolal", @"A molality unit which is equal to one thousandth of one millionth of a molal or 10^", false));
            TermData.Add(CVID.UO_picomolal, new TermInfo(CVID.UO_picomolal, @"UO", @"UO:0000072", @"picomolal", @"A molality unit which is equal to 10^", false));
            TermData.Add(CVID.UO_femtomolar, new TermInfo(CVID.UO_femtomolar, @"UO", @"UO:0000073", @"femtomolar", @"A unit of molarity which is equal to 10^", false));
            TermData.Add(CVID.UO_unit_of_normality, new TermInfo(CVID.UO_unit_of_normality, @"UO", @"UO:0000074", @"unit of normality", @"A unit of concentration which highlights the chemical nature of salts.", false));
            TermData.Add(CVID.UO_normal, new TermInfo(CVID.UO_normal, @"UO", @"UO:0000075", @"normal", @"A unit of concentration which is one gram equivalent of a solute per liter of solution. A gram equivalent weight or equivalent is a measure of the reactive capacity of a given molecule.", false));
            TermData.Add(CVID.UO_mole_fraction, new TermInfo(CVID.UO_mole_fraction, @"UO", @"UO:0000076", @"mole fraction", @"A concentration unit which denotes the number of moles of solute as a proportion of the total number of moles in a solution.", false));
            TermData.Add(CVID.UO_meter_per_second_per_second, new TermInfo(CVID.UO_meter_per_second_per_second, @"UO", @"UO:0000077", @"meter per second per second", @"An acceleration unit which is equal to the acceleration an object changing its velocity by 1meter/s over a time period that equals one second.", false));
            TermData.Add(CVID.UO_radian_per_second_per_second, new TermInfo(CVID.UO_radian_per_second_per_second, @"UO", @"UO:0000078", @"radian per second per second", @"An angular unit acceleration which is equal to the angular acceleration of an object changing its angular velocity by 1rad/s over a time period that equals one second.", false));
            TermData.Add(CVID.UO_radian_per_second, new TermInfo(CVID.UO_radian_per_second, @"UO", @"UO:0000079", @"radian per second", @"An angular unit velocity which is equal to about 9.54930 rpm (revolutions per minute).", false));
            TermData.Add(CVID.UO_square_meter, new TermInfo(CVID.UO_square_meter, @"UO", @"UO:0000080", @"square meter", @"An area unit which is equal to an area enclosed by a square with sides each 1 meter long.", false));
            TermData.Add(CVID.UO_square_centimeter, new TermInfo(CVID.UO_square_centimeter, @"UO", @"UO:0000081", @"square centimeter", @"An area unit which is equal to one ten thousandth of a square meter or 10^", false));
            TermData.Add(CVID.UO_square_millimeter, new TermInfo(CVID.UO_square_millimeter, @"UO", @"UO:0000082", @"square millimeter", @"An area unit which is equal to one millionth of a square meter or 10^", false));
            TermData.Add(CVID.UO_kilogram_per_cubic_meter, new TermInfo(CVID.UO_kilogram_per_cubic_meter, @"UO", @"UO:0000083", @"kilogram per cubic meter", @"A mass unit density which is equal to mass of an object in kilograms divided by the volume in cubic meters.", false));
            TermData.Add(CVID.UO_gram_per_cubic_centimeter, new TermInfo(CVID.UO_gram_per_cubic_centimeter, @"UO", @"UO:0000084", @"gram per cubic centimeter", @"A mass unit density which is equal to mass of an object in grams divided by the volume in cubic centimeters.", false));
            TermData.Add(CVID.UO_candela_per_square_meter, new TermInfo(CVID.UO_candela_per_square_meter, @"UO", @"UO:0000085", @"candela per square meter", @"A luminance unit which is equal to a luminous intensity of one candela radiating from a surface whose area is one square meter.", false));
            TermData.Add(CVID.UO_kilogram_per_square_meter, new TermInfo(CVID.UO_kilogram_per_square_meter, @"UO", @"UO:0000086", @"kilogram per square meter", @"An area density unit which is equal to the mass of an object in kilograms divided by the surface area in meters squared.", false));
            TermData.Add(CVID.UO_kilogram_per_mole, new TermInfo(CVID.UO_kilogram_per_mole, @"UO", @"UO:0000087", @"kilogram per mole", @"A molar mass unit which is equal to one kilogram of mass of one mole of chemical element or chemical compound.", false));
            TermData.Add(CVID.UO_gram_per_mole, new TermInfo(CVID.UO_gram_per_mole, @"UO", @"UO:0000088", @"gram per mole", @"A molar mass unit which is equal to one gram of mass of one mole of chemical element or chemical compound.", false));
            TermData.Add(CVID.UO_cubic_meter_per_mole, new TermInfo(CVID.UO_cubic_meter_per_mole, @"UO", @"UO:0000089", @"cubic meter per mole", @"A molar volume unit which is equal to 1 cubic meter occupied by one mole of a substance in the form of a solid, liquid, or gas.", false));
            TermData.Add(CVID.UO_cubic_centimeter_per_mole, new TermInfo(CVID.UO_cubic_centimeter_per_mole, @"UO", @"UO:0000090", @"cubic centimeter per mole", @"A molar volume unit which is equal to 1 cubic centimeter occupied by one mole of a substance in the form of a solid, liquid, or gas.", false));
            TermData.Add(CVID.UO_kilogram_meter_per_second, new TermInfo(CVID.UO_kilogram_meter_per_second, @"UO", @"UO:0000091", @"kilogram meter per second", @"A momentum unit which is equal to the momentum of a one kilogram mass object with a speed of one meter per second.", false));
            TermData.Add(CVID.UO_turns_per_second, new TermInfo(CVID.UO_turns_per_second, @"UO", @"UO:0000092", @"turns per second", @"A rotational frequency unit which is equal to the number complete turn in a period of time that equals to 1 second.", false));
            TermData.Add(CVID.UO_cubic_meter_per_kilogram, new TermInfo(CVID.UO_cubic_meter_per_kilogram, @"UO", @"UO:0000093", @"cubic meter per kilogram", @"A specific volume unit which is equal to one cubic meter volume occupied by one kilogram of a particular substance.", false));
            TermData.Add(CVID.UO_meter_per_second, new TermInfo(CVID.UO_meter_per_second, @"UO", @"UO:0000094", @"meter per second", @"A speed/velocity unit which is equal to the speed of an object traveling 1 meter distance in one second.", false));
            TermData.Add(CVID.UO_volume_unit, new TermInfo(CVID.UO_volume_unit, @"UO", @"UO:0000095", @"volume unit", @"A unit which is a standard measure of the amount of space occupied by any substance, whether solid, liquid, or gas.", false));
            TermData.Add(CVID.UO_cubic_meter, new TermInfo(CVID.UO_cubic_meter, @"UO", @"UO:0000096", @"cubic meter", @"A volume unit which is equal to the volume of a cube with edges one meter in length. One cubic meter equals to 1000 liters.", false));
            TermData.Add(CVID.UO_cubic_centimeter, new TermInfo(CVID.UO_cubic_centimeter, @"UO", @"UO:0000097", @"cubic centimeter", @"A volume unit which is equal to one millionth of a cubic meter or 10^", false));
            TermData.Add(CVID.UO_milliliter, new TermInfo(CVID.UO_milliliter, @"UO", @"UO:0000098", @"milliliter", @"A volume unit which is equal to one thousandth of a liter or 10^", false));
            TermData.Add(CVID.UO_liter, new TermInfo(CVID.UO_liter, @"UO", @"UO:0000099", @"liter", @"A volume unit which is equal to one thousandth of a cubic meter or 10^", false));
            TermData.Add(CVID.UO_cubic_decimeter, new TermInfo(CVID.UO_cubic_decimeter, @"UO", @"UO:0000100", @"cubic decimeter", @"A volume unit which is equal to one thousand of a cubic meter or 10^", false));
            TermData.Add(CVID.UO_microliter, new TermInfo(CVID.UO_microliter, @"UO", @"UO:0000101", @"microliter", @"A volume unit which is equal to one millionth of a liter or 10^", false));
            TermData.Add(CVID.UO_nanoliter, new TermInfo(CVID.UO_nanoliter, @"UO", @"UO:0000102", @"nanoliter", @"A volume unit which is equal to one thousandth of one millionth of a liter or 10^", false));
            TermData.Add(CVID.UO_picoliter, new TermInfo(CVID.UO_picoliter, @"UO", @"UO:0000103", @"picoliter", @"A volume unit which is equal to 10^", false));
            TermData.Add(CVID.UO_femtoliter, new TermInfo(CVID.UO_femtoliter, @"UO", @"UO:0000104", @"femtoliter", @"A volume unit which is equal to 10^", false));
            TermData.Add(CVID.UO_frequency_unit, new TermInfo(CVID.UO_frequency_unit, @"UO", @"UO:0000105", @"frequency unit", @"A unit which is a standard measure of the number of repetitive actions in a particular time.", false));
            TermData.Add(CVID.UO_hertz, new TermInfo(CVID.UO_hertz, @"UO", @"UO:0000106", @"hertz", @"A frequency unit which is equal to 1 complete cycle of a recurring phenomenon in 1 second.", false));
            TermData.Add(CVID.UO_force_unit, new TermInfo(CVID.UO_force_unit, @"UO", @"UO:0000107", @"force unit", @"A unit which is a standard measure of the force is applied when a mass is accelerated.", false));
            TermData.Add(CVID.UO_newton, new TermInfo(CVID.UO_newton, @"UO", @"UO:0000108", @"newton", @"A force unit which is equal to the force required to cause an acceleration of 1m/s2 of a mass of 1 Kg in the direction of the force.", false));
            TermData.Add(CVID.UO_pressure_unit, new TermInfo(CVID.UO_pressure_unit, @"UO", @"UO:0000109", @"pressure unit", @"A unit which is a standard measure of the force applied to a given area.", false));
            TermData.Add(CVID.UO_pascal, new TermInfo(CVID.UO_pascal, @"UO", @"UO:0000110", @"pascal", @"A pressure unit which is equal to the pressure or stress on a surface caused by a force of 1 newton spread over a surface of 1 m^", false));
            TermData.Add(CVID.UO_energy_unit, new TermInfo(CVID.UO_energy_unit, @"UO", @"UO:0000111", @"energy unit", @"A unit which is a standard measure of the work done by a certain force (gravitational, electric, magnetic, force of inertia, etc).", false));
            TermData.Add(CVID.UO_joule, new TermInfo(CVID.UO_joule, @"UO", @"UO:0000112", @"joule", @"An energy unit which is equal to the energy required when a force of 1 newton moves an object 1 meter in the direction of the force.", false));
            TermData.Add(CVID.UO_power_unit, new TermInfo(CVID.UO_power_unit, @"UO", @"UO:0000113", @"power unit", @"A unit which is a standard measure power or the rate of doing work.", false));
            TermData.Add(CVID.UO_watt, new TermInfo(CVID.UO_watt, @"UO", @"UO:0000114", @"watt", @"A power unit which is equal to the power used when work is done at the rate of 1 joule per second.", false));
            TermData.Add(CVID.UO_illuminance_unit, new TermInfo(CVID.UO_illuminance_unit, @"UO", @"UO:0000115", @"illuminance unit", @"A unit which is a standard measure of the luminous flux incident on a unit area.", false));
            TermData.Add(CVID.UO_lux, new TermInfo(CVID.UO_lux, @"UO", @"UO:0000116", @"lux", @"An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 m^", false));
            TermData.Add(CVID.UO_luminous_flux_unit, new TermInfo(CVID.UO_luminous_flux_unit, @"UO", @"UO:0000117", @"luminous flux unit", @"A unit which is a standard measure of the flow of radiant energy.", false));
            TermData.Add(CVID.UO_lumen, new TermInfo(CVID.UO_lumen, @"UO", @"UO:0000118", @"lumen", @"A luminous flux unit which is equal to the luminous flux emitted into 1 steradian by a point source of 1 candela.", false));
            TermData.Add(CVID.UO_catalytic_activity_unit, new TermInfo(CVID.UO_catalytic_activity_unit, @"UO", @"UO:0000119", @"catalytic activity unit", @"A unit which is a standard measure of the amount of the action of a catalyst.", false));
            TermData.Add(CVID.UO_katal, new TermInfo(CVID.UO_katal, @"UO", @"UO:0000120", @"katal", @"A catalytic unit activity which is equal to the activity of a catalyst in moles per second, such as the amount of an enzyme needed to transform one mole of substrate per second.", false));
            TermData.Add(CVID.UO_angle_unit, new TermInfo(CVID.UO_angle_unit, @"UO", @"UO:0000121", @"angle unit", @"A unit which is a standard measure of the figure or space formed by the junction of two lines or planes.", false));
            TermData.Add(CVID.UO_plane_angle_unit, new TermInfo(CVID.UO_plane_angle_unit, @"UO", @"UO:0000122", @"plane angle unit", @"A unit which is a standard measure of the angle formed by two straight lines in the same plane.", false));
            TermData.Add(CVID.UO_radian, new TermInfo(CVID.UO_radian, @"UO", @"UO:0000123", @"radian", @"A plane angle unit which is equal to the angle subtended at the center of a circle by an arc equal in length to the radius of the circle, approximately 57 degrees 17 minutes and 44.6 seconds.", false));
            TermData.Add(CVID.UO_solid_angle_unit, new TermInfo(CVID.UO_solid_angle_unit, @"UO", @"UO:0000124", @"solid angle unit", @"A unit which is a standard measure of the angle formed by three or more planes intersecting at a common point.", false));
            TermData.Add(CVID.UO_steradian, new TermInfo(CVID.UO_steradian, @"UO", @"UO:0000125", @"steradian", @"A solid angle unit which is equal to the solid angle subtended at the center of a sphere by an area on the surface of the sphere that is equal to the radius squared.", false));
            TermData.Add(CVID.UO_radiation_unit, new TermInfo(CVID.UO_radiation_unit, @"UO", @"UO:0000127", @"radiation unit", @"A unit which is a standard measure of the amount of radiation emitted by a given radiation source as well as the amount of radiation absorbed or deposited in a specific material by a radiation source.", false));
            TermData.Add(CVID.UO_activity__of_a_radionuclide__unit, new TermInfo(CVID.UO_activity__of_a_radionuclide__unit, @"UO", @"UO:0000128", @"activity (of a radionuclide) unit", @"A unit which is a standard measure of the transformation (disintegration) rate of a radioactive substance.", false));
            TermData.Add(CVID.UO_absorbed_dose_unit, new TermInfo(CVID.UO_absorbed_dose_unit, @"UO", @"UO:0000129", @"absorbed dose unit", @"A unit which is a standard measure of the energy imparted by ionizing radiation to unit mass of matter such as tissue.", false));
            TermData.Add(CVID.UO_dose_equivalent_unit, new TermInfo(CVID.UO_dose_equivalent_unit, @"UO", @"UO:0000130", @"dose equivalent unit", @"A unit which is a standard measure of the expression of dose in terms of its biological effect.", false));
            TermData.Add(CVID.UO_exposure_unit, new TermInfo(CVID.UO_exposure_unit, @"UO", @"UO:0000131", @"exposure unit", @"A unit which is a standard measure of the quantity that expresses the ability of radiation to ionize air and thereby create electric charges which can be collected and measured.", false));
            TermData.Add(CVID.UO_becquerel, new TermInfo(CVID.UO_becquerel, @"UO", @"UO:0000132", @"becquerel", @"An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second (dps).", false));
            TermData.Add(CVID.UO_curie, new TermInfo(CVID.UO_curie, @"UO", @"UO:0000133", @"curie", @"An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which there are 3.7 x 10^", false));
            TermData.Add(CVID.UO_gray, new TermInfo(CVID.UO_gray, @"UO", @"UO:0000134", @"gray", @"An absorbed dose unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.", false));
            TermData.Add(CVID.UO_rad, new TermInfo(CVID.UO_rad, @"UO", @"UO:0000135", @"rad", @"An absorbed dose unit which is equal to 0.01 gray (Gy).", false));
            TermData.Add(CVID.UO_roentgen, new TermInfo(CVID.UO_roentgen, @"UO", @"UO:0000136", @"roentgen", @"An exposure unit which is equal to the amount of radiation required to liberate positive and negative charges of one electrostatic unit of charge in 1 cm^", false));
            TermData.Add(CVID.UO_sievert, new TermInfo(CVID.UO_sievert, @"UO", @"UO:0000137", @"sievert", @"A dose equivalent unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.", false));
            TermData.Add(CVID.UO_millisievert, new TermInfo(CVID.UO_millisievert, @"UO", @"UO:0000138", @"millisievert", @"A dose equivalent unit which is equal to one thousandth of a sievert or 10^", false));
            TermData.Add(CVID.UO_microsievert, new TermInfo(CVID.UO_microsievert, @"UO", @"UO:0000139", @"microsievert", @"A dose equivalent unit which is equal to one millionth of a sievert or 10^", false));
            TermData.Add(CVID.UO_Roentgen_equivalent_man, new TermInfo(CVID.UO_Roentgen_equivalent_man, @"UO", @"UO:0000140", @"Roentgen equivalent man", @"A dose equivalent unit which when multiplied by hundred is equal to one sievert or 1 Sv. 1 Sv is equal to 100 rem.", false));
            TermData.Add(CVID.UO_microgray, new TermInfo(CVID.UO_microgray, @"UO", @"UO:0000141", @"microgray", @"An absorbed dose unit which is equal to one millionth of a gray or 10^", false));
            TermData.Add(CVID.UO_milligray, new TermInfo(CVID.UO_milligray, @"UO", @"UO:0000142", @"milligray", @"An absorbed dose unit which is equal to one thousandth of a gray or 10^", false));
            TermData.Add(CVID.UO_nanogray, new TermInfo(CVID.UO_nanogray, @"UO", @"UO:0000143", @"nanogray", @"An absorbed dose unit which is equal to one thousandth of a millionth of a gray or 10^", false));
            TermData.Add(CVID.UO_nanosievert, new TermInfo(CVID.UO_nanosievert, @"UO", @"UO:0000144", @"nanosievert", @"A dose equivalent unit which is equal to one thousandth of a millionth of a sievert or 10^", false));
            TermData.Add(CVID.UO_millicurie, new TermInfo(CVID.UO_millicurie, @"UO", @"UO:0000145", @"millicurie", @"An activity (of a radionuclide) unit which is equal to one thousandth of a curie or 10^", false));
            TermData.Add(CVID.UO_microcurie, new TermInfo(CVID.UO_microcurie, @"UO", @"UO:0000146", @"microcurie", @"An activity (of a radionuclide) unit which is equal to one millionth of a curie or 10^", false));
            TermData.Add(CVID.UO_disintegrations_per_minute, new TermInfo(CVID.UO_disintegrations_per_minute, @"UO", @"UO:0000147", @"disintegrations per minute", @"An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per minute or there is one atom disintegration per minute.", false));
            TermData.Add(CVID.UO_counts_per_minute, new TermInfo(CVID.UO_counts_per_minute, @"UO", @"UO:0000148", @"counts per minute", @"An activity (of a radionuclide) unit which is equal to the number of light emissions produced by ionizing radiation in one minute.", false));
            TermData.Add(CVID.UO_nanosecond, new TermInfo(CVID.UO_nanosecond, @"UO", @"UO:0000150", @"nanosecond", @"A time unit which is equal to one thousandth of one millionth of a second or 10^", false));
            TermData.Add(CVID.UO_century, new TermInfo(CVID.UO_century, @"UO", @"UO:0000151", @"century", @"A time unit which is equal to 100 years.", false));
            TermData.Add(CVID.UO_half_life, new TermInfo(CVID.UO_half_life, @"UO", @"UO:0000152", @"half life", @"A time unit which represents the period over which the activity or concentration of a specified chemical or element falls to half its original activity or concentration.", false));
            TermData.Add(CVID.UO_foot_candle, new TermInfo(CVID.UO_foot_candle, @"UO", @"UO:0000153", @"foot candle", @"An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 foot^", false));
            TermData.Add(CVID.UO_irradiance_unit, new TermInfo(CVID.UO_irradiance_unit, @"UO", @"UO:0000154", @"irradiance unit", @"A unit which is a standard measure of the power of electromagnetic radiation at a surface, per unit area.", false));
            TermData.Add(CVID.UO_watt_per_square_meter, new TermInfo(CVID.UO_watt_per_square_meter, @"UO", @"UO:0000155", @"watt per square meter", @"An irradiance unit which is equal to 1 watt of radiant power incident per one square meter surface area.", false));
            TermData.Add(CVID.UO_einstein_per_square_meter_per_second, new TermInfo(CVID.UO_einstein_per_square_meter_per_second, @"UO", @"UO:0000156", @"einstein per square meter per second", @"An irradiance unit which is equal to one einstein per square meter per second. One einstein is one mole of photons, regardless of their frequency. Therefore, the number of photons in an einstein is Avogadro's number.", false));
            TermData.Add(CVID.UO_light_unit, new TermInfo(CVID.UO_light_unit, @"UO", @"UO:0000157", @"light unit", @"A unit which is a standard measure of the intensity of light.", false));
            TermData.Add(CVID.UO_watt_per_steradian_per_square_meter, new TermInfo(CVID.UO_watt_per_steradian_per_square_meter, @"UO", @"UO:0000158", @"watt per steradian per square meter", @"A radiance unit which is equal to one watt of radiant power incident per steradian solid angle per one square meter projected area of the source, as viewed from the given direction.", false));
            TermData.Add(CVID.UO_radiant_intensity_unit, new TermInfo(CVID.UO_radiant_intensity_unit, @"UO", @"UO:0000159", @"radiant intensity unit", @"A unit which is a standard measure of the intensity of electromagnetic radiation.", false));
            TermData.Add(CVID.UO_microeinstein_per_square_meter_per_second, new TermInfo(CVID.UO_microeinstein_per_square_meter_per_second, @"UO", @"UO:0000160", @"microeinstein per square meter per second", @"An irradiance unit which is equal to one microeinstein per square meter per second or 10^", false));
            TermData.Add(CVID.UO_radiance_unit, new TermInfo(CVID.UO_radiance_unit, @"UO", @"UO:0000161", @"radiance unit", @"A unit which is a standard measure of the power of electromagnetic radiation through space or through a material medium in the form of electromagnetic waves.", false));
            TermData.Add(CVID.UO_watt_per_steradian, new TermInfo(CVID.UO_watt_per_steradian, @"UO", @"UO:0000162", @"watt per steradian", @"A radiant intensity unit which is equal to one kilogram meter squared per second cubed per steradian.", false));
            TermData.Add(CVID.UO_mass_percentage, new TermInfo(CVID.UO_mass_percentage, @"UO", @"UO:0000163", @"mass percentage", @"A dimensionless concentration unit which denotes the mass of a substance in a mixture as a percentage of the mass of the entire mixture.", false));
            TermData.Add(CVID.UO_mass_volume_percentage, new TermInfo(CVID.UO_mass_volume_percentage, @"UO", @"UO:0000164", @"mass volume percentage", @"A dimensionless concentration unit which denotes the mass of the substance in a mixture as a percentage of the volume of the entire mixture.", false));
            TermData.Add(CVID.UO_volume_percentage, new TermInfo(CVID.UO_volume_percentage, @"UO", @"UO:0000165", @"volume percentage", @"A dimensionless concentration unit which denotes the volume of the solute in mL per 100 mL of the resulting solution.", false));
            TermData.Add(CVID.UO_parts_per_notation_unit, new TermInfo(CVID.UO_parts_per_notation_unit, @"UO", @"UO:0000166", @"parts per notation unit", @"A dimensionless concentration notation which describes the amount of one substance in another. It is the ratio of the amount of the substance of interest to the amount of that substance plus the amount of the substance.", false));
            TermData.Add(CVID.UO_parts_per_hundred, new TermInfo(CVID.UO_parts_per_hundred, @"UO", @"UO:0000167", @"parts per hundred", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 100 regardless of the units of measure as long as they are the same.", false));
            TermData.Add(CVID.UO_parts_per_thousand, new TermInfo(CVID.UO_parts_per_thousand, @"UO", @"UO:0000168", @"parts per thousand", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1000 regardless of the units of measure as long as they are the same.", false));
            TermData.Add(CVID.UO_parts_per_million, new TermInfo(CVID.UO_parts_per_million, @"UO", @"UO:0000169", @"parts per million", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^", false));
            TermData.Add(CVID.UO_parts_per_billion, new TermInfo(CVID.UO_parts_per_billion, @"UO", @"UO:0000170", @"parts per billion", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure as long as they are the same or 1 part in 10^", false));
            TermData.Add(CVID.UO_parts_per_trillion, new TermInfo(CVID.UO_parts_per_trillion, @"UO", @"UO:0000171", @"parts per trillion", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^", false));
            TermData.Add(CVID.UO_parts_per_quadrillion, new TermInfo(CVID.UO_parts_per_quadrillion, @"UO", @"UO:0000172", @"parts per quadrillion", @"A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^", false));
            TermData.Add(CVID.UO_gram_per_milliliter, new TermInfo(CVID.UO_gram_per_milliliter, @"UO", @"UO:0000173", @"gram per milliliter", @"A mass unit density which is equal to mass of an object in grams divided by the volume in milliliter.", false));
            TermData.Add(CVID.UO_kilogram_per_liter, new TermInfo(CVID.UO_kilogram_per_liter, @"UO", @"UO:0000174", @"kilogram per liter", @"A mass unit density which is equal to mass of an object in kilograms divided by the volume in liters.", false));
            TermData.Add(CVID.UO_gram_per_liter, new TermInfo(CVID.UO_gram_per_liter, @"UO", @"UO:0000175", @"gram per liter", @"A mass unit density which is equal to mass of an object in grams divided by the volume in liters.", false));
            TermData.Add(CVID.UO_milligram_per_milliliter, new TermInfo(CVID.UO_milligram_per_milliliter, @"UO", @"UO:0000176", @"milligram per milliliter", @"A mass unit density which is equal to mass of an object in milligrams divided by the volume in milliliters.", false));
            TermData.Add(CVID.UO_unit_per_volume_unit, new TermInfo(CVID.UO_unit_per_volume_unit, @"UO", @"UO:0000177", @"unit per volume unit", @"A concentration unit which is a standard measure of the number of units, as an agreed arbitrary amount, of a given substance per a specific volume of solution.", false));
            TermData.Add(CVID.UO_unit_per_milliliter, new TermInfo(CVID.UO_unit_per_milliliter, @"UO", @"UO:0000178", @"unit per milliliter", @"A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one milliliter.", false));
            TermData.Add(CVID.UO_unit_per_liter, new TermInfo(CVID.UO_unit_per_liter, @"UO", @"UO:0000179", @"unit per liter", @"A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one liter.", false));
            TermData.Add(CVID.UO_mass_per_unit_volume, new TermInfo(CVID.UO_mass_per_unit_volume, @"UO", @"UO:0000180", @"mass per unit volume", @"A concentration unit which is a standard measure of the mass of a substance in a given volume (density).", false));
            TermData.Add(CVID.UO_enzyme_unit, new TermInfo(CVID.UO_enzyme_unit, @"UO", @"UO:0000181", @"enzyme unit", @"A catalytic unit activity which is equal to the amount of the enzyme that catalyzes the conversion of 1 micro mole of substrate per minute.", false));
            TermData.Add(CVID.UO_density_unit, new TermInfo(CVID.UO_density_unit, @"UO", @"UO:0000182", @"density unit", @"A unit which is a standard measure of the influence exerted by some mass.", false));
            TermData.Add(CVID.UO_linear_density_unit, new TermInfo(CVID.UO_linear_density_unit, @"UO", @"UO:0000183", @"linear density unit", @"A density unit which is a standard measure of the mass exerting an influence on a one-dimensional object.", false));
            TermData.Add(CVID.UO_kilogram_per_meter, new TermInfo(CVID.UO_kilogram_per_meter, @"UO", @"UO:0000184", @"kilogram per meter", @"An area density unit which is equal to the mass of an object in kilograms divided by one meter.", false));
            TermData.Add(CVID.UO_degree, new TermInfo(CVID.UO_degree, @"UO", @"UO:0000185", @"degree", @"A plane angle unit which is equal to 1/360 of a full rotation or 1.7453310^", false));
            TermData.Add(CVID.UO_dimensionless_unit, new TermInfo(CVID.UO_dimensionless_unit, @"UO", @"UO:0000186", @"dimensionless unit", @"A unit which is a standard measure of physical quantity consisting of only a numerical number without any units.", false));
            TermData.Add(CVID.UO_percent, new TermInfo(CVID.UO_percent, @"UO", @"UO:0000187", @"percent", @"A dimensionless ratio unit which denotes numbers as fractions of 100.", false));
            TermData.Add(CVID.UO_pi, new TermInfo(CVID.UO_pi, @"UO", @"UO:0000188", @"pi", @"A dimensionless unit which denoted an irrational real number, approximately equal to 3.14159 which is the ratio of a circle's circumference to its diameter in Euclidean geometry.", false));
            TermData.Add(CVID.UO_count_unit, new TermInfo(CVID.UO_count_unit, @"UO", @"UO:0000189", @"count unit", @"A dimensionless unit which denotes a simple count of things.", false));
            TermData.Add(CVID.UO_ratio, new TermInfo(CVID.UO_ratio, @"UO", @"UO:0000190", @"ratio", @"A dimensionless unit which denotes an amount or magnitude of one quantity relative to another.", false));
            TermData.Add(CVID.UO_fraction, new TermInfo(CVID.UO_fraction, @"UO", @"UO:0000191", @"fraction", @"A dimensionless ratio unit which relates the part (the numerator) to the whole (the denominator).", false));
            TermData.Add(CVID.UO_molecule_count, new TermInfo(CVID.UO_molecule_count, @"UO", @"UO:0000192", @"molecule count", @"A dimensionless count unit which denotes the number of molecules.", false));
            TermData.Add(CVID.UO_purity_percentage, new TermInfo(CVID.UO_purity_percentage, @"UO", @"UO:0000193", @"purity percentage", @"A dimensionless percent unit which denotes the homogeneity of a biomaterial.", false));
            TermData.Add(CVID.UO_confluence_percentage, new TermInfo(CVID.UO_confluence_percentage, @"UO", @"UO:0000194", @"confluence percentage", @"A dimensionless percent unit which denotes the density of an attached or monolayer culture (e.g., cell culture).", false));
            TermData.Add(CVID.UO_degree_Fahrenheit, new TermInfo(CVID.UO_degree_Fahrenheit, @"UO", @"UO:0000195", @"degree Fahrenheit", @"A temperature unit which is equal to 5/9ths of a kelvin. Negative 40 degrees Fahrenheit is equal to negative 40 degrees Celsius.", false));
            TermData.Add(CVID.UO_pH, new TermInfo(CVID.UO_pH, @"UO", @"UO:0000196", @"pH", @"A dimensionless concentration notation which denotes the acidity of a solution in terms of activity of hydrogen ions (H+).", false));
            TermData.Add(CVID.UO_liter_per_kilogram, new TermInfo(CVID.UO_liter_per_kilogram, @"UO", @"UO:0000197", @"liter per kilogram", @"A specific volume unit which is equal to one liter volume occupied by one kilogram of a particular substance.", false));
            TermData.Add(CVID.UO_milliliter_per_kilogram, new TermInfo(CVID.UO_milliliter_per_kilogram, @"UO", @"UO:0000198", @"milliliter per kilogram", @"A specific volume unit which is equal to a thousandth of a liter per kilogram or 10^", false));
            TermData.Add(CVID.UO_microliter_per_kilogram, new TermInfo(CVID.UO_microliter_per_kilogram, @"UO", @"UO:0000199", @"microliter per kilogram", @"A specific volume unit which is equal to one millionth of a liter per kilogram or 10^", false));
            TermData.Add(CVID.UO_cell_concentration_unit, new TermInfo(CVID.UO_cell_concentration_unit, @"UO", @"UO:0000200", @"cell concentration unit", @"A concentration unit which denotes the average cell number in a given volume.", false));
            TermData.Add(CVID.UO_cells_per_milliliter, new TermInfo(CVID.UO_cells_per_milliliter, @"UO", @"UO:0000201", @"cells per milliliter", @"A unit of cell concentration which is equal to one cell in a volume of 1 milliliter.", false));
            TermData.Add(CVID.UO_catalytic__activity__concentration_unit, new TermInfo(CVID.UO_catalytic__activity__concentration_unit, @"UO", @"UO:0000202", @"catalytic (activity) concentration unit", @"A concentration unit which is a standard measure of the amount of the action of a catalyst in a given volume.", false));
            TermData.Add(CVID.UO_katal_per_cubic_meter, new TermInfo(CVID.UO_katal_per_cubic_meter, @"UO", @"UO:0000203", @"katal per cubic meter", @"A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one cubic meter.", false));
            TermData.Add(CVID.UO_katal_per_liter, new TermInfo(CVID.UO_katal_per_liter, @"UO", @"UO:0000204", @"katal per liter", @"A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one thousandth of a cubic meter.", false));
            TermData.Add(CVID.UO_volume_per_unit_volume, new TermInfo(CVID.UO_volume_per_unit_volume, @"UO", @"UO:0000205", @"volume per unit volume", @"A dimensionless concentration unit which denotes the given volume of the solute in the total volume of the resulting solution.", false));
            TermData.Add(CVID.UO_milliliter_per_cubic_meter, new TermInfo(CVID.UO_milliliter_per_cubic_meter, @"UO", @"UO:0000206", @"milliliter per cubic meter", @"A volume per unit volume unit which is equal to one millionth of a liter of solute in one cubic meter of solution.", false));
            TermData.Add(CVID.UO_milliliter_per_liter, new TermInfo(CVID.UO_milliliter_per_liter, @"UO", @"UO:0000207", @"milliliter per liter", @"A volume per unit volume unit which is equal to one millionth of a liter of solute in one liter of solution.", false));
            TermData.Add(CVID.UO_gram_per_deciliter, new TermInfo(CVID.UO_gram_per_deciliter, @"UO", @"UO:0000208", @"gram per deciliter", @"A mass density unit which is equal to mass of an object in grams divided by the volume in deciliters.", false));
            TermData.Add(CVID.UO_deciliter, new TermInfo(CVID.UO_deciliter, @"UO", @"UO:0000209", @"deciliter", @"A volume unit which is equal to one tenth of a liter or 10^", false));
            TermData.Add(CVID.UO_colony_forming_unit, new TermInfo(CVID.UO_colony_forming_unit, @"UO", @"UO:0000210", @"colony forming unit", @"A dimensionless count unit which a measure of viable bacterial numbers.", false));
            TermData.Add(CVID.UO_plaque_forming_unit, new TermInfo(CVID.UO_plaque_forming_unit, @"UO", @"UO:0000211", @"plaque forming unit", @"A dimensionless count unit which a measure of plague forming units in a given volume.", false));
            TermData.Add(CVID.UO_colony_forming_unit_per_volume, new TermInfo(CVID.UO_colony_forming_unit_per_volume, @"UO", @"UO:0000212", @"colony forming unit per volume", @"A concentration unit which a measure of viable bacterial numbers in a given volume.", false));
            TermData.Add(CVID.UO_colony_forming_unit_per_milliliter, new TermInfo(CVID.UO_colony_forming_unit_per_milliliter, @"UO", @"UO:0000213", @"colony forming unit per milliliter", @"A colony forming unit which a measure of viable bacterial numbers in one milliliter.", false));
            TermData.Add(CVID.UO_plaque_forming_unit_per_volume, new TermInfo(CVID.UO_plaque_forming_unit_per_volume, @"UO", @"UO:0000214", @"plaque forming unit per volume", @"A concentration unit which a measure of plague forming units in a given volume.", false));
            TermData.Add(CVID.UO_plaque_forming_unit_per_milliliter, new TermInfo(CVID.UO_plaque_forming_unit_per_milliliter, @"UO", @"UO:0000215", @"plaque forming unit per milliliter", @"A concentration unit which a measure of plague forming units in one milliliter.", false));
            TermData.Add(CVID.UO_disintegrations_per_second, new TermInfo(CVID.UO_disintegrations_per_second, @"UO", @"UO:0000216", @"disintegrations per second", @"An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second.", false));
            TermData.Add(CVID.UO_electric_potential_difference_unit, new TermInfo(CVID.UO_electric_potential_difference_unit, @"UO", @"UO:0000217", @"electric potential difference unit", @"A unit which is a standard measure of the work done per unit charge as a charge is moved between two points in an electric field.", false));
            TermData.Add(CVID.UO_volt, new TermInfo(CVID.UO_volt, @"UO", @"UO:0000218", @"volt", @"An electric potential difference unit which is equal to the work per unit charge. One volt is the potential difference required to move one coulomb of charge between two points in a circuit while using one joule of energy.", false));
            TermData.Add(CVID.UO_electric_charge, new TermInfo(CVID.UO_electric_charge, @"UO", @"UO:0000219", @"electric charge", @"A unit which is a standard measure of the quantity of unbalanced electricity in a body (either positive or negative) and construed as an excess or deficiency of electrons.", false));
            TermData.Add(CVID.UO_coulomb, new TermInfo(CVID.UO_coulomb, @"UO", @"UO:0000220", @"coulomb", @"An electrical charge unit which is equal to the amount of charge transferred by a current of 1 ampere in 1 second.", false));
            TermData.Add(CVID.UO_dalton, new TermInfo(CVID.UO_dalton, @"UO", @"UO:0000221", @"dalton", @"An independently to the base SI units defined mass unit which is equal to one twelfth of the mass of an unbound atom of the carbon-12 nuclide, at rest and in its ground state.", false));
            TermData.Add(CVID.UO_kilodalton, new TermInfo(CVID.UO_kilodalton, @"UO", @"UO:0000222", @"kilodalton", @"A mass unit which is equal to one thousand daltons.", false));
            TermData.Add(CVID.UO_watt_hour, new TermInfo(CVID.UO_watt_hour, @"UO", @"UO:0000223", @"watt-hour", @"An energy unit which is equal to the amount of electrical energy equivalent to a one-watt load drawing power for one hour.", false));
            TermData.Add(CVID.UO_kilowatt_hour, new TermInfo(CVID.UO_kilowatt_hour, @"UO", @"UO:0000224", @"kilowatt-hour", @"An energy unit which is equal to 1,000 watt-hours.", false));
            TermData.Add(CVID.UO_magnetic_flux_unit, new TermInfo(CVID.UO_magnetic_flux_unit, @"UO", @"UO:0000225", @"magnetic flux unit", @"A unit which is a standard measure of quantity of magnetism, taking account of the strength and the extent of a magnetic field.", false));
            TermData.Add(CVID.UO_weber, new TermInfo(CVID.UO_weber, @"UO", @"UO:0000226", @"weber", @"A magnetic flux unit which is equal to the amount of flux that when linked with a single turn of wire for an interval of one second will induce an electromotive force of one volt.", false));
            TermData.Add(CVID.UO_magnetic_flux_density_unit, new TermInfo(CVID.UO_magnetic_flux_density_unit, @"UO", @"UO:0000227", @"magnetic flux density unit", @"A unit which is a standard measure of the strength of a magnetic field.", false));
            TermData.Add(CVID.UO_tesla, new TermInfo(CVID.UO_tesla, @"UO", @"UO:0000228", @"tesla", @"A magnetic flux density unit which is equal to one weber per square meter.", false));
            TermData.Add(CVID.UO_volt_hour, new TermInfo(CVID.UO_volt_hour, @"UO", @"UO:0000229", @"volt-hour", @"A magnetic flux unit which is equal to 3600 Wb.", false));
            TermData.Add(CVID.UO_kilovolt_hour, new TermInfo(CVID.UO_kilovolt_hour, @"UO", @"UO:0000230", @"kilovolt-hour", @"A magnetic flux unit which is equal to one thousand volt-hours.", false));
            TermData.Add(CVID.UO_information_unit, new TermInfo(CVID.UO_information_unit, @"UO", @"UO:0000231", @"information unit", @"A unit which is a standard measure of the amount of information.", false));
            TermData.Add(CVID.UO_bit, new TermInfo(CVID.UO_bit, @"UO", @"UO:0000232", @"bit", @"An information unit which refers to a digit in the binary numeral system, which consists of base 2 digits (ie there are only 2 possible values: 0 or 1).", false));
            TermData.Add(CVID.UO_byte, new TermInfo(CVID.UO_byte, @"UO", @"UO:0000233", @"byte", @"An information unit which is equal to 8 bits.", false));
            TermData.Add(CVID.UO_kilobyte, new TermInfo(CVID.UO_kilobyte, @"UO", @"UO:0000234", @"kilobyte", @"An information unit which is equal to 1000 bytes.", false));
            TermData.Add(CVID.UO_megabyte, new TermInfo(CVID.UO_megabyte, @"UO", @"UO:0000235", @"megabyte", @"An information unit which is equal to 1000 kB.", false));
            TermData.Add(CVID.UO_image_resolution_unit, new TermInfo(CVID.UO_image_resolution_unit, @"UO", @"UO:0000236", @"image resolution unit", @"An information unit which is a standard measure of the detail an image holds.", false));
            TermData.Add(CVID.UO_chroma_sampling_unit, new TermInfo(CVID.UO_chroma_sampling_unit, @"UO", @"UO:0000237", @"chroma sampling unit", @"An image resolution unit which is a standard measure of the amount of spatial detail in an image.", false));
            TermData.Add(CVID.UO_dynamic_range_unit, new TermInfo(CVID.UO_dynamic_range_unit, @"UO", @"UO:0000238", @"dynamic range unit", @"An image resolution unit which is a standard measure of the amount of contrast available in a pixel.", false));
            TermData.Add(CVID.UO_spatial_resolution_unit, new TermInfo(CVID.UO_spatial_resolution_unit, @"UO", @"UO:0000239", @"spatial resolution unit", @"An image resolution unit which is a standard measure of the way luminance and chrominance may be sampled at different levels.", false));
            TermData.Add(CVID.UO_dots_per_inch, new TermInfo(CVID.UO_dots_per_inch, @"UO", @"UO:0000240", @"dots per inch", @"A spatial resolution unit which is a standard measure of the printing resolution, in particular the number of individual dots of ink a printer or toner can produce within a linear one-inch space.", false));
            TermData.Add(CVID.UO_micron_pixel, new TermInfo(CVID.UO_micron_pixel, @"UO", @"UO:0000241", @"micron pixel", @"A spatial resolution unit which is equal to a pixel size of one micrometer.", false));
            TermData.Add(CVID.UO_pixels_per_inch, new TermInfo(CVID.UO_pixels_per_inch, @"UO", @"UO:0000242", @"pixels per inch", @"A spatial resolution unit which is a standard measure of the resolution of a computer display, related to the size of the display in inches and the total number of pixels in the horizontal and vertical directions.", false));
            TermData.Add(CVID.UO_pixels_per_millimeter, new TermInfo(CVID.UO_pixels_per_millimeter, @"UO", @"UO:0000243", @"pixels per millimeter", @"A spatial resolution unit which is a standard measure of the number of pixels in one millimeter length or width of a digital image divided by the physical length or width of a printed image.", false));
            TermData.Add(CVID.UO_base_pair, new TermInfo(CVID.UO_base_pair, @"UO", @"UO:0000244", @"base pair", @"A count unit which contains one nucleotide.", false));
            TermData.Add(CVID.UO_kibibyte, new TermInfo(CVID.UO_kibibyte, @"UO", @"UO:0000245", @"kibibyte", @"An information unit which is equal to 1024 B.", false));
            TermData.Add(CVID.UO_mebibyte, new TermInfo(CVID.UO_mebibyte, @"UO", @"UO:0000246", @"mebibyte", @"An information unit which is equal to 1024 KiB.", false));
            TermData.Add(CVID.UO_millivolt, new TermInfo(CVID.UO_millivolt, @"UO", @"UO:0000247", @"millivolt", @"An electric potential difference unit which is equal to one thousandth of a volt or 10^", false));
            TermData.Add(CVID.UO_kilovolt, new TermInfo(CVID.UO_kilovolt, @"UO", @"UO:0000248", @"kilovolt", @"An electric potential difference unit which is equal to one thousand volts or 10^", false));
            TermData.Add(CVID.UO_microvolt, new TermInfo(CVID.UO_microvolt, @"UO", @"UO:0000249", @"microvolt", @"An electric potential difference unit which is equal to one millionth of a volt or 10^", false));
            TermData.Add(CVID.UO_nanovolt, new TermInfo(CVID.UO_nanovolt, @"UO", @"UO:0000250", @"nanovolt", @"An electric potential difference unit which is equal to one billionth of a volt or 10^", false));
            TermData.Add(CVID.UO_picovolt, new TermInfo(CVID.UO_picovolt, @"UO", @"UO:0000251", @"picovolt", @"An electric potential difference unit which is equal to one trillionth of a volt or 10^", false));
            TermData.Add(CVID.UO_megavolt, new TermInfo(CVID.UO_megavolt, @"UO", @"UO:0000252", @"megavolt", @"An electric potential difference unit which is equal to one million volts or 10^", false));
            TermData.Add(CVID.UO_surface_tension_unit, new TermInfo(CVID.UO_surface_tension_unit, @"UO", @"UO:0000253", @"surface tension unit", @"A unit which is a standard measure of the ability of a liguid to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces.", false));
            TermData.Add(CVID.UO_newton_per_meter, new TermInfo(CVID.UO_newton_per_meter, @"UO", @"UO:0000254", @"newton per meter", @"A surface tension unit which is equal to one newton per meter.", false));
            TermData.Add(CVID.UO_dyne_per_cm, new TermInfo(CVID.UO_dyne_per_cm, @"UO", @"UO:0000255", @"dyne per cm", @"A surface tension unit which is equal to one dyne per centimeter.", false));
            TermData.Add(CVID.UO_viscosity_unit, new TermInfo(CVID.UO_viscosity_unit, @"UO", @"UO:0000256", @"viscosity unit", @"A unit which is a standard measure of the internal resistance of fluids to flow.", false));
            TermData.Add(CVID.UO_pascal_second, new TermInfo(CVID.UO_pascal_second, @"UO", @"UO:0000257", @"pascal second", @"A viscosity unit which is equal to one pascale per second.", false));
            TermData.Add(CVID.UO_poise, new TermInfo(CVID.UO_poise, @"UO", @"UO:0000258", @"poise", @"A viscosity unit which is equal to one dyne second per square centimeter.", false));
            TermData.Add(CVID.UO_decibel, new TermInfo(CVID.UO_decibel, @"UO", @"UO:0000259", @"decibel", @"A ratio unit which is an indicator of sound power per unit area.", false));
            TermData.Add(CVID.UO_effective_dose_unit, new TermInfo(CVID.UO_effective_dose_unit, @"UO", @"UO:0000260", @"effective dose unit", @"A unit which is a standard measure of the estimate of the stochastic effect that a non-uniform radiation dose has on a human.", false));
            TermData.Add(CVID.UO_conduction_unit, new TermInfo(CVID.UO_conduction_unit, @"UO", @"UO:0000261", @"conduction unit", @"A unit which represents a standard measurement of the transmission of an entity through a medium.", false));
            TermData.Add(CVID.UO_electrical_conduction_unit, new TermInfo(CVID.UO_electrical_conduction_unit, @"UO", @"UO:0000262", @"electrical conduction unit", @"A unit which represents a standard measurement of the movement of electrically charged particles through a transmission medium (electrical conductor).", false));
            TermData.Add(CVID.UO_heat_conduction_unit, new TermInfo(CVID.UO_heat_conduction_unit, @"UO", @"UO:0000263", @"heat conduction unit", @"A unit which represents a standard measurement of the spontaneous transfer of thermal energy through matter, from a region of higher temperature to a region of lower temperature.", false));
            TermData.Add(CVID.UO_siemens, new TermInfo(CVID.UO_siemens, @"UO", @"UO:0000264", @"siemens", @"An electrical conduction unit which is equal to A/V.", false));
            TermData.Add(CVID.UO_watt_per_meter_kelvin, new TermInfo(CVID.UO_watt_per_meter_kelvin, @"UO", @"UO:0000265", @"watt per meter kelvin", @"An heat conduction unit which is equal to one watt divided by meter kelvin.", false));
            TermData.Add(CVID.UO_electronvolt, new TermInfo(CVID.UO_electronvolt, @"UO", @"UO:0000266", @"electronvolt", @"A non-SI unit of energy (eV) defined as the energy acquired by a single unbound electron when it passes through an electrostatic potential difference of one volt. An electronvolt is equal to 1.602 176 53(14) x 10^-19 J.", false));
            TermData.Add(CVID.UO_electric_field_strength_unit, new TermInfo(CVID.UO_electric_field_strength_unit, @"UO", @"UO:0000267", @"electric field strength unit", @"The electric field strength is a unit which is a measure of the potential difference between two points some distance apart.", false));
            TermData.Add(CVID.UO_volt_per_meter, new TermInfo(CVID.UO_volt_per_meter, @"UO", @"UO:0000268", @"volt per meter", @"The volt per meter is a unit of electric field strength equal to the a potential difference of 1 volt existing between two points that are 1 meter apart.", false));
            TermData.Add(CVID.UO_absorbance_unit, new TermInfo(CVID.UO_absorbance_unit, @"UO", @"UO:0000269", @"absorbance unit", @"A dimensionless logarithmic unit assigned to a measure of absorbance of light through a partially absorbing substance, defined as -log10(I/I_0) where I = transmitted light and I_0 = incident light.", false));
            TermData.Add(CVID.UO_volumetric_flow_rate_unit, new TermInfo(CVID.UO_volumetric_flow_rate_unit, @"UO", @"UO:0000270", @"volumetric flow rate unit", @"A unit which is a standard measure of the volume of fluid which passes through a given surface per unit time .", false));
            TermData.Add(CVID.UO_microliters_per_minute, new TermInfo(CVID.UO_microliters_per_minute, @"UO", @"UO:0000271", @"microliters per minute", @"A volumetric flow rate unit which is equal to one microliter volume through a given surface in one minute.", false));
            TermData.Add(CVID.UO_millimetres_of_mercury, new TermInfo(CVID.UO_millimetres_of_mercury, @"UO", @"UO:0000272", @"millimetres of mercury", @"A unit of pressure equal to the amount of fluid pressure one millimeter deep in mercury at zero degrees centigrade on Earth.", false));
            TermData.Add(CVID.UO_milligram_per_liter, new TermInfo(CVID.UO_milligram_per_liter, @"UO", @"UO:0000273", @"milligram per liter", @"A mass unit density which is equal to mass of an object in milligrams divided by the volume in liters.", false));
            TermData.Add(CVID.UO_microgram_per_milliliter, new TermInfo(CVID.UO_microgram_per_milliliter, @"UO", @"UO:0000274", @"microgram per milliliter", @"A mass unit density which is equal to mass of an object in micrograms divided by the volume in millliters.", false));
            TermData.Add(CVID.UO_nanogram_per_milliliter, new TermInfo(CVID.UO_nanogram_per_milliliter, @"UO", @"UO:0000275", @"nanogram per milliliter", @"A mass unit density which is equal to mass of an object in nanograms divided by the volume in milliliters.", false));
            TermData.Add(CVID.UO_amount_per_container, new TermInfo(CVID.UO_amount_per_container, @"UO", @"UO:0000276", @"amount per container", @"A concentration unit which is a standard measure of the amount of a substance in a given container.", false));
            TermData.Add(CVID.UO_ug_disk, new TermInfo(CVID.UO_ug_disk, @"UO", @"UO:0000277", @"ug/disk", @"A unit which is equal to one microgram per disk, where a disk is some physical surface/container upon which the substance is deposited.", false));
            TermData.Add(CVID.UO_nmole_disk, new TermInfo(CVID.UO_nmole_disk, @"UO", @"UO:0000278", @"nmole/disk", @"A unit which is equal to one nanomole per disk, where a disk is some physical surface/container upon which the substance is deposited.", false));
            TermData.Add(CVID.UO_milliunits_per_milliliter, new TermInfo(CVID.UO_milliunits_per_milliliter, @"UO", @"UO:0000279", @"milliunits per milliliter", @"A unit per milliliter unit which is equal to one thousandth of a unit of an agreed arbitrary amount per one milliliter.", false));
            TermData.Add(CVID.UO_rate_unit, new TermInfo(CVID.UO_rate_unit, @"UO", @"UO:0000280", @"rate unit", @"A unit which represents a standard measurement occurrence of a process per unit time.", false));
            TermData.Add(CVID.UO_count_per_nanomolar_second, new TermInfo(CVID.UO_count_per_nanomolar_second, @"UO", @"UO:0000281", @"count per nanomolar second", @"A rate unit which is equal to one over one nanomolar second.", false));
            TermData.Add(CVID.UO_count_per_molar_second, new TermInfo(CVID.UO_count_per_molar_second, @"UO", @"UO:0000282", @"count per molar second", @"A rate unit which is equal to one over one molar second.", false));
            TermData.Add(CVID.UO_kilogram_per_hectare, new TermInfo(CVID.UO_kilogram_per_hectare, @"UO", @"UO:0000283", @"kilogram per hectare", @"An area density unit which is equal to the mass of an object in kilograms divided by the surface area in hectares.", false));
            TermData.Add(CVID.UO_count_per_nanomolar, new TermInfo(CVID.UO_count_per_nanomolar, @"UO", @"UO:0000284", @"count per nanomolar", @"A rate unit which is equal to one over one nanomolar.", false));
            TermData.Add(CVID.UO_count_per_molar, new TermInfo(CVID.UO_count_per_molar, @"UO", @"UO:0000285", @"count per molar", @"A rate unit which is equal to one over one molar.", false));
            TermData.Add(CVID.UO_yotta, new TermInfo(CVID.UO_yotta, @"UO", @"UO:0000286", @"yotta", @"A prefix in the metric system denoting a factor of ten to the power of 24.", false));
            TermData.Add(CVID.UO_hecto, new TermInfo(CVID.UO_hecto, @"UO", @"UO:0000287", @"hecto", @"A prefix in the metric system denoting a factor of one hundred.", false));
            TermData.Add(CVID.UO_zetta, new TermInfo(CVID.UO_zetta, @"UO", @"UO:0000288", @"zetta", @"A prefix in the metric system denoting a factor of ten to the power of 21.", false));
            TermData.Add(CVID.UO_exa, new TermInfo(CVID.UO_exa, @"UO", @"UO:0000289", @"exa", @"A prefix in the metric system denoting a factor of ten to the power of 18.", false));
            TermData.Add(CVID.UO_peta, new TermInfo(CVID.UO_peta, @"UO", @"UO:0000290", @"peta", @"A prefix in the metric system denoting a factor of ten to the power of 15.", false));
            TermData.Add(CVID.UO_tera, new TermInfo(CVID.UO_tera, @"UO", @"UO:0000291", @"tera", @"A prefix in the metric system denoting a factor of ten to the power of 12.", false));
            TermData.Add(CVID.UO_giga, new TermInfo(CVID.UO_giga, @"UO", @"UO:0000292", @"giga", @"A prefix in the metric system denoting a factor of ten to the power of 9.", false));
            TermData.Add(CVID.UO_mega, new TermInfo(CVID.UO_mega, @"UO", @"UO:0000293", @"mega", @"A prefix in the metric system denoting a factor of million.", false));
            TermData.Add(CVID.UO_kilo, new TermInfo(CVID.UO_kilo, @"UO", @"UO:0000294", @"kilo", @"A prefix in the metric system denoting a factor of one thousand.", false));
            TermData.Add(CVID.UO_deca, new TermInfo(CVID.UO_deca, @"UO", @"UO:0000295", @"deca", @"A prefix in the metric system denoting a factor of ten.", false));
            TermData.Add(CVID.UO_deci, new TermInfo(CVID.UO_deci, @"UO", @"UO:0000296", @"deci", @"A prefix in the metric system denoting a factor of one tenth.", false));
            TermData.Add(CVID.UO_milli, new TermInfo(CVID.UO_milli, @"UO", @"UO:0000297", @"milli", @"A prefix in the metric system denoting a factor of one thousand.", false));
            TermData.Add(CVID.UO_centi, new TermInfo(CVID.UO_centi, @"UO", @"UO:0000298", @"centi", @"A prefix in the metric system denoting a factor of one hundred.", false));
            TermData.Add(CVID.UO_micro, new TermInfo(CVID.UO_micro, @"UO", @"UO:0000299", @"micro", @"A prefix in the metric system denoting a factor of 10 to the power of -6.", false));
            TermData.Add(CVID.UO_nano, new TermInfo(CVID.UO_nano, @"UO", @"UO:0000300", @"nano", @"A prefix in the metric system denoting a factor of 10 to the power of -9.", false));
            TermData.Add(CVID.UO_microgram_per_liter, new TermInfo(CVID.UO_microgram_per_liter, @"UO", @"UO:0000301", @"microgram per liter", @"A mass unit density which is equal to mass of an object in micrograms divided by the volume in liters.", false));
            TermData.Add(CVID.UO_pico, new TermInfo(CVID.UO_pico, @"UO", @"UO:0000302", @"pico", @"A prefix in the metric system denoting a factor of 10 to the power of -12.", false));
            TermData.Add(CVID.UO_femto, new TermInfo(CVID.UO_femto, @"UO", @"UO:0000303", @"femto", @"A prefix in the metric system denoting a factor of 10 to the power of -15.", false));
            TermData.Add(CVID.UO_atto, new TermInfo(CVID.UO_atto, @"UO", @"UO:0000304", @"atto", @"A prefix in the metric system denoting a factor of 10 to the power of -18.", false));
            TermData.Add(CVID.UO_zepto, new TermInfo(CVID.UO_zepto, @"UO", @"UO:0000305", @"zepto", @"A prefix in the metric system denoting a factor of 10 to the power of -21.", false));
            TermData.Add(CVID.UO_yocto, new TermInfo(CVID.UO_yocto, @"UO", @"UO:0000306", @"yocto", @"A prefix in the metric system denoting a factor of 10 to the power of -24.", false));
            TermData.Add(CVID.UO_dose_unit, new TermInfo(CVID.UO_dose_unit, @"UO", @"UO:0000307", @"dose unit", @"A concentration unit which is a standard measure of the amount of a toxic or pharmaceutical substance administered to a recipient subject, expressed in terms of the size of the subject.", false));
            TermData.Add(CVID.UO_milligram_per_kilogram, new TermInfo(CVID.UO_milligram_per_kilogram, @"UO", @"UO:0000308", @"milligram per kilogram", @"A dose unit which is equal to 1 milligram of a toxic or pharmaceutical substance per kilogram body weight of the recipient subject.", false));
            TermData.Add(CVID.UO_milligram_per_square_meter, new TermInfo(CVID.UO_milligram_per_square_meter, @"UO", @"UO:0000309", @"milligram per square meter", @"A dose unit which is equal to 1 milligram of a toxic or pharmaceutical substance per square meter of surface area of the recipient subject.", false));
            TermData.Add(CVID.UO_dosage_unit, new TermInfo(CVID.UO_dosage_unit, @"UO", @"UO:0000310", @"dosage unit", @"A concentration unit which is a standard measure of the amount of a toxic or pharmaceutical substance administered over time to a recipient subject, expressed in terms of the size of the subject.", false));
            TermData.Add(CVID.UO_milligram_per_kilogram_per_day, new TermInfo(CVID.UO_milligram_per_kilogram_per_day, @"UO", @"UO:0000311", @"milligram per kilogram per day", @"A dosage unit which is equal to 1 milligram per day of a toxic or pharmaceutical substance per kilogram body weight of the recipient subject.", false));
            TermData.Add(CVID.UO_relative_light_unit, new TermInfo(CVID.UO_relative_light_unit, @"UO", @"UO:0000312", @"relative light unit", @"A derived unit which is a measure of relative light intensity, as typically measured by a luminometer, spectrophotometer, or fluorimeter in biological research applications.", false));
            TermData.Add(CVID.UO_relative_luminescence_unit, new TermInfo(CVID.UO_relative_luminescence_unit, @"UO", @"UO:0000313", @"relative luminescence unit", @"A relative light unit which is a measure of relative luminescence intensity.", false));
            TermData.Add(CVID.UO_relative_fluorescence_unit, new TermInfo(CVID.UO_relative_fluorescence_unit, @"UO", @"UO:0000314", @"relative fluorescence unit", @"A relative light unit which is a measure of relative fluorescence intensity.", false));
            TermData.Add(CVID.UO_turbidity_unit, new TermInfo(CVID.UO_turbidity_unit, @"UO", @"UO:0000315", @"turbidity unit", @"A unit used to indicate the clarity of water or other solutions or suspensions, as measured by the ability of the solution or suspension to scatter light of a defined wavelength range.", false));
            TermData.Add(CVID.UO_cells_per_microliter, new TermInfo(CVID.UO_cells_per_microliter, @"UO", @"UO:0000316", @"cells per microliter", @"A unit of cell concentration which is equal to one cell in a volume of 1 microliter.", false));
            TermData.Add(CVID.UO_cells_per_well, new TermInfo(CVID.UO_cells_per_well, @"UO", @"UO:0000317", @"cells per well", @"A unit of cell concentration which is equal to 1 cell in a well or discrete container of arbitrary volume.", false));
            TermData.Add(CVID.UO_formazin_nephelometric_unit, new TermInfo(CVID.UO_formazin_nephelometric_unit, @"UO", @"UO:0000318", @"formazin nephelometric unit", @"1000 formazin turbidity units (FNU) on the empirical formazin turbidity scale represents reflectance of insol. reaction products of 0.0725 g hydrazine sulfate with 0.7250 g hexamethylenetetramine diluted to 1 L.", false));
            TermData.Add(CVID.UO_radioactivity_concentration, new TermInfo(CVID.UO_radioactivity_concentration, @"UO", @"UO:0000319", @"radioactivity concentration", @"A concentration unit which is a standard measure of the amount of radioactivity in a given volume.", false));
            TermData.Add(CVID.UO_curie_per_liter, new TermInfo(CVID.UO_curie_per_liter, @"UO", @"UO:0000320", @"curie per liter", @"A unit of radioactivity concentration which is equal to one curie in a volume of 1 liter.", false));
            TermData.Add(CVID.UO_microcurie_per_milliliter, new TermInfo(CVID.UO_microcurie_per_milliliter, @"UO", @"UO:0000321", @"microcurie per milliliter", @"A unit of radioactivity concentration which is equal to one micro curie in a volume of 1 liter.", false));
            TermData.Add(CVID.UO_fold_dilution, new TermInfo(CVID.UO_fold_dilution, @"UO", @"UO:0000322", @"fold dilution", @"A unit that is the ratio of concentration of two solutions of interest, typically with one solution derived from the other by the addition of solvent.", false));
            TermData.Add(CVID.UO_ton_per_hectare, new TermInfo(CVID.UO_ton_per_hectare, @"UO", @"UO:0000323", @"ton per hectare", @"An area density unit which is equal to the mass of an object in tons divided by the surface area in hectares.", false));
            TermData.Add(CVID.UO_square_angstrom, new TermInfo(CVID.UO_square_angstrom, @"UO", @"UO:0000324", @"square angstrom", @"An area unit which is equal to an area enclosed by a square with sides each 1 angstrom long.", false));
            TermData.Add(CVID.UO_megaHertz, new TermInfo(CVID.UO_megaHertz, @"UO", @"UO:0000325", @"megaHertz", @"A frequency unit which is equal to one million hertz or 10^", false));
            TermData.Add(CVID.UO_centiMorgan, new TermInfo(CVID.UO_centiMorgan, @"UO", @"UO:0000326", @"centiMorgan", @"A unit used to express distances on a genetic map. In genetic mapping, distances between markers are determined by measuring the rate of meoitic recombination between them, which increases proportionately with the distance separating them. A cM is defined as the length of an interval in which there is a 1% probability of recombination. On the average, 1 cM is roughly equivalent to 1 megabase (Mb) of DNA, although this can vary widely due to hot and cold spots of recombination.", false));
            TermData.Add(CVID.UO_centiRay, new TermInfo(CVID.UO_centiRay, @"UO", @"UO:0000327", @"centiRay", @"A unit of genetic map distance defined corresponding to an interval in which there is a 1% probability of X-irradiation induced breakage. To be completely specified, the unit must be qualified by the radiation in dosage in rads (e.g. cR8000), because this determines the actual breakage probability.", false));
            TermData.Add(CVID.UO_kilobasepair, new TermInfo(CVID.UO_kilobasepair, @"UO", @"UO:0000328", @"kilobasepair", @"A unit equal to one thousand base pairs.", false));
            TermData.Add(CVID.UO_megabasepair, new TermInfo(CVID.UO_megabasepair, @"UO", @"UO:0000329", @"megabasepair", @"A unit equal to one million base pairs", false));
            TermData.Add(CVID.UO_gigabasepair, new TermInfo(CVID.UO_gigabasepair, @"UO", @"UO:0000330", @"gigabasepair", @"A unit equal to one billion base pairs.", false));
            TermData.Add(CVID.UO_gigabyte, new TermInfo(CVID.UO_gigabyte, @"UO", @"UO:0000331", @"gigabyte", @"An information unit which is equal to 1000000000 bytes.", false));
            TermData.Add(CVID.UO_terabyte, new TermInfo(CVID.UO_terabyte, @"UO", @"UO:0000332", @"terabyte", @"An information unit which is equal to 1000 gigabytes.", false));
            TermData.Add(CVID.UO_square_micrometer, new TermInfo(CVID.UO_square_micrometer, @"UO", @"UO:0010001", @"square micrometer", @"An area unit which is equal to an area enclosed by a square with sides each 1 micrometer long.", false));
            TermData.Add(CVID.UO_millisiemens, new TermInfo(CVID.UO_millisiemens, @"UO", @"UO:0010002", @"millisiemens", @"An electrical conduction unit which is equal to one thousandth of a siemen or 10^", false));
            TermData.Add(CVID.UO_micromole_per_litre, new TermInfo(CVID.UO_micromole_per_litre, @"UO", @"UO:0010003", @"micromole per litre", @"A specific concentration unit which is equal to 1 micromole in a given volume of one thousandth of a cubic meter.", false));
            TermData.Add(CVID.UO_micromole_per_kilogram, new TermInfo(CVID.UO_micromole_per_kilogram, @"UO", @"UO:0010004", @"micromole per kilogram", @"A specific concentration unit which is equal to 1 micromole of a given substance per kilogram of solvent.", false));
            TermData.Add(CVID.UO_millimeters_per_day, new TermInfo(CVID.UO_millimeters_per_day, @"UO", @"UO:0010005", @"millimeters per day", @"A speed/velocity unit which is equal to the speed of an object traveling 1 millimeter distance in one day.", false));
            TermData.Add(CVID.UO_ratio1, new TermInfo(CVID.UO_ratio1, @"UO", @"UO:0010006", @"ratio", @"A dimensionless ratio unit which, given a pair of quantities a and b, for which b is a multiple of a, denotes b by giving the multiplier (coefficient) c for a to result in b.", false));
            TermData.Add(CVID.UO_volt_second_per_square_centimeter, new TermInfo(CVID.UO_volt_second_per_square_centimeter, @"UO", @"UO:0010007", @"volt-second per square centimeter", @"An electrical mobility unit which is equal to one volt second per square centimeter.", false));
            TermData.Add(CVID.UO_kilometer_per_hour, new TermInfo(CVID.UO_kilometer_per_hour, @"UO", @"UO:0010008", @"kilometer per hour", @"A speed/velocity unit which is equal to the speed of an object traveling 1 kilometer distance in one hour.", false));
            TermData.Add(CVID.UO_milli1, new TermInfo(CVID.UO_milli1, @"UO", @"UO:0010009", @"milli", @"A mass unit which is equal to 1/12 the mass of 12C", false));
            TermData.Add(CVID.UO_hectare, new TermInfo(CVID.UO_hectare, @"UO", @"UO:0010010", @"hectare", @"An area unit which is equal to an area of 10,000 square meters. Equivalent to 2.471 acres.", false));
            TermData.Add(CVID.UO_inch, new TermInfo(CVID.UO_inch, @"UO", @"UO:0010011", @"inch", @"A length unit which is equal to 0.0254 metres.", false));
            TermData.Add(CVID.UO_thou, new TermInfo(CVID.UO_thou, @"UO", @"UO:0010012", @"thou", @"A length unit which is equal to 0.0254 millimetres.", false));
            TermData.Add(CVID.UO_foot, new TermInfo(CVID.UO_foot, @"UO", @"UO:0010013", @"foot", @"A length unit which is equal to 0.3048 metres, or 12 inches.", false));
            TermData.Add(CVID.UO_yard, new TermInfo(CVID.UO_yard, @"UO", @"UO:0010014", @"yard", @"A length unit which is equal to 0.9144 metres, or 3 feet.", false));
            TermData.Add(CVID.UO_chain, new TermInfo(CVID.UO_chain, @"UO", @"UO:0010015", @"chain", @"A length unit which is equal to 20.1168 metres, 66 feet, or 22 yards.", false));
            TermData.Add(CVID.UO_furlong, new TermInfo(CVID.UO_furlong, @"UO", @"UO:0010016", @"furlong", @"A length unit which is equal to 20,116.8 metres, 660 feet, or 10 chains.", false));
            TermData.Add(CVID.UO_mile, new TermInfo(CVID.UO_mile, @"UO", @"UO:0010017", @"mile", @"A length unit which is equal to 1,609.344 metres, or 8 furlongs.", false));
            TermData.Add(CVID.UO_league, new TermInfo(CVID.UO_league, @"UO", @"UO:0010018", @"league", @"A length unit which is equal to 3 miles, or 4,828.032 metres", false));
            TermData.Add(CVID.UO_maritime_length_unit, new TermInfo(CVID.UO_maritime_length_unit, @"UO", @"UO:0010019", @"maritime length unit", @"A maritime length unit is one used primarily at sea.", false));
            TermData.Add(CVID.UO_fathom, new TermInfo(CVID.UO_fathom, @"UO", @"UO:0010020", @"fathom", @"A maritime length unit which is equal to 6.08 feet, or 1.853184 metres", false));
            TermData.Add(CVID.UO_cable, new TermInfo(CVID.UO_cable, @"UO", @"UO:0010021", @"cable", @"A maritime length unit which is equal to 608 feet, 100 fathoms, or 185.3184 metres", false));
            TermData.Add(CVID.UO_nautical_mile, new TermInfo(CVID.UO_nautical_mile, @"UO", @"UO:0010022", @"nautical mile", @"A maritime length unit which is equal to 6,080 feet, 10 cables, or 1,853.184 metres", false));
            TermData.Add(CVID.UO_perch, new TermInfo(CVID.UO_perch, @"UO", @"UO:0010023", @"perch", @"An area unit which is equal to an area of 25.292,852,64 square meters, or 1 square rod.", false));
            TermData.Add(CVID.UO_rood, new TermInfo(CVID.UO_rood, @"UO", @"UO:0010024", @"rood", @"An area unit which is equivalent to 1 furlong x 1 rod. This is equal to an area of 1,011.714,1056 square meters, or 40 square rods.", false));
            TermData.Add(CVID.UO_acre, new TermInfo(CVID.UO_acre, @"UO", @"UO:0010025", @"acre", @"An area unit which is equivalent to 1 furlong x 1 chain. This is equal to an area of 4,046.856,4224 square meters, or 43,500 square feet.", false));
            TermData.Add(CVID.UO_fluid_ounce, new TermInfo(CVID.UO_fluid_ounce, @"UO", @"UO:0010026", @"fluid ounce", @"An imperial volume unit which is equivalent to 28.413,0625 millilitres.", false));
            TermData.Add(CVID.UO_gill, new TermInfo(CVID.UO_gill, @"UO", @"UO:0010027", @"gill", @"An imperial volume unit which is equivalent to 142.065,3125 millilitres.", false));
            TermData.Add(CVID.UO_pint, new TermInfo(CVID.UO_pint, @"UO", @"UO:0010028", @"pint", @"An imperial volume unit which is equivalent to 568.261,25 millilitres.", false));
            TermData.Add(CVID.UO_quart, new TermInfo(CVID.UO_quart, @"UO", @"UO:0010029", @"quart", @"An imperial volume unit which is equivalent to 1,136.5225 millilitres, or two pints.", false));
            TermData.Add(CVID.UO_gallon, new TermInfo(CVID.UO_gallon, @"UO", @"UO:0010030", @"gallon", @"An imperial volume unit which is equivalent to 4,546.09 millilitres, or 8 pints.", false));
            TermData.Add(CVID.UO_grain, new TermInfo(CVID.UO_grain, @"UO", @"UO:0010031", @"grain", @"An imperial mass unit which is equivalent to 64.798,91 milligrams.", false));
            TermData.Add(CVID.UO_drachm, new TermInfo(CVID.UO_drachm, @"UO", @"UO:0010032", @"drachm", @"An imperial mass unit which is equivalent to 1.771,845,195,3125 grams, or 1/256 of 1 pound.", false));
            TermData.Add(CVID.UO_ounce, new TermInfo(CVID.UO_ounce, @"UO", @"UO:0010033", @"ounce", @"An imperial mass unit which is equivalent to 28.349,523,125 grams, or 1/16 of 1 pound.", false));
            TermData.Add(CVID.UO_pound, new TermInfo(CVID.UO_pound, @"UO", @"UO:0010034", @"pound", @"An imperial mass unit which is equivalent to 453.592,37 grams.", false));
            TermData.Add(CVID.UO_stone, new TermInfo(CVID.UO_stone, @"UO", @"UO:0010035", @"stone", @"An imperial mass unit which is equivalent to 6,350.293,18 grams, or 14 pounds.", false));
            TermData.Add(CVID.UO_quarter, new TermInfo(CVID.UO_quarter, @"UO", @"UO:0010036", @"quarter", @"An imperial mass unit which is equivalent to 12.700,586,36 kilograms, or 28 pounds.", false));
            TermData.Add(CVID.UO_hundredweight, new TermInfo(CVID.UO_hundredweight, @"UO", @"UO:0010037", @"hundredweight", @"An imperial mass unit which is equivalent to 50.802,345,44 kilograms, 112 pounds, or 8 stone.", false));
            TermData.Add(CVID.UO_ton, new TermInfo(CVID.UO_ton, @"UO", @"UO:0010038", @"ton", @"An imperial mass unit which is equivalent to 1,016.046,9088 kilograms, or 2,240 pounds.", false));
            TermData.Add(CVID.UO_slug, new TermInfo(CVID.UO_slug, @"UO", @"UO:0010039", @"slug", @"An imperial gravitational unit which is equivalent to a mass that accelerates by 1ft/sÂ² when a force of one pound (lbf) is exerted on it.", false));
            TermData.Add(CVID.UO_teaspoon, new TermInfo(CVID.UO_teaspoon, @"UO", @"UO:0010040", @"teaspoon", @"A metric teaspoon is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions. It equals a 5mL volume.", false));
            TermData.Add(CVID.UO_united_states_customary_teaspoon, new TermInfo(CVID.UO_united_states_customary_teaspoon, @"UO", @"UO:0010041", @"united states customary teaspoon", @"A United States customary units teaspoon is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions in America. It equals a 4.93 mL volume.", false));
            TermData.Add(CVID.UO_tablespoon, new TermInfo(CVID.UO_tablespoon, @"UO", @"UO:0010042", @"tablespoon", @"A metric tablespoon is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions. It equals a 15mL volume.", false));
            TermData.Add(CVID.UO_australian_metric_tablespoon, new TermInfo(CVID.UO_australian_metric_tablespoon, @"UO", @"UO:0010043", @"australian metric tablespoon", @"An Australian metric tablespoon is a unit of measurement of volume used in Australia for cooking recipes and pharmaceutic prescriptions. It equals a 20mL volume.", false));
            TermData.Add(CVID.UO_united_states_customary_tablespoon, new TermInfo(CVID.UO_united_states_customary_tablespoon, @"UO", @"UO:0010044", @"united states customary tablespoon", @"A United States customary units tablespoon is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions in America. It equals a 14.79 mL volume.", false));
            TermData.Add(CVID.UO_metric_cup, new TermInfo(CVID.UO_metric_cup, @"UO", @"UO:0010045", @"metric cup", @"A metric cup is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions. It equals a 250mL volume.", false));
            TermData.Add(CVID.UO_united_states_customary_cup, new TermInfo(CVID.UO_united_states_customary_cup, @"UO", @"UO:0010046", @"united states customary cup", @"A United States customary units cup is a unit of measurement of volume widely used in cooking recipes and pharmaceutic prescriptions in America. It equals a 236.59 mL volume.", false));
            TermData.Add(CVID.UO_united_states_fda_cup, new TermInfo(CVID.UO_united_states_fda_cup, @"UO", @"UO:0010047", @"united states fda cup", @"A United States FDA cup is a unit of measurement of volume used by the US Federal Department of Agriculture as a nutritional serving measure. It equals a 240 mL volume.", false));
        }

        /// <summary>Populate the CV Term data objects</summary>
        private static void PopulateTermData()
        {
            PopulateTermData_MS_Part1();
            PopulateTermData_MS_Part2();
            PopulateTermData_MS_Part3();
            PopulateTermData_MS_Part4();
            PopulateTermData_PEFF_Part1();
            PopulateTermData_UNIMOD_Part1();
            PopulateTermData_UNIMOD_Part2();
            PopulateTermData_PATO_Part1();
            PopulateTermData_PATO_Part2();
            PopulateTermData_PATO_Part3();
            PopulateTermData_UO_Part1();
        }
    }
}
