// DO NOT EDIT THIS FILE!
// This file is autogenerated from the internet-sourced OBO files.
// Any edits made will be lost when it is recreated.

// Using statements:
using System.Collections.Generic;

namespace PSI_Interface.CV
{

    public partial class CV
    {

        public readonly Dictionary<CVID, List<CVID>> RelationsIsA = new Dictionary<CVID, List<CVID>>();
        public readonly Dictionary<CVID, List<CVID>> RelationsPartOf = new Dictionary<CVID, List<CVID>>();
        public readonly Dictionary<CVID, List<string>> RelationsExactSynonym = new Dictionary<CVID, List<string>>();
        public readonly Dictionary<CVID, Dictionary<RelationsOtherTypes, List<CVID>>> RelationsOther = new Dictionary<CVID, Dictionary<RelationsOtherTypes, List<CVID>>>();

        public enum RelationsOtherTypes : int
        {
            Unknown,
            has_regexp,
            has_units,
            has_order,
            has_domain,
            correlates_with,
            decreased_in_magnitude_relative_to,
            different_in_magnitude_relative_to,
            directly_associated_with,
            has_cross_section,
            has_dividend_entity,
            has_dividend_quality,
            has_divisor_entity,
            has_divisor_quality,
            has_part,
            has_ratio_quality,
            has_relative_magnitude,
            increased_in_magnitude_relative_to,
            inheres_in,
            inversely_associated_with,
            is_magnitude_of,
            is_measurement_of,
            is_unit_of,
            realized_by,
            reciprocal_of,
            similar_in_magnitude_relative_to,
            singly_occurring_form_of,
            towards,
        }

        public enum CVID : int
        {
        	CVID_Unknown,

            // "Proteomics Standards Initiative Mass Spectrometry Vocabularies."
            MS_Proteomics_Standards_Initiative_Mass_Spectrometry_Vocabularies,

            // "A reference number relevant to the sample under study."
            MS_sample_number,

            // "A reference string relevant to the sample under study."
            MS_sample_name,

            // "The chemical phase of a pure sample, or the state of a mixed sample."
            MS_sample_state,

            // "Total mass of sample used."
            MS_sample_mass,

            // "Total volume of solution used."
            MS_sample_volume,

            // "Concentration of sample in picomol/ul, femtomol/ul or attomol/ul solution used."
            MS_sample_concentration,

            // "The nature of the sample inlet."
            MS_inlet_type,

            // "The method by which gas phase ions are generated from the sample."
            MS_ionization_type,

            // "OBSOLETE Whether positive or negative ions are selected for analysis by the spectrometer."
            MS_ionization_mode_OBSOLETE,

            // "OBSOLETE The common name of the particular analyzer stage being described. Synonym of mass analyzer, should be obsoleted."
            MS_analyzer_type_OBSOLETE,

            // "Smallest mass difference between two equal magnitude peaks so that the valley between them is a specified fraction of the peak height."
            MS_mass_resolution,

            // "Which of the available standard measures is used to define whether two peaks are separate."
            MS_resolution_measurement_method,

            // "OBSOLETE Specify the nature of resolution for the mass analyzer. Resolution is usually either constant with respect to m/z or proportional to m/z."
            MS_resolution_type_OBSOLETE,

            // "Accuracy is the degree of conformity of a measured mass to its actual value."
            MS_accuracy,

            // "Rate in Th/sec for scanning analyzers."
            MS_scan_rate,

            // "The time that an analyzer started a scan, relative to the start of the MS run."
            MS_scan_start_time,

            // "OBSOLETE Describes the type of mass analysis being performed. Two primary modes are: typical acquisition over a range of masses (Mass Scan), and Selected Ion Detection. The primary difference is that Selected Ion Detection produces a single value for the signal at the selected mass rather than producing a mass spectrum."
            MS_Scan_Function_OBSOLETE,

            // "Direction in terms of m/z of the scan for scanning analyzers (low to high, or high to low)."
            MS_scan_direction,

            // "Describes the function in control of the m/z scan (for scanning instruments). Commonly the scan function is linear, but in principle any function can be used."
            MS_scan_law,

            // "Describes the acquisition data type produced by a tandem mass spectrometry experiment."
            MS_scanning_method_OBSOLETE,

            // "Status of the reflectron, turned on or off."
            MS_reflectron_state,

            // "The length of the field free drift space in a time of flight mass spectrometer."
            MS_TOF_Total_Path_Length,

            // "OBSOLETE The total width (i.e. not half for plus-or-minus) of the gate applied around a selected precursor ion."
            MS_isolation_width_OBSOLETE,

            // "Final MS level achieved when performing PFF with the ion trap (e.g. MS E10)."
            MS_final_MS_exponent,

            // "A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity."
            MS_magnetic_field_strength,

            // "Type of detector used in the mass spectrometer."
            MS_detector_type,

            // "Method by which detector signal is acquired by the data system."
            MS_detector_acquisition_mode,

            // "The resolving power of the detector to detect the smallest difference between two ions so that the valley between them is a specified fraction of the peak height."
            MS_detector_resolution,

            // "The rate of signal sampling (measurement) with respect to time."
            MS_sampling_frequency,

            // "OBSOLETE Name of instrument vendor."
            MS_vendor_OBSOLETE,

            // "Instrument model name not including the vendor's name."
            MS_instrument_model,

            // "Free text description of a single customization made to the instrument; for several modifications, use several entries."
            MS_customization,

            // "The removal of isotope peaks to represent the fragment ion as one data point and is commonly done to reduce complexity. It is done in conjunction with the charge state deconvolution."
            MS_deisotoping,

            // "The determination of the mass of an ion based on the mass spectral peaks that represent multiple-charge ions."
            MS_charge_deconvolution,

            // "Spectral peak processing conducted on the acquired data to convert profile data to centroided data."
            MS_peak_picking,

            // "OBSOLETE."
            MS_scan_mode_OBSOLETE,

            // "OBSOLETE Terms to describe the polarity setting of the instrument."
            MS_polarity_OBSOLETE,

            // "OBSOLETE Acquisition time in minutes."
            MS_minute_OBSOLETE,

            // "OBSOLETE Acquisition time in seconds."
            MS_second_OBSOLETE,

            // "Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated."
            MS_m_z,

            // "The charge state of the ion, single or multiple and positive or negatively charged."
            MS_charge_state,

            // "Intensity of ions as measured by the height or area of a peak in a mass spectrum."
            MS_peak_intensity,

            // "Intensity units are commonly arbitrary. Detected in counts per second (cps) when using counting detectors, but measured in volts when using analog detectors."
            MS_intensity_unit,

            // "Fragmentation method used for dissociation or fragmentation."
            MS_dissociation_method,

            // "Energy for an ion experiencing collision with a stationary gas particle resulting in dissociation of the ion."
            MS_collision_energy,

            // "OBSOLETE Energy units are represented in either eV or Joules."
            MS_energy_unit_OBSOLETE,

            // "State if the sample is in emulsion form."
            MS_emulsion,

            // "State if the sample is in gaseous form."
            MS_gaseous_sample_state,

            // "State if the sample is in liquid form."
            MS_liquid_sample_state,

            // "State if the sample is in solid form."
            MS_solid_sample_state,

            // "State if the sample is in solution form."
            MS_solution,

            // "State if the sample is in suspension form."
            MS_suspension,

            // "Sample batch lot identifier."
            MS_sample_batch,

            // "OBSOLETE Chromatographic conditions used to obtain the sample."
            MS_chromatography_OBSOLETE,

            // "Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix."
            MS_continuous_flow_fast_atom_bombardment,

            // "The sample is directly inserted into the ion source, usually on the end of a heatable probe."
            MS_direct_inlet,

            // "Inlet used for introducing the liquid sample into an electrospray ionization source."
            MS_electrospray_inlet,

            // "Sample is directly injected or infused into the ionization source."
            MS_flow_injection_analysis,

            // "A gas discharge ion source in which the energy to the plasma is supplied by electromagnetic induction."
            MS_inductively_coupled_plasma,

            // "The continuous flow of solution of a sample into the ionization source."
            MS_infusion,

            // "A device that separates carrier gas from gaseous analyte molecules on the basis of diffusivity."
            MS_jet_separator,

            // "A device to separate carrier molecules from analyte molecules on the basis of ease of diffusion across a semipermeable membrane."
            MS_membrane_separator,

            // "Continuous moving surface in the form of a belt which passes through an ion source carrying analyte molecules."
            MS_moving_belt,

            // "Continuous moving surface in the form of a wire which passes through an ion source carrying analyte molecules."
            MS_moving_wire,

            // "A division of flowing stream of liquid into two streams."
            MS_open_split,

            // "Method for generating ions from a solution of an analyte."
            MS_particle_beam,

            // "A sample inlet method involving a reservoir."
            MS_reservoir,

            // "A disc composed of a flexible material that seals the entrance to the reservoir. Can also be entrance to the vacuum chamber."
            MS_septum,

            // "A method for generating gas phase ions from a solution of an analyte by rapid heating of the sample."
            MS_thermospray_inlet,

            // "Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization."
            MS_atmospheric_pressure_chemical_ionization,

            // "The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization."
            MS_chemical_ionization,

            // "OBSOLETE The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended."
            MS_Electronic_Ionization_OBSOLETE,

            // "A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended."
            MS_electrospray_ionization,

            // "The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization."
            MS_fast_atom_bombardment_ionization,

            // "The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization."
            MS_matrix_assisted_laser_desorption_ionization,

            // "OBSOLETE."
            MS_negative_ion_mode_OBSOLETE,

            // "OBSOLETE."
            MS_positive_ion_mode_OBSOLETE,

            // "A linear ion trap mass spectrometer where ions are ejected along the axis of the analyzer."
            MS_axial_ejection_linear_ion_trap,

            // "A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z."
            MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer,

            // "A device that produces a magnetic field perpendicular to a charged particle beam that deflects the beam to an extent that is proportional to the particle momentum per unit charge. For a monoenergetic beam, the deflection is proportional to m/z."
            MS_magnetic_sector,

            // "A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis."
            MS_quadrupole,

            // "Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials."
            MS_quadrupole_ion_trap,

            // "A linear ion trap mass spectrometer where ions are ejected along the radius of the analyzer."
            MS_radial_ejection_linear_ion_trap,

            // "Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy."
            MS_time_of_flight,

            // "An attribute of resolution when recording the detector response in absence of the analyte."
            MS_baseline,

            // "A measure of resolution represented as width of the peak at half peak height."
            MS_full_width_at_half_maximum,

            // "An attribute of resolution when the ratio between adjacent signals is 10% of the signal height."
            MS_ten_percent_valley,

            // "OBSOLETE When resolution is constant with respect to m/z."
            MS_constant_OBSOLETE,

            // "OBSOLETE When resolution is proportional with respect to m/z."
            MS_proportional_OBSOLETE,

            // "OBSOLETE A variation of instrument where a selected mass is scanned."
            MS_mass_scan_OBSOLETE,

            // "OBSOLETE Please see Single Ion Monitoring."
            MS_selected_ion_detection_OBSOLETE,

            // "High to low direction in terms of m/z of the scan for scanning analyzers."
            MS_decreasing_m_z_scan,

            // "Low to high direction in terms of m/z of the scan for scanning analyzers."
            MS_increasing_m_z_scan,

            // "The mass scan is done in exponential mode."
            MS_exponential,

            // "OBSOLETE The mass scan is done in linear mode."
            MS_linear_OBSOLETE,

            // "The mass scan is done in quadratic mode."
            MS_quadratic,

            // "OBSOLETE A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum."
            MS_constant_neutral_mass_loss_OBSOLETE,

            // "OBSOLETE Data acquired when monitoring the ion current of a few specific m/z values. Remap to MS:1000205 -Selected Ion Monitoring."
            MS_multiple_ion_monitoring_OBSOLETE,

            // "OBSOLETE This term is not recommended. See Selected Reaction Monitoring."
            MS_multiple_reaction_monitoring_OBSOLETE,

            // "OBSOLETE The specific scan function or process that will record a precursor ion spectrum."
            MS_precursor_ion_scan_OBSOLETE,

            // "OBSOLETE The specific scan function or process that records product ion spectrum."
            MS_product_ion_scan_OBSOLETE,

            // "OBSOLETE The operation of a mass spectrometer to monitor a single ion rather than scanning entire mass spectrum."
            MS_single_ion_monitoring_OBSOLETE,

            // "OBSOLETE This term is not recommended. See Selected Reaction Monitoring."
            MS_single_reaction_monitoring_OBSOLETE,

            // "OBSOLETE None."
            MS_None____OBSOLETE,

            // "Reflectron is off."
            MS_reflectron_off,

            // "Reflectron is on."
            MS_reflectron_on,

            // "A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse."
            MS_channeltron,

            // "A surface that is held at high potential so that ions striking the surface produce electrons that are subsequently detected."
            MS_conversion_dynode_electron_multiplier,

            // "A detector in which ions strike a conversion dynode to produce electrons that in turn generate photons through a phosphorescent screen that are detected by a photomultiplier."
            MS_conversion_dynode_photomultiplier,

            // "Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector."
            MS_daly_detector,

            // "A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons."
            MS_electron_multiplier_tube,

            // "A conducting cup or chamber that intercepts a charged particle beam and is electrically connected to a current measuring device."
            MS_faraday_cup,

            // "An array of detectors for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane."
            MS_focal_plane_array,

            // "A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate."
            MS_microchannel_plate_detector,

            // "A detector system commonly used in inductively coupled plasma mass spectrometers."
            MS_multi_collector,

            // "A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected."
            MS_photomultiplier,

            // "Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers."
            MS_analog_digital_converter,

            // "Definition to do."
            MS_pulse_counting,

            // "A device for converting a signal of sporadic pluses into a digital representation of their time indices."
            MS_time_digital_converter,

            // "A detector acquisition mode used for detecting transient signals."
            MS_transient_recorder,

            // "The brand of instruments from the joint venture between Applied Biosystems and MDS Analytical Technologies (formerly MDS SCIEX). Previously branded as \"Applied Biosystems|MDS SCIEX\"."
            MS_AB_SCIEX_instrument_model,

            // "Bruker Daltonics' instrument model."
            MS_Bruker_Daltonics_instrument_model,

            // "IonSpec corporation instrument model."
            MS_IonSpec_instrument_model,

            // "Shimadzu corporation instrument model."
            MS_Shimadzu_instrument_model,

            // "ThermoFinnigan from Thermo Electron Corporation instrument model."
            MS_Thermo_Finnigan_instrument_model,

            // "Waters Corporation instrument model."
            MS_Waters_instrument_model,

            // "Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset."
            MS_centroid_spectrum,

            // "A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis."
            MS_profile_spectrum,

            // "Polarity of the scan is negative."
            MS_negative_scan,

            // "Polarity of the scan is positive."
            MS_positive_scan,

            // "The number of counted events observed in one or a group of elements of a detector."
            MS_number_of_detector_counts,

            // "The magnitude of a peak or measurement element expressed in terms of the percentage of the magnitude of the base peak intensity."
            MS_percent_of_base_peak,

            // "The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended."
            MS_collision_induced_dissociation,

            // "The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization."
            MS_plasma_desorption,

            // "A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra."
            MS_post_source_decay,

            // "Fragmentation that results from the collision of an ion with a surface."
            MS_surface_induced_dissociation,

            // "OBSOLETE A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J."
            MS_electron_volt_OBSOLETE,

            // "Instrument setting, expressed in percent, for adjusting collisional energies of ions in an effort to provide equivalent excitation of all ions."
            MS_normalized_collision_energy,

            // "Applied Biosystems/MDS SCIEX Q 4000 TRAP MS."
            MS_4000_QTRAP,

            // "Applied Biosystems/MDS SCIEX 4700 Proteomics Analyzer MS."
            MS_4700_Proteomics_Analyzer,

            // "Bruker Daltonics' apex IV: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR."
            MS_apex_IV,

            // "Bruker Daltonics' apex Q: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR."
            MS_apex_Q,

            // "Applied Biosystems/MDS SCIEX API 150EX MS."
            MS_API_150EX,

            // "Applied Biosystems/MDS SCIEX API 150EX Prep MS."
            MS_API_150EX_Prep,

            // "Applied Biosystems/MDS SCIEX API 2000 MS."
            MS_API_2000,

            // "Applied Biosystems/MDS SCIEX API 3000 MS."
            MS_API_3000,

            // "Applied Biosystems/MDS SCIEX API 4000 MS."
            MS_API_4000,

            // "Bruker Daltonics' autoflex II: MALDI TOF."
            MS_autoflex_II,

            // "Bruker Daltonics' autoflex TOF/TOF MS: MALDI TOF."
            MS_autoflex_TOF_TOF,

            // "Waters AutoSpec Ultima NT MS."
            MS_Auto_Spec_Ultima_NT,

            // "Bruker Daltonics' BioTOF II: ESI TOF."
            MS_BioTOF_II,

            // "Bruker Daltonics' BioTOF-Q: ESI Q-TOF."
            MS_BioTOF_Q,

            // "ThermoFinnigan DELTA plusAdvantage MS."
            MS_DELTA_plusAdvantage,

            // "ThermoFinnigan DELTAplusXP MS."
            MS_DELTAplusXP,

            // "OBSOLETE ThermoFinnigan ELEMENT2 MS."
            MS_ELEMENT2_OBSOLETE,

            // "Bruker Daltonics' esquire 4000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI."
            MS_esquire_4000,

            // "Bruker Daltonics' esquire 6000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI."
            MS_esquire_6000,

            // "IonSpec Explorer MS."
            MS_explorer,

            // "Waters oa-ToF based GCT."
            MS_GCT,

            // "Bruker Daltonics' HCT: ESI Q-TOF, Nanospray, APCI, APPI."
            MS_HCT,

            // "Bruker Daltonics' HCTplus: ESI Q-TOF, Nanospray, APCI, APPI."
            MS_HCTplus,

            // "IonSpec HiResESI MS."
            MS_HiRes_ESI,

            // "IonSpec HiResMALDI MS."
            MS_HiRes_MALDI,

            // "Waters IsoPrime MS."
            MS_IsoPrime,

            // "Waters IsoProbe MS."
            MS_IsoProbe,

            // "Waters IsoProbe T MS."
            MS_IsoProbe_T,

            // "ThermoFinnigan LCQ Advantage MS."
            MS_LCQ_Advantage,

            // "ThermoFinnigan LCQ Classic MS."
            MS_LCQ_Classic,

            // "ThermoFinnigan LCQ Deca XP Plus MS."
            MS_LCQ_Deca_XP_Plus,

            // "Waters oa-ToF based MALDI L."
            MS_M_LDI_L,

            // "Waters oa-ToF based MALDI LR."
            MS_M_LDI_LR,

            // "ThermoFinnigan MAT253 MS."
            MS_MAT253,

            // "ThermoFinnigan MAT900XP MS."
            MS_MAT900XP,

            // "ThermoFinnigan MAT900XP Trap MS."
            MS_MAT900XP_Trap,

            // "ThermoFinnigan MAT95XP MS."
            MS_MAT95XP,

            // "ThermoFinnigan MAT95XP Trap MS."
            MS_MAT95XP_Trap,

            // "Bruker Daltonics' microflex: MALDI TOF."
            MS_microflex,

            // "Bruker Daltonics' microTOF LC: ESI TOF, Nanospray, APCI, APPI."
            MS_microTOF_LC,

            // "ThermoFinnigan NEPTUNE MS."
            MS_neptune,

            // "Waters NG-5400 MS."
            MS_NG_5400,

            // "IonSpec OMEGA MS."
            MS_OMEGA,

            // "IonSpec OMEGA-2001 MS."
            MS_OMEGA_2001,

            // "Bruker Daltonics' OmniFlex: MALDI TOF."
            MS_OmniFlex,

            // "Waters Platform ICP MS."
            MS_Platform_ICP,

            // "ThermoFinnigan PolarisQ MS."
            MS_PolarisQ,

            // "Applied Biosystems/MDS SCIEX Proteomics Solution 1 MS."
            MS_proteomics_solution_1,

            // "Applied Biosystems/MDS SCIEX Q TRAP MS."
            MS_Q_TRAP,

            // "Waters oa-ToF based Q-Tof micro."
            MS_Q_Tof_micro,

            // "Waters oa-ToF based Q-Tof Ultima."
            MS_Q_Tof_ultima,

            // "Applied Biosystems/MDS SCIEX QSTAR MS."
            MS_QSTAR,

            // "Waters oa-ToF based micro."
            MS_quattro_micro,

            // "Waters oa-ToF based Ultima."
            MS_Quattro_UItima,

            // "ThermoFinnigan Surveyor MSQ MS."
            MS_Surveyor_MSQ,

            // "Applied Biosystems/MDS SCIEX SymBiot I MS."
            MS_SymBiot_I,

            // "Applied Biosystems/MDS SCIEX SymBiot XVI MS."
            MS_SymBiot_XVI,

            // "ThermoFinnigan TEMPUS TOF MS."
            MS_TEMPUS_TOF,

            // "ThermoFinnigan TRACE DSQ MS."
            MS_TRACE_DSQ,

            // "ThermoFinnigan TRITON MS."
            MS_TRITON,

            // "ThermoFinnigan TSQ Quantum MS."
            MS_TSQ_Quantum,

            // "IonSpec Ultima MS."
            MS_ultima,

            // "Bruker Daltonics' ultraflex: MALDI TOF."
            MS_ultraflex,

            // "Bruker Daltonics' ultraflex TOF/TOF: MALDI TOF."
            MS_ultraflex_TOF_TOF,

            // "Applied Biosystems/MDS SCIEX Voyager-DE PRO MS."
            MS_Voyager_DE_PRO,

            // "Applied Biosystems/MDS SCIEX Voyager-DE STR MS."
            MS_Voyager_DE_STR,

            // "The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum."
            MS_selected_ion_monitoring,

            // "Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space."
            MS_selected_reaction_monitoring,

            // "OBSOLETE An experimentally determined mass that is can be to determine a unique elemental formula. For ions less than 200 u, a measurement with 5 ppm accuracy is sufficient to determine the elemental composition."
            MS_accurate_mass_OBSOLETE,

            // "OBSOLETE The mass of an ion or molecule calculated using the average mass of each element weighted for its natural isotopic abundance."
            MS_average_mass_OBSOLETE,

            // "OBSOLETE The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended."
            MS_appearance_energy_OBSOLETE,

            // "The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures."
            MS_base_peak,

            // "OBSOLETE. The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state."
            MS_OBSOLETE_charge_number_OBSOLETE,

            // "OBSOLETE A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg."
            MS_dalton_OBSOLETE,

            // "OBSOLETE The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy."
            MS_electron_affinity_OBSOLETE,

            // "OBSOLETE The potential difference through which electrons are accelerated before they are used to bring about electron ionization."
            MS_electron_energy_obsolete_OBSOLETE,

            // "OBSOLETE The calculated mass of an ion or molecule containing a single isotope of each atom."
            MS_exact_mass_OBSOLETE,

            // "A section of a mass spectrometer in which there are no electric or magnetic fields."
            MS_field_free_region,

            // "OBSOLETE A measure of the probability that a given ionization process will occur when an atom or molecule interacts with a photon, electron, atom or molecule."
            MS_ionization_cross_section_OBSOLETE,

            // "OBSOLETE The ratio of the number of ions formed to the number of electrons, molecules or photons used."
            MS_ionization_efficiency_OBSOLETE,

            // "OBSOLETE The minimum energy required to remove an electron from an atom or molecule to produce a positive ion."
            MS_ionization_energy_OBSOLETE,

            // "OBSOLETE A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard."
            MS_isotope_dilution_mass_spectrometry_OBSOLETE,

            // "The deflection of charged particles in a magnetic field due to a force equal to qvxB where q is the particle charge, v its velocity and B the magnetic field. Magnetic deflection of an ion beam is used for m/z separation in a magnetic sector mass spectrometer."
            MS_magnetic_deflection,

            // "OBSOLETE The difference between the monoisotopic and nominal mass of a molecule or atom."
            MS_mass_defect_OBSOLETE,

            // "OBSOLETE The sum of the protons and neutrons in an atom, molecule or ion."
            MS_mass_number_OBSOLETE,

            // "OBSOLETE The mass of one mole of a molecular substance (6.022 1415(10) x 10^23 molecules)."
            MS_molecular_mass_OBSOLETE,

            // "OBSOLETE The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element."
            MS_monoisotopic_mass_OBSOLETE,

            // "OBSOLETE A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam."
            MS_molecular_beam_mass_spectrometry_OBSOLETE,

            // "Photoionization of an atom or molecule in which in two or more photons are absorbed."
            MS_multiphoton_ionization,

            // "OBSOLETE An organic molecule containing the elements C, H, O, S, P, or halogen has an odd nominal mass if it contains an odd number of nitrogen atoms."
            MS_nitrogen_rule_OBSOLETE,

            // "OBSOLETE The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element rounded to the nearest integer value."
            MS_nominal_mass_OBSOLETE,

            // "OBSOLETE Odd-electron ions may dissociate to form either odd or even-electron ions, whereas even-electron ions generally form even-electron fragment ions."
            MS_odd_electron_rule_OBSOLETE,

            // "A localized region of relatively large ion signal in a mass spectrum. Although peaks are often associated with particular ions, the terms peak and ion should not be used interchangeably."
            MS_peak,

            // "OBSOLETE The height or area of a peak in a mass spectrum."
            MS_peak_intensity_OBSOLETE,

            // "OBSOLETE The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ ->
            MS_proton_affinity_OBSOLETE,

            // "OBSOLETE In a mass spectrum, the observed mass divided by the difference between two masses that can be separated. The method by which delta m was obtained and the mass at which the measurement was made should be reported."
            MS_mass_resolving_power_OBSOLETE,

            // "Chromatogram obtained by plotting the total ion current detected in each of a series of mass spectra recorded as a function of retention time."
            MS_total_ion_current_chromatogram,

            // "The ratio of the number of ions leaving a region of a mass spectrometer to the number entering that region."
            MS_transmission,

            // "OBSOLETE A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg."
            MS_unified_atomic_mass_unit_OBSOLETE,

            // "OBSOLETE A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy."
            MS_accelerator_mass_spectrometry_OBSOLETE,

            // "Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer."
            MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization,

            // "Any ionization process in which ions are formed in the gas phase at atmospheric pressure."
            MS_atmospheric_pressure_ionization,

            // "OBSOLETE Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization."
            MS_Atmostpheric_Pressure_Photoionization_OBSOLETE,

            // "A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation."
            MS_blackbody_infrared_radiative_dissociation,

            // "OBSOLETE A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site."
            MS_charge_remote_fragmentation_OBSOLETE,

            // "OBSOLETE MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored."
            MS_consecutive_reaction_monitoring_OBSOLETE,

            // "The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion."
            MS_charge_stripping,

            // "The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer."
            MS_delayed_extraction,

            // "The formation of ions from a solid or liquid material after the rapid vaporization of that sample."
            MS_desorption_ionization,

            // "A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization."
            MS_direct_insertion_probe,

            // "The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization."
            MS_direct_liquid_introduction,

            // "A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments."
            MS_electron_capture_dissociation,

            // "OBSOLETE An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state."
            MS_even_electron_ion_OBSOLETE,

            // "OBSOLETE The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion."
            MS_electron_induced_excitation_in_organics_OBSOLETE,

            // "A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons."
            MS_electron_multiplier,

            // "A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time."
            MS_electrostatic_energy_analyzer,

            // "An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa."
            MS_flowing_afterglow,

            // "OBSOLETE The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion."
            MS_high_field_asymmetric_waveform_ion_mobility_spectrometry_OBSOLETE,

            // "The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization."
            MS_field_desorption,

            // "The removal of electrons from any species by interaction with a high electric field."
            MS_field_ionization,

            // "The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas."
            MS_glow_discharge_ionization,

            // "OBSOLETE A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge."
            MS_ion_kinetic_energy_spectrometry_OBSOLETE,

            // "OBSOLETE The separation of ions according to their velocity through a buffer gas under the influence of an electric field."
            MS_ion_mobility_spectrometry_OBSOLETE,

            // "Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons."
            MS_infrared_multiphoton_dissociation,

            // "OBSOLETE The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer."
            MS_isotope_ratio_mass_spectrometry_OBSOLETE,

            // "A device for spatially confining ions using electric and magnetic fields alone or in combination."
            MS_ion_trap,

            // "OBSOLETE Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction."
            MS_kinetic_energy_release_distribution_OBSOLETE,

            // "OBSOLETE The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules."
            MS_Laser_Desorption_OBSOLETE,

            // "OBSOLETE Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process."
            MS_mass_analyzed_ion_kinetic_energy_spectrometry_OBSOLETE,

            // "OBSOLETE The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments."
            MS_mass_spectrometry_OBSOLETE,

            // "OBSOLETE The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions."
            MS_mass_spectrometry_mass_spectrometry_OBSOLETE,

            // "OBSOLETE Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions."
            MS_multiple_stage_mass_spectrometry_OBSOLETE,

            // "Chemical ionization that results in the formation of negative ions."
            MS_Negative_Ion_chemical_ionization,

            // "With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species."
            MS_neutralization_reionization_mass_spectrometry,

            // "The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended."
            MS_photoionization,

            // "A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source."
            MS_pyrolysis_mass_spectrometry,

            // "A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation."
            MS_collision_quadrupole,

            // "Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species."
            MS_resonance_enhanced_multiphoton_ionization,

            // "OBSOLETE A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber."
            MS_residual_gas_analyzer_OBSOLETE,

            // "The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization."
            MS_surface_enhanced_laser_desorption_ionization,

            // "Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface."
            MS_surface_enhanced_neat_desorption,

            // "OBSOLETE The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature."
            MS_suface_ionization_OBSOLETE,

            // "A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions."
            MS_selected_ion_flow_tube,

            // "A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time."
            MS_sustained_off_resonance_irradiation,

            // "OBSOLETE Mass spectrometry using spark ionization."
            MS_Spark_Source_Mass_Spectrometry_OBSOLETE,

            // "A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS2 experiments."
            MS_stored_waveform_inverse_fourier_transform,

            // "The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum."
            MS_total_ion_current,

            // "Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse."
            MS_time_lag_focusing,

            // "OBSOLETE An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy."
            MS_time_of_flight_mass_spectrometer_OBSOLETE,

            // "A device that uses an oscillating electric field and magnetic field to accelerate charged particles."
            MS_cyclotron,

            // "OBSOLETE A mass spectrometer that uses a magnetic sector for m/z focusing and an electric sector for energy focusing of an ion beam."
            MS_double_focusing_mass_spectrometer_OBSOLETE,

            // "OBSOLETE A mass spectrometer that combines m/z analyzers of different types to perform tandem mass spectrometry."
            MS_hybrid_mass_spectrometer_OBSOLETE,

            // "A two dimensional Paul ion trap in which ions are confined in the axial dimension by means of an electric field at the ends of the trap."
            MS_linear_ion_trap,

            // "OBSOLETE An instrument that separates a beam of ions according to their mass-to-charge ratio in which the ions are directed onto a focal plane detector such as a photographic plate."
            MS_mass_spectrograph_obsolete_OBSOLETE,

            // "OBSOLETE An instrument that measures the mass-to-charge ratio and relative abundances of ions."
            MS_mass_spectrometer_OBSOLETE,

            // "A plot of the relative abundance of a beam or other collection of ions as a function of the mass-to-charge ratio (m/z)."
            MS_mass_spectrum,

            // "OBSOLETE An arrangement for a double-focusing mass spectrometer in which a deflection of ?/(4 ?(2)) radians in a radial electric field is followed by a magnetic deflection of ?/2 radians."
            MS_mattauch_herzog_geometry_OBSOLETE,

            // "OBSOLETE An arrangement for a double-focusing mass spectrometer in which a deflection of ?/2 radians in a radial electric field analyzer is followed by a magnetic deflection of ?/3 radians."
            MS_nier_johnson_geometry_OBSOLETE,

            // "OBSOLETE A device that permits the trapping of ions by means of an alternating current voltage. The ejection of ions with a m/z less than a prescribed value and retention of those with higher mass depends on the application of radio frequency voltages between a ring electrode and two end-cap electrodes to confine the ions in a circular path. The choice of these voltages determines the m/z below which ions are ejected."
            MS_paul_ion_trap_OBSOLETE,

            // "OBSOLETE A mass spectrometer in which the ions of different m/z are separated by means of crossed electric and magnetic fields in such a way that the selected ions follow a prolate trochoidal path."
            MS_prolate_traochoidal_mass_spectrometer_OBSOLETE,

            // "OBSOLETE An abbreviation of quadrupole ion storage trap. This term is synonymous with Paul Ion Trap. If so then add a synonym to paul and obsolete this term."
            MS_quistor_OBSOLETE,

            // "A time-of-flight mass spectrometer that uses a static electric field to reverse the direction of travel of the ions entering it. A reflectron improves mass resolution by assuring that ions of the same m/z but different kinetic energy arrive at the detector at the same time."
            MS_reflectron,

            // "OBSOLETE A mass spectrometer consisting of one or more magnetic sectors for m/z selection in a beam of ions. Such instruments may also have one or more electric sectors for energy selection."
            MS_sector_mass_spectrometer_OBSOLETE,

            // "OBSOLETE A mass spectrometer designed for mass spectrometry/mass spectrometry."
            MS_tandem_mass_spectrometer_OBSOLETE,

            // "OBSOLETE A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis."
            MS_transmission_quadrupole_mass_spectrometer_OBSOLETE,

            // "The electrical potential used to impart kinetic energy to ions in a mass spectrometer."
            MS_accelerating_voltage,

            // "OBSOLETE The circular motion of a charged particle moving at velocity v in a magnetic field B that results from the force qvB."
            MS_cyclotron_motion_OBSOLETE,

            // "OBSOLETE A mass spectrometer in which m/z separation using one or more electric fields that vary with time."
            MS_dynamic_mass_spectrometry_OBSOLETE,

            // "Three element charged particle lens in which the first and third elements are held at the same voltage. Such a lens produces focusing without changing the translational energy of the particle."
            MS_einzel_lens,

            // "The magnitude of the force per unit charge at a given point in space."
            MS_electric_field_strength,

            // "The region of a Mathieu stability diagram closest to the origin. Ions within this region can traverse the full length of a transmission quadrupole."
            MS_first_stability_region,

            // "The electric or magnetic field that extends from the edge of a sector, lens or other ion optics element."
            MS_fringing_field,

            // "A device for measuring the kinetic energy of charged particles using a retarding field, time-of-flight, or the extent of deflection in an electric or magnetic field."
            MS_kinetic_energy_analyzer,

            // "OBSOLETE The m/z value above which ions cannot be detected in a mass spectrometer."
            MS_mass_limit_OBSOLETE,

            // "OBSOLETE The limit of m/z over which a mass spectrometer can detect ions."
            MS_scan_m_z_range__OBSOLETE,

            // "OBSOLETE The use of mass selective instability to eject ions of selected m/z values from an ion trap."
            MS_mass_selective_axial_ejection_OBSOLETE,

            // "OBSOLETE A method for selective ejection of ions according to their m/z value in an ion trap."
            MS_mass_selective_instability_OBSOLETE,

            // "OBSOLETE A graphical representation expressed in terms of reduced coordinates that describes charged particle motion in a quadrupole mass filter or quadrupole ion trap mass spectrometer."
            MS_mathieu_stability_diagram_OBSOLETE,

            // "OBSOLETE The pulsed acceleration of ions perpendicular to their direction of travel into a time-of-flight mass spectrometer. Ions may be extracted from a directional ion source, drift tube or m/z separation stage."
            MS_orthogonal_extraction_OBSOLETE,

            // "OBSOLETE A mode of ion ejection in a quadrupole ion trap that relies on a auxiliary radio frequency voltage that is applied to the end-cap electrodes. The voltage is tuned to the secular frequency of a particular ion to eject it."
            MS_resonance_ion_ejection_OBSOLETE,

            // "The mutual repulsion of particles of like charge that limits the current in a charged-particle beam and causes beams or packets of charged particles to expand radially over time."
            MS_space_charge_effect,

            // "An electric or magnetic field that does not change in time."
            MS_static_field,

            // "OBSOLETE A mass spectrum obtained by setting the electric sector field E to twice the value required to transmit the main ion-beam thereby allowing ions with a kinetic energy-to-charge ratio twice that of the main ion-beam to be transmitted. Product ions resulting from partial charge transfer reactions such as m^2+ + N ? m^+ + N^+ that occur in a collision cell (containing a gas, N) located in a field-free region preceding a magnetic and electric sector combination are detected. When the magnetic sector field B is scanned, a mass spectrum of singly charged product ions of doubly charged precursor ions is obtained."
            MS_2E_Mass_Spectrum_OBSOLETE,

            // "The measurement of the relative abundance of ions that result from a charge inversion reaction as a function of m/z."
            MS_charge_inversion_mass_spectrum,

            // "OBSOLETE Spectrum of all precursor ions that undergo a selected m/z decrement."
            MS_constant_neutral_loss_scan_OBSOLETE,

            // "OBSOLETE Spectrum of all precursor ions that undergo a selected m/z increment."
            MS_constant_neutral_gain_scan_OBSOLETE,

            // "A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell."
            MS_constant_neutral_gain_spectrum,

            // "A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum."
            MS_constant_neutral_loss_spectrum,

            // "OBSOLETE A type of MS2 experiments with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored."
            MS_consecutive_reaction_monitoring_OBSOLETE1,

            // "A mass spectrum obtained using a sector mass spectrometer in which the electric sector field E is set to half the value required to transmit the main ion-beam. This spectrum records the signal from doubly charged product ions of charge-stripping reactions."
            MS_e_2_mass_spectrum,

            // "OBSOLETE A scan in an instrument with two or more m/z analysers or in a sector mass spectrometer that incorporates at least one magnetic sector and one electric sector. Two or more of the analyzers are scanned simultaneously so as to preserve a predetermined relationship between scan parameters to produce a product ion, precursor ion or constant neutral loss spectrum."
            MS_linked_scan_OBSOLETE,

            // "OBSOLETE A linked scan at constant B/E may be performed on a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector. The magnetic field B and the electric field E are scanned simultaneously while the accelerating voltage V is held constant, so as to maintain the ratio of the two fields constant. This linked scan may record a product ion spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors."
            MS_linked_scan_at_constant_b_e_OBSOLETE,

            // "OBSOLETE A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector. The electric sector field, E, and the accelerating voltage, V, are scanned simultaneously, so as to maintain the ratio E2/V at a constant value. This linked scan recordss a product ion spectrum of dissociation or other reactions occurring in a field free region (FFR) preceding the two sectors."
            MS_Linked_Scan_at_Constant_E2_V_OBSOLETE,

            // "OBSOLETE A linked scan performed on a sector mass spectrometer that incorporates at least one electric sector plus one magnetic sector in either order. The accelerating voltage is fixed and the magnetic field, B, and the electric field, E, are scanned simultaneously so as to maintain the ratio B2/E at a constant value. This linked scan records a precursor ion spectrum of dissociation or other reactions occurring in the field free region preceding the two sectors. The term B2/E linked scan is not recommended."
            MS_Linked_Scan_at_Constant_B2_E_OBSOLETE,

            // "OBSOLETE A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector placed in either order. The accelerating voltage is fixed while scanning the magnetic field, B, and electric field, E, simultaneously, so as to maintain the quantity B
            MS_Linked_Scan_at_Constant_B_1__E_E0___1_2___E_OBSOLETE,

            // "OBSOLETE A tandem mass spectrometry method in which product ion spectra are recorded in a single m/z analyzer (such as a Paul Ion Trap or FTMS) in discreet steps over time. Ions in a specific m/z range are selected, dissociated, and the product ions analyzed sequentially in time."
            MS_MS_MS_in_Time_OBSOLETE,

            // "OBSOLETE A tandem mass spectrometry method in which product ion spectra are recorded in m/z analyzers separated in space. Specific m/z separation functions are designed such that in one section of the instrument ions are selected, dissociated in an intermediate region, and the product ions are then transmitted to another analyser for m/z separation and data acquisition."
            MS_MS_MS_in_Space_OBSOLETE,

            // "The loss of an uncharged species during a rearrangement process."
            MS_neutral_loss,

            // "OBSOLETE Serial product ions from dissociation of selected precursor ions where n refers to the number of stages of dissociation. The term granddaughter ion is deprecated."
            MS_nth_generation_product_ion_OBSOLETE,

            // "OBSOLETE The specific scan functions or processes that record the appropriate generation of product ion or ions of any m/z selected precursor ions."
            MS_nth_generation_product_ion_scan_OBSOLETE,

            // "OBSOLETE The mass spectrum recorded from any mass spectrometer in which the appropriate scan function can be set to record the appropriate generation product ion or ions of m/z selected precursor ions."
            MS_nth_generation_product_ion_spectrum_OBSOLETE,

            // "OBSOLETE An ion that reacts to form particular product ions. The reaction can be unimolecular dissociation, ion/molecule reaction, isomerization, or change in charge state. The term parent ion is deprecated."
            MS_precursor_ion_OBSOLETE,

            // "Spectrum generated by scanning precursor m/z while monitoring a fixed product m/z."
            MS_precursor_ion_spectrum,

            // "OBSOLETE An ion formed as the product of a reaction involving a particular precursor ion. The reaction can be unimolecular dissociation to form fragment ions, an ion/molecule reaction, or simply involve a change in the number of charges. The term fragment ion is deprecated. The term daughter ion is deprecated."
            MS_product_ion_OBSOLETE,

            // "OBSOLETE A mass spectrum recorded from any spectrometer in which the appropriate m/z separation scan function is set to record the product ion or ions of selected precursor ions."
            MS_product_ion_spectrum_OBSOLETE,

            // "OBSOLETE A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -> M2+ -> M3+ -> M4+ -> M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+."
            MS_progeny_ion_OBSOLETE,

            // "Detector comprising several ion collection elements, arranged in a line or grid where each element is an individual detector."
            MS_array_detector,

            // "A surface that is held at high potential such that ions striking the surface produce electrons that are subsequently detected."
            MS_conversion_dynode,

            // "One of a series of electrodes in a photomultiplier tube. Such an arrangement is able to amplify the current emitted by the photocathode."
            MS_dynode,

            // "A detector for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane."
            MS_focal_plane_collector,

            // "A detector in which ions strike a conversion dynode to produce electrons that in turn strike a phosphor and the resulting photons are detected by a photomultiplier."
            MS_ion_to_photon_detector,

            // "A detector in which the ion beam is focused onto a point and the individual ions arrive sequentially."
            MS_point_collector,

            // "A detector in which the charged particles are accelerated to a high velocity and impinge on a conversion dynode, emitting secondary electrons. The electrons are accelerated onto a phosphor screen, which emits photons that are in turn detected using a photomultiplier or other photon detector."
            MS_postacceleration_detector,

            // "OBSOLETE Electrons that are ejected from a sample surface as a result of bombardment by a primary beam of atoms, ions or photons. WAS IN DETECTOR TYPE. Where should it go."
            MS_secondary_electron_OBSOLETE,

            // "OBSOLETE Ion formed by the interaction of an ion with one or more atoms or molecules to form an ion containing all the constituent atoms of the precursor ion as well as the additional atoms from the associated atoms or molecules."
            MS_adduct_ion_OBSOLETE,

            // "OBSOLETE A planar cyclic ion that obeys the Hueckel (4n + 2) rule where n is a positive integer representing the number of conjugated Pi electrons. Charge delocalization leads to greater stability compared to a hypothetical localized structure."
            MS_aromatic_ion_OBSOLETE,

            // "OBSOLETE Ions that have similar chemical valence, for example the acetyl cation CH3-CO+ and the thioacetyl cation CH3-CS+."
            MS_analog_ion_OBSOLETE,

            // "OBSOLETE A planar cyclic ion with 4n ? electrons and is therefore not aromatic."
            MS_anti_aromatic_ion_OBSOLETE,

            // "OBSOLETE An ion formed by the association of a cation with a neutral molecule, M, for example
            MS_cationized_molecule_OBSOLETE,

            // "OBSOLETE An ion formed by a multi-component atomic or molecular assembly of one or more ions with atoms or molecules, such as
            MS_cluster_ion_OBSOLETE,

            // "OBSOLETE A radical cation or anion in which the charge site and the unpaired electron spin are both formally located in the same atom or group of atoms, as opposed to the spatially separate electronic configuration of distonic ions. The radical cation of methanol, CH3OH+, in which the charge and spin sites are formally located at the O atom is an example of a conventional ion, whereas .CH2-OH2+ is a distonic ion."
            MS_Conventional_ion_OBSOLETE,

            // "OBSOLETE A product ion whose formation reveals structural or compositional information of its precursor. For instance, the phenyl cation in an electron ionization mass spectrum is a diagnostic ion for benzene and derivatives."
            MS_diagnostic_ion_OBSOLETE,

            // "OBSOLETE An ion formed by ionization of a dimer or by the association of an ion with its neutral counterpart such as
            MS_dimeric_ion_OBSOLETE,

            // "OBSOLETE A radical cation or anion in which the charge site and the unpaired electron spin cannot be both formally located in the same atom or group of atoms as it can be with a conventional ion. For example, CH2-OH2+ is a distonic ion whereas the radical cation of methanol, CH3OH+ is a conventional ion."
            MS_distonic_ion_OBSOLETE,

            // "OBSOLETE A positively charged lower-valency ion of the nonmetallic elements. The methenium ion is CH3+. Other examples are the oxenium, sulfenium, nitrenium, phosphenium, and halenium ions."
            MS_enium_ion_OBSOLETE,

            // "OBSOLETE A product ion that results from the dissociation of a precursor ion."
            MS_fragment_ion_OBSOLETE,

            // "OBSOLETE An atomic or molecular species having a net positive or negative electric charge."
            MS_ion__OBSOLETE,

            // "OBSOLETE An ion that differs only in the isotopic composition of one or more of its constituent atoms. For example CH4+ and CH3D+ or 10BF3 and 11BF3. The term isotopologue is a contraction of isotopic homologue."
            MS_Isotopologue_ion_OBSOLETE,

            // "OBSOLETE Isomeric ion having the same numbers of each isotopic atom but differing in their positions. Isotopomeric ions can be either configurational isomers in which two atomic isotopes exchange positions or isotopic stereoisomers. The term isotopomer is a shortening of isotopic isomer."
            MS_Isotopomeric_ion_OBSOLETE,

            // "OBSOLETE An ion that is formed with internal energy higher than the threshold for dissociation but with a lifetime great enough to allow it to exit the ion source and enter the mass spectrometer where it dissociates before detection."
            MS_metastable_ion_OBSOLETE,

            // "OBSOLETE An ion formed by the removal of one or more electrons to form a positive ion or the addition off one or more electrons to form a negative ion."
            MS_molecular_ion_OBSOLETE,

            // "OBSOLETE An atomic or molecular species having a net negative electric charge."
            MS_negative_ion_OBSOLETE,

            // "OBSOLETE Hyper-coordinated carbonium ion such as the penta-coordinated norbornyl cation. Note: Tri-coordinated carbenium ions are termed classical ions."
            MS_non_classical_ion_OBSOLETE,

            // "OBSOLETE A positively charged hypervalent ion of the nonmetallic elements. Examples are the methonium ion CH5+, the hydrogenonium ion H3+ and the hydronium ion H3O+. Other examples are the carbonium, oxonium, sulfonium, nitronium, diazonium, phosphonium, and halonium ions. Onium ions are not limited to monopositive ions; multiply-charged onium ions exist such as the gitonic (proximal) oxonium dication H4O2+ and the distonic oxonium dication H2O+-CH2-CH2-OH2+."
            MS_onium_ion_OBSOLETE,

            // "OBSOLETE Most abundant ion of an isotope cluster, such as the 11B79Br2 81Br+ ion of m/z 250 of the cluster of isotopologue molecular ions of BBr3. The term principal ion has also been used to describe ions that have been artificially isotopically enriched in one or more positions such as CH3 13CH3+ or CH2D2 +, but those are best defined as isotopologue ions."
            MS_principal_ion_OBSOLETE,

            // "OBSOLETE An atomic or molecular species having a net positive electric charge."
            MS_positive_ion_OBSOLETE,

            // "OBSOLETE An ion formed by interaction of a neutral molecule with a proton and represented by the symbol
            MS_protonated_molecule_OBSOLETE,

            // "OBSOLETE An ion, either a cation or anion, containing unpaired electrons in its ground state. The unpaired electron is denoted by a superscript dot alongside the superscript symbol for charge, such as for the molecular ion of a molecule M, that is, M+. Radical ions with more than one charge and/or more than one unpaired electron are denoted such as M(2+)(2). Unless the positions of the unpaired electron and charge can be associated with specific atoms, superscript charge designation should be placed before the superscript dot designation."
            MS_radical_ion_OBSOLETE,

            // "OBSOLETE A stable ion whose structure is known with certainty. These ions are usually formed by direct ionization of a neutral molecule of known structure and are used to verify by comparison the structure of an unknown ion."
            MS_reference_ion_OBSOLETE,

            // "OBSOLETE An ion with internal energy sufficiently low that it does not rearrange or dissociate prior to detection in a mass spectrometer."
            MS_stable_ion_OBSOLETE,

            // "OBSOLETE An ion with sufficient energy to dissociate within the ion source."
            MS_unstable_ion_OBSOLETE,

            // "A process whereby an electron is removed from an atom, ion, or molecule to produce an ion in its lowest energy state."
            MS_adiabatic_ionization,

            // "An ionization process in which two excited atoms or molecules react to form a single positive ion and an electron."
            MS_associative_ionization,

            // "Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization."
            MS_atmospheric_pressure_photoionization,

            // "The formation of a neutral when a negative ion in a discrete state with an energy greater than the detachment threshold loses an electron spontaneously without further interaction with an energy source."
            MS_autodetachment,

            // "The formation of an ion when an atom or molecule in a discrete state with an energy greater than the ionization threshold loses an electron spontaneously without further interaction with an energy source."
            MS_autoionization,

            // "The interaction of an ion with an atom or molecule in which the charge on the ion is transferred to the neutral without the dissociation of either. Synonymous with charge transfer ionization."
            MS_charge_exchange_ionization,

            // "The reaction of a neutral molecule with an internally excited molecule to form an ion. Note that this term is not synonymous with chemical ionization."
            MS_chemi_ionization,

            // "The formation of ions by laser desorption ionization of a sample deposited on a porous silicon surface."
            MS_desorption_ionization_on_silicon,

            // "The reaction of a gas-phase molecule that results in its decomposition to form products, one of which is an ion."
            MS_dissociative_ionization,

            // "The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended."
            MS_electron_ionization,

            // "OBSOLETE The removal of solvent molecules clustered around a gas-phase ion by means of heating and/or collisions with gas molecules."
            MS_ion_desolvation_OBSOLETE,

            // "OBSOLETE The reaction of a molecule to form both a positive ion and negative ion fragment among the products."
            MS_ion_pair_formation_OBSOLETE,

            // "The ratio of the number of ions formed to the number of electrons, molecules or photons used."
            MS_ionization_efficiency,

            // "The formation of gas-phase ions by the interaction of a pulsed laser with a solid or liquid material."
            MS_laser_desorption_ionization,

            // "The ionization of any species by the interaction of a focused beam of ions with a sample that is dissolved in a solvent matrix. See also fast atom bombardment and secondary ionization."
            MS_liquid_secondary_ionization,

            // "A semi-permeable membrane separator that permits the passage of gas sample directly to the mass spectrometer ion source."
            MS_membrane_inlet,

            // "Electrospray ionization at a solvent flow rate of 300-800 nL/min where the flow is a result of a mechanical pump. See nanoelectrospray."
            MS_microelectrospray,

            // "Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray."
            MS_nanoelectrospray,

            // "Ionization that occurs through the interaction of two or more neutral gaseous species, at least one of which is internally excited."
            MS_penning_ionization,

            // "The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization."
            MS_plasma_desorption_ionization,

            // "OBSOLETE An electronic state capable of undergoing auto-Ionization."
            MS_pre_ionization_state_OBSOLETE,

            // "The process in which ions are ejected from a sample surface as a result of bombardment by a primary beam of atoms or ions."
            MS_secondary_ionization,

            // "The formation of gas-phase ions without extensive fragmentation."
            MS_soft_ionization,

            // "The formation of ions from a solid material by an intermittent electrical discharge."
            MS_spark_ionization,

            // "The formation of gas-phase ions from molecules that are deposited on a particular surface substrate that is irradiated with a pulsed laser. See also matrix-assisted laser desorption ionization."
            MS_surface_assisted_laser_desorption_ionization,

            // "The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature."
            MS_surface_ionization,

            // "The ionization of a neutral species through contact with a high temperature surface."
            MS_thermal_ionization,

            // "A process in which an electron is removed from or added to a molecule without a change in the positions of the atoms. The resulting ion is typically in an excited vibrational state."
            MS_vertical_ionization,

            // "OBSOLETE The reaction of an ion with a neutral species in which the reactants combine to form a single ion."
            MS_association_reaction_OBSOLETE,

            // "OBSOLETE A homolytic cleavage where the bond fission occurs between at the atom adjacent to the atom at the apparent charge site and an atom removed from the aparent charge site by two bonds."
            MS_alpha_cleavage_OBSOLETE,

            // "OBSOLETE A homolytic cleavage where the bond fission occurs between at an atom removed from the apparent charge site atom by two bonds and an atom adjacent to that atom and removed from the aparent charge site by three bonds."
            MS_beta_cleavage_OBSOLETE,

            // "An inert gas used for collisional deactivation of internally excited ions."
            MS_buffer_gas,

            // "OBSOLETE Fragmentation of an odd electron ion in which the cleaved bond is adjacent to the apparent charge site. Synonymous with charge mediated fragmentation."
            MS_charge_induced_fragmentation_OBSOLETE,

            // "OBSOLETE Reaction of an ion with a neutral species in which the charge on the product ion is reversed in sign with respect to the reactant ion."
            MS_charge_inversion_reaction_OBSOLETE,

            // "OBSOLETE The reaction of an ion with a neutral species with a resulting change in the magnitude or sign of the charge on the reactant ion."
            MS_charge_permutation_reaction_OBSOLETE,

            // "OBSOLETE Reaction of a positive ion with a neutral species in which the positive charge on the product ion is greater than that on the reactant ion."
            MS_charge_stripping_reaction_OBSOLETE,

            // "OBSOLETE The reaction of an ion with a neutral species in which some or all of the charge of the reactant ion is transferred to the neutral species."
            MS_charge_transfer_reaction_OBSOLETE,

            // "OBSOLETE The reaction of an ion with a neutral species in which the translational energy of the collision is converted into internal energy of the ion."
            MS_collisional_excitation_OBSOLETE,

            // "An inert gas used for collisional excitation. The term target gas is not recommended."
            MS_collision_gas,

            // "OBSOLETE Fragmentation of a molecule or ion in which both electrons forming the single bond that is broken remain on one of the atoms that were originally bonded. This term is synonymous with heterolysis."
            MS_heterolytic_cleavage_OBSOLETE,

            // "OBSOLETE Collision-induced dissociation process wherein the projectile ion has laboratory-frame translational energy higher than 1 keV."
            MS_high_energy_collision_OBSOLETE,

            // "A collision-induced dissociation process that occurs in a beam-type collision cell."
            MS_beam_type_collision_induced_dissociation,

            // "OBSOLETE Fragmentation of an odd electron ion that results from one of a pair of electrons that form a bond between two atoms moving to form a pair with the odd electron on the atom at the apparent charge site. Fragmentation results in the formation of an even electron ion and a radical. This reaction involves the movement of a single electron and is symbolized by a single-barbed arrow. Synonymous with Homolysis."
            MS_homolytic_cleavage_OBSOLETE,

            // "OBSOLETE Exchange of hydrogen atoms with deuterium atoms in a molecule or pre-formed ion in solution prior to introduction into a mass spectrometer, or by reaction of an ion with a deuterated collision gas inside a mass spectrometer."
            MS_hydrogen_deuterium_exchange_OBSOLETE,

            // "OBSOLETE A plot of the relative abundance of a beam or other collection of ions as a function their loss of translational energy in reactions with neutral species."
            MS_ion_energy_loss_spectrum_OBSOLETE,

            // "OBSOLETE The reaction of an ion with a neutral species in which one or more electrons are removed from either the ion or neutral."
            MS_ionizing_collision_OBSOLETE,

            // "OBSOLETE The reaction of an ion with a neutral molecule. The term ion-molecule reaction is not recommended because the hyphen suggests a single species that is that is both an ion and a molecule."
            MS_ion_molecule_reaction_OBSOLETE,

            // "OBSOLETE A particular type of transition state that lies between precursor and product ions on the reaction coordinate of some ion reactions."
            MS_ion_neutral_complex_OBSOLETE,

            // "OBSOLETE A process wherein a charged species interacts with a neutral reactant to produce either chemically different species or changes in the internal energy of one or both of the reactants."
            MS_ion_neutral_species_reaction_OBSOLETE,

            // "OBSOLETE In this reaction an association reaction is accompanied by the subsequent or simultaneous liberation of a different neutral species as a product."
            MS_ion_neutral_species_exchange_reaction_OBSOLETE,

            // "OBSOLETE An approach to determination of ion thermodynamic quantities by a bracketing procedure in which the relative probabilities of competing ion fragmentations are measured via the relative abundances of the reaction products. The extended kinetic method takes the associated entropy changes into account."
            MS_kinetic_method_OBSOLETE,

            // "OBSOLETE A collision between an ion and neutral species with translational energy approximately 1000 eV or lower."
            MS_low_energy_collisions_OBSOLETE,

            // "A collision-induced dissociation process wherein the precursor ion has the translational energy lower than approximately 1000 eV. This process typically requires multiple collisions and the collisional excitation is cumulative."
            MS_low_energy_collision_induced_dissociation,

            // "OBSOLETE A dissociation reaction triggered by transfer of a hydrogen atom via a 6-member transition state to the formal radical/charge site from a carbon atom four atoms removed from the charge/radical site (the gamma-carbon); subsequent rearrangement of electron density leads to expulsion of an olefin molecule. This term was originally applied to ketone ions where the charge/radical site is the carbonyl oxygen, but it is now more widely applied."
            MS_McLafferty_Rearrangement_OBSOLETE,

            // "A process wherein the reactant ion is dissociated as a result of absorption of one or more photons."
            MS_photodissociation,

            // "OBSOLETE Reaction of an ion with a neutral species in which some but not all of the ion charge is transferred to the neutral."
            MS_partial_charge_transfer_reaction_OBSOLETE,

            // "OBSOLETE Chemical transformation involving an ion."
            MS_ion_reaction_OBSOLETE,

            // "OBSOLETE Collision in which the translational energy of the fast-moving collision partner is increased at the expense of internal energy of one or both collision partners."
            MS_superelastic_collision_OBSOLETE,

            // "OBSOLETE A process wherein a reactant ion interacts with a surface to produce either chemically different species or a change in the internal energy of the reactant ion."
            MS_surface_induced_reaction_OBSOLETE,

            // "OBSOLETE Fragmentation reaction in which the molecularity is treated as one, irrespective of whether the dissociative state is that of a metastable ion produced in the ion source or results from collisional excitation of a stable ion."
            MS_unimolecular_dissociation_OBSOLETE,

            // "Function or process of the mass spectrometer where it records a spectrum."
            MS_scan,

            // "A mass spectrum is an intensity vs m/z (mass-to-charge ratio) plot representing a chemical analysis."
            MS_spectrum,

            // "Mass analyzer separates the ions according to their mass-to-charge ratio."
            MS_mass_analyzer_type,

            // "OBSOLETE Mass/charge separation Method."
            MS_m_z_Separation_Method_OBSOLETE,

            // "OBSOLETE Sequential m/z separation method."
            MS_sequential_m_z_separation_method_OBSOLETE,

            // "The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample."
            MS_fast_ion_bombardment,

            // "Finnigan LTQ MS."
            MS_LTQ,

            // "Finnigan LTQ FT MS."
            MS_LTQ_FT,

            // "Finnigan LTQ Orbitrap MS."
            MS_LTQ_Orbitrap,

            // "Finnigan LXQ MS."
            MS_LXQ,

            // "Terms used to describe the Analyzer."
            MS_mass_analyzer,

            // "Terms used to describe types of data processing."
            MS_data_transformation,

            // "The device that detects ions."
            MS_detector,

            // "OBSOLETE Additional terms to describe the instrument as outlined in the mass spec doc, Appendix 1, section 1.5."
            MS_instrument_additional_description_OBSOLETE,

            // "Ion selection properties that are associated with a value."
            MS_ion_selection_attribute,

            // "Terms to describe the precursor activation."
            MS_precursor_activation,

            // "Terms to describe the sample."
            MS_sample,

            // "Terms to describe the source."
            MS_source,

            // "OBSOLETE Terms used to describe the spectrum."
            MS_spectrum_instrument_description_OBSOLETE,

            // "OBSOLETE Terms to describe units."
            MS_unit_OBSOLETE,

            // "OBSOLETE Terms to describe Additional."
            MS_additional_description_OBSOLETE,

            // "Device used in the construction of a mass spectrometer to focus, contain or otherwise manipulate ions."
            MS_ion_optics,

            // "Description of the instrument or the mass spectrometer."
            MS_instrument,

            // "OBSOLETE A unit of measurement for mass."
            MS_mass_unit_OBSOLETE,

            // "An acquisition mode to which specifies weather polarity is negative, positive or alternating."
            MS_scan_polarity,

            // "OBSOLETE Alternating."
            MS_alternating_OBSOLETE,

            // "The 1200 Series LC/MSD SL ion trap belongs to the Agilent LC/MSD ion trap family. It provides fast polarity switching and multisignal data acquisition capabilities in a single run while also providing 5 stages of automated data dependent MS2 and 11 stages of manual MS2."
            MS_1200_series_LC_MSD_SL,

            // "The 6110 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with an entry level single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6110 Quadrupole mass spectrometer has m/z range of 10-1500 and 2500 u/s scan speed. It proves useful for wide range of SIM quantitative applications."
            MS_6110_Quadrupole_LC_MS,

            // "The 6120 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers. 6120 quadrupole mass spectrometer has m/z range of 10-1500, 2500 u/s scan speed and utilizes multiple signal acquisition."
            MS_6120_Quadrupole_LC_MS,

            // "The 6130 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 series of Agilent mass spectrometers. The 6130 quadrupole mass spectrometer has m/z range of 2-3000, 2500 u/s scan speed in standard mode and 5250 u/s speed in fast-scan mode. It also uses multiple signal acquisition."
            MS_6130_Quadrupole_LC_MS,

            // "The 6140 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6140 Quadrupole mass spectrometer has m/z range of 10-1350, 2500 u/s scan speed in standard mode and 10000 u/s speed in fast-scan mode. It also uses multiple signal acquisition."
            MS_6140_Quadrupole_LC_MS,

            // "The 6210 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources."
            MS_6210_Time_of_Flight_LC_MS,

            // "The 6310 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.35 resolution and mass range of 200-4000 with resolution of 3-4. The scan speed varies from 1650-27000 for the respective mass ranges."
            MS_6310_Ion_Trap_LC_MS,

            // "The 6320 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges."
            MS_6320_Ion_Trap_LC_MS,

            // "The 6330 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges."
            MS_6330_Ion_Trap_LC_MS,

            // "The 6340 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges."
            MS_6340_Ion_Trap_LC_MS,

            // "The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration."
            MS_6410_Triple_Quadrupole_LC_MS,

            // "The LC/MSD VL ion trap is part of the family of Agilent ion trap mass spectrometers. It has ESI, APCI and APPI ion sources and is a useful ion trap when the amount of sample is not the limiting factor."
            MS_1200_series_LC_MSD_VL,

            // "OBSOLETE Terms that will likely become obsolete unless there are wails of dissent."
            MS_purgatory_OBSOLETE,

            // "Analyzer properties that are associated with a value."
            MS_mass_analyzer_attribute,

            // "Detector attribute recognized as a value."
            MS_detector_attribute,

            // "Property of a source device that need a value."
            MS_source_attribute,

            // "Thermo Fisher Scientific instrument model. The company has gone through several names including Thermo Finnigan, Thermo Scientific."
            MS_Thermo_Fisher_Scientific_instrument_model,

            // "An ion trapping device that consists of an outer barrel-like electrode and a coaxial inner spindle-like electrode that form an electrostatic field with quadro-logarithmic potential distribution. The frequency of harmonic oscillations of the orbitally trapped ions along the axis of the electrostatic field is independent of the ion velocity and is inversely proportional to the square root of m/z so that the trap can be used as a mass analyzer."
            MS_orbitrap,

            // "Nanospray Inlet."
            MS_nanospray_inlet,

            // "Potential difference at the MS source in volts."
            MS_source_potential,

            // "Ion optics involves components that help focus ion streams in mass spectrometry."
            MS_ion_optics_attribute,

            // "Hitachi instrument model."
            MS_Hitachi_instrument_model,

            // "Varian instrument model."
            MS_Varian_instrument_model,

            // "Agilent instrument model."
            MS_Agilent_instrument_model,

            // "Dionex instrument model."
            MS_Dionex_instrument_model,

            // "Thermo Electron Corporation instrument model."
            MS_Thermo_Electron_instrument_model,

            // "Finnigan MAT instrument model."
            MS_Finnigan_MAT_instrument_model,

            // "Thermo Scientific instrument model."
            MS_Thermo_Scientific_instrument_model,

            // "Applied Biosystems instrument model."
            MS_Applied_Biosystems_instrument_model,

            // "Instrument properties that are associated with a value."
            MS_instrument_attribute,

            // "Special scan mode, where data with improved resolution is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate."
            MS_zoom_scan,

            // "OBSOLETE Feature of the ion trap mass spectrometer where MS data is acquired over a mass range."
            MS_full_scan_OBSOLETE,

            // "Spectrum properties that are associated with a value."
            MS_spectrum_attribute,

            // "The lower m/z bound of a mass spectrometer scan window."
            MS_scan_window_upper_limit,

            // "The upper m/z bound of a mass spectrometer scan window."
            MS_scan_window_lower_limit,

            // "The time spent gathering data across a peak."
            MS_dwell_time,

            // "Scan properties that are associated with a value."
            MS_scan_attribute,

            // "M/z value of the signal of highest intensity in the mass spectrum."
            MS_base_peak_m_z,

            // "The intensity of the greatest peak in the mass spectrum."
            MS_base_peak_intensity,

            // "OBSOLETE Ion Role."
            MS_ion_role_OBSOLETE,

            // "OBSOLETE Ion properties that are associated with a value."
            MS_ion_attribute_OBSOLETE,

            // "OBSOLETE Ion Type."
            MS_ion_chemical_type_OBSOLETE,

            // "Activation Energy."
            MS_activation_energy,

            // "Precursor Activation Attribute."
            MS_precursor_activation_attribute,

            // "Stages of ms achieved in a multi stage mass spectrometry experiment."
            MS_ms_level,

            // "A string unique to Thermo instrument describing instrument settings for the scan."
            MS_filter_string,

            // "A data array of values."
            MS_binary_data_array,

            // "A data array of m/z values."
            MS_m_z_array,

            // "A data array of intensity values."
            MS_intensity_array,

            // "A data array of charge values."
            MS_charge_array,

            // "A data array of signal-to-noise values."
            MS_signal_to_noise_array,

            // "Encoding type of binary data specifying the binary representation and precision, e.g. 64-bit float."
            MS_binary_data_type,

            // "Signed 32-bit little-endian integer."
            MS_32_bit_integer,

            // "OBSOLETE Signed 16-bit float."
            MS_16_bit_float_OBSOLETE,

            // "32-bit precision little-endian floating point conforming to IEEE-754."
            MS_32_bit_float,

            // "Signed 64-bit little-endian integer."
            MS_64_bit_integer,

            // "64-bit precision little-endian floating point conforming to IEEE-754."
            MS_64_bit_float,

            // "Describes the data content on the file."
            MS_data_file_content,

            // "Way in which the spectrum is represented, either with regularly spaced data points or with a list of centroided peaks."
            MS_spectrum_representation,

            // "Waters data file format found in a Waters RAW directory, generated from an MS acquisition."
            MS_Waters_raw_format,

            // "Highest m/z value observed in the m/z array."
            MS_highest_observed_m_z,

            // "Lowest m/z value observed in the m/z array."
            MS_lowest_observed_m_z,

            // "Serial Number of the instrument."
            MS_instrument_serial_number,

            // "Conversion of one file format to another."
            MS_file_format_conversion,

            // "Software related to the recording or transformation of spectra."
            MS_software,

            // "Thermo Finnigan software for data acquisition and analysis."
            MS_Xcalibur,

            // "Thermo Finnigan software for data analysis of peptides and proteins."
            MS_Bioworks,

            // "Micromass software for data acquisition and analysis."
            MS_MassLynx,

            // "Bruker software for data analysis."
            MS_FlexAnalysis,

            // "Applied Biosystems software for data acquisition and analysis."
            MS_Data_Explorer,

            // "Applied Biosystems software for data acquisition and analysis."
            MS_4700_Explorer,

            // "A software for converting Waters raw directory format to mzXML or mzML. MassWolf was originally developed at the Institute for Systems Biology."
            MS_massWolf,

            // "Applied Biosystems MALDI-TOF data acquisition and analysis system."
            MS_Voyager_Biospectrometry_Workstation_System,

            // "Bruker software for data acquisition."
            MS_FlexControl,

            // "A software program for converting Thermo Finnigan RAW file format to mzXML or mzML. ReAdW was originally developed at the Institute for Systems Biology. Its whimsical interleaved spelling and capitalization is pronounced \"readraw\"."
            MS_ReAdW,

            // "A software program for converting Applied Biosystems wiff file format to mzXML format. MzStar was originally developed at the Institute for Systems Biology. It is now obsoleted by the MzWiff program."
            MS_MzStar,

            // "Data processing attribute used to describe the type of data processing performed on the data file."
            MS_data_processing_action,

            // "Conversion of a file format to Proteomics Standards Initiative mzML file format."
            MS_Conversion_to_mzML,

            // "Conversion of a file format to Institute of Systems Biology mzXML file format."
            MS_Conversion_to_mzXML,

            // "Conversion of a file format to Proteomics Standards Initiative mzData file format."
            MS_Conversion_to_mzData,

            // "Object Attribute."
            MS_object_attribute,

            // "Sample properties that are associated with a value."
            MS_sample_attribute,

            // "Selection window properties that are associated with a value."
            MS_selection_window_attribute,

            // "OBSOLETE Time Unit."
            MS_time_unit_OBSOLETE,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX software for data acquisition."
            MS_Analyst,

            // "OBSOLETE Maldi Spot Identifier."
            MS_maldi_spot_identifier_OBSOLETE,

            // "A software program for converting Agilent MassHunter format to mzXML or mzML. Trapper was originally developed at the Institute for Systems Biology."
            MS_Trapper,

            // "ThermoFinnigan LCQ Deca."
            MS_LCQ_Deca,

            // "LTQ Orbitrap Discovery."
            MS_LTQ_Orbitrap_Discovery,

            // "LTQ Orbitrap XL."
            MS_LTQ_Orbitrap_XL,

            // "LTQ FT Ultra."
            MS_LTQ_FT_Ultra,

            // "GC Quantum."
            MS_GC_Quantum,

            // "Spectrum type."
            MS_spectrum_type,

            // "The format of the file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format."
            MS_mass_spectrometer_file_format,

            // "Checksum is a form of redundancy check, a simple way to protect the integrity of data by detecting errors in data."
            MS_data_file_checksum_type,

            // "Applied Biosystems WIFF file format."
            MS_ABI_WIFF_format,

            // "Thermo Scientific RAW file format."
            MS_Thermo_RAW_format,

            // "Proteomics Standards Inititative mzData file format."
            MS_PSI_mzData_format,

            // "Micromass PKL file format."
            MS_Micromass_PKL_format,

            // "Institute of Systems Biology mzXML file format."
            MS_ISB_mzXML_format,

            // "Bruker/Agilent YEP file format."
            MS_Bruker_Agilent_YEP_format,

            // "MD5 (Message-Digest algorithm 5) is a cryptographic hash function with a 128-bit hash value used to check the integrity of files."
            MS_MD5,

            // "SHA-1 (Secure Hash Algorithm-1) is a cryptographic hash function designed by the National Security Agency (NSA) and published by the NIST as a U. S. government standard. It is also used to verify file integrity."
            MS_SHA_1,

            // "Method used to combine the mass spectra."
            MS_spectra_combination,

            // "Spectra Sum."
            MS_sum_of_spectra,

            // "Compression Type."
            MS_binary_data_compression_type,

            // "Spectra is combined by calculating the median of the spectra."
            MS_median_of_spectra,

            // "Zlib."
            MS_zlib_compression,

            // "Spectra is combined by calculating the mean of the spectra."
            MS_mean_of_spectra,

            // "No Compression."
            MS_no_compression,

            // "Describes the type of file and its content."
            MS_raw_data_file,

            // "LCQ Fleet."
            MS_LCQ_Fleet,

            // "Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment."
            MS_MS1_spectrum,

            // "MSn refers to multi-stage MS2 experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n > 2 whereas for a simple triple quadrupole system n=2. Use the term ms level (MS:1000511) for specifying n."
            MS_MSn_spectrum,

            // "Spectrum generated from MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored."
            MS_CRM_spectrum,

            // "Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring)."
            MS_SIM_spectrum,

            // "Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair. Data can be obtained for a single transition pair or multiple transition pairs. Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs. Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space."
            MS_SRM_spectrum,

            // "Proteomics Standards Inititative mzML file format."
            MS_mzML_format,

            // "Details about a person or organization to contact in case of concern or discussion about the file."
            MS_contact_attribute,

            // "Name of the contact person or organization."
            MS_contact_name,

            // "Postal address of the contact person or organization."
            MS_contact_address,

            // "Uniform Resource Locator related to the contact person or organization."
            MS_contact_URL,

            // "Email address of the contact person or organization."
            MS_contact_email,

            // "Home institution of the contact person."
            MS_contact_affiliation,

            // "A software program for converting Applied Biosystems wiff file format to the mzXML or mzML format. MzWiff is currently maintained at the Institute for Systems Biology. It replaces the slower mzStar program."
            MS_MzWiff,

            // "A process of reducing spikes of intensity in order to reduce noise while preserving real peak signal. Many algorithms can be applied for this process."
            MS_smoothing,

            // "A process of removal of varying intensities generated due to variable energy absorption before further processing can take place. Baseline reduction facilitates meaningful comparision between intensities of m/z values."
            MS_baseline_reduction,

            // "The removal of very low intensity data points that are likely to be spurious noise rather than real signal."
            MS_low_intensity_data_point_removal,

            // "A data array of relative time offset values from a reference time."
            MS_time_array,

            // "An attribute of resolution when recording the detector response in absence of the analyte."
            MS_measurement_method,

            // "The electrical potential used to impart kinetic energy to ions in a mass spectrometer."
            MS_ion_optics_type,

            // "A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them."
            MS_electron_transfer_dissociation,

            // "A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected."
            MS_pulsed_q_dissociation,

            // "Database application and analysis platform for proteomics."
            MS_Proteios,

            // "Waters software for data analysis."
            MS_ProteinLynx_Global_Server,

            // "Shimadzu MALDI-TOF instrument model."
            MS_Shimadzu_MALDI_TOF_instrument_model,

            // "Shimadzu Scientific Instruments instrument model."
            MS_Shimadzu_Scientific_Instruments_instrument_model,

            // "Shimadzu Scientific Instruments LCMS-IT-TOF MS."
            MS_LCMS_IT_TOF,

            // "Shimadzu Scientific Instruments LCMS-2010EV MS."
            MS_LCMS_2010EV,

            // "Shimadzu Scientific Instruments LCMS-2010A MS."
            MS_LCMS_2010A,

            // "Shimadzu Biotech AXIMA CFR MALDI-TOF MS."
            MS_AXIMA_CFR_MALDI_TOF,

            // "Shimadzu Biotech AXIMA-QIT MS."
            MS_AXIMA_QIT,

            // "Shimadzu Biotech AXIMA-CFR plus MS."
            MS_AXIMA_CFR_plus,

            // "Shimadzu Biotech AXIMA Performance MALDI-TOF/TOF MS."
            MS_AXIMA_Performance_MALDI_TOF_TOF,

            // "Shimadzu Biotech AXIMA Confidence MALDI-TOF (curved field reflectron) MS."
            MS_AXIMA_Confidence_MALDI_TOF,

            // "Shimadzu Biotech AXIMA Assurance Linear MALDI-TOF MS."
            MS_AXIMA_Assurance_Linear_MALDI_TOF,

            // "SEQUEST DTA file format."
            MS_DTA_format,

            // "Peak list file format used by ProteinLynx Global Server."
            MS_ProteinLynx_Global_Server_mass_spectrum_XML_format,

            // "ProteoWizard software for data processing and analysis. Primarily developed by the labs of P. Malick and D. Tabb."
            MS_ProteoWizard_software,

            // "A user-defined scan configuration that specifies the instrumental settings in which a spectrum is acquired. An instrument may cycle through a list of preset scan configurations to acquire data. This is a more generic term for the Thermo \"scan event\", which is defined in the Thermo Xcalibur glossary as: a mass spectrometer scan that is defined by choosing the necessary scan parameter settings. Multiple scan events can be defined for each segment of time."
            MS_preset_scan_configuration,

            // "A data array of electromagnetic radiation wavelength values."
            MS_wavelength_array,

            // "Highest wavelength observed in an EMR spectrum."
            MS_highest_observed_wavelength,

            // "Lowest wavelength observed in an EMR spectrum."
            MS_lowest_observed_wavelength,

            // "OBSOLETE Spectrum generated from a photodiode array detector (ultraviolet/visible spectrum)."
            MS_PDA_spectrum_OBSOLETE,

            // "An array detector used to record spectra in the ultraviolet and visible region of light."
            MS_photodiode_array_detector,

            // "Surveyor PDA."
            MS_Surveyor_PDA,

            // "Accela PDA."
            MS_Accela_PDA,

            // "Inductive detector."
            MS_inductive_detector,

            // "The representation of detector response versus time."
            MS_chromatogram,

            // "Broad category or type of a chromatogram."
            MS_chromatogram_type,

            // "Chromatogram created by creating an array of the measurements of a specific single ion current at each time point."
            MS_selected_ion_current_chromatogram,

            // "Chromatogram created by creating an array of the most intense peaks at each time point."
            MS_basepeak_chromatogram,

            // "Threshold below which some action is taken."
            MS_low_intensity_threshold,

            // "Data processing parameter used in the data processing performed on the data file."
            MS_data_processing_parameter,

            // "Threshold above which some action is taken."
            MS_high_intensity_threshold,

            // "Waters oa-ToF based Q-Tof Premier."
            MS_Q_Tof_Premier,

            // "A possible charge state of the ion in a situation where the charge of an ion is known to be one of several possible values rather than a completely unknown value or determined to be a specific charge with reasonable certainty."
            MS_possible_charge_state,

            // "ThermoFinnigan DSQ GC-MS."
            MS_DSQ,

            // "Thermo Scientific ITQ 700 GC-MS."
            MS_ITQ_700,

            // "Thermo Scientific ITQ 900 GC-MS."
            MS_ITQ_900,

            // "Thermo Scientific ITQ 1100 GC-MS."
            MS_ITQ_1100,

            // "Thermo Scientific LTQ XL MS with ETD."
            MS_LTQ_XL_ETD,

            // "Thermo Scientific LTQ Orbitrap XL MS with ETD."
            MS_LTQ_Orbitrap_XL_ETD,

            // "Thermo Scientific DFS HR GC-MS."
            MS_DFS,

            // "Thermo Scientific DSQ II GC-MS."
            MS_DSQ_II,

            // "Thermo Scientific MALDI LTQ XL MS."
            MS_MALDI_LTQ_XL,

            // "Thermo Scientific MALDI LTQ Orbitrap MS."
            MS_MALDI_LTQ_Orbitrap,

            // "Thermo Scientific TSQ Quantum Access MS."
            MS_TSQ_Quantum_Access,

            // "Thermo Scientific Element XR HR-ICP-MS."
            MS_Element_XR,

            // "Thermo Scientific Element 2 HR-ICP-MS."
            MS_Element_2,

            // "Thermo Scientific Element GD Glow Discharge MS."
            MS_Element_GD,

            // "Thermo Scientific GC IsoLink Isotope Ratio MS."
            MS_GC_IsoLink,

            // "Thermo Scientific Exactive MS."
            MS_Exactive,

            // "Thermo Scientific software for data analysis of peptides and proteins."
            MS_Proteome_Discoverer,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 3200."
            MS_3200_QTRAP,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX 4800 Plus MALDI TOF-TOF Analyzer."
            MS_4800_Plus_MALDI_TOF_TOF,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX API 3200 MS."
            MS_API_3200,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX API 5000 MS."
            MS_API_5000,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX QSTAR Elite."
            MS_QSTAR_Elite,

            // "Applied Biosystems|MDS SCIEX QSTAR Pulsar."
            MS_QSTAR_Pulsar,

            // "Applied Biosystems|MDS SCIEX QSTAR XL."
            MS_QSTAR_XL,

            // "Applied Biosystems|MDS SCIEX 4800 Proteomics Analyzer."
            MS_4800_Proteomics_Analyzer,

            // "AB SCIEX or Applied Biosystems software for data acquisition and analysis."
            MS_4000_Series_Explorer_Software,

            // "AB SCIEX or Applied Biosystems software for data acquisition and analysis."
            MS_GPS_Explorer,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX software metabolite identification."
            MS_LightSight_Software,

            // "AB SCIEX or Applied Biosystems|MDS SCIEX software for protein ID and quant."
            MS_ProteinPilot_Software,

            // "Applied Biosystems|MDS SCIEX software for tissue imaging."
            MS_TissueView_Software,

            // "Applied Biosystems|MDS SCIEX software for metabolomics and biomarker profiling."
            MS_MarkerView_Software,

            // "Applied Biosystems|MDS SCIEX software for MRM assay development."
            MS_MRMPilot_Software,

            // "Applied Biosystems|MDS SCIEX software for bio-related data exploration."
            MS_BioAnalyst,

            // "Applied Biosystems|MDS SCIEX software for protein identification."
            MS_Pro_ID,

            // "Applied Biosystems|MDS SCIEX software for protein ID and quant by ICAT."
            MS_Pro_ICAT,

            // "Applied Biosystems|MDS SCIEX software for protein ID and quant by iTRAQ."
            MS_Pro_Quant,

            // "Applied Biosystems|MDS SCIEX software for MS-BLAST identification."
            MS_Pro_BLAST,

            // "AB SCIEX Cliquid software for data analysis and quantitation."
            MS_Cliquid,

            // "Applied Biosystems|MDS SCIEX software for MRM assay development."
            MS_MIDAS_Workflow_Designer,

            // "Applied Biosystems|MDS SCIEX software for MRM-based quantitation."
            MS_MultiQuant,

            // "The 6220 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources."
            MS_6220_Time_of_Flight_LC_MS,

            // "The 6510 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources."
            MS_6510_Quadrupole_Time_of_Flight_LC_MS,

            // "The 6520 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 26,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources."
            MS_6520_Quadrupole_Time_of_Flight_LC_MS,

            // "Software for data acquisition of 6000 series instruments."
            MS_MassHunter_Data_Acquisition,

            // "Software for open access data acquisition."
            MS_MassHunter_Easy_Access,

            // "Software for data analysis of data from 6000 series instruments."
            MS_MassHunter_Qualitative_Analysis,

            // "Software for quantitation of Triple Quadrupole and Quadrupole Time-of-Flight data."
            MS_MassHunter_Quantitative_Analysis,

            // "Software for identification of metabolites."
            MS_MassHunter_Metabolite_ID,

            // "Software for protein characterization."
            MS_MassHunter_BioConfirm,

            // "Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data."
            MS_Genespring_MS,

            // "Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data."
            MS_MassHunter_Mass_Profiler,

            // "Personal Metabolite Database for MassHunter Workstation. Software for identification of human metabolites."
            MS_METLIN,

            // "Software for protein identification and characterization of complex protein digest mixtures."
            MS_Spectrum_Mill_for_MassHunter_Workstation,

            // "Software for data analysis of 6300 series ion trap mass spectrometers."
            MS_6300_Series_Ion_Trap_Data_Analysis_Software,

            // "Agilent software for data acquisition and analysis."
            MS_Agilent_software,

            // "AB SCIEX or Applied Biosystems software for data acquisition and analysis."
            MS_AB_SCIEX_software,

            // "Applied Biosystems|MDS SCIEX software for data acquisition and analysis."
            MS_Applied_Biosystems_software,

            // "Bruker software for data acquisition and analysis."
            MS_Bruker_software,

            // "Thermo Finnigan software for data acquisition and analysis."
            MS_Thermo_Finnigan_software,

            // "Waters software for data acquisition and analysis."
            MS_Waters_software,

            // "Bruker Daltonics' apex ultra: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR."
            MS_apex_ultra,

            // "Bruker Daltonics' autoflex III smartbeam: MALDI TOF."
            MS_autoflex_III_smartbeam,

            // "Bruker Daltonics' HCT Series."
            MS_Bruker_Daltonics_HCT_Series,

            // "Bruker Daltonics' HCTultra: ESI TOF, Nanospray, APCI, APPI."
            MS_HCTultra,

            // "Bruker Daltonics' HCTultra PTM: ESI TOF, Nanospray, APCI, APPI, PTR."
            MS_HCTultra_PTM,

            // "Bruker Daltonics' HCTultra ETD II: ESI Q-TOF, Nanospray, APCI, APPI, ETD."
            MS_HCTultra_ETD_II,

            // "Bruker Daltonics' microflex LT: MALDI TOF."
            MS_microflex_LT,

            // "Bruker Daltonics' micrOTOF: ESI TOF, APCI, APPI."
            MS_micrOTOF,

            // "Bruker Daltonics' micrOTOF-Q: ESI Q-TOF, Nanospray, APCI, APPI."
            MS_micrOTOF_Q,

            // "Bruker Daltonics' micrOTOF-Q II: ESI Q-TOF, Nanospray, APCI, APPI."
            MS_micrOTOF_Q_II,

            // "Bruker Daltonics' ultraflex III TOF/TOF: MALDI TOF."
            MS_ultraflex_III_TOF_TOF,

            // "Bruker software for data acquisition."
            MS_apexControl,

            // "Bruker software for data analysis."
            MS_BioTools,

            // "Bruker CLINPROT software."
            MS_CLINPROT,

            // "Bruker CLINPROT micro software."
            MS_CLINPROT_micro,

            // "Bruker CLINPROT robot software."
            MS_CLINPROT_robot,

            // "Bruker ClinProTools software."
            MS_ClinProTools,

            // "Bruker Compass software."
            MS_Compass,

            // "Bruker Compass for HCT/esquire software."
            MS_Compass_for_HCT_esquire,

            // "Bruker Compass for micrOTOF software."
            MS_Compass_for_micrOTOF,

            // "Bruker compass OpenAccess software."
            MS_Compass_OpenAccess,

            // "Bruker compass Security Pack software."
            MS_Compass_Security_Pack,

            // "Bruker stand-alone software for data conversion."
            MS_CompassXport,

            // "Bruker software library for data access."
            MS_CompassXtract,

            // "Bruker software for data analysis."
            MS_DataAnalysis,

            // "Bruker software for data acquisition."
            MS_dpControl,

            // "Bruker software for data acquisition."
            MS_esquireControl,

            // "Bruker software for data analysis."
            MS_flexImaging,

            // "Bruker GENOLINK software."
            MS_GENOLINK,

            // "Bruker GenoTools software."
            MS_GenoTools,

            // "Bruker software for data acquisition."
            MS_HCTcontrol,

            // "Bruker software for data acquisition."
            MS_micrOTOFcontrol,

            // "Bruker PolyTools software."
            MS_PolyTools,

            // "Bruker software for data analysis."
            MS_ProfileAnalysis,

            // "Bruker PROTEINEER software."
            MS_PROTEINEER,

            // "Bruker PROTEINEER dp software."
            MS_PROTEINEER_dp,

            // "Bruker PROTEINEER fc software."
            MS_PROTEINEER_fc,

            // "Bruker PROTEINEER spII software."
            MS_PROTEINEER_spII,

            // "Bruker PROTEINEER-LC software."
            MS_PROTEINEER_LC,

            // "Bruker ProteinScape software."
            MS_ProteinScape,

            // "BrukerPureDisk software."
            MS_PureDisk,

            // "Bruker software for data analysis."
            MS_QuantAnalysis,

            // "Bruker software for data acquisition."
            MS_spControl,

            // "Bruker TargetAnalysis software."
            MS_TargetAnalysis,

            // "Bruker WARP-LC software."
            MS_WARP_LC,

            // "Parameter file used to configure the acquisition of raw data on the instrument."
            MS_parameter_file,

            // "Conversion to dta format."
            MS_Conversion_to_dta,

            // "Thermo Finnigan SRF file format."
            MS_Bioworks_SRF_format,

            // "Thermo Scientific TSQ Quantum Ultra AM."
            MS_TSQ_Quantum_Ultra_AM,

            // "Mass-to-charge ratio of an selected ion."
            MS_selected_ion_m_z,

            // "The correction of the spectrum scan times, as used e.g. in label-free proteomics."
            MS_retention_time_alignment,

            // "The removal of very high intensity data points."
            MS_high_intensity_data_point_removal,

            // "The time that a data processing action was finished."
            MS_completion_time,

            // "ThermoFinnigan SSQ 7000 MS."
            MS_SSQ_7000,

            // "ThermoFinnigan TSQ 7000 MS."
            MS_TSQ_7000,

            // "ThermoFinnigan TSQ MS."
            MS_TSQ,

            // "Thermo Scientific TSQ Quantum Ultra."
            MS_TSQ_Quantum_Ultra,

            // "TOPP (The OpenMS proteomics pipeline) software."
            MS_TOPP_software,

            // "Removes the baseline from profile spectra using a top-hat filter."
            MS_BaselineFilter,

            // "Exports data from an OpenMS database to a file."
            MS_DBExporter,

            // "Imports data to an OpenMS database."
            MS_DBImporter,

            // "Converts between different MS file formats."
            MS_FileConverter,

            // "Extracts or manipulates portions of data from peak, feature or consensus feature files."
            MS_FileFilter,

            // "Merges several MS files into one file."
            MS_FileMerger,

            // "Applies an internal calibration."
            MS_InternalCalibration,

            // "OBSOLETE Corrects retention time distortions between maps."
            MS_MapAligner_OBSOLETE,

            // "Normalizes peak intensities in an MS run."
            MS_MapNormalizer,

            // "OBSOLETE Removes noise from profile spectra by using different smoothing techniques."
            MS_NoiseFilter_OBSOLETE,

            // "OBSOLETE Finds mass spectrometric peaks in profile mass spectra."
            MS_PeakPicker_OBSOLETE,

            // "Transforms an LC/MS map into a resampled map or a png image."
            MS_Resampler,

            // "OBSOLETE Applies a filter to peak spectra."
            MS_SpectraFilter_OBSOLETE,

            // "Applies time of flight calibration."
            MS_TOFCalibration,

            // "Describes how the native spectrum identifiers are formated."
            MS_native_spectrum_identifier_format,

            // "Native format defined by controllerType=xsd:nonNegativeInteger controllerNumber=xsd:positiveInteger scan=xsd:positiveInteger."
            MS_Thermo_nativeID_format,

            // "Native format defined by function=xsd:positiveInteger process=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger."
            MS_Waters_nativeID_format,

            // "Native format defined by sample=xsd:nonNegativeInteger period=xsd:nonNegativeInteger cycle=xsd:nonNegativeInteger experiment=xsd:nonNegativeInteger."
            MS_WIFF_nativeID_format,

            // "Native format defined by scan=xsd:nonNegativeInteger."
            MS_Bruker_Agilent_YEP_nativeID_format,

            // "Native format defined by scan=xsd:nonNegativeInteger."
            MS_Bruker_BAF_nativeID_format,

            // "Native format defined by file=xsd:IDREF."
            MS_Bruker_FID_nativeID_format,

            // "Native format defined by index=xsd:nonNegativeInteger."
            MS_multiple_peak_list_nativeID_format,

            // "Native format defined by file=xsd:IDREF."
            MS_single_peak_list_nativeID_format,

            // "Native format defined by scan=xsd:nonNegativeInteger."
            MS_scan_number_only_nativeID_format,

            // "Native format defined by spectrum=xsd:nonNegativeInteger."
            MS_spectrum_identifier_nativeID_format,

            // "A process that infers the charge state of an MSn spectrum's precursor(s) by the application of some algorithm."
            MS_charge_state_calculation,

            // "Infers charge state as single or ambiguously multiple by determining the fraction of intensity below the precursor m/z."
            MS_below_precursor_intensity_dominance_charge_state_calculation,

            // "A process that recalculates existing precursor selected ions with one or more algorithmically determined precursor selected ions."
            MS_precursor_recalculation,

            // "Recalculates one or more precursor selected ions by peak detection in the isolation windows of high accuracy MS precursor scans."
            MS_msPrefix_precursor_recalculation,

            // "Reduces intensity spikes by applying local polynomial regression (of degree k) on a distribution (of at least k+1 equally spaced points) to determine the smoothed value for each point. It tends to preserve features of the distribution such as relative maxima, minima and width, which are usually 'flattened' by other adjacent averaging techniques."
            MS_Savitzky_Golay_smoothing,

            // "Reduces intensity spikes by applying a modelling method known as locally weighted polynomial regression. At each point in the data set a low-degree polynomial is fit to a subset of the data, with explanatory variable values near the point whose response is being estimated. The polynomial is fit using weighted least squares, giving more weight to points near the point whose response is being estimated and less weight to points further away. The value of the regression function for the point is then obtained by evaluating the local polynomial using the explanatory variable values for that data point. The LOESS fit is complete after regression function values have been computed for each of the n data points. Many of the details of this method, such as the degree of the polynomial model and the weights, are flexible."
            MS_LOWESS_smoothing,

            // "Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function."
            MS_Gaussian_smoothing,

            // "Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect."
            MS_moving_average_smoothing,

            // "A data array that contains data not covered by any other term in this group. Please do not use this term, if the binary data array type might be commonly used - contact the PSI-MS working group in order to have another CV term added."
            MS_non_standard_data_array,

            // "Threshold at or below which some action is taken."
            MS_inclusive_low_intensity_threshold,

            // "Threshold at or above which some action is taken."
            MS_inclusive_high_intensity_threshold,

            // "MS1 spectrum that is enriched in multiply-charged ions compared to singly-charged ions."
            MS_enhanced_multiply_charged_spectrum,

            // "MSn spectrum in which the product ions are collected after a time delay, which allows the observation of lower energy fragmentation processes after precursor ion activation."
            MS_time_delayed_fragmentation_spectrum,

            // "OBSOLETE Scan with enhanced resolution."
            MS_enhanced_resolution_scan_OBSOLETE,

            // "Isolation window parameter."
            MS_isolation_window_attribute,

            // "OBSOLETE The highest m/z being isolated in an isolation window."
            MS_isolation_window_upper_limit_OBSOLETE,

            // "OBSOLETE The lowest m/z being isolated in an isolation window."
            MS_isolation_window_lower_limit_OBSOLETE,

            // "Use this term if only one scan was recorded or there is no information about scans available."
            MS_no_combination,

            // "A free-form text title describing a spectrum."
            MS_spectrum_title,

            // "A list of scan numbers and or scan ranges associated with a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term."
            MS_peak_list_scans,

            // "A list of raw scans and or scan ranges used to generate a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term."
            MS_peak_list_raw_scans,

            // "A software tool that has not yet been released. The value should describe the software. Please do not use this term for publicly available software - contact the PSI-MS working group in order to have another CV term added."
            MS_custom_unreleased_software_tool,

            // "The observed mass divided by the difference between two masses that can be separated: m/dm. The procedure by which dm was obtained and the mass at which the measurement was made should be reported."
            MS_mass_resolving_power,

            // "Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported."
            MS_area_peak_picking,

            // "Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported."
            MS_height_peak_picking,

            // "Offset between two analyzers in a constant neutral loss or neutral gain scan. The value corresponds to the neutral loss or neutral gain value."
            MS_analyzer_scan_offset,

            // "A plot of the relative intensity of electromagnetic radiation as a function of the wavelength."
            MS_electromagnetic_radiation_spectrum,

            // "A plot of the relative intensity of electromagnetic radiation emitted by atoms or molecules when excited."
            MS_emission_spectrum,

            // "A plot of the relative intensity of electromagnetic radiation absorbed by atoms or molecules when excited."
            MS_absorption_spectrum,

            // "Unit describing the scan rate of a spectrum in Thomson per second."
            MS_Th_s,

            // "Chromatogram properties that are associated with a value."
            MS_chromatogram_attribute,

            // "A free-form text title describing a chromatogram."
            MS_chromatogram_title,

            // "A plot of the relative abundance of a beam or other collection of ions as a function of the retention time."
            MS_mass_chromatogram,

            // "The measurement of electromagnetic properties as a function of the retention time."
            MS_electromagnetic_radiation_chromatogram,

            // "The measurement of light absorbed by the sample as a function of the retention time."
            MS_absorption_chromatogram,

            // "The measurement of light emitted by the sample as a function of the retention time."
            MS_emission_chromatogram,

            // "The number of counted events observed per second in one or a group of elements of a detector."
            MS_counts_per_second,

            // "Bruker BAF raw file format."
            MS_Bruker_BAF_format,

            // "Bruker HyStar U2 file format."
            MS_Bruker_U2_format,

            // "Bruker software for hyphenated experiments."
            MS_HyStar,

            // "Acquity UPLC Photodiode Array Detector."
            MS_Acquity_UPLC_PDA,

            // "Acquity UPLC Fluorescence Detector."
            MS_Acquity_UPLC_FLR,

            // "A data array of flow rate measurements."
            MS_flow_rate_array,

            // "A data array of pressure measurements."
            MS_pressure_array,

            // "A data array of temperature measurements."
            MS_temperature_array,

            // "Native format defined by declaration=xsd:nonNegativeInteger collection=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger."
            MS_Bruker_U2_nativeID_format,

            // "No nativeID format indicates that the file tagged with this term does not contain spectra that can have a nativeID format."
            MS_no_nativeID_format,

            // "Bruker FID file format."
            MS_Bruker_FID_format,

            // "The time of elution from all used chromatographic columns (one or more) in the chromatographic separation step, relative to the start of the chromatography."
            MS_elution_time,

            // "The primary or reference m/z about which the isolation window is defined."
            MS_isolation_window_target_m_z,

            // "The extent of the isolation window in m/z below the isolation window target m/z. The lower and upper offsets may be asymmetric about the target m/z."
            MS_isolation_window_lower_offset,

            // "The extent of the isolation window in m/z above the isolation window target m/z. The lower and upper offsets may be asymmetric about the target m/z."
            MS_isolation_window_upper_offset,

            // "Properties of the preparation steps which took place before the measurement was performed."
            MS_sample_preparation,

            // "Attributes to describe the technique how the sample is prepared with the matrix solution."
            MS_MALDI_matrix_application,

            // "Describes the technique how the matrix is put on the sample target."
            MS_matrix_application_type,

            // "Describes the chemical solution used as matrix."
            MS_matrix_solution,

            // "Concentration of the chemical solution used as matrix."
            MS_matrix_solution_concentration,

            // "Dried droplet in MALDI matrix preparation."
            MS_dried_droplet_MALDI_matrix_preparation,

            // "Printed MALDI matrix preparation."
            MS_printed_MALDI_matrix_preparation,

            // "Sprayed MALDI matrix preparation."
            MS_sprayed_MALDI_matrix_preparation,

            // "Precoated MALDI sample plate."
            MS_precoated_MALDI_sample_plate,

            // "Device that emits light (electromagnetic radiation) through a process called stimulated emission. The term is an acronym for Light Amplification by Stimulated Emission of Radiation."
            MS_laser,

            // "Laser properties that are associated with a value."
            MS_laser_attribute,

            // "Type of laser used used for desorption purpose."
            MS_laser_type,

            // "OBSOLETE The distance between two peaks of the emitted laser beam."
            MS_wavelength_OBSOLETE,

            // "Describes the diameter of the laser beam in x direction."
            MS_focus_diameter_x,

            // "Describes the diameter of the laser beam in y direction."
            MS_focus_diameter_y,

            // "Describes output energy of the laser system. May be attenuated by filters or other means."
            MS_pulse_energy,

            // "Describes how long the laser beam was emitted from the laser device."
            MS_pulse_duration,

            // "Describes the reduction of the intensity of the laser beam energy."
            MS_attenuation,

            // "Describes the angle between the laser beam and the sample target."
            MS_impact_angle,

            // "Laser which is powered by a gaseous medium."
            MS_gas_laser,

            // "Solid state laser materials are commonly made by doping a crystalline solid host with ions that provide the required energy states."
            MS_solid_state_laser,

            // "Dye lasers use an organic dye as the gain medium."
            MS_dye_laser,

            // "Free electron laser uses a relativistic electron beam as the lasing medium which move freely through a magnetic structure, hence the term."
            MS_free_electron_laser,

            // "Thermo Scientific LTQ XL MS."
            MS_LTQ_XL,

            // "Thermo Scientific LTQ Velos MS."
            MS_LTQ_Velos,

            // "Thermo Scientific LTQ Velos MS with ETD."
            MS_LTQ_Velos_ETD,

            // "Properties of the described run."
            MS_run_attribute,

            // "Identier string that describes the sample fraction. This identifier should contain the fraction number(s) or similar information."
            MS_fraction_identifier,

            // "A molecules is a fundamental component of a chemical compound that is the smallest part of the compound that can participate in a chemical reaction."
            MS_molecule,

            // "A compound of low molecular weight that is composed of two or more amino acids."
            MS_peptide,

            // "A describable property of a chemical compound."
            MS_chemical_compound_attribute,

            // "The pH of a solution at which a charged molecule does not migrate in an electric field."
            MS_isoelectric_point,

            // "The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm."
            MS_predicted_isoelectric_point,

            // "A combination of symbols used to express the chemical composition of a compound."
            MS_chemical_compound_formula,

            // "A chemical formula which expresses the proportions of the elements present in a substance."
            MS_empirical_formula,

            // "A chemical compound formula expressing the number of atoms of each element present in a compound, without indicating how they are linked."
            MS_molecular_formula,

            // "A chemical formula showing the number of atoms of each element in a molecule, their spatial arrangement, and their linkage to each other."
            MS_structural_formula,

            // "The simplified molecular input line entry specification or SMILES is a specification for unambiguously describing the structure of a chemical compound using a short ASCII string."
            MS_SMILES_string,

            // "The gas pressure of the collision gas used for collisional excitation."
            MS_collision_gas_pressure,

            // "OBSOLETE AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 4000."
            MS_4000_QTRAP_OBSOLETE,

            // "Software used to predict, select, or optimize transitions or analyze the results of selected reaction monitoring runs."
            MS_SRM_software,

            // "Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology."
            MS_MaRiMba,

            // "Software used to predict or calculate numerical attributes of peptides."
            MS_peptide_attribute_calculation_software,

            // "Sequence Specific Retention Calculator estimates the retention time of peptides based on their sequence."
            MS_SSRCalc,

            // "Potential difference between the orifice and the skimmer in volts."
            MS_declustering_potential,

            // "Potential difference between the sampling cone/orifice in volts."
            MS_cone_voltage,

            // "Potential difference setting of the tube lens in volts."
            MS_tube_lens_voltage,

            // "An identifier/accession number to an external reference database."
            MS_external_reference_identifier,

            // "A unique identifier for a publication in the PubMed database (MIR:00000015)."
            MS_PubMed_identifier,

            // "The duration of intervals between scanning, during which the instrument configuration is switched."
            MS_interchannel_delay,

            // "A substance formed by chemical union of two or more elements or ingredients in definite proportion by weight."
            MS_chemical_compound,

            // "A compound composed of one or more chains of amino acids in a specific order determined by the base sequence of nucleotides in the DNA coding for the protein."
            MS_protein,

            // "A short name or symbol of a protein (e.g., HSF 1 or HSF1_HUMAN)."
            MS_protein_short_name,

            // "An nonphysical attribute describing a specific protein."
            MS_protein_attribute,

            // "Accession number for a specific protein in a database."
            MS_protein_accession,

            // "A long name describing the function of the protein."
            MS_protein_name,

            // "A nonphysical attribute that can be used to describe a peptide."
            MS_peptide_attribute,

            // "A sequence of letter symbols denoting the order of amino acids that compose the peptide, without encoding any amino acid mass modifications that might be present."
            MS_unmodified_peptide_sequence,

            // "A sequence of letter symbols denoting the order of amino acids that compose the peptide plus the encoding any amino acid modifications that are present."
            MS_modified_peptide_sequence,

            // "A state description of how a peptide might be isotopically or isobarically labelled."
            MS_peptide_labeling_state,

            // "A peptide that has been created or labelled with some heavier-than-usual isotopes."
            MS_heavy_labeled_peptide,

            // "A peptide that has not been labelled with heavier-than-usual isotopes. This is often referred to as \"light\" to distinguish from \"heavy\"."
            MS_unlabeled_peptide,

            // "An arbitrary string label used to mark a set of peptides that belong together in a set, whereby the members are differentiated by different isotopic labels. For example, the heavy and light forms of the same peptide will both be assigned the same peptide group label."
            MS_peptide_group_label,

            // "A time interval from the start of chromatography when an analyte exits a chromatographic column."
            MS_retention_time,

            // "A time interval from the start of chromatography when an analyte exits an unspecified local chromatographic column and instrumental setup."
            MS_local_retention_time,

            // "A time interval from the start of chromatography when an analyte exits a standardized reference chromatographic column and instrumental setup."
            MS_normalized_retention_time,

            // "A time interval from the start of chromatography when an analyte exits a chromatographic column as predicted by a referenced software application."
            MS_predicted_retention_time,

            // "Something, such as a practice or a product, that is widely recognized or employed, especially because of its excellence."
            MS_standard,

            // "A practice or product that has become a standard not because it has been approved by a standards organization but because it is widely used and recognized by the industry as being standard."
            MS_de_facto_standard,

            // "A specification of a minimum amount of information needed to reproduce or fully interpret a scientific result."
            MS_minimum_information_standard,

            // "A standard providing the retention times at which a set of reference compounds exit the reference chromatographic column."
            MS_retention_time_normalization_standard,

            // "The de facto standard providing the retention times at which a set of halogenated reference peptides exit the reference chromatographic column."
            MS_H_PINS_retention_time_normalization_standard,

            // "The ordinal of the fragment within a specified ion series. (e.g. 8 for a y8 ion)."
            MS_product_ion_series_ordinal,

            // "The difference in m/z of the predicted m/z based on the assigned product ion minus the actual observed peak m/z."
            MS_product_ion_m_z_delta,

            // "The magnitude of a peak expressed in terms of the percentage of the magnitude of the base peak intensity multiplied by 100. The base peak is therefore 10000. This unit is common in normalized spectrum libraries."
            MS_percent_of_base_peak_times_100,

            // "Ordinal specifying the rank in intensity of a peak in a spectrum. Base peak is 1. The next most intense peak is 2, etc."
            MS_peak_intensity_rank,

            // "Ordinal specifying the rank of a peak in a spectrum in terms of suitability for targeting. The most suitable peak is 1. The next most suitability peak is 2, etc. Suitability is algorithm and context dependant."
            MS_peak_targeting_suitability_rank,

            // "A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely."
            MS_transition,

            // "The strategy used to validate that a transition is effective."
            MS_transition_validation_method,

            // "The transition has been optimized by direct injection of the peptide into an instrument specified in a separate term, and the optimum voltages and fragmentation energies have been determined."
            MS_transition_optimized_on_specified_instrument,

            // "The transition has been validated by obtaining an MS2 spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term."
            MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument,

            // "The transition has been purported by obtaining an MS2 spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term. However, the detecting instrument is of a different type (e.g. ion trap) than the instrument that the transition will eventually be used on (e.g. triple quad)."
            MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument,

            // "The transition has been predicted by informatics software without any direct spectral evidence."
            MS_transition_predicted_by_informatic_analysis,

            // "A file format that has two or more columns of tabular data where each column is separated by a TAB character."
            MS_tab_delimited_text_format,

            // "An attribute of a window in time about which a peptide might elute from the column."
            MS_retention_time_window_attribute,

            // "The extent of the retention time window in time units below the target retention time. The lower and upper offsets may be asymmetric about the target time."
            MS_retention_time_window_lower_offset,

            // "The extent of the retention time window in time units above the target retention time. The lower and upper offsets may be asymmetric about the target time."
            MS_retention_time_window_upper_offset,

            // "A list of peptides or compounds and their expected m/z coordinates that can be used to cause a mass spectrometry to obtain spectra of those molecules specifically."
            MS_target_list,

            // "A priority setting specifying whether included or excluded targets have priority over the other."
            MS_target_inclusion_exclusion_priority,

            // "A priority setting specifying that included targets have priority over the excluded targets if there is a conflict."
            MS_includes_supersede_excludes,

            // "A priority setting specifying that excluded targets have priority over the included targets if there is a conflict."
            MS_excludes_supersede_includes,

            // "Software used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the MacCoss lab at the University of Washington."
            MS_Skyline,

            // "Software used to predict, select, and optimize transitions for selected reaction monitoring experiments developed and distributed by the Institute for Systems Biology."
            MS_TIQAM,

            // "OBSOLETE Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology."
            MS_MaRiMba_OBSOLETE,

            // "Software suite used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the Institute for Systems Biology."
            MS_ATAQS,

            // "The integer rank given an interpretation of an observed product ion. For example, if y8 is selected as the most likely interpretation of a peak, then it is assigned a rank of 1."
            MS_product_interpretation_rank,

            // "The length of time spent filling an ion trapping device."
            MS_ion_injection_time,

            // "A spectrum derived from a special calibration source, rather than from the primary injected sample. A calibration spectrum is typically derived from a substance that can be used to correct systematic shift in m/z for spectra of the primary inject sample."
            MS_calibration_spectrum,

            // "Native format defined by source=xsd:string start=xsd:nonNegativeInteger end=xsd:nonNegativeInteger."
            MS_Shimadzu_Biotech_nativeID_format,

            // "Shimadzu Biotech format."
            MS_Shimadzu_Biotech_database_entity,

            // "Applied Biosystems|MDS SCIEX QTRAP 5500."
            MS_QTRAP_5500,

            // "AB SCIEX TripleTOF 5600, a quadrupole - quadrupole - time-of-flight mass spectrometer."
            MS_TripleTOF_5600,

            // "Encoding of modifications of the protein sequence from the specified accession, written in PEFF notation."
            MS_protein_modifications,

            // "Name of the gene from which the protein is translated."
            MS_gene_name,

            // "Collection of terms from the PSI Proteome Informatics standards describing the interpretation of spectra."
            MS_spectrum_interpretation,

            MS_SEQUEST_CleavesAt,

            // "SEQUEST View Input Parameters."
            MS_SEQUEST_ViewCV,

            // "Number of peptide results to show."
            MS_SEQUEST_OutputLines,

            // "Number of full protein descriptions to show for top N peptides."
            MS_SEQUEST_DescriptionLines,

            // "A de novo sequencing search (without database)."
            MS_de_novo_search,

            // "Details about the database searched."
            MS_search_database_details,

            // "The organisation, project or laboratory from where the database is obtained (UniProt, NCBI, EBI, other)."
            MS_database_source,

            // "The name of the search database (nr, SwissProt or est_human)."
            MS_database_name,

            // "OBSOLETE: Use attribute in mzIdentML instead. Local file path of the search database from the search engine's point of view."
            MS_database_local_file_path_OBSOLETE,

            // "URI, from where the search database was originally downloaded."
            MS_database_original_uri,

            // "OBSOLETE: Use attribute in mzIdentML instead. Version of the search database."
            MS_database_version_OBSOLETE,

            // "OBSOLETE: Use attribute in mzIdentML instead. Release date of the search database."
            MS_database_release_date_OBSOLETE,

            // "Database containing amino acid or nucleic acid sequences."
            MS_database_type,

            // "Was there filtering used on the database."
            MS_database_filtering,

            // "A taxonomy filter was to the database search."
            MS_DB_filter_taxonomy,

            // "Filtering applied specifically by accession number pattern."
            MS_DB_filter_on_accession_numbers,

            // "Filtering applied specifically by protein molecular weight, specified as either a range or above/below a threshold value."
            MS_DB_MW_filter,

            // "Filtering applied specifically by predicted protein isoelectric focussing point (pI), specified as either a range or above/below a threshold value."
            MS_DB_PI_filter,

            // "The translated open reading frames from a nucleotide database considered in the search (range: 1-6)."
            MS_translation_frame,

            // "The translation table used to translate the nucleotides to amino acids."
            MS_translation_table,

            MS_SEQUEST_NormalizeXCorrValues,

            // "Filtering applied specifically by amino acid sequence pattern."
            MS_DB_filter_on_sequence_pattern,

            // "String in the header of a sequence entry for that entry to be searched."
            MS_SEQUEST_SequenceHeaderFilter,

            // "The number of sequences (proteins / nucleotides) from the database search after filtering."
            MS_number_of_sequences_searched,

            // "Number of peptide seqs compared to each spectrum."
            MS_number_of_peptide_seqs_compared_to_each_spectrum,

            // "A search using a library of spectra."
            MS_spectral_library_search,

            MS_SEQUEST_SequencePartialFilter,

            // "OBSOLETE: use attribute in mzIdentML instead. Date and time of the actual search run."
            MS_date___time_search_performed_OBSOLETE,

            // "The time taken to complete the search in seconds."
            MS_search_time_taken,

            // "Flag indicating that fragment ions should be shown."
            MS_SEQUEST_ShowFragmentIons,

            // "Specify depth as value of the CVParam."
            MS_SEQUEST_Consensus,

            // "Type of the source file, the mzIdentML was created from."
            MS_intermediate_analysis_format,

            // "SEQUEST View / Sort Input Parameters."
            MS_SEQUEST_sortCV,

            // "Specify \"number of dtas shown\" as value of the CVParam."
            MS_SEQUEST_LimitTo,

            // "Details of cleavage agent (enzyme)."
            MS_cleavage_agent_details,

            // "The name of the cleavage agent."
            MS_cleavage_agent_name,

            // "Sort order of SEQUEST search results by the delta of the normalized correlation score."
            MS_SEQUEST_sort_by_dCn,

            // "Sort order of SEQUEST search results by the difference between a theoretically calculated and the corresponding experimentally measured molecular mass M."
            MS_SEQUEST_sort_by_dM,

            // "Sort order of SEQUEST search results given by the ions."
            MS_SEQUEST_sort_by_Ions,

            // "Sort order of SEQUEST search results given by the mass of the protonated ion."
            MS_SEQUEST_sort_by_MH_,

            // "Sort order of SEQUEST search results given by the probability."
            MS_SEQUEST_sort_by_P,

            // "OBSOLETE: use attribute independent in mzIdentML instead. Description of multiple enzyme digestion protocol, if any."
            MS_multiple_enzyme_combination_rules_OBSOLETE,

            // "Sort order of SEQUEST search results given by the previous amino acid."
            MS_SEQUEST_sort_by_PreviousAminoAcid,

            // "Sort order of SEQUEST search results given by the reference."
            MS_SEQUEST_sort_by_Ref,

            // "Modification parameters for the search engine run."
            MS_modification_parameters,

            // "The specificity rules for the modifications applied by the search engine."
            MS_modification_specificity_rule,

            // "OBSOLETE: Tolerance on types."
            MS_tolerance_on_types_OBSOLETE,

            // "The quality estimation was done manually."
            MS_quality_estimation_by_manual_validation,

            // "Sort order of SEQUEST search results given by the result 'Sp' of 'Rank/Sp' in the out file (peptide)."
            MS_SEQUEST_sort_by_RSp,

            // "Method for quality estimation (manually or with decoy database)."
            MS_quality_estimation_method_details,

            // "OBSOLETE: replaced by MS:1000336 (neutral loss): Leave this to PSI-MOD."
            MS_neutral_loss_OBSOLETE,

            // "Mascot MGF file format."
            MS_Mascot_MGF_format,

            // "OBSOLETE: There is Phenyx:ScoringModel for Phenyx! Scoring model (more detailed granularity). TODO: add some child terms."
            MS_TODOscoring_model_OBSOLETE,

            // "The description of the DEPRECATED ion fragment series (including charges and neutral losses) that are considered by the search engine."
            MS_ions_series_considered_in_search,

            // "Sort order of SEQUEST search results by the Sp score."
            MS_SEQUEST_sort_by_Sp,

            // "Sort order of SEQUEST search results given by the total ion current."
            MS_SEQUEST_sort_by_TIC,

            // "Sort order of SEQUEST search results given by the scan number."
            MS_SEQUEST_sort_by_Scan,

            // "Sort order of SEQUEST search results given by the sequence."
            MS_SEQUEST_sort_by_Sequence,

            // "Sort order of SEQUEST search results given by the SEQUEST result 'Sf'."
            MS_SEQUEST_sort_by_Sf,

            // "Database contains amino acid sequences."
            MS_database_type_amino_acid,

            // "Database contains nucleic acid sequences."
            MS_database_type_nucleotide,

            // "Enumeration of type of search value (i.e. from PMF, sequence tag, MS2)."
            MS_search_type,

            // "A peptide mass fingerprint search."
            MS_pmf_search,

            // "A sequence tag search."
            MS_tag_search,

            // "An MS2 search (with fragment ions)."
            MS_ms_ms_search,

            // "Non-redundant GenBank sequence database."
            MS_database_nr,

            // "Protein level information."
            MS_protein_result_details,

            // "Sort order of SEQUEST search results by the correlation score."
            MS_SEQUEST_sort_by_XCorr,

            // "SEQUEST View / Process Input Parameters."
            MS_SEQUEST_ProcessCV,

            // "The protein description line from the sequence entry in the source database FASTA file."
            MS_protein_description,

            // "The taxonomy of the resultant molecule from the search."
            MS_molecule_taxonomy,

            // "OBSOLETE: The system used to indicate taxonomy. There should be an enumerated list of options: latin name, NCBI TaxID, common name, Swiss-Prot species ID (ex. RABIT from the full protein ID ALBU_RABIT)."
            MS_taxonomy_nomenclature_OBSOLETE,

            MS_NoEnzyme_OBSOLETE,

            // "Identification confidence metric for a peptide."
            MS_peptide_identification_confidence_metric,

            // "The percent coverage for the protein based upon the matched peptide sequences (can be calculated)."
            MS_sequence_coverage,

            // "Sort order of SEQUEST search results given by the charge."
            MS_SEQUEST_sort_by_z,

            MS_SEQUEST_ProcessAll,

            // "Specify \"percentage\" as value of the CVParam."
            MS_SEQUEST_TopPercentMostIntense,

            // "This counts distinct sequences hitting the protein without regard to a minimal confidence threshold."
            MS_distinct_peptide_sequences,

            // "This counts the number of distinct peptide sequences. Multiple charge states and multiple modification states do NOT count as multiple sequences. The definition of 'confident' must be qualified elsewhere."
            MS_confident_distinct_peptide_sequences,

            // "The point of this entry is to define what is meant by confident for the term Confident distinct peptide sequence and/or Confident peptides. Example 1 - metric=Paragon:Confidence value=95 sense=greater than Example 2 - metric=Mascot:Eval value=0.05 sense=less than."
            MS_confident_peptide_qualification,

            // "This counts the number of peptide sequences without regard to whether they are distinct. Multiple charges states and multiple modification states DO count as multiple peptides. The definition of 'confident' must be qualified elsewhere."
            MS_confident_peptide_sequence_number,

            // "Protein group or subset relationships."
            MS_protein_group_or_subset_relationship,

            MS_SEQUEST_Chromatogram,

            MS_SEQUEST_InfoAndLog,

            // "The name of the UniProtKB/Swiss-Prot knowledgebase."
            MS_database_UniProtKB_Swiss_Prot,

            // "Peptide level information."
            MS_peptide_result_details,

            // "Specify \"number\" as value of the CVParam."
            MS_SEQUEST_TopNumber,

            // "Source file for this mzIdentML was a data set in a database."
            MS_data_stored_in_database,

            // "Parameter information, type of product: a ion with charge on the N-terminal side."
            MS_param__a_ion,

            // "Specify cull string as value of the CVParam."
            MS_SEQUEST_CullTo,

            // "SEQUEST Mode Input Parameters."
            MS_SEQUEST_modeCV,

            MS_SEQUEST_Full,

            // "The residue preceding the first amino acid in the peptide sequence as it occurs in the protein. Use 'N-term' to denote if the peptide starts at the N terminus of the protein."
            MS_n_terminal_flanking_residue,

            // "The residue following the last amino acid in the peptide sequence as it occurs in the protein. Use 'C-term' to denote if the peptide ends at the C terminus of the protein."
            MS_c_terminal_flanking_residue,

            // "OBSOLETE Retention time of the spectrum from the source file."
            MS_retention_time_s__OBSOLETE,

            // "OBSOLETE: use spectrumID attribute of SpectrumIdentificationResult. Take from mzData."
            MS_scan_number_s__OBSOLETE,

            // "Results specific for one protein as part of a protein ambiguity group (a result not valid for all the other proteins in the protein ambiguity group)."
            MS_single_protein_result_details,

            // "The theoretical mass of the molecule (e.g. the peptide sequence and its modifications)."
            MS_theoretical_mass,

            // "Parameter information, type of product: b ion with charge on the N-terminal side."
            MS_param__b_ion,

            // "Parameter information, type of product: c ion with charge on the N-terminal side."
            MS_param__c_ion,

            MS_SEQUEST_FormatAndLinks,

            // "The number of peaks that were matched as qualified by the ion series considered field. If a peak matches multiple ions then only 1 would be added the count."
            MS_number_of_matched_peaks,

            // "The ion series that were used during the calculation of the count (e.g. a, b, c, d, v, w, x, y, z, a-H2O, a-NH3, b-H2O, b-NH3, y-H2O, y-NH3, b-H20, b+, z-, z+1, z+2, b-H3PO4, y-H3PO4, immonium, internal ya, internal yb)."
            MS_ions_series_considered,

            // "The number of peaks from the original peak list that are used to calculate the scores for a particular search engine. All ions that have the opportunity to match or be counted even if they don't."
            MS_number_of_peaks_used,

            // "The number of peaks from the original peaks listed that were submitted to the search engine."
            MS_number_of_peaks_submitted,

            // "Result of quality estimation: decision of a manual validation."
            MS_manual_validation,

            MS_SEQUEST_Fast,

            // "Accessions Containing Sequence - Accessions for each protein containing this peptide."
            MS_peptide_sharing_details,

            // "SEQUEST Select Input Parameters."
            MS_SEQUEST_selectCV,

            // "Quantification information."
            MS_quantification_information,

            // "OBSOLETE Peptide raw area."
            MS_peptide_raw_area_OBSOLETE,

            // "Error on peptide area."
            MS_error_on_peptide_area,

            // "Peptide ratio."
            MS_peptide_ratio,

            // "Error on peptide ratio."
            MS_error_on_peptide_ratio,

            // "Protein ratio."
            MS_protein_ratio,

            // "Error on protein ratio."
            MS_error_on_protein_ratio,

            // "OBSOLETE P-value (protein diff from 1 randomly)."
            MS_p_value__protein_diff_from_1_randomly__OBSOLETE,

            // "Absolute quantity in terms of real concentration or molecule copy number in sample."
            MS_absolute_quantity,

            // "Error on absolute quantity."
            MS_error_on_absolute_quantity,

            // "Quantitation software name."
            MS_quantitation_software_name,

            // "OBSOLETE Quantitation software version."
            MS_quantitation_software_version_OBSOLETE,

            // "The intensity of the precursor ion."
            MS_intensity_of_precursor_ion,

            // "International Protein Index database for Homo sapiens sequences."
            MS_database_IPI_human,

            // "Search engine specific peptide spectrum match scores."
            MS_search_engine_specific_score_for_PSMs,

            MS_SEQUEST_SelectDefault,

            // "SEQUEST Select Advanced Input Parameters."
            MS_SEQUEST_SelectAdvancedCV,

            // "Ion a-NH3 parameter information, type of product: a ion with lost ammonia."
            MS_param__a_ion_NH3_DEPRECATED,

            MS_protein_ambiguity_group_result_details,

            // "Ion a-H2O if a significant and fragment includes STED."
            MS_param__a_ion_H2O_DEPRECATED,

            // "Ion b-NH3 parameter information, type of product: b ion with lost ammonia."
            MS_param__b_ion_NH3_DEPRECATED,

            // "Ion b-H2O if b significant and fragment includes STED."
            MS_param__b_ion_H2O_DEPRECATED,

            // "Ion y-NH3 parameter information, type of product: y ion with lost ammonia."
            MS_param__y_ion_NH3_DEPRECATED,

            MS_param__y_ion_H2O_DEPRECATED,

            // "Search engine specific scores."
            MS_search_engine_specific_score,

            // "The SEQUEST result 'Probability'."
            MS_SEQUEST_probability,

            // "The SEQUEST result 'XCorr'."
            MS_SEQUEST_xcorr,

            // "The SEQUEST result 'DeltaCn'."
            MS_SEQUEST_deltacn,

            // "The SEQUEST result 'Sp' (protein)."
            MS_SEQUEST_sp,

            MS_SEQUEST_Uniq,

            // "The SEQUEST result 'Expectation value'."
            MS_SEQUEST_expectation_value,

            // "The SEQUEST result 'Sf'."
            MS_SEQUEST_sf,

            // "The SEQUEST result 'Matched Ions'."
            MS_SEQUEST_matched_ions,

            // "The SEQUEST result 'Total Ions'."
            MS_SEQUEST_total_ions,

            // "The SEQUEST result 'Consensus Score'."
            MS_SEQUEST_consensus_score,

            // "The Paragon result 'Unused ProtScore'."
            MS_Paragon_unused_protscore,

            // "The Paragon result 'Total ProtScore'."
            MS_Paragon_total_protscore,

            // "The Paragon result 'Score'."
            MS_Paragon_score,

            // "The Paragon result 'Confidence'."
            MS_Paragon_confidence,

            // "The Paragon result 'Expression Error Factor'."
            MS_Paragon_expression_error_factor,

            // "The Paragon result 'Expression change P-value'."
            MS_Paragon_expression_change_p_value,

            // "The Paragon result 'Contrib'."
            MS_Paragon_contrib,

            // "The Mascot result 'Score'."
            MS_Mascot_score,

            // "The Mascot result 'expectation value'."
            MS_Mascot_expectation_value,

            // "The Mascot result 'Matched ions'."
            MS_Mascot_matched_ions,

            // "The Mascot result 'Total ions'."
            MS_Mascot_total_ions,

            // "A peptide matching multiple proteins."
            MS_peptide_shared_in_multiple_proteins,

            // "Regular expression for Trypsin."
            MS______KR______P_,

            // "Number of Molecular Hypothesis Considered - This is the number of molecules (e.g. peptides for proteomics) considered for a particular search."
            MS_number_of_molecular_hypothesis_considered,

            // "Expressed sequence tag nucleotide sequence database."
            MS_database_EST,

            // "Regular expressions for cleavage enzymes."
            MS_Cleavage_agent_regular_expression,

            // "The details of the actual run of the search."
            MS_search_statistics,

            // "As parameter for search engine: apply the modification only at the N-terminus of a peptide."
            MS_modification_specificity_peptide_N_term,

            // "As parameter for search engine: apply the modification only at the C-terminus of a peptide."
            MS_modification_specificity_peptide_C_term,

            // "OBSOLETE Quality estimation by p-value."
            MS_p_value_OBSOLETE,

            // "Result of quality estimation: Expect value."
            MS_Expect_value,

            // "Result of quality estimation: confidence score."
            MS_confidence_score,

            // "Quality estimation by decoy database."
            MS_quality_estimation_with_decoy_database,

            // "Decoy type: Amino acids of protein sequences are used in reverse order."
            MS_decoy_DB_type_reverse,

            // "Decoy type: Amino acids of protein sequences are randomized (keeping the original protein mass)."
            MS_decoy_DB_type_randomized,

            // "Decoy database composition: database contains original (target) and decoy entries."
            MS_DB_composition_target_decoy,

            // "Identification confidence metric for a protein."
            MS_protein_identification_confidence_metric,

            // "Source file for this mzIdentML was in Mascot DAT file format."
            MS_Mascot_DAT_format,

            // "Source file for this mzIdentML was in SEQUEST out file format."
            MS_SEQUEST_out_file_format,

            // "Maximum value of molecular weight filter."
            MS_DB_MW_filter_maximum,

            // "Minimum value of molecular weight filter."
            MS_DB_MW_filter_minimum,

            // "Maximum value of isoelectric point filter."
            MS_DB_PI_filter_maximum,

            // "Minimum value of isoelectric point filter."
            MS_DB_PI_filter_minimum,

            // "The name of the Mascot search engine."
            MS_Mascot,

            // "The name of the SEQUEST search engine."
            MS_SEQUEST,

            // "The name of the Phenyx search engine."
            MS_Phenyx,

            // "The type of mass difference value to be considered by the search engine (monoisotopic or average)."
            MS_mass_type_settings,

            // "Mass type setting for parent mass was monoisotopic."
            MS_parent_mass_type_mono,

            // "Mass type setting for parent mass was average isotopic."
            MS_parent_mass_type_average,

            // "OBSOLETE: Scores and global result characteristics."
            MS_search_result_details_OBSOLETE,

            // "Estimation of the global false discovery rate of proteins."
            MS_protein_level_global_FDR,

            // "The SEQUEST result 'Sp' in out file (peptide)."
            MS_SEQUEST_PeptideSp,

            // "The SEQUEST result 'Sp' of 'Rank/Sp' in out file (peptide). Also called 'rsp'."
            MS_SEQUEST_PeptideRankSp,

            // "The SEQUEST result '#' in out file (peptide)."
            MS_SEQUEST_PeptideNumber,

            // "The SEQUEST result 'Id#' in out file (peptide)."
            MS_SEQUEST_PeptideIdnumber,

            // "Fragmentation information, type of product: y ion."
            MS_frag__y_ion,

            // "Fragmentation information like ion types."
            MS_fragmentation_information,

            // "Fragmentation information, type of product: b ion without water."
            MS_frag__b_ion___H2O,

            // "Fragmentation information, type of product: y ion without water."
            MS_frag__y_ion___H2O,

            // "Fragmentation information, type of product: b ion."
            MS_frag__b_ion,

            // "The m/z of the product ion."
            MS_product_ion_m_z,

            // "The intensity of a single product ion."
            MS_product_ion_intensity,

            // "The product ion m/z error."
            MS_product_ion_m_z_error,

            // "Fragmentation information, type of product: x ion."
            MS_frag__x_ion,

            // "Fragmentation information, type of product: a ion."
            MS_frag__a_ion,

            // "Fragmentation information, type of product: z ion."
            MS_frag__z_ion,

            // "Fragmentation information, type of product: c ion."
            MS_frag__c_ion,

            // "Ion b-NH3 fragmentation information, type of product: b ion without ammonia."
            MS_frag__b_ion___NH3,

            // "Ion y-NH3 fragmentation information, type of product: y ion without ammonia."
            MS_frag__y_ion___NH3,

            // "Fragmentation information, type of product: a ion without water."
            MS_frag__a_ion___H2O,

            // "Ion a-NH3 fragmentation information, type of product: a ion without ammonia."
            MS_frag__a_ion___NH3,

            // "Fragmentation information, type of product: d ion."
            MS_frag__d_ion,

            // "Fragmentation information, type of product: v ion."
            MS_frag__v_ion,

            // "Fragmentation information, type of product: w ion."
            MS_frag__w_ion,

            // "Fragmentation information, type of product: immonium ion."
            MS_frag__immonium_ion,

            // "Non-identified ion."
            MS_non_identified_ion,

            // "Co-eluting ion."
            MS_co_eluting_ion,

            // "Source file for this mzIdentML was a SEQUEST folder with its out files."
            MS_SEQUEST_out_folder,

            // "Source file for this mzIdentML was a SEQUEST summary page (proteins)."
            MS_SEQUEST_summary,

            // "PerSeptive peak list file format."
            MS_PerSeptive_PKS_format,

            // "PE Sciex peak list file format."
            MS_Sciex_API_III_format,

            // "Bruker data exchange XML format."
            MS_Bruker_XML_format,

            // "Details describing the search input."
            MS_search_input_details,

            // "Result of quality estimation: the local FDR at the current position of a sorted list."
            MS_local_FDR,

            // "Enzyme trypsin."
            MS_Trypsin,

            // "Database source EBI."
            MS_DB_source_EBI,

            // "Database source NCBI."
            MS_DB_source_NCBI,

            // "Database source UniProt."
            MS_DB_source_UniProt,

            // "Mass type setting for fragment mass was average isotopic."
            MS_fragment_mass_type_average,

            // "Mass type setting for fragment mass was monoisotopic."
            MS_fragment_mass_type_mono,

            // "Parameter information, type of product: side chain loss v ion."
            MS_param__v_ion,

            // "Parameter information, type of product: side chain loss d ion."
            MS_param__d_ion,

            // "Parameter information, type of product: immonium ion."
            MS_param__immonium_ion,

            // "Parameter information, type of product: side chain loss w ion."
            MS_param__w_ion,

            // "Parameter information, type of product: x ion with charge on the C-terminal side."
            MS_param__x_ion,

            // "Parameter information, type of product: y ion with charge on the C-terminal side."
            MS_param__y_ion,

            // "Parameter information, type of product: z ion with charge on the C-terminal side."
            MS_param__z_ion,

            // "Role of a Person or Organization."
            MS_role_type,

            // "Software vendor role."
            MS_software_vendor,

            // "Programmer role."
            MS_programmer,

            // "Instrument vendor role."
            MS_instrument_vendor,

            // "Lab personnel role."
            MS_lab_personnel,

            // "Researcher role."
            MS_researcher,

            // "Regular expression for Arg-C."
            MS_____R_____P_,

            // "Regular expression for Asp-N."
            MS_____BD__,

            // "Regular expression for Asp-N-ambic."
            MS_____DE__,

            // "Source data for this mzIdentML was a ProteinScape SearchEvent."
            MS_ProteinScape_SearchEvent,

            // "Source data for this mzIdentML was a ProteinScape Gel."
            MS_ProteinScape_Gel,

            // "Specify the regular expression for decoy accession numbers."
            MS_decoy_DB_accession_regexp,

            // "OBSOLETE The name of the database, the search database was derived from."
            MS_decoy_DB_derived_from_OBSOLETE,

            // "International Protein Index database for Mus musculus sequences."
            MS_database_IPI_mouse,

            // "International Protein Index database for Rattus norvegicus sequences."
            MS_database_IPI_rat,

            // "International Protein Index database for Danio rerio sequences."
            MS_database_IPI_zebrafish,

            // "International Protein Index database for Gallus gallus sequences."
            MS_database_IPI_chicken,

            // "International Protein Index database for Bos taurus sequences."
            MS_database_IPI_cow,

            // "International Protein Index database for Arabidopsis thaliana sequences."
            MS_database_IPI_arabidopsis,

            // "OBSOLETE Decoy database from a non-redundant GenBank sequence database."
            MS_decoy_DB_from_nr_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Rattus norvegicus."
            MS_decoy_DB_from_IPI_rat_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Mus musculus."
            MS_decoy_DB_from_IPI_mouse_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Arabidopsis thaliana."
            MS_decoy_DB_from_IPI_arabidopsis_OBSOLETE,

            // "OBSOLETE Decoy database from an expressed sequence tag nucleotide sequence database."
            MS_decoy_DB_from_EST_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Danio rerio."
            MS_decoy_DB_from_IPI_zebrafish_OBSOLETE,

            // "OBSOLETE Decoy database from a Swiss-Prot protein sequence database."
            MS_decoy_DB_from_UniProtKB_Swiss_Prot_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Gallus gallus."
            MS_decoy_DB_from_IPI_chicken_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Bos taurus."
            MS_decoy_DB_from_IPI_cow_OBSOLETE,

            // "OBSOLETE Decoy database from a International Protein Index database for Homo sapiens."
            MS_decoy_DB_from_IPI_human_OBSOLETE,

            // "The rank of the protein in a list sorted by the search engine."
            MS_protein_rank,

            // "Search engine specific input parameters."
            MS_search_engine_specific_input_parameter,

            // "Endoproteinase Arg-C."
            MS_Arg_C,

            // "Endoproteinase Asp-N."
            MS_Asp_N,

            // "Enzyme Asp-N, Ammonium Bicarbonate (AmBic)."
            MS_Asp_N_ambic,

            // "Enzyme chymotrypsin."
            MS_Chymotrypsin,

            // "Cyanogen bromide."
            MS_CNBr,

            // "Formic acid."
            MS_Formic_acid,

            // "Endoproteinase Lys-C."
            MS_Lys_C,

            // "Proteinase Lys-C/P."
            MS_Lys_C_P,

            // "PepsinA proteinase."
            MS_PepsinA,

            // "Cleavage agent TrypChymo."
            MS_TrypChymo,

            // "Cleavage agent Trypsin/P."
            MS_Trypsin_P,

            // "Cleavage agent V8-DE."
            MS_V8_DE,

            // "Cleavage agent V8-E."
            MS_V8_E,

            // "Significance threshold below which the p-value of a peptide match must lie to be considered statistically significant (default 0.05)."
            MS_Mascot_SigThreshold,

            // "The number of protein hits to display in the report. If 'Auto', all protein hits that have a protein score exceeding the average peptide identity threshold are reported. Otherwise an integer at least 1."
            MS_Mascot_MaxProteinHits,

            // "Mascot protein scoring method; either 'Standard' or 'MudPIT'."
            MS_Mascot_ProteinScoringMethod,

            // "Mascot peptide match ion score threshold. If between 0 and 1, then peptide matches whose expect value exceeds the thresholds are suppressed; if at least 1, then peptide matches whose ion score is below the threshold are suppressed."
            MS_Mascot_MinMSMSThreshold,

            // "If true, show (sequence or spectrum) same-set proteins. Otherwise they are suppressed."
            MS_Mascot_ShowHomologousProteinsWithSamePeptides,

            // "If true, show (sequence or spectrum) sub-set and subsumable proteins. Otherwise they are suppressed."
            MS_Mascot_ShowHomologousProteinsWithSubsetOfPeptides,

            // "Only used in Peptide Summary and Select Summary reports. If true, a peptide match must be 'bold red' to be included in the report; bold red means the peptide is a top ranking match in a query and appears for the first time (in linear order) in the list of protein hits."
            MS_Mascot_RequireBoldRed,

            // "If true, then the search results are against a nucleic acid database and Unigene clustering is enabled. Otherwise UniGene clustering is not in use."
            MS_Mascot_UseUnigeneClustering,

            // "If true, then the search results are error tolerant and peptide matches from the second pass are included in search results. Otherwise no error tolerant peptide matches are included."
            MS_Mascot_IncludeErrorTolerantMatches,

            // "If true, then the search results are against an automatically generated decoy database and the reported peptide matches and protein hits come from the decoy database. Otherwise peptide matches and protein hits come from the original database."
            MS_Mascot_ShowDecoyMatches,

            // "OBSOLETE."
            MS_add_others_OBSOLETE,

            // "OMSSA E-value."
            MS_OMSSA_evalue,

            // "OMSSA p-value."
            MS_OMSSA_pvalue,

            // "The X!Tandem expectation value."
            MS_X__Tandem_expect,

            // "The X!Tandem hyperscore."
            MS_X__Tandem_hyperscore,

            // "Regular expression for Chymotrypsin."
            MS______FYWL______P_,

            // "Regular expression for CNBr."
            MS_____M_,

            // "Regular expression for formic acid."
            MS______D_______D__,

            // "Regular expression for Lys-C."
            MS_____K_____P_,

            // "Regular expression for Lys-C/P."
            MS_____K_,

            // "Regular expression for PepsinA."
            MS______FL__,

            // "Regular expression for TrypChymo."
            MS______FYWLKR______P_,

            // "Regular expression for Trypsin/P."
            MS______KR__,

            // "Regular expression for V8-DE."
            MS______BDEZ______P_,

            // "Regular expression for V8-E."
            MS______EZ______P_,

            // "Details about a single database sequence."
            MS_database_sequence_details,

            // "The sequence is a nucleic acid sequence."
            MS_NA_sequence,

            // "The sequence is a amino acid sequence."
            MS_AA_sequence,

            // "Children of this term specify the source of the mass table used."
            MS_mass_table_source,

            // "The masses used in the mass table are taken from AAIndex."
            MS_AAIndex_mass_table,

            // "The children of this term define file formats of the sequence database used."
            MS_database_file_formats,

            // "The sequence database was stored in the FASTA format."
            MS_FASTA_format,

            // "The sequence database was stored in the Abstract Syntax Notation 1 format."
            MS_ASN_1,

            // "The sequence database was stored in the NCBI formatdb (*.p*) format."
            MS_NCBI___p_,

            // "ClustalW ALN (multiple alignment) format."
            MS_clustal_aln,

            // "EMBL entry format."
            MS_embl_em,

            // "The NBRF PIR was used as format."
            MS_NBRF_PIR,

            // "Root node for options for the mass table used."
            MS_mass_table_options,

            // "Descriptions of peptides."
            MS_peptide_descriptions,

            // "Descriptions of the input spectra."
            MS_spectrum_descriptions,

            // "Description of the quality of the input spectrum."
            MS_spectrum_quality_descriptions,

            // "This term reports the quality of the spectrum assigned by msmsEval."
            MS_msmsEval_quality,

            // "Children of this term describe ambiguous residues."
            MS_ambiguous_residues,

            // "List of standard residue one letter codes which are used to replace a non-standard."
            MS_alternate_single_letter_codes,

            // "List of masses a non-standard letter code is replaced with."
            MS_alternate_mass,

            // "The number of unmatched peaks."
            MS_number_of_unmatched_peaks,

            // "A peptide matching only one."
            MS_peptide_unique_to_one_protein,

            // "Estimation of the global false discovery rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_global_FDR,

            // "Fragmentation information, type of product: internal yb ion."
            MS_frag__internal_yb_ion,

            // "Fragmentation information, type of product: internal ya ion."
            MS_frag__internal_ya_ion,

            // "Fragmentation information, type of product: z+1 ion."
            MS_frag__z_1_ion,

            // "Fragmentation information, type of product: z+2 ion."
            MS_frag__z_2_ion,

            // "Simple text file format of \"m/z
            MS_text_format,

            // "The Mascot result 'homology threshold'."
            MS_Mascot_homology_threshold,

            // "The Mascot result 'identity threshold'."
            MS_Mascot_identity_threshold,

            MS_SEQUEST_Sequences,

            // "SEQUEST total ion current."
            MS_SEQUEST_TIC,

            MS_SEQUEST_Sum,

            // "The instrument type parameter value in Phenyx."
            MS_Phenyx_Instrument_Type,

            // "The selected scoring model in Phenyx."
            MS_Phenyx_Scoring_Model,

            // "The default parent charge value in Phenyx."
            MS_Phenyx_Default_Parent_Charge,

            // "The parameter in Phenyx that specifies if the experimental charge state is to be considered as correct."
            MS_Phenyx_Trust_Parent_Charge,

            // "The turbo mode parameter in Phenyx."
            MS_Phenyx_Turbo,

            // "The maximal allowed fragment m/z error filter considered in the turbo mode of Phenyx."
            MS_Phenyx_Turbo_ErrorTol,

            // "The minimal peptide sequence coverage value, expressed in percent, considered in the turbo mode of Phenyx."
            MS_Phenyx_Turbo_Coverage,

            // "The list of ion series considered in the turbo mode of Phenyx."
            MS_Phenyx_Turbo_Series,

            // "The minimal number of residues for a peptide to be considered for a valid identification in Phenyx."
            MS_Phenyx_MinPepLength,

            // "The minimal peptide z-score for a peptide to be considered for a valid identification in Phenyx."
            MS_Phenyx_MinPepzscore,

            // "The maximal peptide p-value for a peptide to be considered for a valid identification in Phenyx."
            MS_Phenyx_MaxPepPvalue,

            // "The minimal protein score required for a protein database entry to be displayed in the list of identified proteins in Phenyx."
            MS_Phenyx_AC_Score,

            // "The parameter in Phenyx that specifies if the conflict resolution algorithm is to be used."
            MS_Phenyx_Conflict_Resolution,

            // "The primary sequence database identifier of a protein in Phenyx."
            MS_Phenyx_AC,

            // "A secondary sequence database identifier of a protein in Phenyx."
            MS_Phenyx_ID,

            // "The protein score of a protein match in Phenyx."
            MS_Phenyx_Score,

            // "First number of phenyx result \"#Peptides\"."
            MS_Phenyx_Peptides1,

            // "Second number of phenyx result \"#Peptides\"."
            MS_Phenyx_Peptides2,

            // "The value of the automatic peptide acceptance filter in Phenyx."
            MS_Phenyx_Auto,

            // "The value of the user-defined peptide acceptance filter in Phenyx."
            MS_Phenyx_User,

            // "The z-score value of a peptide sequence match in Phenyx."
            MS_Phenyx_Pepzscore,

            // "The p-value of a peptide sequence match in Phenyx."
            MS_Phenyx_PepPvalue,

            // "The number of missed cleavages of a peptide sequence in Phenyx."
            MS_Phenyx_NumberOfMC,

            // "The expression of the nature and position(s) of modified residue(s) on a matched peptide sequence in Phenyx."
            MS_Phenyx_Modif,

            // "Source file for this mzIdentML was in OMSSA csv file format."
            MS_OMSSA_csv_format,

            // "Source file for this mzIdentML was in OMSSA xml file format."
            MS_OMSSA_xml_format,

            // "Source file for this mzIdentML was in X!Tandem xml file format."
            MS_X__Tandem_xml_format,

            // "This subsection describes terms which can describe details of spectrum identification results."
            MS_spectrum_identification_result_details,

            // "Parameter information, type of product: internal yb ion."
            MS_param__internal_yb_ion,

            // "Parameter information, type of product: internal ya ion."
            MS_param__internal_ya_ion,

            // "Parameter information, type of product: z+1 ion."
            MS_param__z_1_ion,

            // "Parameter information, type of product: z+2 ion."
            MS_param__z_2_ion,

            // "The translation start codons used to translate the nucleotides to amino acids."
            MS_translation_start_codons,

            // "Specification of the search tolerance."
            MS_search_tolerance_specification,

            MS_search_tolerance_plus_value,

            MS_search_tolerance_minus_value,

            // "OBSOLETE: replaced by MS:1000797 (peak list scans): This term can hold the scans attribute from an MGF input file."
            MS_MGF_scans_OBSOLETE,

            // "OBSOLETE: replaced by MS:1000798 (peak list raw scans): This term can hold the raw scans attribute from an MGF input file."
            MS_MGF_raw_scans_OBSOLETE,

            // "OBSOLETE: replaced by MS:1000796 (spectrum title): Holds the spectrum title from different input file formats, e.g. MGF TITLE."
            MS_spectrum_title_OBSOLETE,

            // "SpectraST dot product of two spectra, measuring spectral similarity."
            MS_SpectraST_dot,

            // "SpectraST measure of how much of the dot product is dominated by a few peaks."
            MS_SpectraST_dot_bias,

            // "SpectraST spectrum score."
            MS_SpectraST_discriminant_score_F,

            // "SpectraST normalised difference between dot product of top hit and runner-up."
            MS_SpectraST_delta,

            // "Source file for this mzIdentML was in a pepXML file format."
            MS_pepXML_format,

            // "Source file for this mzIdentML was in protXML file format."
            MS_protXML_format,

            // "A URL that describes the translation table used to translate the nucleotides to amino acids."
            MS_translation_table_description,

            // "Name of the used method in the ProteinExtractor algorithm."
            MS_ProteinExtractor_Methodname,

            // "Flag indicating if a non redundant scoring should be generated."
            MS_ProteinExtractor_GenerateNonRedundant,

            // "Flag indicating if identified proteins should be included."
            MS_ProteinExtractor_IncludeIdentified,

            // "The maximum number of proteins to consider."
            MS_ProteinExtractor_MaxNumberOfProteins,

            // "The maximum considered mass for a protein."
            MS_ProteinExtractor_MaxProteinMass,

            // "The minimum number of proteins to consider."
            MS_ProteinExtractor_MinNumberOfPeptides,

            // "Flag indicating to include Mascot scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_UseMascot,

            // "Only peptides with scores higher than that threshold are taken into account in Mascot scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_MascotPeptideScoreThreshold,

            // "In the final result each protein must have at least one peptide above this Mascot score threshold in ProteinExtractor meta score calculation."
            MS_ProteinExtractor_MascotUniqueScore,

            MS_ProteinExtractor_MascotUseIdentityScore,

            // "Influence of Mascot search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor."
            MS_ProteinExtractor_MascotWeighting,

            // "Flag indicating to include SEQUEST scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_UseSequest,

            // "Only peptides with scores higher than that threshold are taken into account in SEQUEST scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_SequestPeptideScoreThreshold,

            // "In the final result each protein must have at least one peptide above this SEQUEST score threshold in ProteinExtractor meta score calculation."
            MS_ProteinExtractor_SequestUniqueScore,

            // "Influence of SEQUEST search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor."
            MS_ProteinExtractor_SequestWeighting,

            // "Flag indicating to include ProteinSolver scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_UseProteinSolver,

            // "Only peptides with scores higher than that threshold are taken into account in ProteinSolver scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold,

            // "In the final result each protein must have at least one peptide above this ProteinSolver score threshold in ProteinExtractor meta score calculation."
            MS_ProteinExtractor_ProteinSolverUniqueScore,

            // "Influence of ProteinSolver search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor."
            MS_ProteinExtractor_ProteinSolverWeighting,

            // "Flag indicating to include Phenyx scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_UsePhenyx,

            // "Only peptides with scores higher than that threshold are taken into account in Phenyx scoring for calculation of the ProteinExtractor meta score."
            MS_ProteinExtractor_PhenyxPeptideScoreThreshold,

            // "In the final result each protein must have at least one peptide above this Phenyx score threshold in ProteinExtractor meta score calculation."
            MS_ProteinExtractor_PhenyxUniqueScore,

            // "Influence of Phenyx search engine in the process of merging the search engine specific protein lists into the global protein list of ProteinExtractor."
            MS_ProteinExtractor_PhenyxWeighting,

            // "False-discovery rate threshold for proteins."
            MS_prot_FDR_threshold,

            // "False-discovery rate threshold for peptides."
            MS_pep_FDR_threshold,

            // "Threshold for OMSSA e-value for quality estimation."
            MS_OMSSA_e_value_threshold,

            // "Details of decoy generation and database structure."
            MS_decoy_DB_details,

            // "Name of algorithm used for decoy generation."
            MS_decoy_DB_generation_algorithm,

            // "Decoy type: Amino acids of protein sequences are used in a random order."
            MS_decoy_DB_type_shuffle,

            // "Decoy database composition: database contains only decoy entries."
            MS_DB_composition_only_decoy,

            // "Decoy entries are generated during the search, not explicitly stored in a database (like Mascot Decoy)."
            MS_quality_estimation_with_implicite_decoy_sequences,

            // "Acquisition software."
            MS_acquisition_software,

            // "Analysis software."
            MS_analysis_software,

            // "Data processing software."
            MS_data_processing_software,

            // "Vocabularies describing the spectrum generation information."
            MS_spectrum_generation_information,

            // "Format of data files."
            MS_file_format,

            // "This term should be given if the modification was unknown."
            MS_unknown_modification,

            // "Greylag identification software."
            MS_greylag,

            // "The sequence database was stored in the PEFF (PSI enhanced FastA file) format."
            MS_PEFF_format,

            // "Phenyx open XML file format."
            MS_Phenyx_XML_format,

            // "DTASelect file format."
            MS_DTASelect_format,

            // "MS2 file format for MS2 spectral data."
            MS_MS2_format,

            // "This term is used if a NCBI TaxID is specified, e.g. 9606 for Homo sapiens."
            MS_taxonomy__NCBI_TaxID,

            // "This term is used if a common name is specified, e.g. human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible."
            MS_taxonomy__common_name,

            // "This term is used if a scientific name is specified, e.g. Homo sapiens. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible."
            MS_taxonomy__scientific_name,

            // "This term is used if a swiss prot taxonomy id is specified, e.g. Human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible."
            MS_taxonomy__Swiss_Prot_ID,

            // "The children of this term can be used to describe modifications."
            MS_peptide_modification_details,

            // "Chromatogram created by creating an array of the measurements of a selectively monitored ion at each time point."
            MS_selected_ion_monitoring_chromatogram,

            // "Chromatogram created by creating an array of the measurements of a selectively monitored reaction at each time point."
            MS_selected_reaction_monitoring_chromatogram,

            // "OBSOLETE Chromatogram created by creating an array of the measurements of a series of monitored reactions at each time point."
            MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE,

            // "Open Mass Spectrometry Search Algorithm was used to analyze the spectra."
            MS_OMSSA,

            // "X!Tandem was used to analyze the spectra."
            MS_X__Tandem,

            // "SpectraST was used to analyze the spectra."
            MS_SpectraST,

            // "Mascot Parser was used to analyze the spectra."
            MS_Mascot_Parser,

            // "Sequence of zero or more non-zero ASCII characters terminated by a single null (0) byte."
            MS_null_terminated_ASCII_string,

            // "Native format defined by jobRun=xsd:nonNegativeInteger spotLabel=xsd:string spectrum=xsd:nonNegativeInteger."
            MS_AB_SCIEX_TOF_TOF_nativeID_format,

            // "Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument database."
            MS_AB_SCIEX_TOF_TOF_database,

            // "AB SCIEX or Applied Biosystems|MDS Analytical Technologies AB SCIEX TOF/TOF 5800 Analyzer."
            MS_TOF_TOF_5800,

            // "AB SCIEX or Applied Biosystems software for TOF/TOF data acquisition and analysis."
            MS_AB_SCIEX_TOF_TOF_Series_Explorer_Software,

            // "Normalization of data point intensities."
            MS_intensity_normalization,

            // "Calibration of data point m/z positions."
            MS_m_z_calibration,

            // "Filtering out part of the data."
            MS_data_filtering,

            // "An algorithm for protein determination/assembly integrated into Bruker's ProteinScape."
            MS_ProteinExtractor,

            // "Mascot Distiller."
            MS_Mascot_Distiller,

            // "Mascot Integra."
            MS_Mascot_Integra,

            // "Percolator."
            MS_Percolator,

            // "Percolator:Q value."
            MS_percolator_Q_value,

            // "Percolator:score."
            MS_percolator_score,

            // "Posterior error probability."
            MS_percolator_PEP,

            // "In case no threshold was used."
            MS_no_threshold,

            // "The SearchResultId of this peptide as SearchResult in the ProteinScape database."
            MS_ProteinScape_SearchResultId,

            // "The SearchEventId of the SearchEvent in the ProteinScape database."
            MS_ProteinScape_SearchEventId,

            // "The Profound probability score stored by ProteinScape."
            MS_ProteinScape_ProfoundProbability,

            // "The Profound z value."
            MS_Profound_z_value,

            // "The Profound cluster score."
            MS_Profound_Cluster,

            // "The Profound cluster rank."
            MS_Profound_ClusterRank,

            // "The MSFit Mowse score."
            MS_MSFit_Mowse_score,

            // "The Sonar score."
            MS_Sonar_Score,

            // "The ProteinSolver exp value stored by ProteinScape."
            MS_ProteinScape_PFFSolverExp,

            // "The ProteinSolver score stored by ProteinScape."
            MS_ProteinScape_PFFSolverScore,

            // "The intensity coverage of the identified peaks in the spectrum calculated by ProteinScape."
            MS_ProteinScape_IntensityCoverage,

            // "The SEQUEST meta score calculated by ProteinScape from the original SEQUEST scores."
            MS_ProteinScape_SequestMetaScore,

            // "The score calculated by ProteinExtractor."
            MS_ProteinExtractor_Score,

            // "Native format defined by scanId=xsd:nonNegativeInteger."
            MS_Agilent_MassHunter_nativeID_format,

            // "A data file format found in an Agilent MassHunter directory which contains raw data acquired by an Agilent mass spectrometer."
            MS_Agilent_MassHunter_format,

            // "TSQ Vantage."
            MS_TSQ_Vantage,

            // "Filter types which are used to filter a sequence database."
            MS_Sequence_database_filter_types,

            // "Sequence database filters which actually can contains values, e.g. to limit PI value of the sequences used to search."
            MS_Sequence_database_filters,

            // "DB sequence filter pattern."
            MS_DB_sequence_filter_pattern,

            // "DB accession filter string."
            MS_DB_accession_filter_string,

            // "Fragmentation information, type of product: c ion without water."
            MS_frag__c_ion___H2O,

            // "Fragmentation information, type of product: c ion without ammonia."
            MS_frag__c_ion___NH3,

            // "Fragmentation information, type of product: z ion without water."
            MS_frag__z_ion___H2O,

            // "Fragmentation information, type of product: z ion without ammonia."
            MS_frag__z_ion___NH3,

            // "Fragmentation information, type of product: x ion without water."
            MS_frag__x_ion___H2O,

            // "Fragmentation information, type of product: x ion without ammonia."
            MS_frag__x_ion___NH3,

            // "Fragmentation information, type of product: precursor ion without water."
            MS_frag__precursor_ion___H2O,

            // "Fragmentation information, type of product: precursor ion without ammonia."
            MS_frag__precursor_ion___NH3,

            // "Fragmentation information, type of product: precursor ion."
            MS_frag__precursor_ion,

            // "This term can describe a neutral loss m/z value that is lost from an ion."
            MS_fragment_neutral_loss,

            // "This term can describe a neutral loss m/z value that is lost from an ion."
            MS_precursor_neutral_loss,

            // "Native format defined by databasekey=xsd:long."
            MS_spectrum_from_database_integer_nativeID_format,

            // "Spectra from Bruker/Protagen Proteinscape database."
            MS_Proteinscape_spectra,

            // "Native format defined by query=xsd:nonNegativeInteger."
            MS_Mascot_query_number,

            // "Child-terms contain information to map the results back to spectra."
            MS_spectra_data_details,

            // "Native format defined by mzMLid=xsd:IDREF."
            MS_mzML_unique_identifier,

            // "Native format defined by databasekey=xsd:long."
            MS_spectrum_from_ProteinScape_database_nativeID_format,

            // "Native format defined by databasekey=xsd:string."
            MS_spectrum_from_database_string_nativeID_format,

            // "Bruker Daltonics' esquire series."
            MS_Bruker_Daltonics_esquire_series,

            // "Bruker Daltonics' flex series."
            MS_Bruker_Daltonics_flex_series,

            // "Bruker Daltonics' BioTOF series."
            MS_Bruker_Daltonics_BioTOF_series,

            // "Bruker Daltonics' micrOTOF series."
            MS_Bruker_Daltonics_micrOTOF_series,

            // "Bruker Daltonics' BioTOF: ESI TOF."
            MS_BioTOF,

            // "Bruker Daltonics' BioTOF III: ESI TOF."
            MS_BioTOF_III,

            // "Bruker Daltonics' UltroTOF-Q: ESI Q-TOF (MALDI optional)."
            MS_UltroTOF_Q,

            // "Bruker Daltonics' micrOTOF II: ESI TOF, Nanospray, APCI, APPI."
            MS_micrOTOF_II,

            // "Bruker Daltonics' maXis: ESI Q-TOF, Nanospray, APCI, APPI."
            MS_maXis,

            // "Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR."
            MS_amaZon_ETD,

            // "Bruker Daltonics' microflex LRF: MALDI TOF."
            MS_microflex_LRF,

            // "Bruker Daltonics' ultrafleXtreme: MALDI TOF."
            MS_ultrafleXtreme,

            // "Bruker Daltonics' amaZon series."
            MS_Bruker_Daltonics_amaZon_series,

            // "Bruker Daltonics' amaZon X: ESI quadrupole ion trap, APCI, APPI, ETD, PTR."
            MS_amaZon_X,

            // "Bruker Daltonics' maXis series."
            MS_Bruker_Daltonics_maXis_series,

            // "Bruker Daltonics' solarix: ESI quadrupole ion trap, APCI, APPI, ETD, PTR."
            MS_Bruker_Daltonics_solarix_series,

            // "Bruker Daltonics' solariX: ESI, MALDI, Qh-FT_ICR."
            MS_solariX,

            // "Bruker Daltonics' microflex II: MALDI TOF."
            MS_microflex_II,

            // "Bruker Daltonics' autoflex II TOF/TOF: MALDI TOF."
            MS_autoflex_II_TOF_TOF,

            // "Bruker Daltonics' autoflex III TOF/TOF smartbeam: MALDI TOF."
            MS_autoflex_III_TOF_TOF_smartbeam,

            // "Bruker Daltonics' autoflex: MALDI TOF."
            MS_autoflex,

            // "Bruker Daltonics' apex series."
            MS_Bruker_Daltonics_apex_series,

            // "Shimadzu Corporation software."
            MS_Shimadzu_Corporation_software,

            // "Shimadzu Biotech software for data acquisition, processing, and analysis."
            MS_MALDI_Solutions,

            // "Native format defined by file=xsd:IDREF."
            MS_AB_SCIEX_TOF_TOF_T2D_nativeID_format,

            // "Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument export format."
            MS_AB_SCIEX_TOF_TOF_T2D_format,

            // "Scaffold analysis software."
            MS_Scaffold,

            // "Scaffold native ID format."
            MS_Scaffold_nativeID_format,

            // "Source file for this mzIdentML was in SEQUEST SQT format."
            MS_SEQUEST_SQT_format,

            // "Source file for this mzIdentML was in Thermo Scientific Discoverer MSF format."
            MS_Discoverer_MSF_format,

            // "Source file for this mzIdentML was in Waters IdentityE XML format."
            MS_IdentityE_XML_format,

            // "Source file for this mzIdentML was in Waters ProteinLynx XML format."
            MS_ProteinLynx_XML_format,

            // "Source file for this mzIdentML was in Agilent SpectrumMill directory format."
            MS_SpectrumMill_directories,

            // "Scaffold peptide probability score."
            MS_Scaffold_Peptide_Probability,

            // "Waters IdentityE peptide score."
            MS_IdentityE_Score,

            // "ProteinLynx log likelihood score."
            MS_ProteinLynx_Log_Likelihood,

            // "Waters ProteinLynx Ladder score."
            MS_ProteinLynx_Ladder_Score,

            // "Spectrum mill peptide score."
            MS_SpectrumMill_Score,

            // "SpectrumMill SPI score (%)."
            MS_SpectrumMill_SPI,

            // "Flag indicating to report only the spectra assigned to identified proteins."
            MS_report_only_spectra_assigned_to_identified_proteins,

            // "Minimum number of peptides a protein must have to be accepted."
            MS_Scaffold__Minimum_Peptide_Count,

            // "Minimum protein probability a protein must have to be accepted."
            MS_Scaffold__Minimum_Protein_Probability,

            // "Minimum probability a peptide must have to be accepted for protein scoring."
            MS_Scaffold__Minimum_Peptide_Probability,

            // "Minimum number of enzymatic termini a peptide must have to be accepted."
            MS_minimum_number_of_enzymatic_termini,

            // "Scaffold protein probability score."
            MS_Scaffold_Protein_Probability,

            // "Discriminant score from Agilent SpectrumMill software."
            MS_SpectrumMill_Discriminant_Score,

            // "The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion."
            MS_FAIMS_compensation_voltage,

            // "Bioconductor package XCMS for preprocessing high-throughput, untargeted analyte profiling data."
            MS_XCMS,

            // "MaxQuant is a quantitative proteomics software package designed for analyzing large mass spectrometric data sets. It is specifically aimed at high resolution MS data."
            MS_MaxQuant,

            // "Search that includes data from Peptide Mass Fingerprint (PMF) and MS2 (aka Peptide Fragment Fingerprint - PFF)."
            MS_combined_pmf___ms_ms_search,

            // "Tabb Lab software for directly comparing peptides in a database to tandem mass spectra."
            MS_MyriMatch,

            // "Tabb Lab software for generating sequence tags from tandem mass spectra."
            MS_DirecTag,

            // "Tabb Lab software for reconciling sequence tags to a protein database."
            MS_TagRecon,

            // "Tabb Lab software for spectral library searches on tandem mass spectra."
            MS_Pepitome,

            // "Using the multivariate hypergeometric distribution and a peak list divided into several intensity classes, this score is the negative natural log probability that the predicted peaks matched to experimental peaks by random chance."
            MS_MyriMatch_MVH,

            // "The negative natural log probability that predicted peaks match to experimental peaks by random chance by scoring the m/z delta of the matches in a multinomial distribution."
            MS_MyriMatch_mzFidelity,

            // "A representative protein selected from a set of sequence same-set or spectrum same-set proteins."
            MS_anchor_protein,

            // "A protein with significant homology to another protein, but some distinguishing peptide matches."
            MS_family_member_protein,

            // "TO ENDETAIL: a really generic relationship OR ortholog protein."
            MS_group_member_with_undefined_relationship_OR_ortholog_protein,

            // "A protein which is indistinguishable or equivalent to another protein, having matches to an identical set of peptide sequences."
            MS_sequence_same_set_protein,

            // "A protein which is indistinguishable or equivalent to another protein, having matches to a set of peptide sequences that cannot be distinguished using the evidence in the mass spectra."
            MS_spectrum_same_set_protein,

            // "A protein with a sub-set of the peptide sequence matches for another protein, and no distinguishing peptide matches."
            MS_sequence_sub_set_protein,

            // "A protein with a sub-set of the matched spectra for another protein, where the matches cannot be distinguished using the evidence in the mass spectra, and no distinguishing peptide matches."
            MS_spectrum_sub_set_protein,

            // "A sequence same-set or sequence sub-set protein where the matches are distributed across two or more proteins."
            MS_sequence_subsumable_protein,

            // "A spectrum same-set or spectrum sub-set protein where the matches are distributed across two or more proteins."
            MS_spectrum_subsumable_protein,

            // "Confidence category of inferred protein (conclusive, non conclusive, ambiguous group or indistinguishable)."
            MS_protein_inference_confidence_category,

            // "OBSOLETE Name and location of the .raw file or files."
            MS_ProteomeDiscoverer_Spectrum_Files_Raw_File_names_OBSOLETE,

            // "OBSOLETE Path and name of the .srf (SEQUEST Result Format) file."
            MS_ProteomeDiscoverer_SRF_File_Selector_SRF_File_Path_OBSOLETE,

            // "OBSOLETE Ionization source (electro-, nano-, thermospray, electron impact, APCI, MALDI, FAB etc)."
            MS_ProteomeDiscoverer_Spectrum_Selector_Ionization_Source_OBSOLETE,

            // "OBSOLETE Fragmentation method used (CID, MPD, ECD, PQD, ETD, HCD, Any)."
            MS_ProteomeDiscoverer_Activation_Type_OBSOLETE,

            // "Lower retention-time limit."
            MS_ProteomeDiscoverer_Spectrum_Selector_Lower_RT_Limit,

            // "OBSOLETE Type of mass spectrometer used (ITMS, FTMS, TOFMS, SQMS, TQMS, SectorMS)."
            MS_ProteomeDiscoverer_Mass_Analyzer_OBSOLETE,

            // "Maximum mass limit of a singly charged precursor ion."
            MS_ProteomeDiscoverer_Max_Precursor_Mass,

            // "Minimum mass limit of a singly charged precursor ion."
            MS_ProteomeDiscoverer_Min_Precursor_Mass,

            // "Minimum number of peaks in a tandem mass spectrum that is allowed to pass the filter and to be subjected to further processing in the workflow."
            MS_ProteomeDiscoverer_Spectrum_Selector_Minimum_Peak_Count,

            // "OBSOLETE Level of the mass spectrum (MS2 ... MS10)."
            MS_ProteomeDiscoverer_MS_Order_OBSOLETE,

            // "OBSOLETE Polarity mode (positive or negative)."
            MS_ProteomeDiscoverer_Polarity_Mode_OBSOLETE,

            // "Determines which precursor mass to use for a given MSn scan. This option applies only to higher-order MSn scans (n >= 3)."
            MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Selection,

            // "Signal-to-Noise ratio below which peaks are removed."
            MS_ProteomeDiscoverer_SN_Threshold,

            // "OBSOLETE Scan type for the precursor ion (full, Single Ion Monitoring (SIM), Single Reaction Monitoring (SRM))."
            MS_ProteomeDiscoverer_Scan_Type_OBSOLETE,

            // "Used to filter out tandem mass spectra that have a total intensity current(sum of the intensities of all peaks in a spectrum) below the specified value."
            MS_ProteomeDiscoverer_Spectrum_Selector_Total_Intensity_Threshold,

            // "Specifies the fragmentation method to use in the search algorithm if it is not included in the scan header."
            MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Activation_Type_Replacements,

            // "Specifies the charge state of the precursor ions, if it is not defined in the scan header."
            MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Charge_Replacements,

            // "Specifies the mass spectrometer to use to produce the spectra, if it is not included in the scan header."
            MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Mass_Analyzer_Replacements,

            // "Specifies the MS scan order used to produce the product spectra, if it is not included in the scan header."
            MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_MS_Order_Replacements,

            // "Specifies the polarity of the ions monitored if it is not included in the scan header."
            MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Polarity_Replacements,

            // "Upper retention-time limit."
            MS_ProteomeDiscoverer_Spectrum_Selector_Upper_RT_Limit,

            // "Specifies the size of the mass-to-charge ratio (m/z) window in daltons used to remove precursors."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Mass_Window_Offset,

            // "Maximum allowed mass of a neutral loss."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Maximum_Neutral_Loss_Mass,

            // "Determines whether the charge-reduced precursor peaks found in an ETD or ECD spectrum are removed."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Charge_Reduced_Precursor,

            // "Determines whether neutral loss peaks are removed from ETD and ECD spectra."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Neutral_Loss_Peaks,

            // "Determines whether overtone peaks are removed from LTQ FT or LTQ FT Ultra ECD spectra."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Only_Known_Masses,

            // "Determines whether precursor overtone peaks in the spectrum are removed from the input spectrum."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Overtones,

            // "Determines whether precursor artifact peaks from the MS2 input spectra are removed."
            MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Peak,

            // "Determines whether the fragment spectrum for scans with the same precursor mass is grouped, regardless of mass analyzer and activation type."
            MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_Mass_Analyzer_Mismatch,

            // "Determines whether spectra from different MS order scans can be grouped together."
            MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_MS_Order_Mismatch,

            // "OBSOLETE Chromatographic window where precursors to be grouped must reside to be considered the same species."
            MS_ProteomeDiscoverer_Spectrum_Grouper_Max_RT_Difference_OBSOLETE,

            // "Groups spectra measured within the given mass and retention-time tolerances into a single spectrum for analysis."
            MS_ProteomeDiscoverer_Spectrum_Grouper_Precursor_Mass_Criterion,

            // "Highest charge state that is allowed for the deconvolution of multiply charged data."
            MS_ProteomeDiscoverer_Xtract_Highest_Charge,

            // "OBSOLETE Highest mass-to-charge (mz) value for spectral peaks in the measured spectrum that are considered for Xtract."
            MS_ProteomeDiscoverer_Xtract_Highest_MZ_OBSOLETE,

            // "Lowest charge state that is allowed for the deconvolution of multiply charged data."
            MS_ProteomeDiscoverer_Xtract_Lowest_Charge,

            // "OBSOLETE Lowest mass-to-charge (mz) value for spectral peaks in the measured spectrum that are considered for Xtract."
            MS_ProteomeDiscoverer_Xtract_Lowest_MZ_OBSOLETE,

            // "Determines whether the isotopic pattern, i.e. all isotopes of a mass are removed from the spectrum."
            MS_ProteomeDiscoverer_Xtract_Monoisotopic_Mass_Only,

            // "Fraction of the more abundant peak that an overlapping multiplet must exceed in order to be processed (deconvoluted)."
            MS_ProteomeDiscoverer_Xtract_Overlapping_Remainder,

            // "Accuracy required for a pattern fit to be considered valid."
            MS_ProteomeDiscoverer_Xtract_Required_Fitting_Accuracy,

            // "Resolution at mass 400."
            MS_ProteomeDiscoverer_Xtract_Resolution_At_400,

            // "Minimum charge state below which peptides are filtered out."
            MS_ProteomeDiscoverer_Lowest_Charge_State,

            // "Maximum charge above which peptides are filtered out."
            MS_ProteomeDiscoverer_Highest_Charge_State,

            // "Determines whether spectra with scores above the threshold score are retained rather than filtered out."
            MS_ProteomeDiscoverer_Spectrum_Score_Filter_Let_Pass_Above_Scores,

            // "Determine dynamic post-translational modifications (PTMs)."
            MS_ProteomeDiscoverer_Dynamic_Modification,

            // "Static Modification to all occurrences of a named amino acid."
            MS_ProteomeDiscoverer_Static_Modification,

            // "OBSOLETE Determines whether the Proteome Discoverer application searches an additional decoy database."
            MS_ProteomeDiscoverer_Mascot_Decoy_Search_OBSOLETE,

            // "Determines whether to search error-tolerant."
            MS_ProteomeDiscoverer_Mascot_Error_tolerant_Search,

            // "Maximum size of the .mgf (Mascot Generic Format) file in MByte."
            MS_ProteomeDiscoverer_Mascot_Max_MGF_File_Size,

            // "URL (Uniform resource Locator) of the Mascot server."
            MS_ProteomeDiscoverer_Mascot_Mascot_Server_URL,

            // "Number of attempts to submit the Mascot search."
            MS_ProteomeDiscoverer_Mascot_Number_of_attempts_to_submit_the_search,

            // "Number of attempts to submit the Mascot search."
            MS_ProteomeDiscoverer_Mascot_X_Static_Modification,

            // "OBSOLETE Name of the user submitting the Mascot search."
            MS_ProteomeDiscoverer_Mascot_User_Name_OBSOLETE,

            // "Time interval between attempts to submit a search in seconds."
            MS_ProteomeDiscoverer_Mascot_Time_interval_between_attempts_to_submit_a_search,

            // "OBSOLETE Specifies the enzyme reagent used for protein digestion."
            MS_ProteomeDiscoverer_Enzyme_Name_OBSOLETE,

            // "OBSOLETE Mass tolerance used for matching fragment peaks in Da or mmu."
            MS_ProteomeDiscoverer_Fragment_Mass_Tolerance_OBSOLETE,

            // "Type of instrument used to acquire the data in the raw file."
            MS_Mascot_Instrument,

            // "Maximum number of missed cleavage sites to consider during the digest."
            MS_ProteomeDiscoverer_Maximum_Missed_Cleavage_Sites,

            // "Minimum score in the IonScore column that each peptide must exceed in order to be reported."
            MS_ProteomeDiscoverer_Mascot_Peptide_CutOff_Score,

            // "OBSOLETE Mass window for which precursor ions are considered to be the same species."
            MS_ProteomeDiscoverer_Precursor_Mass_Tolerance_OBSOLETE,

            // "Minimum protein score in the IonScore column that each protein must exceed in order to be reported."
            MS_ProteomeDiscoverer_Mascot_Protein_CutOff_Score,

            // "OBSOLETE Database to use in the search (configured on the Mascot server)."
            MS_ProteomeDiscoverer_Protein_Database_OBSOLETE,

            // "Specifies a factor that is used in calculating a threshold that determines whether a protein appears in the results report."
            MS_ProteomeDiscoverer_Mascot_Protein_Relevance_Factor,

            // "Specifies the relaxed target false discovery rate (FDR, 0.0 - 1.0) for peptide hits with moderate confidence."
            MS_ProteomeDiscoverer_Target_FDR_Relaxed,

            // "Specifies the strict target false discovery rate (FDR, 0.0 - 1.0) for peptide hits with high confidence."
            MS_ProteomeDiscoverer_Target_FDR_Strict,

            // "OBSOLETE Limits searches to entries from a particular species or group of species."
            MS_ProteomeDiscoverer_Mascot_Taxonomy_OBSOLETE,

            // "OBSOLETE Use average mass for the precursor."
            MS_ProteomeDiscoverer_Use_Average_Precursor_Mass_OBSOLETE,

            // "OBSOLETE Determines whether to use MudPIT or normal scoring."
            MS_Mascot_use_MudPIT_scoring_OBSOLETE,

            // "Minimum cross-correlation threshold that determines whether peptides in an .srf file are imported."
            MS_ProteomeDiscoverer_Absolute_XCorr_Threshold,

            // "Determines whether to calculate a probability score for every peptide match."
            MS_ProteomeDiscoverer_SEQUEST_Calculate_Probability_Score,

            // "Dynamic C-terminal modification that is used during the search."
            MS_ProteomeDiscoverer_SEQUEST_CTerminal_Modification,

            // "Percentage of the theoretical ions that must be found in order for a peptide to be scored and retained."
            MS_ProteomeDiscoverer_SEQUEST_Fragment_Ion_Cutoff_Percentage,

            // "Maximum number of identical modifications that a single peptide can have."
            MS_ProteomeDiscoverer_SEQUEST_Max_Identical_Modifications_Per_Peptide,

            // "Maximum number of different modifications that a peptide can have, e.g. because of steric hindrance."
            MS_ProteomeDiscoverer_Max_Modifications_Per_Peptide,

            // "Maximum number of peptides that are searched and scored per spectrum."
            MS_ProteomeDiscoverer_SEQUEST_Maximum_Peptides_Considered,

            // "Maximum number of peptide matches reported per spectrum."
            MS_ProteomeDiscoverer_Maximum_Peptides_Output,

            // "Maximum number of proteins that a single identified peptide can be associated with during protein assembly."
            MS_ProteomeDiscoverer_Maximum_Protein_References_Per_Peptide,

            // "Dynamic N-terminal modification that is used during the search."
            MS_ProteomeDiscoverer_SEQUEST_NTerminal_Modification,

            // "Static modification for the C terminal of the peptide used during the search."
            MS_ProteomeDiscoverer_Peptide_CTerminus,

            // "Static modification for the N terminal of the peptide used during the search."
            MS_ProteomeDiscoverer_Peptide_NTerminus,

            // "Specifies a factor to apply to the protein score."
            MS_ProteomeDiscoverer_SEQUEST_Peptide_Relevance_Factor,

            // "Specifies a peptide threshold that determines whether the protein that it is a part of is scored and retained in the report."
            MS_ProteomeDiscoverer_Protein_Relevance_Threshold,

            // "OBSOLETE Determines whether the Proteome Discoverer application searches against a decoy database."
            MS_ProteomeDiscoverer_Search_Against_Decoy_Database_OBSOLETE,

            // "Use average masses for the fragments."
            MS_ProteomeDiscoverer_SEQUEST_Use_Average_Fragment_Masses,

            // "Determines whether a ions with neutral loss are used for spectrum matching."
            MS_ProteomeDiscoverer_Use_Neutral_Loss_a_Ions,

            // "Determines whether b ions with neutral loss are used for spectrum matching."
            MS_ProteomeDiscoverer_Use_Neutral_Loss_b_Ions,

            // "Determines whether y ions with neutral loss are used for spectrum matching."
            MS_ProteomeDiscoverer_Use_Neutral_Loss_y_Ions,

            // "Determines whether z ions with neutral loss are used for spectrum matching."
            MS_ProteomeDiscoverer_Use_Neutral_Loss_z_Ions,

            // "Uses a ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_a_Ions,

            // "Uses b ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_b_Ions,

            // "Uses c ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_c_Ions,

            // "Uses c ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_d_Ions,

            // "Uses c ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_v_Ions,

            // "Uses c ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_w_Ions,

            // "Uses x ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_x_Ions,

            // "Uses y ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_y_Ions,

            // "Uses z ions for spectrum matching with this relative factor."
            MS_ProteomeDiscoverer_SEQUEST_Weight_of_z_Ions,

            // "Sets a minimum protein score that each protein must exceed in order to be reported."
            MS_ProteomeDiscoverer_ZCore_Protein_Score_Cutoff,

            // "Specifies which peak to select if more than one peak is found inside the integration window."
            MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Method,

            // "Specifies the mass-to-charge window that enables one to look for the reporter peaks."
            MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Window_Tolerance,

            // "Quantitation method for isobarically labeled quantitation."
            MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Quantitation_Method,

            // "OBSOLETE Format of the exported spectra (dta, mgf or mzData)."
            MS_ProteomeDiscoverer_Spectrum_Exporter_Export_Format_OBSOLETE,

            // "Name of the output file that contains the exported data."
            MS_ProteomeDiscoverer_Spectrum_Exporter_File_name,

            // "Influences the modifications search."
            MS_ProteomeDiscoverer_Search_Modifications_Only_For_Identified_Proteins,

            // "Standard high confidence XCorr parameter for charge = 1."
            MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge1,

            // "Standard high confidence XCorr parameter for charge = 2."
            MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge2,

            // "Standard high confidence XCorr parameter for charge = 3."
            MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge3,

            // "Standard high confidence XCorr parameter for charge >= 4."
            MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge4,

            // "Standard medium confidence XCorr parameter for charge = 1."
            MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge1,

            // "Standard medium confidence XCorr parameter for charge = 2."
            MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge2,

            // "Standard medium confidence XCorr parameter for charge = 3."
            MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge3,

            // "Standard medium confidence XCorr parameter for charge >= 4."
            MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge4,

            // "FT high confidence XCorr parameter for charge = 1."
            MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge1,

            // "FT high confidence XCorr parameter for charge = 2."
            MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge2,

            // "FT high confidence XCorr parameter for charge = 3."
            MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge3,

            // "FT high confidence XCorr parameter for charge >= 4."
            MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge4,

            // "FT medium confidence XCorr parameter for charge = 1."
            MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge1,

            // "FT medium confidence XCorr parameter for charge = 2."
            MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge2,

            // "FT medium confidence XCorr parameter for charge = 3."
            MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge3,

            // "FT medium confidence XCorr parameter for charge >= 4."
            MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge4,

            // "OBSOLETE ProteomeDiscoverer's 1st dynamic post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_1__Dynamic_Modification_OBSOLETE,

            // "OBSOLETE ProteomeDiscoverer's 2nd dynamic post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_2__Dynamic_Modification_OBSOLETE,

            // "OBSOLETE ProteomeDiscoverer's 3rd dynamic post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_3__Dynamic_Modification_OBSOLETE,

            // "OBSOLETE ProteomeDiscoverer's 4th dynamic post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_4__Dynamic_Modification_OBSOLETE,

            // "Static Modification for X."
            MS_ProteomeDiscoverer_Static_Modification_for_X,

            // "Minimal initial peptide probability to contribute to analysis."
            MS_ProteomeDiscoverer_Initial_minimal_peptide_probability,

            // "Minimum adjusted peptide probability contributing to protein probability."
            MS_ProteomeDiscoverer_Minimal_peptide_probability,

            // "Minimum peptide weight contributing to protein probability."
            MS_ProteomeDiscoverer_Minimal_peptide_weight,

            // "Number of spectra from 1+ precursor ions."
            MS_ProteomeDiscoverer_Number_of_input1_spectra,

            // "Number of spectra from 2+ precursor ions."
            MS_ProteomeDiscoverer_Number_of_input2_spectra,

            // "Number of spectra from 3+ precursor ions."
            MS_ProteomeDiscoverer_Number_of_input3_spectra,

            // "Number of spectra from 4+ precursor ions."
            MS_ProteomeDiscoverer_Number_of_input4_spectra,

            // "Number of spectra from 5+ precursor ions."
            MS_ProteomeDiscoverer_Number_of_input5_spectra,

            // "Total number of predicted correct protein ids (sum of probabilities)."
            MS_ProteomeDiscoverer_Number_of_predicted_correct_proteins,

            // "OBSOLETE Sample organism (used for annotation purposes)."
            MS_ProteomeDiscoverer_Organism_OBSOLETE,

            // "OBSOLETE Full path database name."
            MS_ProteomeDiscoverer_Reference_Database_OBSOLETE,

            // "Residues considered equivalent when comparing peptides."
            MS_ProteomeDiscoverer_Residue_substitution_list,

            // "OBSOLETE File type (if not pepXML)."
            MS_ProteomeDiscoverer_Source_file_extension_OBSOLETE,

            // "OBSOLETE Input pepXML files."
            MS_ProteomeDiscoverer_Source_Files_OBSOLETE,

            // "OBSOLETE Input pepXML files (old)."
            MS_ProteomeDiscoverer_Source_Files_old_OBSOLETE,

            // "Windows full path for database."
            MS_ProteomeDiscoverer_WinCyg_reference_database,

            // "Windows pepXML file names."
            MS_ProteomeDiscoverer_WinCyg_source_files,

            // "Finnigan LTQ Orbitrap Velos MS."
            MS_LTQ_Orbitrap_Velos,

            // "Determines if to use A ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_A_Ions,

            // "Determines if to use B ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_B_Ions,

            // "Determines if to use C ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_C_Ions,

            // "Determines if to use D ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_D_Ions,

            // "Determines if to use V ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_V_Ions,

            // "Determines if to use W ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_W_Ions,

            // "Determines if to use X ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_X_Ions,

            // "Determines if to use Y ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_Y_Ions,

            // "Determines if to use z ions for spectrum matching."
            MS_ProteomeDiscoverer_Mascot_Weight_of_Z_Ions,

            // "Determines if to use precursor reevaluation."
            MS_ProteomeDiscoverer_Spectrum_Selector_Use_New_Precursor_Reevaluation,

            // "Signal-to-Noise ratio below which peaks are removed (in FT mode only)."
            MS_ProteomeDiscoverer_Spectrum_Selector_SN_Threshold_FTonly,

            // "Unknown Mascot parameter which ProteomeDiscoverer uses for mascot searches."
            MS_ProteomeDiscoverer_Mascot_Please_Do_not_Touch_this,

            // "Phone number of the contact person or organization."
            MS_contact_phone_number,

            // "Fax number for the contact person or organization."
            MS_contact_fax_number,

            // "Toll-free phone number of the contact person or organization."
            MS_contact_toll_free_phone_number,

            // "Significance threshold type used in Mascot reporting (either 'identity' or 'homology')."
            MS_Mascot_SigThresholdType,

            // "Strategy used by Mascot to group proteins with same peptide matches (one of 'none', 'Occam's razor' or 'family clustering')."
            MS_Mascot_ProteinGrouping,

            // "List of Percolator features that were used in processing the peptide matches. Typical Percolator features are 'retentionTime', 'dM', 'mScore', 'lgDScore', 'mrCalc', 'charge' and 'dMppm'."
            MS_Percolator_features,

            // "Waters LC-system ACQUITY UPLC."
            MS_ACQUITY_UPLC,

            // "Waters LC-system ACQUITY UPLC H-Class."
            MS_ACQUITY_UPLC_H_Class,

            // "Waters LC-system ACQUITY UPLC H-Class Bio."
            MS_ACQUITY_UPLC_H_Class_Bio,

            // "Waters LC-system ACQUITY UPLC I-Class."
            MS_ACQUITY_UPLC_I_Class,

            // "Waters LC-system ACQUITY UPLC Systems with 2D Technology."
            MS_ACQUITY_UPLC_Systems_with_2D_Technology,

            // "Waters LC-system nanoACQUITY UPLC."
            MS_nanoACQUITY_UPLC,

            // "Waters LC-system nanoACQUITY UPLC System with Technology."
            MS_nanoACQUITY_UPLC_System_with_Technology,

            // "Waters LC-system nanoACQUITY UPLC with HDX Technology."
            MS_nanoACQUITY_UPLC_with_HDX_Technology,

            // "Waters LC-system TRIZAIC UPLC nanoTile."
            MS_TRIZAIC_UPLC_nanoTile,

            // "Waters oa-ToF based GCT Premier."
            MS_GCT_Premier,

            // "Waters oa-ToF based MALDI Synapt G2 HDMS."
            MS_MALDI_Synapt_G2_HDMS,

            // "Waters oa-ToF based MALDI Synapt G2 MS."
            MS_MALDI_Synapt_G2_MS,

            // "Waters oa-ToF based MALDI Synapt G2 MS."
            MS_MALDI_Synapt_G2_S_HDMS,

            // "Waters oa-ToF based MALDI Synapt G2-S MS."
            MS_MALDI_Synapt_G2_S_MS,

            // "Waters oa-ToF based MALDI Synapt HDMS."
            MS_MALDI_Synapt_HDMS,

            // "Waters oa-ToF based MALDI Synapt MS."
            MS_MALDI_Synapt_MS,

            // "Waters oa-ToF based Synapt G2 HDMS."
            MS_Synapt_G2_HDMS,

            // "Waters oa-ToF based Synapt G2 MS."
            MS_Synapt_G2_MS,

            // "Waters oa-ToF based Synapt G2-S HDMS."
            MS_Synapt_G2_S_HDMS,

            // "Waters oa-ToF based Synapt G2-S MS."
            MS_Synapt_G2_S_MS,

            // "Waters oa-ToF based Synapt HDMS."
            MS_Synapt_HDMS,

            // "Waters oa-ToF based Synapt MS."
            MS_Synapt_MS,

            // "Waters oa-ToF based Xevo G2 Q-Tof."
            MS_Xevo_G2_Q_Tof,

            // "Waters oa-ToF based Xevo G2 Tof."
            MS_Xevo_G2_Tof,

            // "Waters oa-ToF based Xevo Q-Tof."
            MS_Xevo_Q_Tof,

            // "Waters quadrupole based 3100."
            MS_3100,

            // "Waters quadrupole based Acquity SQD."
            MS_Acquity_SQD,

            // "Waters quadrupole based Acquity TQD."
            MS_Acquity_TQD,

            // "Waters quadrupole based Quattro micro GC."
            MS_Quattro_micro_GC,

            // "Waters quadrupole based Xevo TQ MS."
            MS_Xevo_TQ_MS,

            // "Waters quadrupole based Xevo TQD."
            MS_Xevo_TQD,

            // "Waters quadrupole based Xevo TQ-S."
            MS_Xevo_TQ_S,

            // "NCBI TaxID taxonomy ID to prefer when two or more proteins match the same set of peptides or when protein entry in database represents multiple sequences."
            MS_Mascot_PreferredTaxonomy,

            // "Waters Empower software for liquid chromatography and mass spectrometry acquisition."
            MS_Empower,

            // "Waters Unify software for liquid chromatography and mass spectrometry acquisition."
            MS_Unify,

            // "OBSOLETE An ion mobility mass spectrometry technique based on the superimposition of travelling voltage waves on a radially-confining RF voltage in a gas-filled, stacked-ring ion guide."
            MS_travelling_wave_ion_mobility_mass_spectrometer_OBSOLETE,

            // "LECO software for data acquisition and analysis."
            MS_LECO_software,

            // "Software for acquisition, processing and analysis of data for LECO instruments."
            MS_ChromaTOF_software,

            // "LECO instrument model."
            MS_LECO_instrument_model,

            // "LECO high resolution time-of-flight GC mass spectrometer."
            MS_Pegasus_HRT,

            // "LECO high resolution time-of-flight LC mass spectrometer."
            MS_Citius_HRT,

            // "LECO GC time-of-flight mass spectrometer."
            MS_Pegasus,

            // "LECO bench-top GC time-of-flight mass spectrometer."
            MS_TruTOF,

            // "The data type of the value reported in a QuantLayer for a feature, peptide, protein, protein group."
            MS_quantification_datatype,

            // "Attributes describing the details of an object relevant for reporting quantification workflows or values."
            MS_quantification_object_attribute,

            // "Attribute describing a study variable."
            MS_study_variable_attribute,

            // "The study variable is 'technical replicate'. The string value denotes the category of technical replicate, e.g. 'run generated from same sample'."
            MS_technical_replicate,

            // "The study variable is 'biological replicate'. This means, the run was generated from another individual or sample."
            MS_biological_replicate,

            // "The experimental condition is 'case' in contrast to 'control'."
            MS_experimental_condition__case_,

            // "The experimental condition is 'control' in contrast to 'case'."
            MS_experimental_condition__control_,

            // "The experimental condition is 'disease' in contrast to 'healthy'."
            MS_experimental_condition__disease_,

            // "The experimental condition is 'healthy' in contrast to 'disease'."
            MS_experimental_condition__healthy_,

            // "The experimental condition is given in the value of this term."
            MS_generic_experimental_condition,

            // "The experimental design followed a time series design. The time point of this run is given in the value of this term."
            MS_time_series__time_point_X,

            // "The experimental design followed a dilution series design. The concentration of this run is given in the value of this term."
            MS_dilution_series__concentration_X,

            // "Attribute describing a raw file."
            MS_raw_file_attribute,

            // "The raw file contains the run of one sample (e.g. spectral counting, LC-MS label-free)."
            MS_one_sample_run,

            // "The raw file contains the run of two samples (e.g. SILAC, metabolic labelling)."
            MS_two_sample_run,

            // "The raw file contains the run of three samples (e.g. 3-plex SILAC)."
            MS_three_sample_run,

            // "The raw file contains the run of four samples (e.g. 4-plex iTraq)."
            MS_four_sample_run,

            // "The raw file contains the run of eight samples (e.g. 8-plex iTraq)."
            MS_eight_sample_run,

            // "Attribute describing, how raw files build a raw file group."
            MS_raw_files_group_attribute,

            // "Attribute describing, how raw files build a raw file group."
            MS_merge_of_runs_of_1D_gel_bands,

            // "Attribute describing a feature list."
            MS_feature_list_attribute,

            // "The mass trace of the features of this feature list specifies rectangles. Each mass trace has the syntax (RT_start,MZ_start,RT_end,MZ_end), i.e. opposite corners are given."
            MS_mass_trace_reporting__rectangles,

            // "The mass trace of the features of this feature list specifies polygons. Each mass trace has the syntax (RT_1, MZ_1, RT_2, MZ_2, ... , RT_i, MZ_i, ... , RT_n, MZ_n), where the line (RT_n, MZ_n)->(RT_1, MZ_1) is implicit."
            MS_mass_trace_reporting__polygons,

            // "Attribute describing a feature."
            MS_feature_attribute,

            // "Identifier for an SRM transition in an external document describing additional information about the transition."
            MS_SRM_transition_ID,

            // "Software from Nonlinear Dynamics for LC-MS label-free workflow."
            MS_Progenesis_LC_MS,

            // "Software for SILAC workflow."
            MS_SILACAnalyzer,

            // "Quantitation software comment or any customizations to the default setup of the software."
            MS_quantitation_software_comment_or_customizations,

            // "The overall workflow of this quantitation report."
            MS_quantitation_analysis_summary,

            // "LC-MS label-free workflow (RT m/z map)."
            MS_LC_MS_label_free_quantitation_analysis,

            // "SILAC workflow (heavy, light, and sometimes medium peak)."
            MS_SILAC_quantitation_analysis,

            // "Spectral counting workflow (number of identified MS2 spectra as approximation of peptide / protein quant)."
            MS_spectral_counting_quantitation_analysis,

            // "Quantification analysis using the AB SCIEX iTRAQ isobaric labelling workflow, wherein 2-8 reporter ions are measured in MS2 spectra near 114 m/z."
            MS_iTRAQ_quantitation_analysis,

            // "Selected Reaction Monitoring workflow (XIC quantitation of precursor / fragment mass pair)."
            MS_SRM_quantitation_analysis,

            // "Metabolic labeling workflow (heavy and light versions of peptides, depending on number of nitrogens)."
            MS_metabolic_labeling_14N___15N_quantitation_analysis,

            // "Maximum peak intensity of the LC-MS feature."
            MS_LC_MS_feature_intensity,

            // "Real (intensity times area) volume of the LC-MS feature."
            MS_LC_MS_feature_volume,

            // "The number of MS2 spectra identified for this peptide in spectral counting."
            MS_peptide_PSM_count,

            // "Maximum intensity of MS1 feature."
            MS_MS1_feature_maximum_intensity,

            // "Area of MS1 feature."
            MS_MS1_feature_area,

            // "OBSOLETE Area of MS1 peak (e.g. SILAC, 15N)."
            MS_peak_area_OBSOLETE,

            // "Area of all peaks belonging to the isotopic pattern of light or heavy peak (e.g. 15N)."
            MS_isotopic_pattern_area,

            // "Intensity of MS2 reporter ion (e.g. iTraq)."
            MS_reporter_ion_intensity,

            // "Simple ratio of two values (enumerator and denominator)."
            MS_simple_ratio_of_two_values,

            // "OBSOLETE Peptide quantification value calculated as sum of MatchedFeature quantification values."
            MS_sum_of_MatchedFeature_values_OBSOLETE,

            // "Normalized peptide value."
            MS_normalized_peptide_value,

            // "Protein quantification value calculated as sum of peptide values."
            MS_protein_value__sum_of_peptide_values,

            // "Normalized protein value."
            MS_normalized_protein_value,

            // "Global datatype: Maximum of all pair-wise fold changes of group means (e.g. Progenesis)."
            MS_max_fold_change,

            // "Global datatype: p-value of ANOVA of group means (e.g. Progenesis)."
            MS_ANOVA_p_value,

            // "P-value of t-Test of two groups."
            MS_t_test_p_value,

            // "Intensity (or area) of MS2 reporter ion (e.g. iTraq)."
            MS_reporter_ion_raw_value,

            // "Normalized value of MS2 reporter ion (e.g. iTraq)."
            MS_reporter_ion_normalized_value,

            // "Area of the extracted ion chromatogram (e.g. of a transition in SRM)."
            MS_XIC_area,

            // "Normalized area of the extracted ion chromatogram (e.g. of a transition in SRM)."
            MS_normalized_XIC_area,

            // "Protein quantification value calculated as mean of peptide ratios."
            MS_protein_value__mean_of_peptide_ratios,

            // "Terms used to describe types of quantification data processing."
            MS_quantification_data_processing,

            // "Normalization of protein values to the mean of the sum of all protein PSM counts (e.g. spectral counting)."
            MS_normalization_to_mean_of_sum_of_all_proteins,

            // "Normalization of protein values to approach the same distribution."
            MS_quantile_normalization__proteins,

            // "Normalization of peptide values to approach the same distribution."
            MS_quantile_normalization__peptides,

            // "Automatic RT alignment of Progenesis software."
            MS_Progenesis_automatic_alignment,

            // "RT alignment of Progenesis software using automatic and manual vectors."
            MS_Progenesis_manual_alignment,

            // "Normalization as performed by Progenesis LC-MS."
            MS_Progenesis_normalization,

            // "Estimation of the q-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_q_value,

            // "Estimation of the q-value for proteins."
            MS_protein_level_q_value,

            // "Estimation of the p-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_p_value,

            // "Estimation of the p-value for proteins."
            MS_protein_level_p_value,

            // "Estimation of the e-value for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_e_value,

            // "Estimation of the e-value for proteins."
            MS_protein_level_e_value,

            // "OBSOLETE A smoothing of the distribution of q-values calculated for PSMs from individual search engines, such that ordering of result quality is maintained and all FDRScore values are guaranteed to have a value > 0."
            MS_FDRScore_OBSOLETE,

            // "The regular expression describing the sequence motif for a modification."
            MS_modification_motif,

            // "The a priori probability of a modification."
            MS_modification_probability,

            // "Software for acquisition, processing and analysis of data for LECO instruments."
            MS_ChromaTOF_HRT_software,

            // "Shimadzu Biotech software for data acquisition, processing, and analysis."
            MS_MALDI_Solutions_Microbial_Identification,

            // "The potential difference between two adjacent interface voltages affecting in-source collision induced dissociation."
            MS_offset_voltage,

            // "The dissociation of an ion as a result of collisional excitation during ion transfer from an atmospheric pressure ion source and the mass spectrometer vacuum."
            MS_in_source_collision_induced_dissociation,

            // "mz5 file format, modelled after mzML."
            MS_mz5_format,

            // "Attributes of the quality of a transition that affect its selection as appropriate."
            MS_transition_validation_attribute,

            // "Variation of a set of signal measurements calculated as the standard deviation relative to the mean."
            MS_coefficient_of_variation,

            // "Unitless number providing the ratio of the total measured intensity of a signal relative to the estimated noise level for that signal."
            MS_signal_to_noise_ratio,

            // "Parameters string passed to a command-line interface software application, omitting the executable name."
            MS_command_line_parameters,

            // "Software for data analysis of peptides and proteins."
            MS_SQID,

            // "The SQID result 'Score'."
            MS_SQID_score,

            // "The SQID result 'deltaScore'."
            MS_SQID_deltaScore,

            // "The SQID result 'protein score'."
            MS_SQID_protein_score,

            // "The data type normalised abundance for proteins produced by Progenesis LC-MS."
            MS_Progenesis_protein_normalised_abundance,

            // "The data type normalised abundance for peptides produced by Progenesis LC-MS."
            MS_Progenesis_peptide_normalised_abundance,

            // "The data type raw abundance for proteins produced by Progenesis LC-MS."
            MS_Progenesis_protein_raw_abundance,

            // "The data type raw abundance for peptide produced by Progenesis LC-MS."
            MS_Progenesis_peptide_raw_abundance,

            // "The data type confidence score produced by Progenesis LC-MS."
            MS_Progenesis_confidence_score,

            // "The data type peptide count produced by Progenesis LC-MS."
            MS_Progenesis_peptide_count,

            // "The data type feature intensity produced by Progenesis LC-MS."
            MS_Progenesis_feature_intensity,

            // "The data type peptide counts (unique) produced by MaxQuant."
            MS_MaxQuant_peptide_counts__unique_,

            // "The data type peptide counts (all) produced by MaxQuant."
            MS_MaxQuant_peptide_counts__all_,

            // "The data type peptide counts (razor+unique) produced by MaxQuant."
            MS_MaxQuant_peptide_counts__razor_unique_,

            // "The data type sequence length produced by MaxQuant."
            MS_MaxQuant_sequence_length,

            // "The data type PEP (posterior error probability) produced by MaxQuant."
            MS_MaxQuant_PEP,

            // "The data type LFQ intensity produced by MaxQuant."
            MS_MaxQuant_LFQ_intensity,

            // "The data type feature intensity produced by MaxQuant."
            MS_MaxQuant_feature_intensity,

            // "The data type MS2 count produced by MaxQuant."
            MS_MaxQuant_MS_MS_count,

            // "The emPAI value of protein abundance, produced from the emPAI algorithm."
            MS_emPAI_value,

            // "The APEX value of protein abundance, produced from the APEX software."
            MS_APEX_value,

            // "The full width of a retention time window for a chromatographic peak."
            MS_retention_time_window_width,

            // "Thermo Scientific ISQ single quadrupole MS with the ExtractraBrite source."
            MS_ISQ,

            // "Thermo Scientific second generation Velos."
            MS_Velos_Plus,

            // "Thermo Scientific second generation Velos and Orbitrap."
            MS_LTQ_Orbitrap_Elite,

            // "Thermo Scientific Q Exactive."
            MS_Q_Exactive,

            // "Thermo Scientific PinPoint SRM analysis software."
            MS_PinPoint,

            // "Potential difference setting of the Thermo Scientific S-lens stacked-ring ion guide in volts."
            MS_S_lens_voltage,

            // "Python module to interface mzML Data."
            MS_pymzML,

            // "Enzyme leukocyte elastase (EC 3.4.21.37)."
            MS_leukocyte_elastase,

            // "Enzyme proline endopeptidase (EC 3.4.21.26)."
            MS_proline_endopeptidase,

            // "Enzyme glutamyl endopeptidase (EC 3.4.21.19)."
            MS_glutamyl_endopeptidase,

            // "Chemical iodobenzoate. Cleaves after W."
            MS_2_iodobenzoate,

            // "Main identifier of a ProteomeXchange dataset."
            MS_ProteomeXchange_accession_number,

            // "Version number of a ProteomeXchange accession number."
            MS_ProteomeXchange_accession_number_version_number,

            // "DOI unique identifier of a publication."
            MS_Digital_Object_Identifier__DOI_,

            // "Free text attribute that can enrich the information about an entity."
            MS_external_reference_keyword,

            // "Keyword present in a scientific publication."
            MS_journal_article_keyword,

            // "Keyword assigned by the data submitter."
            MS_submitter_keyword,

            // "Keyword assigned by a data curator."
            MS_curator_keyword,

            // "Hash assigned by the Tranche resource to an individual file."
            MS_Tranche_file_hash,

            // "Hash assigned by the Tranche resource to a whole project."
            MS_Tranche_project_hash,

            // "URI that allows the access to one experiment in the PRIDE database."
            MS_PRIDE_experiment_URI,

            // "URI that allows the access to one project in the PRIDE database."
            MS_PRIDE_project_URI,

            // "The source interface."
            MS_source_interface,

            // "The source interface model."
            MS_source_interface_model,

            // "The source sprayer."
            MS_source_sprayer,

            // "The source sprayer type."
            MS_source_sprayer_type,

            // "The source sprayer manufacturer."
            MS_source_sprayer_manufacturer,

            // "The source sprayer model."
            MS_source_sprayer_model,

            // "Plate where the sample solution is spotted in a MALDI or similar instrument."
            MS_sample_plate,

            // "The sample plate type."
            MS_sample_plate_type,

            // "Stainless steel plate."
            MS_stainless_steel_plate,

            // "Coated glass plate."
            MS_coated_glass_plate,

            // "Whether the sprayer is fed or is loaded with sample once."
            MS_electrospray_supply_type,

            // "The sprayer is loaded with sample once."
            MS_static_supply_electrospray,

            // "The sprayer is continuously fed with sample."
            MS_fed_supply_electrospray,

            // "Potential difference between Q2 and Q3 in a triple quadrupole instrument in volts."
            MS_Collision_cell_exit_potential,

            // "LECO nominal mass resolution time-of-flight GCxGC mass spectrometer."
            MS_Pegasus_4D,

            // "PEAKS Studio software for data analysis."
            MS_PEAKS_Studio,

            // "PEAKS Online software for high throughput data analysis."
            MS_PEAKS_Online,

            // "PEAKS Node software for high throughput data analysis."
            MS_PEAKS_Node,

            // "Bioinformatics Solutions Inc. Software for data processing and analysis."
            MS_BSI_software,

            // "The PEAKS peptide '-10lgP Score'."
            MS_PEAKS_peptideScore,

            // "The PEAKS protein '-10lgP Score'."
            MS_PEAKS_proteinScore,

            // "The ZCore probability score."
            MS_ZCore_probScore,

            // "The source interface manufacturer."
            MS_source_interface_manufacturer,

            // "Parameters used in the mass spectrometry acquisition."
            MS_acquisition_parameter,

            // "No cleavage."
            MS_no_cleavage,

            // "Unspecific cleavage."
            MS_unspecific_cleavage,

            // "Regular expression for leukocyte elastase."
            MS______ALIV_____P_,

            // "Regular expression for proline endopeptidase."
            MS______HKR_P____P_,

            // "Regular expression for glutamyl endopeptidase."
            MS_______E_E_,

            // "Regular expression for 2-iodobenzoate."
            MS_____W_,

            // "Algorithm used to score the match between a spectrum and a peptide ion."
            MS_peptide_spectrum_match_scoring_algorithm,

            // "C13 peaks to use in peak detection."
            MS_Mascot_C13_counts,

            // "Weighting factor for protein list compilation by ProteinExtractor."
            MS_ProteinExtractor_Weighting,

            // "Flag indicating a second round search with Mascot."
            MS_ProteinScape_second_round_Mascot,

            // "Flag indicating a second round search with Phenyx."
            MS_ProteinScape_second_round_Phenyx,

            // "The mobility of an MS2 product ion, as measured by ion mobility mass spectrometry."
            MS_product_ion_mobility,

            // "OBSOLETE The ion drift time of an MS2 product ion."
            MS_product_ion_drift_time_OBSOLETE,

            // "A score that assign confidence to the localization of an amino acid modification on a peptide sequence at the PSM-level."
            MS_PSM_level_PTM_localization_score,

            // "phosphoRS score for PTM site location at the PSM-level."
            MS_phosphoRS_score,

            // "Probability that the respective isoform is correct."
            MS_phosphoRS_sequence_probability,

            // "Estimate of the probability that the respective site is truly phosphorylated."
            MS_phosphoRS_site_probability,

            // "Version of the post-translational modification scoring algorithm."
            MS_PTM_scoring_algorithm_version,

            // "DeBunker software."
            MS_DeBunker,

            // "Score specific to DeBunker."
            MS_DeBunker_score,

            // "The difference between a theoretically calculated m/z and the corresponding experimentally measured m/z. It can be expressed as absolute or relative value."
            MS_delta_m_z,

            // "The difference between a theoretically calculated molecular mass M and the corresponding experimentally measured M. It can be expressed as absolute or relative value."
            MS_delta_M,

            // "MSQuant software."
            MS_MSQuant,

            // "The PTM score from MSQuant software."
            MS_MSQuant_PTM_score,

            // "The PTM score from MaxQuant software."
            MS_MaxQuant_PTM_Score,

            // "The Phospho (STY) Probabilities from MaxQuant software."
            MS_MaxQuant_Phospho__STY__Probabilities,

            // "The Phospho (STY) Score Diffs from MaxQuant software."
            MS_MaxQuant_Phospho__STY__Score_Diffs,

            // "The P-site localization probability value from MaxQuant software."
            MS_MaxQuant_P_site_localization_probability,

            // "The PTM Delta Score value from MaxQuant software (Difference between highest scoring site and second highest)."
            MS_MaxQuant_PTM_Delta_Score,

            // "Ascore software."
            MS_Ascore,

            // "A-score for PTM site location at the PSM-level."
            MS_Ascore1,

            // "H-Score for peptide phosphorylation site location."
            MS_H_Score,

            // "Vacuum-drying MALDI sample preparation crystallization method."
            MS_vacuum_drying_MALDI_sample_preparation,

            // "Crushed-crystal MALDI sample preparation method."
            MS_crushed_crystal_MALDI_sample_preparation,

            // "Fast-evaporation MALDI sample preparation method."
            MS_fast_evaporation_MALDI_sample_preparation,

            // "Overlayer method combining features of the crushed-crystal method and the fast-evaporation method."
            MS_overlayer_MALDI_sample_preparation,

            // "Sandwich MALDI sample preparation method."
            MS_sandwich_MALDI_sample_preparation,

            // "Spin coating MALDI sample preparation method."
            MS_spin_coating_MALDI_sample_preparation,

            // "Quick & dirty (Q&D) sample preparation separating matrix handling from sample handling."
            MS_quick_and_dirty_MALDI_sample_preparation,

            // "Top-hat morphological filter based on the basic morphological operations 'erosion' and 'dilatation'."
            MS_top_hat_baseline_reduction,

            // "Constructs the baseline by fitting multiple parabolas to the spectrum starting with the large scale structures."
            MS_convex_hull_baseline_reduction,

            // "The spectrum that will be baseline subtracted is divided into a number of segments."
            MS_median_baseline_reduction,

            // "The random noise is removed by using the undecimated wavelet transform."
            MS_wavelet_transformation_smoothing,

            // "It searches for known patterns in the measured spectrum."
            MS_sophisticated_numerical_annotation_procedure,

            // "Normalization of areas below the curves."
            MS_area_normalization,

            // "A Bruker's proprietary technique where molecular ions are initially accelerated at lower energy, then collide with inert gas in a collision cell that is then 'lifted' to high potential. The use of inert gas is optional, as it could lift also fragments provided by LID."
            MS_LIFT,

            // "MS1 label-based raw feature quantitation."
            MS_MS1_label_based_raw_feature_quantitation,

            // "MS1 label-based peptide level quantitation."
            MS_MS1_label_based_peptide_level_quantitation,

            // "MS1 label-based protein level quantitation."
            MS_MS1_label_based_protein_level_quantitation,

            // "MS1 label-based proteingroup level quantitation."
            MS_MS1_label_based_proteingroup_level_quantitation,

            // "A de facto standard providing the retention times at which a specific set of 10 reference peptides exit the reference chromatographic column. The kit may be obtain from Biognosys."
            MS_iRT_retention_time_normalization_standard,

            // "The type of the transitions, e.g. target or decoy."
            MS_SRM_transition_type,

            // "A transition used to target a specific compound that may be in the sample."
            MS_target_SRM_transition,

            // "A transition not expected to be present in the sample and used to calculate statistical confidence of target transition detections in some workflows."
            MS_decoy_SRM_transition,

            // "Quantitation analysis using an isobaric labelling workflow."
            MS_isobaric_label_quantitation_analysis,

            // "Quantitation analysis using the Thermo Fisher tandem mass tag (TMT) labelling workflow."
            MS_TMT_quantitation_analysis,

            // "Combination of electrospray and desorption ionization method that ionizes gases, liquids and solids in open air under atmospheric pressure."
            MS_desorption_electrospray_ionization,

            // "Relative probability that PTM site assignment is correct, derived from the Mascot score difference between matches to the same spectrum (Mascot Delta Score)."
            MS_Mascot_PTM_site_assignment_confidence,

            // "Collision energy at the start of the collision energy ramp."
            MS_collision_energy_ramp_start,

            // "Collision energy at the end of the collision energy ramp."
            MS_collision_energy_ramp_end,

            // "Spectral count peptide level quantitation."
            MS_spectral_count_peptide_level_quantitation,

            // "Spectral count protein level quantitation."
            MS_spectral_count_protein_level_quantitation,

            // "Spectral count proteingroup level quantitation."
            MS_spectral_count_proteingroup_level_quantitation,

            // "MS1 label-based analysis."
            MS_MS1_label_based_analysis,

            // "Label-free raw feature quantitation."
            MS_label_free_raw_feature_quantitation,

            // "Label-free peptide level quantitation."
            MS_label_free_peptide_level_quantitation,

            // "Label-free protein level quantitation."
            MS_label_free_protein_level_quantitation,

            // "Label-free proteingroup level quantitation."
            MS_label_free_proteingroup_level_quantitation,

            // "MS2 tag-based analysis."
            MS_MS2_tag_based_analysis,

            // "MS2 tag-based feature level quantitation."
            MS_MS2_tag_based_feature_level_quantitation,

            // "MS2 tag-based peptide level quantitation."
            MS_MS2_tag_based_peptide_level_quantitation,

            // "MS2 tag-based protein level quantitation."
            MS_MS2_tag_based_protein_level_quantitation,

            // "MS2 tag-based proteingroup level quantitation."
            MS_MS2_tag_based_proteingroup_level_quantitation,

            // "Nucleic acid base modification (substitution, insertion or deletion)."
            MS_nucleic_acid_base_modification,

            // "Specification of the original nucleic acid sequence, prior to a modification. The value slot should hold the DNA or RNA sequence."
            MS_original_nucleic_acid_sequence,

            // "Specification of the modified nucleic acid sequence. The value slot should hold the DNA or RNA sequence."
            MS_modified_nucleic_acid_sequence,

            // "URI to retrieve transition group data for a PASSEL (PeptideAtlas SRM Experiment Library) experiment."
            MS_PASSEL_transition_group_browser_URI,

            // "URI that allows access to a PeptideAtlas dataset."
            MS_PeptideAtlas_dataset_URI,

            // "Role of the contact person."
            MS_contact_role,

            // "The first of a set of authors associated with a publication or release. There may be more than one first author in cases where several authors share primary attribution."
            MS_first_author,

            // "The last of a set of authors associated with a publication or release. There may be more than one senior author in cases where several authors share senior attribution."
            MS_senior_author,

            // "One of a set of authors associated with a publication or release."
            MS_co_author,

            // "A person who submits a dataset to a repository."
            MS_dataset_submitter,

            // "A sample that has not been labelled or modified. This is often referred to as \"light\" to distinguish from \"heavy\"."
            MS_unlabeled_sample,

            // "Inlet properties that are associated with a value."
            MS_inlet_attribute,

            // "The temperature of the inlet of a mass spectrometer."
            MS_inlet_temperature,

            // "The temperature of the source of a mass spectrometer."
            MS_source_temperature,

            // "The duration of a complete cycle of modulation in a comprehensive two-dimensional separation system, equals the length of a second dimension chromatogram, i.e., the time between two successive injections into the second column."
            MS_modulation_time,

            // "ProteinProspector software for data acquisition and analysis."
            MS_ProteinProspector,

            // "The ProteinProspector result 'Score'."
            MS_ProteinProspector_score,

            // "The ProteinProspector result 'Expectation value'."
            MS_ProteinProspector_expectation_value,

            // "The original source path used for directory-based sources."
            MS_native_source_path,

            // "MS-GF software used to re-score the peptide-spectrum matches."
            MS_MS_GF,

            // "MS-GF+ software used to analyze the spectra."
            MS_MS_GF_,

            // "MS-GF raw score."
            MS_MS_GF_RawScore,

            // "MS-GF de novo score."
            MS_MS_GF_DeNovoScore,

            // "MS-GF energy score."
            MS_MS_GF_Energy,

            // "MS-GF spectral E-value."
            MS_MS_GF_SpecEValue,

            // "MS-GF E-value."
            MS_MS_GF_EValue,

            // "MS-GF Q-value."
            MS_MS_GF_QValue,

            // "MS-GF peptide-level Q-value."
            MS_MS_GF_PepQValue,

            // "MS-GF posterior error probability."
            MS_MS_GF_PEP,

            // "As parameter for search engine: apply the modification only at the N-terminus of a protein."
            MS_modification_specificity_protein_N_term,

            // "As parameter for search engine: apply the modification only at the C-terminus of a protein."
            MS_modification_specificity_protein_C_term,

            // "Microsoft Excel (can be used for spectral counting)."
            MS_Microsoft_Excel,

            // "The name of the UniProtKB/TrEMBL database."
            MS_database_UniProtKB_TrEMBL,

            // "OBSOLETE Decoy database from a TrEMBL protein sequence database."
            MS_decoy_DB_from_UniProtKB_TrEMBL_OBSOLETE,

            // "Metabolic labelling: natural N (mainly 14N)."
            MS_metabolic_labelling__natural_N__mainly_14N_,

            // "Software e.g. for SILAC and 14N/15N workflow, part of the PeakQuant suite."
            MS_FindPairs,

            // "Peptide consensus retention time."
            MS_peptide_consensus_RT,

            // "Peptide consensus mass/charge ratio."
            MS_peptide_consensus_m_z,

            // "Method used to calculate the ratio."
            MS_ratio_calculation_method,

            // "Protein quantification value calculated as median of peptide ratios."
            MS_protein_value__median_of_peptide_ratios,

            // "Metabolic labelling: heavy N (mainly 15N)."
            MS_metabolic_labelling__heavy_N__mainly_15N_,

            // "Metabolic labelling: Description of labelling purity. Usually the purity of feeding material (e.g. 95%), or the inclusion rate derived from isotopic peak pattern shape."
            MS_metabolic_labelling__labelling_purity,

            // "Perform a t-test (two groups). Specify in string value, whether paired / unpaired, variance equal / different, one- / two-sided version is performed."
            MS_t_test,

            // "Perform an ANOVA-test (more than two groups). Specify in string value, which version is performed."
            MS_ANOVA_test,

            // "P-value as result of one of the processing steps described. Specify in the description, which processing step it was."
            MS_p_value,

            // "The mzIdentML format for peptide and protein identification data from the PSI. File extension '.mzid'."
            MS_mzIdentML_format,

            // "File format containing quantification results."
            MS_quantification_file_format,

            // "The mzQuantML format for quantification data from the PSI. File extension '.mzq'."
            MS_mzQuantML_format,

            // "PAnalyzer software for getting protein evidence categories."
            MS_PAnalyzer,

            // "Bruker Daltonics' impact: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray."
            MS_impact,

            // "OBSOLETE ProteomeDiscoverer's 1st static post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_1__Static_Modification_OBSOLETE,

            // "OBSOLETE ProteomeDiscoverer's 2nd static post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_2__Static_Modification_OBSOLETE,

            // "Precursor clipping range before."
            MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_Before,

            // "Precursor clipping range after."
            MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_After,

            // "The time of elution from the first chromatographic column in the chromatographic separation step, relative to the start of chromatography on the first column."
            MS_first_column_elution_time,

            // "The time of elution from the second chromatographic column in the chromatographic separation step, relative to the start of the chromatography on the second column."
            MS_second_column_elution_time,

            // "Multidimensional chromatography modulation description."
            MS_multidimensional_chromatography_modulation_description,

            // "Two-dimensional gas chromatography where a single modulation time is used throughout the acquisition."
            MS_two_dimensional_gas_chromatography_with_fixed_modulation_time,

            // "Two-dimensional gas chromatography where the acquisition is divided into steps, each with a different modulation time."
            MS_two_dimensional_gas_chromatography_with_discrete_modulation_time_steps,

            // "Two-dimensional liquid chromatography where a single modulation time is used throughout the acquisition."
            MS_two_dimensional_liquid_chromatography_with_fixed_modulation_time,

            // "Two-dimensional liquid chromatography where the acquisition is divided into steps, each with a different modulation time."
            MS_two_dimensional_liquid_chromatography_with_discrete_modulation_time_steps,

            // "XCorr threshold for storing peptides that do not belong to a protein."
            MS_ProteomeDiscoverer_Peptide_Without_Protein_XCorr_Threshold,

            // "Flag indicating that a probability score for the assessment that a reported peptide match is a random occurrence is calculated."
            MS_Calculate_Probability_Scores,

            // "Delta Cn threshold for filtering out PSM's."
            MS_ProteomeDiscoverer_Maximum_Delta_Cn,

            // "Algorithm (e.g. q-value or PEP) used for calculation of the validation score using Percolator."
            MS_Percolator_Validation_based_on,

            // "Search engine input parameter."
            MS_search_engine_input_parameter,

            // "Search engine input parameter that is shared by more than one search engine."
            MS_common_search_engine_input_parameter,

            // "Search engine input parameters specific to Mascot."
            MS_Mascot_input_parameter,

            // "Search engine input parameters specific to SEQUEST."
            MS_SEQUEST_input_parameter,

            // "Search engine input parameters specific to Phenyx."
            MS_Phenyx_input_parameter,

            // "Search engine input parameters specific to ProteinExtractor."
            MS_ProteinExtractor_input_parameter,

            // "Search engine input parameters specific to OMSSA."
            MS_OMSSA_input_parameter,

            // "Search engine input parameters specific to ProteinScape."
            MS_ProteinScape_input_parameter,

            // "Search engine input parameters specific to ProteomeDiscoverer."
            MS_ProteomeDiscoverer_input_parameter,

            // "Software input parameters."
            MS_software_input_parameter,

            // "Software input parameter that is shared by more than one software."
            MS_common_software_input_parameter,

            // "Software specific input parameter."
            MS_software_specific_input_parameter,

            // "Search engine input parameters specific to Scaffold."
            MS_Scaffold_input_parameter,

            // "Search engine input parameters specific to Percolator."
            MS_Percolator_input_parameter,

            // "Indicates that a higher score is better."
            MS_higher_score_better,

            // "Indicates that a lower score is better."
            MS_lower_score_better,

            // "Attribute describing an assay."
            MS_assay_attribute,

            // "Attribute describing an assay label."
            MS_assay_label_attribute,

            // "Attribute describing a protein group list."
            MS_protein_group_list_attribute,

            // "Attribute describing a protein group."
            MS_protein_group_attribute,

            // "Attribute describing a protein list."
            MS_protein_list_attribute,

            // "Attribute describing a peptide consensus list."
            MS_peptide_consensus_list_attribute,

            // "Attribute describing a peptide consensus."
            MS_peptide_consensus_attribute,

            // "Attribute describing a small molecule list."
            MS_small_molecule_list_attribute,

            // "Attribute describing a small molecule."
            MS_small_molecule_attribute,

            // "Attribute describing a small molecule modification."
            MS_small_molecule_modification_attribute,

            // "The name for identifying an experiment."
            MS_experiment_name,

            // "Dummy decribing a spectral count feature."
            MS_spectral_count_feature,

            // "FeatureList of spectral counts."
            MS_counts_reporting,

            // "x-Tracker generic tool for quantitative proteomics."
            MS_x_Tracker,

            // "ProteoSuite software for the analysis of quantitative proteomics data."
            MS_ProteoSuite,

            // "OBSOLETE FDRScore values specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools."
            MS_combined_FDRScore_OBSOLETE,

            // "The name of the UniProtKB knowledgebase."
            MS_database_UniProtKB,

            // "Attribute describing an identification file."
            MS_identification_file_attribute,

            // "Attribute describing a method file format."
            MS_method_file_format,

            // "Software for iTRAQ workflow. Extracts and normalizes iTRAQ information from an MS experiment."
            MS_ITRAQAnalyzer,

            // "Attribute describing an identification file format."
            MS_identification_file_format,

            // "Noise filter component of the TOPP software."
            MS_TOPP_noise_filter,

            // "Removes noise from profile spectra by using a gaussian smoothing."
            MS_TOPP_NoiseFilterGaussian,

            // "Removes noise from profile spectra by using a Savitzky-Golay smoothing."
            MS_TOPP_NoiseFilterSGolay,

            // "Peak picker component of the TOPP software."
            MS_TOPP_peak_picker,

            // "Finds mass spectrometric peaks in high-resoluted profile mass spectra."
            MS_TOPP_PeakPickerHiRes,

            // "Finds mass spectrometric peaks with a wavelet algorithm in low-resoluted profile mass spectra."
            MS_TOPP_PeakPickerWavelet,

            // "Spectra filter component of the TOPP software."
            MS_TOPP_spectra_filter,

            // "Applies a Bern et al normalization to peak spectra."
            MS_TOPP_SpectraFilterBernNorm,

            // "Applies a filter to peak spectra for marked peaks."
            MS_TOPP_SpectraFilterMarkerMower,

            // "Retains the n largest peaks of a peak spectra."
            MS_TOPP_SpectraFilterNLargest,

            // "Applies a TIC/maximal intensity normalization to peak spectra."
            MS_TOPP_SpectraFilterNormalizer,

            // "Filters putative unfragmented precursor ions from tandem spectra."
            MS_TOPP_SpectraFilterParentPeakMower,

            // "Applies a filter to peak spectra after intensity scaling according to rank."
            MS_TOPP_SpectraFilterScaler,

            // "Applies a filter to peak spectra after intensity scaling to the square root."
            MS_TOPP_SpectraFilterSqrtMower,

            // "Applies a filter of peaks below a given threshold to peak spectra."
            MS_TOPP_SpectraFilterThresholdMower,

            // "Applies a filter of the largest peaks in a sliding window over a peak spectrum."
            MS_TOPP_SpectraFilterWindowMower,

            // "Map aligner component of the TOPP software."
            MS_TOPP_map_aligner,

            // "Corrects retention time distortions between maps based on common peptide identifications."
            MS_TOPP_MapAlignerIdentification,

            // "Corrects retention time distortions between maps using a pose clustering approach."
            MS_TOPP_MapAlignerPoseClustering,

            // "Corrects retention time distortions between maps by spectrum alignment."
            MS_TOPP_MapAlignerSpectrum,

            // "Attribute describing the data type of the numerator of a ratio."
            MS_numerator_data_type_attribute,

            // "Attribute describing the data type of the denominator of a ratio."
            MS_denominator_data_type_attribute,

            // "The number of spectra identified for this protein in spectral counting."
            MS_protein_level_PSM_counts,

            // "Extracts spectra of an MS run file to several files in DTA format."
            MS_TOPP_DTAExtractor,

            // "Merges several protein/peptide identification files into one file."
            MS_TOPP_IDMerger,

            // "Converts identification engine file formats."
            MS_TOPP_IDFileConverter,

            // "Merges spectra from an LC/MS map, either by precursor or by RT blocks."
            MS_TOPP_SpectraMerger,

            // "Exports various XML formats to an mzTab file."
            MS_TOPP_MzTabExporter,

            // "Annotates mass traces in centroided LC/MS maps."
            MS_TOPP_MassTraceExtractor,

            // "Correct the precursor entries of tandem MS scans."
            MS_TOPP_PrecursorMassCorrector,

            // "Performs precursor mz correction on centroided high resolution data."
            MS_TOPP_HighResPrecursorMassCorrector,

            // "Computes an additive series to quantify a peptide in a set of samples."
            MS_TOPP_AdditiveSeries,

            // "Decharges and merges different feature charge variants of the same chemical entity."
            MS_TOPP_Decharger,

            // "Quantifies signals at given positions in (raw or picked) LC/MS maps."
            MS_TOPP_EICExtractor,

            // "Feature finder component of the TOPP software."
            MS_TOPP_feature_finder,

            // "Detects two-dimensional features in centroided LC-MS data."
            MS_TOPP_FeatureFinderCentroided,

            // "Detects two-dimensional features in uncentroided LC-MS data."
            MS_TOPP_FeatureFinderRaw,

            // "Detects two-dimensional features in uncentroided LC-MS data with a wavelet algorithm."
            MS_TOPP_FeatureFinderIsotopeWavelet,

            // "Detects two-dimensional features in centroided LC-MS data of metabolites."
            MS_TOPP_FeatureFinderMetabo,

            // "Quantifies features LC-MS/MS MRM data."
            MS_TOPP_FeatureFinderMRM,

            // "Computes protein abundances from annotated feature/consensus maps."
            MS_TOPP_ProteinQuantifier,

            // "Normalizes maps of one consensus XML file (after linking)."
            MS_TOPP_ConsensusMapNormalizer,

            // "Applies retention time transformations to maps."
            MS_TOPP_MapRTTransformer,

            // "Feature linker component of the TOPP software."
            MS_TOPP_feature_linker,

            // "Groups corresponding isotope-labeled features in a feature map."
            MS_TOPP_FeatureLinkerLabeled,

            // "Groups corresponding features from multiple maps."
            MS_TOPP_FeatureLinkerUnlabeled,

            // "Groups corresponding features from multiple maps using a quality threshold clustering approach."
            MS_TOPP_FeatureLinkerUnlabeledQT,

            // "Performs a peptide/protein identification with the CompNovo engine."
            MS_TOPP_CompNovo,

            // "Performs a peptide/protein identification with the CompNovo engine in collision-induced dissociation (CID) mode."
            MS_TOPP_CompNovoCID,

            // "Software adaptor to an external program in the TOPP software."
            MS_TOPP_software_adaptor,

            // "Identifies MS2 spectra using the external program Inspect."
            MS_TOPP_InspectAdapter,

            // "Identifies MS2 spectra using the external program Mascot."
            MS_TOPP_MascotAdapter,

            // "Identifies MS2 spectra using the online version of the external program Mascot."
            MS_TOPP_MascotAdapterOnline,

            // "Identifies MS2 spectra using the external program OMSSA."
            MS_TOPP_OMSSAAdapter,

            // "Identifies MS2 spectra using the external program PepNovo."
            MS_TOPP_PepNovoAdapter,

            // "Identifies MS2 spectra using the external program XTandem."
            MS_TOPP_XTandemAdapter,

            // "Identifies peptide MS2 spectra by spectral matching with a searchable spectral library."
            MS_TOPP_SpecLibSearcher,

            // "Computes a consensus identification from peptide identifications of several identification engines."
            MS_TOPP_ConsensusID,

            // "Resolves ambiguous annotations of features with peptide identifications."
            MS_TOPP_IDConflictResolver,

            // "Filters results from protein or peptide identification engines based on different criteria."
            MS_TOPP_IDFilter,

            // "Assigns protein/peptide identifications to feature or consensus features."
            MS_TOPP_IDMapper,

            // "Estimates posterior error probabilities using a mixture model."
            MS_TOPP_IDPosteriorErrorProbability,

            // "Calibrate Retention times of peptide hits to standards."
            MS_TOPP_IDRTCalibration,

            // "Refreshes the protein references for all peptide hits."
            MS_TOPP_PeptideIndexer,

            // "A tool for precursor ion selection based on identification results."
            MS_TOPP_PrecursorIonSelector,

            // "MRMMapper maps measured chromatograms (mzML) and the transitions used (TraML)."
            MS_TOPP_MRMMapper,

            // "OpenSwath component of the TOPP software."
            MS_TOPP_OpenSwath_component,

            // "Picks peaks and finds features in an SRM experiment."
            MS_TOPP_OpenSwathAnalyzer,

            // "Extract chromatograms (XIC) from a MS2 map file."
            MS_TOPP_OpenSwathChromatogramExtractor,

            // "Generates decoys according to different models for a specific TraML."
            MS_TOPP_OpenSwathDecoyGenerator,

            // "Converts a featureXML to a mProphet tsv (tab separated values)."
            MS_TOPP_OpenSwathFeatureXMLToTSV,

            // "Generates a transformation file for retention time space into normalized space."
            MS_TOPP_OpenSwathRTNormalizer,

            // "Infer proteins from a list of (high-confidence) peptides."
            MS_TOPP_ProteinInference,

            // "Estimates the false discovery rate on peptide and protein level using decoy searches."
            MS_TOPP_FalseDiscoveryRate,

            // "Converts, filters, and processes mass spectrometry data in variety of formats."
            MS_ProteoWizard_msconvert,

            // "Converts, filters, and processes identifications from shotgun proteomics experiments."
            MS_ProteoWizard_idconvert,

            // "Filters and processes protein sequence databases."
            MS_ProteoWizard_chainsaw,

            // "Filters, processes, and displays mass spectrometry data in a variety of ways."
            MS_ProteoWizard_msaccess,

            // "An interactive GUI application to view and filter mass spectrometry data in a variety of formats."
            MS_ProteoWizard_SeeMS,

            // "A quantitative software package designed for analysis of IPTL, TMT and iTRAQ data."
            MS_IsobariQ,

            // "The model incorporates data calibration (normalization), a model for the dependence of the variance on the mean intensity, and a variance stabilizing data transformation."
            MS_Variance_stabilizing_normalization,

            // "Quantification analysis using a labelling strategy where both peptide termini are labelled so that the peptides from different labelling schema are isobaric."
            MS_IPTL_quantitation_analysis,

            // "A protein identified by at least one unique (distinct, discrete) peptide (peptides are considered different only if they can be distinguished by evidence in mass spectrum)."
            MS_PAnalyzer_conclusive_protein,

            // "A member of a group of proteins sharing all peptides that are exclusive to the group (peptides are considered different only if they can be distinguished by evidence in mass spectrum)."
            MS_PAnalyzer_indistinguishable_protein,

            // "A protein sharing all its matched peptides with either conclusive or indistinguishable proteins (peptides are considered different only if they can be distinguished by evidence in mass spectrum)."
            MS_PAnalyzer_non_conclusive_protein,

            // "A protein sharing at least one peptide not matched to either conclusive or indistinguishable proteins (peptides are considered different only if they can be distinguished by evidence in mass spectrum)."
            MS_PAnalyzer_ambiguous_group_member,

            // "A putative identified peptide issued from a decoy sequence database."
            MS_decoy_peptide,

            // "Collision energy at the start of the collision energy ramp in percent, normalized to the mass of the ion."
            MS_percent_collision_energy_ramp_start,

            // "Collision energy at the end of the collision energy ramp in percent, normalized to the mass of the ion."
            MS_percent_collision_energy_ramp_end,

            // "A web-based SRM assay design tool whose transitions are generated by mining the millions of identified peptide spectra held in the EBI's PRIDE database."
            MS_MRMaid,

            // "Score in MRMaid to indicate the expected performance of the peptide in SRM."
            MS_MRMaid_peptide_score,

            // "Attribute associated with a SRM transition."
            MS_SRM_transition_attribute,

            // "Probability of detecting precursor when parent protein is present."
            MS_precursor_ion_detection_probability,

            // "Probability of detecting product ion when precursor ion is present."
            MS_product_ion_detection_probability,

            // "Average value of product ion intensity in a collection of identified spectra."
            MS_average_product_ion_intensity,

            // "Standard deviation of product ion intensity in a collection of identified spectra."
            MS_product_ion_intensity_standard_deviation,

            // "The number of times the specific product ion has been observed in a series of SRM experiments."
            MS_number_of_product_ion_observations,

            // "The number of times the specific precursor ion has been observed in a series of SRM experiments."
            MS_number_of_precursor_ion_observations,

            // "Calculated relaxed significance when performing a decoy search for high-confidence peptides."
            MS_ProteomeDiscoverer_Mascot_Significance_Middle,

            // "Calculated relaxed significance when performing a decoy search for medium-confidence peptides."
            MS_ProteomeDiscoverer_Mascot_Significance_High,

            // "(
            MS_regular_expressions_for_a_GUID,

            // "The default FDR calculator as globally unique identifier (GUID)."
            MS_ProteomeDiscoverer_Default_FDR_calculator,

            // "Flag indicating if low-resolution spectra are taken into consideration."
            MS_ProteomeDiscoverer_SEQUEST_Low_resolution_spectra_contained,

            // "Mass-to-charge ratio of a precursor ion selected for fragmentation."
            MS_selected_precursor_m_z,

            // "A score assigned to a single protein accession (modelled as ProteinDetectionHypothesis in mzIdentML), based on summed peptide level scores."
            MS_ProteoGrouper_PDH_score,

            // "A score assigned to a protein group (modelled as ProteinAmbiguityGroup in mzIdentML), based on all summed peptide level scores that have been assigned to the group as unique or razor peptides."
            MS_ProteoGrouper_PAG_score,

            // "A library of Java routines for manipulating mzIdentML files."
            MS_mzidLib,

            // "A converter for OMSSA OMX to mzIdentML."
            MS_mzidLib_Omssa2Mzid,

            // "A converter for Tandem XML to mzIdentML."
            MS_mzidLib_Tandem2Mzid,

            // "A converter for CSV files (following OMSSA CSV style) to mzIdentML."
            MS_mzidLib_Csv2Mzid,

            // "A generic and parameterizable protein inference algorithm for mzIdentML files."
            MS_mzidLib_ProteoGrouper,

            // "A routine for keeping only identifications passing a given threshold or setting passThreshold to true or false for SpectrumIdentificationItem or ProteinDetectionHypothesis in mzIdentML files."
            MS_mzidLib_Thresholder,

            // "A routine for adding emPAI quantitative values to an mzIdentML file."
            MS_mzidLib_Perform_emPAI_on_mzid,

            // "A routine for calculating local FDR, q-value and FDRScore for mzIdentML files, based on a decoy search."
            MS_mzidLib_FalseDiscoveryRate,

            // "A tool for converting mzIdentML files to CSV format."
            MS_mzidLib_Mzidentml2Csv,

            // "A tool for combining results analysed in parallel in two or three search engines into a single mzIdentML file."
            MS_mzidLib_CombineSearchEngines,

            // "A tool for adding additional meta data from a FASTA file to DBSequence entries (sequence and description) in mzIdentML files."
            MS_mzidLib_InsertMetaDataFromFasta,

            // "The SEQUEST result 'SpScore'."
            MS_SEQUEST_spscore,

            // "The SEQUEST result 'SpRank'."
            MS_SEQUEST_sprank,

            // "The SEQUEST result 'DeltaCnStar'."
            MS_SEQUEST_deltacnstar,

            // "Comet open-source sequence search engine developed at the University of Washington."
            MS_Comet,

            // "The Comet result 'XCorr'."
            MS_Comet_xcorr,

            // "The Comet result 'DeltaCn'."
            MS_Comet_deltacn,

            // "The Comet result 'DeltaCnStar'."
            MS_Comet_deltacnstar,

            // "The Comet result 'SpScore'."
            MS_Comet_spscore,

            // "The Comet result 'SpRank'."
            MS_Comet_sprank,

            // "The Comet result 'Expectation value'."
            MS_Comet_expectation_value,

            // "The Comet result 'Matched Ions'."
            MS_Comet_matched_ions,

            // "The Comet result 'Total Ions'."
            MS_Comet_total_ions,

            // "False-discovery rate threshold for peptide-spectrum matches."
            MS_PSM_FDR_threshold,

            // "Byonic search engine from Protein Metrics."
            MS_Byonic,

            // "The Byonic score is the primary indicator of PSM correctness. The Byonic score reflects the absolute quality of the peptide-spectrum match, not the relative quality compared to other candidate peptides. Byonic scores range from 0 to about 1000, with 300 a good score, 400 a very good score, and PSMs with scores over 500 almost sure to be correct."
            MS_Byonic_Score,

            // "The drop in Byonic score from the top-scoring peptide to the next peptide with distinct sequence. In this computation, the same peptide with different modifications is not considered distinct."
            MS_Byonic_Delta_Score,

            // "The drop in Byonic score from the top-scoring peptide to the next peptide different in any way, including placement of modifications. DeltaMod gives an indication of whether modifications are confidently localized; DeltaMod over 10.0 means that there is high likelihood that all modification placements are correct."
            MS_Byonic_DeltaMod_Score,

            // "Byonic posterior error probability."
            MS_Byonic_PEP,

            // "The log p-value of the PSM. This is the log of the probability that the PSM with such a score and delta would arise by chance in a search of this size (size of the protein database, as expanded by the modification rules). A log p-value of -3.0 should happen by chance on only one of a thousand spectra. Caveat: it is very hard to compute a p-value that works for all searches and all spectra, so read Byonic p-values with a certain amount of skepticism."
            MS_Byonic_Peptide_LogProb,

            // "The log p-value of the protein."
            MS_Byonic_Protein_LogProb,

            // "Best (most negative) log p-value of an individual PSM."
            MS_Byonic_Best_LogProb,

            // "Best (largest) Byonic score of a PSM."
            MS_Byonic_Best_Score,

            // "A technique by which molecules are separated by chemical and physical properties such as hydrophobicity or vapour pressure."
            MS_chromatography_separation,

            // "Liquid chromatography (LC) is a separation technique in which the mobile phase is a liquid."
            MS_liquid_chromatography_separation,

            // "Gas chromatography (GC) is a separation technique in which the mobile phase is a gas."
            MS_gas_chromatography_separation,

            // "Detector potential difference in volts."
            MS_detector_potential,

            // "Waters quadrupole based SQ Detector 2."
            MS_SQ_Detector_2_,

            // "Waters oa-ToF based Xevo G2-S Tof."
            MS_Xevo_G2_S_Tof,

            // "Waters oa-ToF based Xevo G2-S QTof."
            MS_Xevo_G2_S_QTof,

            // "Waters AutoSpec Premier."
            MS_AutoSpec_Premier,

            // "LECO nominal mass resolution time-of-flight GC mass spectrometer."
            MS_Pegasus_III,

            // "Bruker Daltonics' maXis 4G: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray."
            MS_maXis_4G,

            // "Bruker Daltonics' compact: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray."
            MS_compact,

            // "Selected Reaction Monitoring feature level quantitation."
            MS_SRM_feature_level_quantitation,

            // "Selected Reaction Monitoring peptide level quantitation."
            MS_SRM_peptide_level_quantitation,

            // "Selected Reaction Monitoring protein level quantitation."
            MS_SRM_protein_level_quantitation,

            // "Selected Reaction Monitoring proteingroup level quantitation."
            MS_SRM_proteingroup_level_quantitation,

            // "A suite of open source tools for the processing of MS2 proteomics data developed by the Seattle Proteome Center at the Institute for Systems Biology."
            MS_Trans_Proteomic_Pipeline,

            // "A software program that is a component of the Trans-Proteomic Pipeline."
            MS_Trans_Proteomic_Pipeline_software,

            // "A program in the TPP that calculates PSM probabilities for MS2 proteomics data searched with any of the supported sequence or spectral library search engines via the pepXML format."
            MS_PeptideProphet,

            // "A program in the TPP that calculates distinct peptide probabilities based on several lines of corroborating evidence including search results from multiple search engines via the pepXML format."
            MS_iProphet,

            // "A program in the TPP that calculates protein-level probabilities based on input PSM or peptide-level probabilities from PeptideProphet or iProphet. The output is written in the protXML format."
            MS_ProteinProphet,

            // "A program in the TPP that calculates PSM, peptide, and protein-level abundances based on 2-channel isotope-labelled data such as ICAT, SILAC, etc."
            MS_ASAPRatio,

            // "A program in the TPP that calculates PSM-level abundances based on 2-channel isotope-labelled data such as ICAT, SILAC, etc."
            MS_XPRESS,

            // "A program in the TPP that calculates PSM, peptide, and protein-level abundances based on N-channel isobaric label peptide data such as iTRAQ, TMT, etc."
            MS_Libra,

            // "A program in the TPP that calculates PTM localization probabilities by re-analyzing the peaks that are available to distinguish between possible modification sites."
            MS_PTMProphet,

            // "Bruker Daltonics' SCION series."
            MS_Bruker_Daltonics_SCION_series,

            // "Bruker Daltonics' EVOQ series."
            MS_Bruker_Daltonics_EVOQ_series,

            // "Bruker Daltonics' SCION SQ: GC-single quadrupole."
            MS_SCION_SQ,

            // "Bruker Daltonics' SCION TQ: GC-triple quadrupole."
            MS_SCION_TQ,

            // "Bruker Daltonics' EVOQ Elite: LC-triple quadrupole."
            MS_EVOQ_Elite,

            // "Bruker Daltonics' EVOQ Qube: LC-triple quadrupole."
            MS_EVOQ_Qube,

            // "Bruker Daltonics' micrOTOF-Q III: ESI Q-TOF, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray."
            MS_micrOTOF_Q_III,

            // "Bruker Daltonics' amaZon Speed ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR, GC-APCI, CaptiveSpray."
            MS_amaZon_Speed_ETD,

            // "Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, GC-APCI, CaptiveSpray."
            MS_amaZon_Speed,

            // "Bruker Container raw file format."
            MS_Bruker_Container_format,

            // "Native identifier (UUID)."
            MS_Bruker_Container_nativeID_format,

            // "Domain range of a numerical value."
            MS_domain_range,

            // "Value range for probabilities."
            MS_value_between_0_and_1_inclusive,

            // "Positive value range."
            MS_value_greater_than_zero,

            // "Type of fragment ion based on where the backbone breaks, such as a y ion or a c ion."
            MS_fragmentation_ion_type,

            // "A detector using a fluorescent signal after excitation with light."
            MS_fluorescence_detector,

            // "The absolute value of the log-base10 of the Byonic posterior error probability (PEP) of the PSM."
            MS_Byonic__Peptide_AbsLogProb,

            // "The absolute value of the log-base10 of the Byonic posterior error probability (PEP) of the protein."
            MS_Byonic__Protein_AbsLogProb,

            // "The absolute value of the log-base10 Byonic two-dimensional posterior error probability (PEP) of the PSM. The two-dimensional PEP takes into account protein ranking information as well as PSM information."
            MS_Byonic__Peptide_AbsLogProb2D,

            // "Compression using MS-Numpress linear prediction compression."
            MS_MS_Numpress_linear_prediction_compression,

            // "Compression using MS-Numpress positive integer compression."
            MS_MS_Numpress_positive_integer_compression,

            // "Compression using MS-Numpress short logged float compression."
            MS_MS_Numpress_short_logged_float_compression,

            // "Indicates a consensus result from several search engine runs."
            MS_consensus_result,

            // "Strict confidence probability score."
            MS_ProteomeDiscoverer_Amanda_high_confidence_threshold,

            // "Relaxed confidence probability score."
            MS_ProteomeDiscoverer_Amanda_middle_confidence_threshold,

            // "Flag indicating automatic estimation of the workload level."
            MS_ProteomeDiscoverer_automatic_workload,

            // "The Amanda score of the scoring function for a PSM."
            MS_Amanda_AmandaScore,

            // "Maximum dynamic modifications per PSM."
            MS_ProteomeDiscoverer_max_differential_modifications,

            // "Maximum equal modifications per PSM."
            MS_ProteomeDiscoverer_max_equal_modifications,

            // "Minimum peptide length."
            MS_ProteomeDiscoverer_min_peptide_length,

            // "Maximum peptide length."
            MS_ProteomeDiscoverer_max_peptide_length,

            // "Maximum number of same neutral losses."
            MS_ProteomeDiscoverer_max_number_neutral_loss,

            // "Max number of same neutral losses of modifications."
            MS_ProteomeDiscoverer_max_number_neutral_loss_modifications,

            // "Flag for usage of flanking ions."
            MS_ProteomeDiscoverer_use_flanking_ions,

            // "The maximum number of possible equal modifications per PSM."
            MS_ProteomeDiscoverer_max_number_of_same_modifs,

            // "Defines whether a simple deisotoping shall be performed."
            MS_ProteomeDiscoverer_perform_deisotoping,

            // "Specifies the fragment ions and neutral losses that are calculated."
            MS_ProteomeDiscoverer_ion_settings,

            // "OBSOLETE ProteomeDiscoverer's 3rd static post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_3__Static_Modification_OBSOLETE,

            // "OBSOLETE ProteomeDiscoverer's 5th dynamic post-translational modification (PTM) input parameter."
            MS_ProteomeDiscoverer_5__Dynamic_Modification_OBSOLETE,

            // "The scientist responsible for personnel, grants, and instrumentation in a functional laboratory group."
            MS_lab_head,

            // "Computer software primarily designed to convert data represented in one format to another format, sometimes with minor data alterations in the process."
            MS_conversion_software,

            // "Java software designed to convert one of several proteomics identification results formats into mzIdentML or PRIDE XML."
            MS_ProCon,

            // "Java software designed to convert one of several proteomics identification results formats into PRIDE XML."
            MS_PRIDE_Converter2,

            // "Amanda scoring system for PSM identification."
            MS_Amanda,

            // "Andromeda is a peptide search engine."
            MS_Andromeda,

            // "The probability based score of the Andromeda search engine."
            MS_Andromeda_score,

            // "Estimation of global false discovery rate of peptides with a post-translational modification."
            MS_site_global_FDR,

            // "Tag that can be added to a ProteomeXchange dataset, to enable the grouping of datasets. One tag can be used for indicating that a given dataset is part of a bigger project, like e.g. the Human Proteome Project."
            MS_ProteomeXchange_project_tag,

            // "A putative identified peptide found in a second-pass search of protein sequences selected from a first-pass search."
            MS_second_pass_peptide_identification,

            // "A framework for differential analysis of mass spectrometry data."
            MS_MZmine,

            // "OBSOLETE Stability type of the ion."
            MS_ion_stability_type_OBSOLETE,

            // "Modular Application Toolkit for Chromatography Mass-Spectrometry is an application framework mainly for developers."
            MS_Maltcms,

            // "Peptide spectrum match level information."
            MS_PSM_level_result_details,

            // "Protein group level information."
            MS_protein_group_level_result_details,

            // "Identification confidence metric for a peptide spectrum match."
            MS_PSM_level_identification_confidence_metric,

            // "Identification confidence metric for a protein group."
            MS_protein_group_level_identification_confidence_metric,

            // "Positive value range less than or equal to 1."
            MS_value_greater_than_zero_but_less_than_or_equal_to_one,

            // "Estimation of the global false discovery rate of peptide spectrum matches."
            MS_PSM_level_global_FDR,

            // "Estimation of the local false discovery rate of peptide spectrum matches."
            MS_PSM_level_local_FDR,

            // "Estimation of the p-value for peptide spectrum matches."
            MS_PSM_level_p_value,

            // "Estimation of the e-value for peptide spectrum matches."
            MS_PSM_level_e_value,

            // "Estimation of the q-value for peptide spectrum matches."
            MS_PSM_level_q_value,

            // "FDRScore for peptide spectrum matches."
            MS_PSM_level_FDRScore,

            // "Combined FDRScore for peptide spectrum matches specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools."
            MS_PSM_level_combined_FDRScore,

            // "Probability that the reported peptide ion is truly responsible for some or all of the components of the specified mass spectrum."
            MS_PSM_level_probability,

            // "Search engine specific distinct peptide score."
            MS_search_engine_specific_score_for_distinct_peptides,

            // "Estimation of the local false discovery rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_local_FDR,

            // "FDRScore for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_FDRScore,

            // "Combined FDRScore for peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry) specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given peptide, used for integrating results from these distinct pools."
            MS_distinct_peptide_level_combined_FDRScore,

            // "Probability that the reported distinct peptide sequence (irrespective of mass modifications) has been correctly identified via the referenced PSMs."
            MS_distinct_peptide_level_probability,

            // "Search engine specific protein scores."
            MS_search_engine_specific_score_for_proteins,

            // "Estimation of the local false discovery rate of proteins."
            MS_protein_level_local_FDR,

            // "FDRScore for proteins specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools."
            MS_FDRScore_for_proteins,

            // "Combined FDRScore for proteins."
            MS_combined_FDRScore_for_proteins,

            // "Probability that a specific protein sequence has been correctly identified from the PSM and distinct peptide evidence, and based on the available protein sequences presented to the analysis software."
            MS_probability_for_proteins,

            // "Search engine specific protein group scores."
            MS_search_engine_specific_score_for_protein_groups,

            // "Estimation of the global false discovery rate of protein groups."
            MS_protein_group_level_global_FDR,

            // "Estimation of the local false discovery rate of protein groups."
            MS_protein_group_level_local_FDR,

            // "Estimation of the p-value for protein groups."
            MS_protein_group_level_p_value,

            // "Estimation of the e-value for protein groups."
            MS_protein_group_level_e_value,

            // "Estimation of the q-value for protein groups."
            MS_protein_group_level_q_value,

            // "FDRScore for protein groups."
            MS_protein_group_level_FDRScore,

            // "Combined FDRScore for proteins specifically obtained for distinct combinations of single, pairs or triplets of search engines making a given PSM, used for integrating results from these distinct pools."
            MS_protein_group_level_combined_FDRScore,

            // "Probability that at least one of the members of a group of protein sequences has been correctly identified from the PSM and distinct peptide evidence, and based on the available protein sequences presented to the analysis software."
            MS_protein_group_level_probability,

            // "Specifies the threshold value for relaxed scoring."
            MS_ProteomeDiscoverer_Relaxed_Score_Threshold,

            // "Specifies the threshold value for strict scoring."
            MS_ProteomeDiscoverer_Strict_Score_Threshold,

            // "Cut off score for storing peptides that do not belong to a protein."
            MS_ProteomeDiscoverer_Peptide_Without_Protein_Cut_Off_Score,

            // "Estimation of the false localization rate for modification site assignment."
            MS_false_localization_rate,

            // "Software for automated LC-MALDI analysis and reporting."
            MS_MALDI_Solutions_LC_MALDI,

            // "Shimadzu MALDI-7090: MALDI-TOF-TOF."
            MS_Shimadzu_MALDI_7090,

            // "SCiLS software for data acquisition and analysis."
            MS_SCiLS_software,

            // "SCiLS Lab software."
            MS_SCiLS_Lab,

            // "SCiLS Lab file format."
            MS_SCiLS_Lab_format,

            // "Preprocessing software."
            MS_preprocessing_software,

            // "PIA - Protein Inference Algorithms, a toolbox for protein inference and identification analysis."
            MS_PIA,

            // "A compilation of search engine results in the PIA XML format."
            MS_PIA_XML_format,

            // "A parameter set for a single PIA analysis."
            MS_PIA_workflow_parameter,

            // "Indicates whether the FDR score was calculated for the input file."
            MS_PIA_FDRScore_calculated,

            // "Indicates whether the combined FDR score was calculated for the PIA compilation."
            MS_PIA_Combined_FDRScore_calculated,

            // "Indicates whether PSM sets were created."
            MS_PIA_PSM_sets_created,

            // "The number of top identifications per spectrum used for the FDR calculation, 0 means all."
            MS_PIA_used_top_identifications_for_FDR,

            // "The score given to a protein by any protein inference."
            MS_PIA_protein_score,

            // "The used algorithm for the protein inference using PIA."
            MS_PIA_protein_inference,

            // "A filter used by PIA for the protein inference."
            MS_PIA_protein_inference_filter,

            // "The used scoring method for the protein inference using PIA."
            MS_PIA_protein_inference_scoring,

            // "The used base score for the protein inference using PIA."
            MS_PIA_protein_inference_used_score,

            // "The method to determine the PSMs used for scoring by the protein inference."
            MS_PIA_protein_inference_used_PSMs,

            // "A filter used for the report generation."
            MS_PIA_filter,

            // "At least one protein within each group should be annotated as a leading protein to indicate it has the strongest evidence, or approximately equal evidence as other group members."
            MS_leading_protein,

            // "Zero to many proteins within each group should be annotated as non-leading to indicate that other proteins have stronger evidence."
            MS_non_leading_protein,

            // "An arbitrary and optional flag applied to exactly one protein per group to indicate it can serve as the representative of the group, amongst leading proteins, in effect serving as a tiebreaker for approaches that require exactly one group representative."
            MS_group_representative,

            // "The number of proteins that have been identified, which must match the number of groups that pass the threshold in the file."
            MS_count_of_identified_proteins,

            // "Details describing a protein cluster."
            MS_protein_cluster_details,

            // "The number of protein clusters that have been identified, which must match the number of clusters that pass the threshold in the file."
            MS_count_of_identified_clusters,

            // "An identifier applied to protein groups to indicate that they are linked by shared peptides."
            MS_cluster_identifier,

            // "The number of protein clusters that have been identified, which must match the number of clusters that pass the threshold in the file."
            MS_number_of_distinct_protein_sequences,

            // "Assigned to a non-leading protein that has some independent evidence to support its presence relative to the leading protein(s), e.g. the protein may have a unique peptide but not sufficient to be promoted as a leading protein of another group."
            MS_marginally_distinguished_protein,

            // "Anubis software for selected reaction monitoring data."
            MS_Anubis,

            // "The TraML format for transitions in SRM from the PSI. File extension '.TraML'."
            MS_TraML_format,

            // "Summed area of all the extracted ion chromatogram for the peptide (e.g. of all the transitions in SRM)."
            MS_total_XIC_area,

            // "The background area for the quantified transition."
            MS_product_background,

            // "Postprocessing software."
            MS_postprocessing_software,

            // "A Boolean attribute to determine whether the protein group has passed the threshold indicated in the file."
            MS_protein_group_passes_threshold,

            // "Thermo Scientific Orbitrap Fusion."
            MS_Orbitrap_Fusion,

            // "Thermo Scientific Orbitrap Fusion with ETD."
            MS_Orbitrap_Fusion_ETD,

            // "Thermo Scientific TSQ Quantiva MS."
            MS_TSQ_Quantiva,

            // "Thermo Scientific TSQ Endura MS."
            MS_TSQ_Endura,

            // "URI that allows access to a PASSEL experiment."
            MS_PASSEL_experiment_URI,

            // "Search engine input parameters specific to Paragon."
            MS_Paragon_input_parameter,

            // "The Paragon method setting indicating the type of sample at the high level, generally meaning the type of quantitation labelling or lack thereof. 'Identification' is indicated for samples without any labels for quantitation."
            MS_Paragon__sample_type,

            // "The Paragon method setting indicating the actual cysteine alkylation agent; 'None' is indicated if there was no cysteine alkylation."
            MS_Paragon__cysteine_alkylation,

            // "The Paragon method setting (translating to a large number of lower level settings) indicating the instrument used or a category of instrument."
            MS_Paragon__instrument_setting,

            // "The Paragon method setting that controls the two major modes of search effort of the Paragon algorithm: the Rapid mode uses a conventional database search, while the Thorough mode uses a hybrid search, starting with the same approach as the Rapid mode but then follows it with a separate tag-based approach enabling a more extensive search."
            MS_Paragon__search_effort,

            // "A Paragon method setting that allows the inclusion of large sets of features such as biological modification or substitutions."
            MS_Paragon__ID_focus,

            // "The Paragon method setting that controls whether FDR analysis is conducted."
            MS_Paragon__FDR_analysis,

            // "The Paragon method setting that controls whether quantitation analysis is conducted."
            MS_Paragon__quantitation,

            // "The Paragon method setting that controls whether the 'Background Correction' analysis is conducted; this processing estimates a correction to the attenuation in extremity ratios that can occur in isobaric quantatitation workflows on complex samples."
            MS_Paragon__background_correction,

            // "The Paragon method setting that controls whether 'Bias Correction' is invoked in quantitation analysis; this correction is a normalization to set the central tendency of protein ratios to unity."
            MS_Paragon__bias_correction,

            // "The Paragon method setting that controls which label channel is used as the denominator in calculating relative expression ratios."
            MS_Paragon__channel_to_use_as_denominator_in_ratios,

            // "Search engine specific metadata that are not user-controlled settings."
            MS_search_engine_specific_input_metadata,

            // "This metric detects if any changes have been made to the originally installed key control files for the software; if no changes have been made, then the software version and settings are sufficient to enable exact reproduction; if changes have been made, then the modified ParameterTranslation- and ProteinPilot DataDictionary-XML files much also be provided in order to exactly reproduce a result."
            MS_Paragon__modified_data_dictionary_or_parameter_translation,

            // "Number of spectra in a search."
            MS_number_of_spectra_searched,

            // "The time that a data processing action was started."
            MS_data_processing_start_time,

            // "The Paragon method setting indicating the actual digestion agent - unlike other search tools, this setting does not include options that control partial specificity like 'semitrypsin'; if trypsin is used, trypsin is set, and partially conforming peptides are found in the Thorough mode of search; 'None' should be indicated only if there was really no digestion done."
            MS_Paragon__digestion,

            // "The number of decoy sequences, if the concatenated target-decoy approach is used."
            MS_number_of_decoy_sequences,

            // "Information about the list of PSMs (SpectrumIdentificationList)."
            MS_spectrum_identification_list_result_details,

            // "A flag on a list of PSMs (SpectrumIdentificationList) to indicate that this is the final set of identifications to be interpreted by consuming software. Amongst the set of SpectrumIdentificationList(s) that are flagged with the term, each spectrum must not be referenced from more than one SpectrumIdentificationResult."
            MS_final_PSM_list,

            // "A flag on a list of PSMs (SpectrumIdentificationList) to indicate that this is not the final set of identifications to be interpreted by consuming software. This term should be used when results are provided from multiple search engines for the results from each search engine before they are combined to give consensus identifications. Amongst the set of SpectrumIdentificationList(s) that are flagged with the term, each spectrum may be referenced from more than one SpectrumIdentificationResult."
            MS_intermediate_PSM_list,

            // "AIA Analytical Data Interchange file format for mass spectrometry data."
            MS_Andi_MS_format,

            // "The format of the chromatography file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format."
            MS_chromatograph_file_format,

            // "AIA Analytical Data Interchange file format for chromatography data."
            MS_Andi_CHROM_format,

            // "The 6420 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer."
            MS_6420_Triple_Quadrupole_LC_MS,

            // "The 6460 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. It is similar to the 6420 but adds Agilent Jet Stream (AJS) technology to increase sensitivity."
            MS_6460_Triple_Quadrupole_LC_MS,

            // "The 6490 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. It is similar to the 6420 but adds the Agilent iFunnel technology to increase sensitivity."
            MS_6490_Triple_Quadrupole_LC_MS,

            // "The Paragon method setting indicating a list of one or more 'special factors', which generally capture secondary effects (relative to other settings) as a set of probabilities of modification features that override the assumed levels. For example the 'gel-based ID' special factor causes an increase probability of oxidation on several resides because of the air exposure impact on a gel, in addition to other effects."
            MS_Paragon_special_factor,

            // "The PEAKS inChorus peptide score."
            MS_PEAKS_inChorusPeptideScore,

            // "The PEAKS inChorus protein score."
            MS_PEAKS_inChorusProteinScore,

            // "Ion b-H3PO4: b ion with lost phosphoric acid."
            MS_param__b_ion_H3PO4_DEPRECATED,

            // "Ion y-H3PO4: y ion with lost phosphoric acid."
            MS_param__y_ion_H3PO4_DEPRECATED,

            // "The Maltcms Graphical User Interface."
            MS_Maui,

            // "No fixed modifications are included as a parameter for the search, and therefore they are not reported."
            MS_No_fixed_modifications_searched,

            // "No variable modifications are included as a parameter for the search, and therefore they are not reported."
            MS_No_variable_modifications_searched,

            // "Neutral loss of water."
            MS_H2O_neutral_loss,

            // "Neutral loss of ammonia."
            MS_NH3_neutral_loss,

            // "Neutral loss of phosphoric acid."
            MS_H3PO4_neutral_loss,

            // "PeptideShaker is a software for the interpretation of proteomics identification results."
            MS_PeptideShaker,

            // "MS Amanda csv output format."
            MS_MS_Amanda_csv_format,

            // "Estimation of the global false negative rate of protein groups."
            MS_protein_group_level_global_FNR,

            // "Estimation of the global confidence of protein groups."
            MS_protein_group_level_confidence,

            // "Estimation of the global false negative rate for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_global_FNR,

            // "Estimation of the global confidence for distinct peptides once redundant identifications of the same peptide have been removed (id est multiple PSMs have been collapsed to one entry)."
            MS_distinct_peptide_level_global_confidence,

            // "Estimation of the global false negative rate of peptide spectrum matches."
            MS_PSM_level_global_FNR,

            // "Estimation of the global confidence of peptide spectrum matches."
            MS_PSM_level_global_confidence,

            // "The probability based PeptideShaker PSM score."
            MS_PeptideShaker_PSM_score,

            // "The probability based PeptideShaker PSM confidence."
            MS_PeptideShaker_PSM_confidence,

            // "The probability based PeptideShaker peptide score."
            MS_PeptideShaker_peptide_score,

            // "The probability based PeptideShaker peptide confidence."
            MS_PeptideShaker_peptide_confidence,

            // "The probability based PeptideShaker protein group score."
            MS_PeptideShaker_protein_group_score,

            // "The probability based PeptideShaker protein group confidence."
            MS_PeptideShaker_protein_group_confidence,

            // "A collision-induced dissociation process that occurs in a trap-type collision cell."
            MS_trap_type_collision_induced_dissociation,

            // "The description of the ion fragment series (including charges and neutral losses) that are considered by the search engine."
            MS_ion_series_considered_in_search,

            // "The sum of peptide-level scores for peptides mapped only to non-canonical gene models within the group."
            MS_ProteoAnnotator_non_canonical_gene_model_score,

            // "The count of the number of peptide sequences mapped to non-canonical gene models only within the group."
            MS_ProteoAnnotator_count_alternative_peptides,

            // "Drift time of an ion or spectrum of ions as measured in an ion mobility mass spectrometer. This time might refer to the central value of a bin into which all ions within a narrow range of drift time have been aggregated."
            MS_ion_mobility_drift_time,

            // "Array of drift times, averaged from a matrix of binned m/z and drift time values, corresponding to spectrum of individual peaks encoded with an m/z array."
            MS_mean_drift_time_array,

            // "Array of mean charge values where the mean charge is calculated as a weighted mean of the charges of individual peaks that are aggregated into a processed spectrum."
            MS_mean_charge_array,

            // "Regular expression."
            MS_regular_expression,

            // "(10
            MS_regular_expression_for_a_digital_object_identifier__DOI_,

            // "A collision-induced dissociation process wherein the projectile ion has the translational energy higher than approximately 1000 eV."
            MS_higher_energy_beam_type_collision_induced_dissociation,

            // "Estimated statistical threshold."
            MS_statistical_threshold,

            // "Estimated statistical threshold at PSM-level."
            MS_PSM_level_statistical_threshold,

            // "Estimated statistical threshold at peptide-level."
            MS_peptide_level_statistical_threshold,

            // "Estimated statistical threshold at protein-level."
            MS_protein_level_statistical_threshold,

            // "Estimated statistical threshold at protein group-level."
            MS_protein_group_level_statistical_threshold,

            // "Dataset identifier issued by the MassIVE repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication."
            MS_MassIVE_dataset_identifier,

            // "URI that allows the access to one dataset in the MassIVE repository. A dataset can refer to either a single sample as part of a study, or all samples that are part of the study corresponding to a publication."
            MS_MassIVE_dataset_URI,

            // "Details describing a special processing."
            MS_special_processing,

            // "Peptide-level scoring performed."
            MS_peptide_level_scoring,

            // "Modification localization scoring performed."
            MS_modification_localization_scoring,

            // "Consensus multiple search engine approach performed."
            MS_consensus_scoring,

            // "Sample pre-fractionation performed."
            MS_sample_pre_fractionation,

            // "Cross-linking search performed."
            MS_cross_linking_search,

            // "No special processing performed."
            MS_no_special_processing,

            // "Group PSMs by distinct peptide sequence ignoring modifications."
            MS_group_PSMs_by_sequence,

            // "Group PSMs by distinct peptide sequence with taking modifications into account."
            MS_group_PSMs_by_sequence_with_modifications,

            // "Group PSMs by distinct peptide sequence with taking modifications and charge into account."
            MS_group_PSMs_by_sequence_with_modifications_and_charge,

            // "Peptide level score."
            MS_peptide_level_score,

            // "A Boolean attribute to determine whether the peptide has passed the threshold indicated in the file."
            MS_peptide_passes_threshold,

            // "Indicating that no PSM threshold was used."
            MS_no_PSM_threshold,

            // "Indicating that no peptide-level threshold was used."
            MS_no_peptide_level_threshold,

            // "Flags a PSM that it is used for peptide-level scoring."
            MS_PSM_is_used_for_peptide_level_scoring,

            // "The order of modifications to be referenced elsewhere in the document."
            MS_modification_index,

            // "(
            MS_regular_expression_for_modification_localization_scoring,

            // "Modification position score."
            MS_modification_position_score,

            // "Mod position score: false localization rate."
            MS_modification_rescoring_false_localization_rate,

            // "Cross-linking attribute."
            MS_cross_linking_attribute,

            // "The Cross-linking donor, assigned according to the following rules: the export software SHOULD use the following rules to choose the cross-link donor as the: longer peptide, then higher peptide neutral mass, then alphabetical order."
            MS_cross_link_donor,

            // "Cross-linking receiver, assigned according to the following rules: the export software SHOULD use the following rules to choose the cross-link donor as the: longer peptide, then higher peptide neutral mass, then alphabetical order."
            MS_cross_link_receiver,

            // "Cross-linked spectrum identification item."
            MS_cross_link_spectrum_identification_item,

            // "Cross-linking scoring value."
            MS_cross_linking_score,

            // "The absolute abundance of protein in a cell."
            MS_molecules_per_cell_,

            // "Absolute quantitation analysis."
            MS_absolute_quantitation_analysis,

            // "States whether an internal peptide reference is used or not in absolute quantitation analysis."
            MS_internal_peptide_reference_used,

            // "States whether an internal protein reference is used or not in absolute quantitation analysis."
            MS_internal_protein_reference_used,

            // "The absolute abundance of the spiked in reference peptide or protein used for absolute quantitation analysis."
            MS_internal_reference_abundance,

            // "The data type normalised abundance for protein groups produced by Progenesis LC-MS."
            MS_Progenesis_protein_group_normalised_abundance,

            // "The data type raw abundance for protein groups produced by Progenesis LC-MS."
            MS_Progenesis_protein_group_raw_abundance,

            // "Peptide group identifier for peptide-level stats."
            MS_peptide_group_ID,

            // "A technique in which mass spectra are acquired in a spatially resolved manner. This is typically achieved by scanning a laser or primary ion beam over a sample and acquiring a mass spectrum at each position."
            MS_mass_spectrometry_imaging,

            // "Determine 1st static terminal post-translational modifications (PTMs)."
            MS_ProteomeDiscoverer_1__Static_Terminal_Modification,

            // "Thermo Scientific Q Exactive."
            MS_Q_Exactive_HF,

            // "Thermo Scientific PepFinder BioPharma analysis software."
            MS_PepFinder,

            // "Thermo Scientific TSQ 8000 Evo MS."
            MS_TSQ_8000_Evo,

            // "Thermo Scientific Exactive Plus MS."
            MS_Exactive_Plus,

            // "Instrument specific scan properties that are associated with a value."
            MS_instrument_specific_scan_attribute,

            // "Synchronous prefilter selection."
            MS_synchronous_prefilter_selection,

            // "A data array of resolution values."
            MS_resolution_array,

            // "A data array of signal baseline values (the signal in the absence of analytes)."
            MS_baseline_array,

            // "SQLite-based file format created at Pacific Northwest National Lab. It stores an intermediate analysis of ion-mobility mass spectrometry data."
            MS_UIMF_format,

            // "Native format defined by frame=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger frameType=xsd:nonNegativeInteger."
            MS_UIMF_nativeID_format,

            // "AB SCIEX TripleTOF 6600, a quadrupole - quadrupole - time-of-flight mass spectrometer."
            MS_TripleTOF_6600,

            // "The ProLuCID result 'XCorr'."
            MS_ProLuCID_xcorr,

            // "The ProLuCID result 'DeltaCn'."
            MS_ProLuCID_deltacn,

            // "D-Score for PTM site location at the PSM-level."
            MS_D_Score,

            // "MD-Score for PTM site location at the PSM-level."
            MS_MD_Score,

            // "Localization confidence metric for a post translational modification (PTM)."
            MS_PTM_localization_confidence_metric,

            // "PeptideShaker quality criteria for the confidence of PTM localizations."
            MS_PeptideShaker_PTM_confidence_type,

            // "PeptideShaker quality criteria for the confidence of PSM's."
            MS_PeptideShaker_PSM_confidence_type,

            // "PeptideShaker quality criteria for the confidence of peptide identifications."
            MS_PeptideShaker_peptide_confidence_type,

            // "PeptideShaker quality criteria for the confidence of protein identifications."
            MS_PeptideShaker_protein_confidence_type,

            // "Target/Decoy based FDR estimation for cross-linking peptide-identifications."
            MS_xiFDR,

            // "Search engine for cross-linked peptides."
            MS_xi,

            // "The xi result 'Score'."
            MS_xi_score,

            // "A software package to convert Skyline report to mzQuantML."
            MS_Skyline_mzQuantML_converter_,

            // "A normalized spectral abundance factor (NSAF)."
            MS_normalized_spectral_abundance_factor,

            // "A distributed normalized spectral abundance factor (dNSAF."
            MS_distributed_normalized_spectral_abundance_factor,

            // "A score that assign confidence to the localization of an amino acid modification on a peptide sequence at the peptide-level."
            MS_peptide_level_PTM_localization_score,

            // "phosphoRS score for PTM site location at the peptide-level."
            MS_peptide_phosphoRS_score,

            // "A-score for PTM site location at the peptide-level."
            MS_peptide_Ascore,

            // "H-Score for peptide phosphorylation site location at the peptide-level."
            MS_peptide_H_Score,

            // "D-Score for PTM site location at the peptide-level."
            MS_peptide_D_Score,

            // "MD-Score for PTM site location at the peptide-level."
            MS_peptide_MD_Score,

            // "Threshold for PTM site location score."
            MS_PTM_localization_score_threshold,

            // "Threshold for Ascore PTM site location score."
            MS_Ascore_threshold,

            // "Threshold for D-score PTM site location score."
            MS_D_Score_threshold,

            // "Threshold for MD-score PTM site location score."
            MS_MD_Score_threshold,

            // "Threshold for H-score PTM site location score."
            MS_H_Score_threshold,

            // "Threshold for DeBunker PTM site location score."
            MS_DeBunker_score_threshold,

            // "Threshold for Mascot PTM site assignment confidence."
            MS_Mascot_PTM_site_assignment_confidence_threshold,

            // "Threshold for MSQuant:PTM-score."
            MS_MSQuant_PTM_score_threshold,

            // "Threshold for MaxQuant:PTM Score."
            MS_MaxQuant_PTM_Score_threshold,

            // "Threshold for MaxQuant:P-site localization probability."
            MS_MaxQuant_P_site_localization_probability_threshold,

            // "Threshold for MaxQuant:PTM Delta Score."
            MS_MaxQuant_PTM_Delta_Score_threshold,

            // "Threshold for MaxQuant:Phospho (STY) Probabilities."
            MS_MaxQuant_Phospho__STY__Probabilities_threshold,

            // "Threshold for phosphoRS score."
            MS_phosphoRS_score_threshold,

            // "Threshold for phosphoRS site probability."
            MS_phosphoRS_site_probability_threshold,

            // "Number of spectra processed at once in a ProteomeDiscoverer search."
            MS_ProteomeDiscoverer_Number_of_Spectra_Processed_At_Once,

            // "A protein for which the matched peptide sequences are the same, or a subset of, the matched peptide sequences for two or more other proteins combined. These other proteins need not all be in the same group."
            MS_sequence_multiply_subsumable_protein,

            // "A protein for which the matched spectra are the same, or a subset of, the matched spectra for two or more other proteins combined. These other proteins need not all be in the same group."
            MS_spectrum_multiply_subsumable_protein,

            // "Estimated statistical threshold used for protein detection."
            MS_protein_detection_statistical_threshold,

            // "Estimated statistical threshold used for spectrum identification."
            MS_spectrum_identification_statistical_threshold,

            // "The root node of the unimod modifications ontology."
            UNIMOD_unimod_root_node,

            // "Acetylation."
            UNIMOD_Acetyl,

            // "Amidation."
            UNIMOD_Amidated,

            // "Biotinylation."
            UNIMOD_Biotin,

            // "Iodoacetamide derivative."
            UNIMOD_Carbamidomethyl,

            // "Carbamylation."
            UNIMOD_Carbamyl,

            // "Iodoacetic acid derivative."
            UNIMOD_Carboxymethyl,

            // "Deamidation."
            UNIMOD_Deamidated,

            // "Gygi ICAT(TM) d0."
            UNIMOD_ICAT_G,

            // "Gygi ICAT(TM) d8."
            UNIMOD_ICAT_G_2H_8_,

            // "Homoserine."
            UNIMOD_Met__Hse,

            // "Homoserine lactone."
            UNIMOD_Met__Hsl,

            // "Applied Biosystems original ICAT(TM) d8."
            UNIMOD_ICAT_D_2H_8_,

            // "Applied Biosystems original ICAT(TM) d0."
            UNIMOD_ICAT_D,

            // "N-isopropylcarboxamidomethyl."
            UNIMOD_NIPCAM,

            // "Biotinyl-iodoacetamidyl-3,6-dioxaoctanediamine."
            UNIMOD_PEO_Iodoacetyl_LC_Biotin,

            // "Phosphorylation."
            UNIMOD_Phospho,

            // "Dehydration."
            UNIMOD_Dehydrated,

            // "Acrylamide adduct."
            UNIMOD_Propionamide,

            // "Pyridylacetyl."
            UNIMOD_Pyridylacetyl,

            // "S-carbamoylmethylcysteine cyclization (N-terminus)."
            UNIMOD_Pyro_carbamidomethyl,

            // "Pyro-glu from E."
            UNIMOD_Glu__pyro_Glu,

            // "Pyro-glu from Q."
            UNIMOD_Gln__pyro_Glu,

            // "N-Succinimidyl-2-morpholine acetate."
            UNIMOD_SMA,

            // "Sodium adduct."
            UNIMOD_Cation_Na,

            // "S-pyridylethylation."
            UNIMOD_Pyridylethyl,

            // "Methylation."
            UNIMOD_Methyl,

            // "Oxidation or Hydroxylation."
            UNIMOD_Oxidation,

            // "Di-Methylation."
            UNIMOD_Dimethyl,

            // "Tri-Methylation."
            UNIMOD_Trimethyl,

            // "Beta-methylthiolation."
            UNIMOD_Methylthio,

            // "O-Sulfonation."
            UNIMOD_Sulfo,

            // "Hexose."
            UNIMOD_Hex,

            // "Lipoyl."
            UNIMOD_Lipoyl,

            // "N-Acetylhexosamine."
            UNIMOD_HexNAc,

            // "Farnesylation."
            UNIMOD_Farnesyl,

            // "Myristoylation."
            UNIMOD_Myristoyl,

            // "Pyridoxal phosphate."
            UNIMOD_PyridoxalPhosphate,

            // "Palmitoylation."
            UNIMOD_Palmitoyl,

            // "Geranyl-geranyl."
            UNIMOD_GeranylGeranyl,

            // "Phosphopantetheine."
            UNIMOD_Phosphopantetheine,

            // "Flavin adenine dinucleotide."
            UNIMOD_FAD,

            // "N-acyl diglyceride cysteine."
            UNIMOD_Tripalmitate,

            // "Guanidination."
            UNIMOD_Guanidinyl,

            // "4-hydroxynonenal (HNE)."
            UNIMOD_HNE,

            // "N-glucuronylation."
            UNIMOD_Glucuronyl,

            // "Glutathione disulfide."
            UNIMOD_Glutathione,

            // "Acetate labeling reagent (N-term & K) (heavy form, +3amu)."
            UNIMOD_Acetyl_2H_3_,

            // "Propionate labeling reagent light form (N-term & K)."
            UNIMOD_Propionyl,

            // "Propionate labeling reagent heavy form (+3amu), N-term & K."
            UNIMOD_Propionyl_13C_3_,

            // "Quaternary amine labeling reagent light form (N-term & K)."
            UNIMOD_GIST_Quat,

            // "Quaternary amine labeling reagent heavy (+3amu) form, N-term & K."
            UNIMOD_GIST_Quat_2H_3_,

            // "Quaternary amine labeling reagent heavy form (+6amu), N-term & K."
            UNIMOD_GIST_Quat_2H_6_,

            // "Quaternary amine labeling reagent heavy form (+9amu), N-term & K."
            UNIMOD_GIST_Quat_2H_9_,

            // "Succinic anhydride labeling reagent light form (N-term & K)."
            UNIMOD_Succinyl,

            // "Succinic anhydride labeling reagent, heavy form (+4amu, 4H2), N-term & K."
            UNIMOD_Succinyl_2H_4_,

            // "Succinic anhydride labeling reagent, heavy form (+4amu, 4C13), N-term & K."
            UNIMOD_Succinyl_13C_4_,

            // "Iminobiotinylation."
            UNIMOD_Iminobiotin,

            // "ESP-Tag light d0."
            UNIMOD_ESP,

            // "ESP-Tag heavy d10."
            UNIMOD_ESP_2H_10_,

            // "NHS-LC-Biotin."
            UNIMOD_NHS_LC_Biotin,

            // "EDT-maleimide-PEO-biotin."
            UNIMOD_EDT_maleimide_PEO_biotin,

            // "IMID d0."
            UNIMOD_IMID,

            // "IMID d4."
            UNIMOD_IMID_2H_4_,

            // "Acrylamide d3."
            UNIMOD_Propionamide_2H_3_,

            // "Applied Biosystems cleavable ICAT(TM) light."
            UNIMOD_ICAT_C,

            // "Applied Biosystems cleavable ICAT(TM) heavy."
            UNIMOD_ICAT_C_13C_9_,

            // "Addition of N-formyl met."
            UNIMOD_FormylMet,

            // "N-ethylmaleimide on cysteines."
            UNIMOD_Nethylmaleimide,

            // "Oxidized lysine biotinylated with biotin-LC-hydrazide, reduced."
            UNIMOD_OxLysBiotinRed,

            // "Oxidized lysine biotinylated with biotin-LC-hydrazide."
            UNIMOD_OxLysBiotin,

            // "Oxidized proline biotinylated with biotin-LC-hydrazide, reduced."
            UNIMOD_OxProBiotinRed,

            // "Oxidized Proline biotinylated with biotin-LC-hydrazide."
            UNIMOD_OxProBiotin,

            // "Oxidized arginine biotinylated with biotin-LC-hydrazide."
            UNIMOD_OxArgBiotin,

            // "Oxidized arginine biotinylated with biotin-LC-hydrazide, reduced."
            UNIMOD_OxArgBiotinRed,

            // "EDT-iodo-PEO-biotin."
            UNIMOD_EDT_iodoacetyl_PEO_biotin,

            // "Thio Ether Formation - BTP Adduct."
            UNIMOD_IBTP,

            // "Ubiquitinylation residue."
            UNIMOD_GlyGly,

            // "Formylation."
            UNIMOD_Formyl,

            // "N-iodoacetyl, p-chlorobenzyl-12C6-glucamine."
            UNIMOD_ICAT_H,

            // "N-iodoacetyl, p-chlorobenzyl-13C6-glucamine."
            UNIMOD_ICAT_H_13C_6_,

            // "3-sulfanylpropanoyl."
            UNIMOD_Thioacyl,

            // "Fluorophenylalanine replacement of phenylalanine."
            UNIMOD_Fluoro,

            // "5-Iodoacetamidofluorescein (Molecular Probe, Eugene, OR)."
            UNIMOD_Fluorescein,

            // "Iodination."
            UNIMOD_Iodo,

            // "Di-Iodination."
            UNIMOD_Diiodo,

            // "Tri-Iodination."
            UNIMOD_Triiodo,

            // "(cis-delta 5)-tetradecaenoyl."
            UNIMOD_Myristoleyl,

            // "(cis,cis-delta 5, delta 8)-tetradecadienoyl."
            UNIMOD_Myristoyl_Delta_H__4_,

            // "Labeling reagent light form (N-term & K)."
            UNIMOD_Benzoyl,

            // "N-linked glycan core."
            UNIMOD_Hex_5_HexNAc_2_,

            // "5-dimethylaminonaphthalene-1-sulfonyl."
            UNIMOD_Dansyl,

            // "ISD a-series (C-Term)."
            UNIMOD_a_type_ion,

            // "Amidination of lysines or N-terminal amines with methyl acetimidate."
            UNIMOD_Amidine,

            // "HexNAc1dHex1."
            UNIMOD_HexNAc_1_dHex_1_,

            // "HexNAc2."
            UNIMOD_HexNAc_2_,

            // "Hex3."
            UNIMOD_Hex_3_,

            // "HexNAc1dHex2."
            UNIMOD_HexNAc_1_dHex_2_,

            // "Hex1HexNAc1dHex1."
            UNIMOD_Hex_1_HexNAc_1_dHex_1_,

            // "HexNAc2dHex1."
            UNIMOD_HexNAc_2_dHex_1_,

            // "Hex1HexNAc2."
            UNIMOD_Hex_1_HexNAc_2_,

            // "Hex1HexNAc1NeuAc1."
            UNIMOD_Hex_1_HexNAc_1_NeuAc_1_,

            // "HexNAc2dHex2."
            UNIMOD_HexNAc_2_dHex_2_,

            // "Hex1HexNAc2Pent1."
            UNIMOD_Hex_1_HexNAc_2_Pent_1_,

            // "Hex1HexNAc2dHex1."
            UNIMOD_Hex_1_HexNAc_2_dHex_1_,

            // "Hex2HexNAc2."
            UNIMOD_Hex_2_HexNAc_2_,

            // "Hex3HexNAc1Pent1."
            UNIMOD_Hex_3_HexNAc_1_Pent_1_,

            // "Hex1HexNAc2dHex1Pent1."
            UNIMOD_Hex_1_HexNAc_2_dHex_1_Pent_1_,

            // "Hex1HexNAc2dHex2."
            UNIMOD_Hex_1_HexNAc_2_dHex_2_,

            // "Hex2HexNAc2Pent1."
            UNIMOD_Hex_2_HexNAc_2_Pent_1_,

            // "Hex2HexNAc2dHex1."
            UNIMOD_Hex_2_HexNAc_2_dHex_1_,

            // "Hex3HexNAc2."
            UNIMOD_Hex_3_HexNAc_2_,

            // "Hex1HexNAc1NeuAc2."
            UNIMOD_Hex_1_HexNAc_1_NeuAc_2_,

            // "Hex3HexNAc2P1."
            UNIMOD_Hex_3_HexNAc_2_P_1_,

            // "Selenium replaces sulfur."
            UNIMOD_Delta_S__1_Se_1_,

            // "Glycosylated asparagine 18O labeling."
            UNIMOD_Delta_H_1_O__1_18O_1_,

            // "Shimadzu NBS-13C."
            UNIMOD_NBS_13C_6_,

            // "Shimadzu NBS-12C."
            UNIMOD_NBS,

            // "Michael addition of BHT quinone methide to Cysteine and Lysine."
            UNIMOD_BHT,

            // "Phosphorylation to amine thiol."
            UNIMOD_DAET,

            // "13C(9) Silac label."
            UNIMOD_Label_13C_9_,

            // "C13 label (Phosphotyrosine)."
            UNIMOD_Label_13C_9__Phospho,

            // "Hydroxyphenylglyoxal arginine."
            UNIMOD_HPG,

            // "Bis(hydroxphenylglyoxal) arginine."
            UNIMOD_2HPG,

            // "13C(6) Silac label."
            UNIMOD_Label_13C_6_,

            // "O18 label at both C-terminal oxygens."
            UNIMOD_Label_18O_2_,

            // "6-aminoquinolyl-N-hydroxysuccinimidyl carbamate."
            UNIMOD_AccQTag,

            // "APTA-d0."
            UNIMOD_QAT,

            // "APTA d3."
            UNIMOD_QAT_2H_3_,

            // "EAPTA d0."
            UNIMOD_EQAT,

            // "EAPTA d5."
            UNIMOD_EQAT_2H_5_,

            // "DiMethyl-CHD2."
            UNIMOD_Dimethyl_2H_4_,

            // "EDT."
            UNIMOD_Ethanedithiol,

            // "Acrolein addition +94."
            UNIMOD_Delta_H_6_C_6_O_1_,

            // "Acrolein addition +56."
            UNIMOD_Delta_H_4_C_3_O_1_,

            // "Acrolein addition +38."
            UNIMOD_Delta_H_2_C_3_,

            // "Acrolein addition +76."
            UNIMOD_Delta_H_4_C_6_,

            // "Acrolein addition +112."
            UNIMOD_Delta_H_8_C_6_O_2_,

            // "N-ethyl iodoacetamide-d0."
            UNIMOD_NEIAA,

            // "N-ethyl iodoacetamide-d5."
            UNIMOD_NEIAA_2H_5_,

            // "ADP Ribose addition."
            UNIMOD_ADP_Ribosyl,

            // "Representative mass and accurate mass for 116 & 117."
            UNIMOD_iTRAQ4plex,

            // "Light IDBEST tag for quantitation."
            UNIMOD_IGBP,

            // "Crotonaldehyde."
            UNIMOD_Crotonaldehyde,

            // "Acetaldehyde +26."
            UNIMOD_Delta_H_2_C_2_,

            // "Acetaldehyde +28."
            UNIMOD_Delta_H_4_C_2_,

            // "Propionaldehyde +40."
            UNIMOD_Delta_H_4_C_3_,

            // "O18 Labeling."
            UNIMOD_Label_18O_1_,

            // "13C(6) 15N(2) Silac label."
            UNIMOD_Label_13C_6_15N_2_,

            // "Thiophosphorylation."
            UNIMOD_Thiophospho,

            // "4-sulfophenyl isothiocyanate."
            UNIMOD_SPITC,

            // "Trideuteration."
            UNIMOD_Label_2H_3_,

            // "Phosphorylation to pyridyl thiol."
            UNIMOD_PET,

            // "13C(6) 15N(4) Silac label."
            UNIMOD_Label_13C_6_15N_4_,

            // "13C(5) 15N(1) Silac label."
            UNIMOD_Label_13C_5_15N_1_,

            // "13C(9) 15N(1) Silac label."
            UNIMOD_Label_13C_9_15N_1_,

            // "Nucleophilic addtion to cytopiloyne."
            UNIMOD_Cytopiloyne,

            // "Nucleophilic addition to cytopiloyne+H2O."
            UNIMOD_Cytopiloyne_water,

            // "Sulfonation of N-terminus."
            UNIMOD_CAF,

            // "Covalent modification of lysine by cross-linking reagent."
            UNIMOD_Xlink_SSD,

            // "S-nitrosylation."
            UNIMOD_Nitrosyl,

            // "Aminoethylbenzenesulfonylation."
            UNIMOD_AEBS,

            // "Ethanolation."
            UNIMOD_Ethanolyl,

            // "Ethylation."
            UNIMOD_Ethyl,

            // "Cysteine modified Coenzyme A."
            UNIMOD_CoenzymeA,

            // "Deuterium Methylation of Lysine."
            UNIMOD_Methyl_2H_2_,

            // "Light Sulfanilic Acid (SA) C12."
            UNIMOD_SulfanilicAcid,

            // "Heavy Sulfanilic Acid (SA) C13."
            UNIMOD_SulfanilicAcid_13C_6_,

            // "Tryptophan oxidation to oxolactone."
            UNIMOD_Trp__Oxolactone,

            // "Biotin polyethyleneoxide amine."
            UNIMOD_Biotin_PEO_Amine,

            // "Pierce EZ-Link Biotin-HPDP."
            UNIMOD_Biotin_HPDP,

            // "Mercury Mercaptan."
            UNIMOD_Delta_Hg_1_,

            // "Cross-link of (Iodo)-uracil MP with W,F,Y."
            UNIMOD_IodoU_AMP,

            // "3-(carbamidomethylthio)propanoyl."
            UNIMOD_CAMthiopropanoyl,

            // "Biotinoyl-iodoacetyl-ethylenediamine."
            UNIMOD_IED_Biotin,

            // "Fucose."
            UNIMOD_dHex,

            // "Deuterated methyl ester."
            UNIMOD_Methyl_2H_3_,

            // "Carboxylation."
            UNIMOD_Carboxy,

            // "Monobromobimane derivative."
            UNIMOD_Bromobimane,

            // "Menadione quinone derivative."
            UNIMOD_Menadione,

            // "Cysteine mercaptoethanol."
            UNIMOD_DeStreak,

            // "Fucosylated biantennary (-2 galactose)."
            UNIMOD_dHex_1_Hex_3_HexNAc_4_,

            // "Fucosylated biantennary (-1 galactose)."
            UNIMOD_dHex_1_Hex_4_HexNAc_4_,

            // "Fucosylated biantennary."
            UNIMOD_dHex_1_Hex_5_HexNAc_4_,

            // "Biantennary (-2 galactose)."
            UNIMOD_Hex_3_HexNAc_4_,

            // "Biantennary (-1 galactose)."
            UNIMOD_Hex_4_HexNAc_4_,

            // "Biantennary."
            UNIMOD_Hex_5_HexNAc_4_,

            // "Cysteinylation."
            UNIMOD_Cysteinyl,

            // "Loss of C-terminal K from Heavy Chain of MAb."
            UNIMOD_Lys_loss,

            // "Nmethylmaleimide."
            UNIMOD_Nmethylmaleimide,

            // "2,5-dimethypyrrole."
            UNIMOD_DimethylpyrroleAdduct,

            // "MDA adduct +62."
            UNIMOD_Delta_H_2_C_5_,

            // "MDA adduct +54."
            UNIMOD_Delta_H_2_C_3_O_1_,

            // "Nethylmaleimidehydrolysis."
            UNIMOD_Nethylmaleimide_water,

            // "Bis-N-I-sulfonerahodamine."
            UNIMOD_Xlink_B10621,

            // "Dimethyl 3,3\'-dithiobispropionimidate."
            UNIMOD_DTBP,

            // "10-ethoxyphosphinyl-N-(biotinamidopentyl)decanamide."
            UNIMOD_FP_Biotin,

            // "S-Ethylcystine from Serine."
            UNIMOD_Delta_H_4_C_2_O__1_S_1_,

            // "Monomethylated arginine."
            UNIMOD_Methyl_2H_3_13C_1_,

            // "Dimethylated arginine."
            UNIMOD_Dimethyl_2H_6_13C_2_,

            // "Thiophosphate labeled with biotin-HPDP."
            UNIMOD_Thiophos_S_S_biotin,

            // "6-N-biotinylaminohexyl isopropyl phosphate."
            UNIMOD_Can_FP_biotin,

            // "Reduced 4-Hydroxynonenal."
            UNIMOD_HNE_Delta_H_2_,

            // "Michael addition with methylamine."
            UNIMOD_Methylamine,

            // "Bromination."
            UNIMOD_Bromo,

            // "Tyrosine oxidation to 2-aminotyrosine."
            UNIMOD_Amino,

            // "Oxidized Arginine biotinylated with biotin hydrazide."
            UNIMOD_Argbiotinhydrazide,

            // "Arginine oxidation to glutamic semialdehyde."
            UNIMOD_Arg__GluSA,

            // "Cysteine oxidation to cysteic acid."
            UNIMOD_Trioxidation,

            // "His->Asn substitution."
            UNIMOD_His__Asn,

            // "His->Asp substitution."
            UNIMOD_His__Asp,

            // "Tryptophan oxidation to hydroxykynurenin."
            UNIMOD_Trp__Hydroxykynurenin,

            // "Tryptophan oxidation to kynurenin."
            UNIMOD_Trp__Kynurenin,

            // "Lysine oxidation to aminoadipic semialdehyde."
            UNIMOD_Lys__Allysine,

            // "Oxidized Lysine biotinylated with biotin hydrazide."
            UNIMOD_Lysbiotinhydrazide,

            // "Oxidation to nitro."
            UNIMOD_Nitro,

            // "Oxidized proline biotinylated with biotin hydrazide."
            UNIMOD_probiotinhydrazide,

            // "Proline oxidation to pyroglutamic acid."
            UNIMOD_Pro__pyro_Glu,

            // "Proline oxidation to pyrrolidinone."
            UNIMOD_Pro__Pyrrolidinone,

            // "Oxidized Threonine biotinylated with biotin hydrazide."
            UNIMOD_Thrbiotinhydrazide,

            // "O-Diisopropylphosphorylation."
            UNIMOD_Diisopropylphosphate,

            // "O-Isopropylphosphorylation."
            UNIMOD_Isopropylphospho,

            // "Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, heavy form."
            UNIMOD_ICPL_13C_6_,

            // "Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, light form."
            UNIMOD_ICPL,

            // "Deamidation in presence of O18."
            UNIMOD_Deamidated_18O_1_,

            // "Dehydroalanine (from Cysteine)."
            UNIMOD_Cys__Dha,

            // "Pyrrolidone from Proline."
            UNIMOD_Pro__Pyrrolidone,

            // "Michael addition of hydroxymethylvinyl ketone to cysteine."
            UNIMOD_HMVK,

            // "Ornithine from Arginine."
            UNIMOD_Arg__Orn,

            // "Half of a disulfide bridge."
            UNIMOD_Dehydro,

            // "Diphthamide."
            UNIMOD_Diphthamide,

            // "Hydroxyfarnesyl."
            UNIMOD_Hydroxyfarnesyl,

            // "Diacylglycerol."
            UNIMOD_Diacylglycerol,

            // "Carboxyethyl."
            UNIMOD_Carboxyethyl,

            // "Hypusine."
            UNIMOD_Hypusine,

            // "Retinal."
            UNIMOD_Retinylidene,

            // "Alpha-amino adipic acid."
            UNIMOD_Lys__AminoadipicAcid,

            // "Pyruvic acid from N-term cys."
            UNIMOD_Cys__PyruvicAcid,

            // "Loss of ammonia."
            UNIMOD_Ammonia_loss,

            // "Phycocyanobilin."
            UNIMOD_Phycocyanobilin,

            // "Phycoerythrobilin."
            UNIMOD_Phycoerythrobilin,

            // "Phytochromobilin."
            UNIMOD_Phytochromobilin,

            // "Heme."
            UNIMOD_Heme,

            // "Molybdopterin."
            UNIMOD_Molybdopterin,

            // "Quinone."
            UNIMOD_Quinone,

            // "Glucosylgalactosyl hydroxylysine."
            UNIMOD_Glucosylgalactosyl,

            // "Glycosylphosphatidylinositol."
            UNIMOD_GPIanchor,

            // "Phosphoribosyl dephospho-coenzyme A."
            UNIMOD_PhosphoribosyldephosphoCoA,

            // "Glycerylphosphorylethanolamine."
            UNIMOD_GlycerylPE,

            // "Triiodo."
            UNIMOD_Triiodothyronine,

            // "Tetraiodo."
            UNIMOD_Thyroxine,

            // "Dehydroalanine (from Tyrosine)."
            UNIMOD_Tyr__Dha,

            // "2-amino-3-oxo-butanoic_acid."
            UNIMOD_Didehydro,

            // "Oxoalanine."
            UNIMOD_Cys__Oxoalanine,

            // "Lactic acid from N-term Ser."
            UNIMOD_Ser__LacticAcid,

            // "AMP binding site."
            UNIMOD_Phosphoadenosine,

            // "Hydroxycinnamyl."
            UNIMOD_Hydroxycinnamyl,

            // "Glycosyl-L-hydroxyproline."
            UNIMOD_Glycosyl,

            // "Flavin mononucleotide."
            UNIMOD_FMNH,

            // "S-diphytanylglycerol diether."
            UNIMOD_Archaeol,

            // "Phenyl isocyanate."
            UNIMOD_Phenylisocyanate,

            // "D5-phenyl isocyanate."
            UNIMOD_Phenylisocyanate_2H_5_,

            // "Phospho-guanosine."
            UNIMOD_Phosphoguanosine,

            // "Hydroxymethyl."
            UNIMOD_Hydroxymethyl,

            // "L-selenocysteinyl molybdenum bis(molybdopterin guanine dinucleotide)."
            UNIMOD_MolybdopterinGD_Delta_S__1_Se_1_,

            // "Dipyrrolylmethanemethyl."
            UNIMOD_Dipyrrolylmethanemethyl,

            // "Uridine phosphodiester."
            UNIMOD_PhosphoUridine,

            // "Glycerophospho."
            UNIMOD_Glycerophospho,

            // "Thiocarboxylic acid."
            UNIMOD_Carboxy__Thiocarboxy,

            // "Persulfide."
            UNIMOD_Sulfide,

            // "N-pyruvic acid 2-iminyl."
            UNIMOD_PyruvicAcidIminyl,

            // "Selenyl."
            UNIMOD_Delta_Se_1_,

            // "Molybdenum bis(molybdopterin guanine dinucleotide)."
            UNIMOD_MolybdopterinGD,

            // "Dihydroxy."
            UNIMOD_Dioxidation,

            // "Octanoyl."
            UNIMOD_Octanoyl,

            // "N-acetylglucosamine-1-phosphoryl."
            UNIMOD_PhosphoHexNAc,

            // "Phosphoglycosyl-D-mannose-1-phosphoryl."
            UNIMOD_PhosphoHex,

            // "Palmitoleyl."
            UNIMOD_Palmitoleyl,

            // "Cholesterol ester."
            UNIMOD_Cholesterol,

            // "3,4-didehydroretinylidene."
            UNIMOD_Didehydroretinylidene,

            // "Cis-14-hydroxy-10,13-dioxo-7-heptadecenoic ester."
            UNIMOD_CHDH,

            // "4-methyl-delta-1-pyrroline-5-carboxyl."
            UNIMOD_Methylpyrroline,

            // "Hydroxyheme."
            UNIMOD_Hydroxyheme,

            // "(3-aminopropyl)(L-aspartyl-1-amino)phosphoryl-5-adenosine."
            UNIMOD_MicrocinC7,

            // "Cyano."
            UNIMOD_Cyano,

            // "Hydrogenase diiron subcluster."
            UNIMOD_Diironsubcluster,

            // "Amidino."
            UNIMOD_Amidino,

            // "O3-(riboflavin phosphoryl)."
            UNIMOD_FMN,

            // "S-(4a-FMN)."
            UNIMOD_FMNC,

            // "Copper sulfido molybdopterin cytosine dinuncleotide."
            UNIMOD_CuSMo,

            // "5-hydroxy-N6,N6,N6-trimethyl."
            UNIMOD_Hydroxytrimethyl,

            // "Reduction."
            UNIMOD_Deoxy,

            // "Microcin E492 siderophore ester from serine."
            UNIMOD_Microcin,

            // "Lipid."
            UNIMOD_Decanoyl,

            // "Monoglutamyl."
            UNIMOD_Glu,

            // "Diglutamyl."
            UNIMOD_GluGlu,

            // "Triglutamyl."
            UNIMOD_GluGluGlu,

            // "Tetraglutamyl."
            UNIMOD_GluGluGluGlu,

            // "Hexosamine."
            UNIMOD_HexN,

            // "One end of crosslink attached, one end free."
            UNIMOD_Xlink_DMP_s,

            // "Both ends of crosslink attached to same peptide."
            UNIMOD_Xlink_DMP,

            // "Naphthalene-2,3-dicarboxaldehyde."
            UNIMOD_NDA,

            // "4-sulfophenyl isothiocyanate (Heavy C13)."
            UNIMOD_SPITC_13C_6_,

            // "Aminoethylcysteine."
            UNIMOD_AEC_MAEC,

            // "4-trimethyllammoniumbutyryl-."
            UNIMOD_TMAB,

            // "D9-4-trimethyllammoniumbutyryl-."
            UNIMOD_TMAB_2H_9_,

            // "Fluorescein-5-thiosemicarbazide."
            UNIMOD_FTC,

            // "4,4,5,5-D4 Lysine."
            UNIMOD_Label_2H_4_,

            // "Dehydropyrrolizidine alkaloid (dehydroretronecine) on cysteines."
            UNIMOD_DHP,

            // "Heptose."
            UNIMOD_Hep,

            // "Bisphenol A diglycidyl ether derivative."
            UNIMOD_BADGE,

            // "Cy3 CyDye DIGE Fluor saturation dye."
            UNIMOD_CyDye_Cy3,

            // "Cy5 CyDye DIGE Fluor saturation dye."
            UNIMOD_CyDye_Cy5,

            // "Michael addition of t-butyl hydroxylated BHT (BHTOH) to C, H or K."
            UNIMOD_BHTOH,

            // "Heavy IDBEST tag for quantitation."
            UNIMOD_IGBP_13C_2_,

            // "Nmethylmaleimidehydrolysis."
            UNIMOD_Nmethylmaleimide_water,

            // "3-methyl-2-pyridyl isocyanate."
            UNIMOD_PyMIC,

            // "Levuglandinyl - lysine lactam adduct."
            UNIMOD_LG_lactam_K,

            // "Levuglandinyl - lysine hydroxylactam adduct."
            UNIMOD_LG_Hlactam_K,

            // "Levuglandinyl - arginine lactam adduct."
            UNIMOD_LG_lactam_R,

            // "Levuglandinyl - arginine hydroxylactam adduct."
            UNIMOD_LG_Hlactam_R,

            // "DiMethyl-C13HD2."
            UNIMOD_Dimethyl_2H_4_13C_2_,

            // "Lactosylation."
            UNIMOD_Hex_2_,

            // "
            UNIMOD_C8_QAT,

            // "Propyl-1,2-dideoxy-2\'-methyl-alpha-D-glucopyranoso-
            UNIMOD_PropylNAGthiazoline,

            // "Fluorescein-5-maleimide."
            UNIMOD_FNEM,

            // "Diethylation, analogous to Dimethylation."
            UNIMOD_Diethyl,

            // "4,4\'-dianilino-1,1\'-binaphthyl-5,5\'-disulfonic acid."
            UNIMOD_BisANS,

            // "Piperidination."
            UNIMOD_Piperidine,

            // "Maleimide-Biotin."
            UNIMOD_Maleimide_PEO2_Biotin,

            // "Biot_LC_LC."
            UNIMOD_Sulfo_NHS_LC_LC_Biotin,

            // "CLIP_TRAQ_2."
            UNIMOD_CLIP_TRAQ_2,

            // "Prompt loss of side chain from oxidised Met."
            UNIMOD_Dethiomethyl,

            // "Deamidation followed by a methylation."
            UNIMOD_Methyl_Deamidated,

            // "Dimethylation of proline residue."
            UNIMOD_Delta_H_5_C_2_,

            // "Replacement of proton by potassium."
            UNIMOD_Cation_K,

            // "Replacement of proton by copper."
            UNIMOD_Cation_Cu_I_,

            // "Accurate mass for 114."
            UNIMOD_iTRAQ4plex114,

            // "Accurate mass for 115."
            UNIMOD_iTRAQ4plex115,

            // "Dibromo."
            UNIMOD_Dibromo,

            // "Ubiquitination."
            UNIMOD_LeuArgGlyGly,

            // "CLIP_TRAQ_3."
            UNIMOD_CLIP_TRAQ_3,

            // "CLIP_TRAQ_4."
            UNIMOD_CLIP_TRAQ_4,

            // "Was 15dB-biotin."
            UNIMOD_Biotin_Cayman_10141,

            // "Was PGA1-biotin."
            UNIMOD_Biotin_Cayman_10013,

            // "Ala->Ser substitution."
            UNIMOD_Ala__Ser,

            // "Ala->Thr substitution."
            UNIMOD_Ala__Thr,

            // "Ala->Asp substitution."
            UNIMOD_Ala__Asp,

            // "Ala->Pro substitution."
            UNIMOD_Ala__Pro,

            // "Ala->Gly substitution."
            UNIMOD_Ala__Gly,

            // "Ala->Glu substitution."
            UNIMOD_Ala__Glu,

            // "Ala->Val substitution."
            UNIMOD_Ala__Val,

            // "Cys->Phe substitution."
            UNIMOD_Cys__Phe,

            // "Cys->Ser substitution."
            UNIMOD_Cys__Ser,

            // "Cys->Trp substitution."
            UNIMOD_Cys__Trp,

            // "Cys->Tyr substitution."
            UNIMOD_Cys__Tyr,

            // "Cys->Arg substitution."
            UNIMOD_Cys__Arg,

            // "Cys->Gly substitution."
            UNIMOD_Cys__Gly,

            // "Asp->Ala substitution."
            UNIMOD_Asp__Ala,

            // "Asp->His substitution."
            UNIMOD_Asp__His,

            // "Asp->Asn substitution."
            UNIMOD_Asp__Asn,

            // "Asp->Gly substitution."
            UNIMOD_Asp__Gly,

            // "Asp->Tyr substitution."
            UNIMOD_Asp__Tyr,

            // "Asp->Glu substitution."
            UNIMOD_Asp__Glu,

            // "Asp->Val substitution."
            UNIMOD_Asp__Val,

            // "Glu->Ala substitution."
            UNIMOD_Glu__Ala,

            // "Glu->Gln substitution."
            UNIMOD_Glu__Gln,

            // "Glu->Asp substitution."
            UNIMOD_Glu__Asp,

            // "Glu->Lys substitution."
            UNIMOD_Glu__Lys,

            // "Glu->Gly substitution."
            UNIMOD_Glu__Gly,

            // "Glu->Val substitution."
            UNIMOD_Glu__Val,

            // "Phe->Ser substitution."
            UNIMOD_Phe__Ser,

            // "Phe->Cys substitution."
            UNIMOD_Phe__Cys,

            // "Phe->Leu/Ile substitution."
            UNIMOD_Phe__Xle,

            // "Phe->Tyr substitution."
            UNIMOD_Phe__Tyr,

            // "Phe->Val substitution."
            UNIMOD_Phe__Val,

            // "Gly->Ala substitution."
            UNIMOD_Gly__Ala,

            // "Gly->Ser substitution."
            UNIMOD_Gly__Ser,

            // "Gly->Trp substitution."
            UNIMOD_Gly__Trp,

            // "Gly->Glu substitution."
            UNIMOD_Gly__Glu,

            // "Gly->Val substitution."
            UNIMOD_Gly__Val,

            // "Gly->Asp substitution."
            UNIMOD_Gly__Asp,

            // "Gly->Cys substitution."
            UNIMOD_Gly__Cys,

            // "Gly->Arg substitution."
            UNIMOD_Gly__Arg,

            // "His->Pro substitution."
            UNIMOD_His__Pro,

            // "His->Tyr substitution."
            UNIMOD_His__Tyr,

            // "His->Gln substitution."
            UNIMOD_His__Gln,

            // "His->Arg substitution."
            UNIMOD_His__Arg,

            // "His->Leu/Ile substitution."
            UNIMOD_His__Xle,

            // "Leu/Ile->Thr substitution."
            UNIMOD_Xle__Thr,

            // "Leu/Ile->Asn substitution."
            UNIMOD_Xle__Asn,

            // "Leu/Ile->Lys substitution."
            UNIMOD_Xle__Lys,

            // "Lys->Thr substitution."
            UNIMOD_Lys__Thr,

            // "Lys->Asn substitution."
            UNIMOD_Lys__Asn,

            // "Lys->Glu substitution."
            UNIMOD_Lys__Glu,

            // "Lys->Gln substitution."
            UNIMOD_Lys__Gln,

            // "Lys->Met substitution."
            UNIMOD_Lys__Met,

            // "Lys->Arg substitution."
            UNIMOD_Lys__Arg,

            // "Lys->Leu/Ile substitution."
            UNIMOD_Lys__Xle,

            // "Leu/Ile->Ser substitution."
            UNIMOD_Xle__Ser,

            // "Leu/Ile->Phe substitution."
            UNIMOD_Xle__Phe,

            // "Leu/Ile->Trp substitution."
            UNIMOD_Xle__Trp,

            // "Leu/Ile->Pro substitution."
            UNIMOD_Xle__Pro,

            // "Leu/Ile->Val substitution."
            UNIMOD_Xle__Val,

            // "Leu/Ile->His substitution."
            UNIMOD_Xle__His,

            // "Leu/Ile->Gln substitution."
            UNIMOD_Xle__Gln,

            // "Leu/Ile->Met substitution."
            UNIMOD_Xle__Met,

            // "Leu/Ile->Arg substitution."
            UNIMOD_Xle__Arg,

            // "Met->Thr substitution."
            UNIMOD_Met__Thr,

            // "Met->Arg substitution."
            UNIMOD_Met__Arg,

            // "Met->Lys substitution."
            UNIMOD_Met__Lys,

            // "Met->Leu/Ile substitution."
            UNIMOD_Met__Xle,

            // "Met->Val substitution."
            UNIMOD_Met__Val,

            // "Asn->Ser substitution."
            UNIMOD_Asn__Ser,

            // "Asn->Thr substitution."
            UNIMOD_Asn__Thr,

            // "Asn->Lys substitution."
            UNIMOD_Asn__Lys,

            // "Asn->Tyr substitution."
            UNIMOD_Asn__Tyr,

            // "Asn->His substitution."
            UNIMOD_Asn__His,

            // "Asn->Asp substitution."
            UNIMOD_Asn__Asp,

            // "Asn->Leu/Ile substitution."
            UNIMOD_Asn__Xle,

            // "Pro->Ser substitution."
            UNIMOD_Pro__Ser,

            // "Pro->Ala substitution."
            UNIMOD_Pro__Ala,

            // "Pro->His substitution."
            UNIMOD_Pro__His,

            // "Pro->Gln substitution."
            UNIMOD_Pro__Gln,

            // "Pro->Thr substitution."
            UNIMOD_Pro__Thr,

            // "Pro->Arg substitution."
            UNIMOD_Pro__Arg,

            // "Pro->Leu/Ile substitution."
            UNIMOD_Pro__Xle,

            // "Gln->Pro substitution."
            UNIMOD_Gln__Pro,

            // "Gln->Lys substitution."
            UNIMOD_Gln__Lys,

            // "Gln->Glu substitution."
            UNIMOD_Gln__Glu,

            // "Gln->His substitution."
            UNIMOD_Gln__His,

            // "Gln->Arg substitution."
            UNIMOD_Gln__Arg,

            // "Gln->Leu/Ile substitution."
            UNIMOD_Gln__Xle,

            // "Arg->Ser substitution."
            UNIMOD_Arg__Ser,

            // "Arg->Trp substitution."
            UNIMOD_Arg__Trp,

            // "Arg->Thr substitution."
            UNIMOD_Arg__Thr,

            // "Arg->Pro substitution."
            UNIMOD_Arg__Pro,

            // "Arg->Lys substitution."
            UNIMOD_Arg__Lys,

            // "Arg->His substitution."
            UNIMOD_Arg__His,

            // "Arg->Gln substitution."
            UNIMOD_Arg__Gln,

            // "Arg->Met substitution."
            UNIMOD_Arg__Met,

            // "Arg->Cys substitution."
            UNIMOD_Arg__Cys,

            // "Arg->Leu/Ile substitution."
            UNIMOD_Arg__Xle,

            // "Arg->Gly substitution."
            UNIMOD_Arg__Gly,

            // "Ser->Phe substitution."
            UNIMOD_Ser__Phe,

            // "Ser->Ala substitution."
            UNIMOD_Ser__Ala,

            // "Ser->Trp substitution."
            UNIMOD_Ser__Trp,

            // "Ser->Thr substitution."
            UNIMOD_Ser__Thr,

            // "Ser->Asn substitution."
            UNIMOD_Ser__Asn,

            // "Ser->Pro substitution."
            UNIMOD_Ser__Pro,

            // "Ser->Tyr substitution."
            UNIMOD_Ser__Tyr,

            // "Ser->Cys substitution."
            UNIMOD_Ser__Cys,

            // "Ser->Arg substitution."
            UNIMOD_Ser__Arg,

            // "Ser->Leu/Ile substitution."
            UNIMOD_Ser__Xle,

            // "Ser->Gly substitution."
            UNIMOD_Ser__Gly,

            // "Thr->Ser substitution."
            UNIMOD_Thr__Ser,

            // "Thr->Ala substitution."
            UNIMOD_Thr__Ala,

            // "Thr->Asn substitution."
            UNIMOD_Thr__Asn,

            // "Thr->Lys substitution."
            UNIMOD_Thr__Lys,

            // "Thr->Pro substitution."
            UNIMOD_Thr__Pro,

            // "Thr->Met substitution."
            UNIMOD_Thr__Met,

            // "Thr->Leu/Ile substitution."
            UNIMOD_Thr__Xle,

            // "Thr->Arg substitution."
            UNIMOD_Thr__Arg,

            // "Val->Phe substitution."
            UNIMOD_Val__Phe,

            // "Val->Ala substitution."
            UNIMOD_Val__Ala,

            // "Val->Glu substitution."
            UNIMOD_Val__Glu,

            // "Val->Met substitution."
            UNIMOD_Val__Met,

            // "Val->Asp substitution."
            UNIMOD_Val__Asp,

            // "Val->Leu/Ile substitution."
            UNIMOD_Val__Xle,

            // "Val->Gly substitution."
            UNIMOD_Val__Gly,

            // "Trp->Ser substitution."
            UNIMOD_Trp__Ser,

            // "Trp->Cys substitution."
            UNIMOD_Trp__Cys,

            // "Trp->Arg substitution."
            UNIMOD_Trp__Arg,

            // "Trp->Gly substitution."
            UNIMOD_Trp__Gly,

            // "Trp->Leu/Ile substitution."
            UNIMOD_Trp__Xle,

            // "Tyr->Phe substitution."
            UNIMOD_Tyr__Phe,

            // "Tyr->Ser substitution."
            UNIMOD_Tyr__Ser,

            // "Tyr->Asn substitution."
            UNIMOD_Tyr__Asn,

            // "Tyr->His substitution."
            UNIMOD_Tyr__His,

            // "Tyr->Asp substitution."
            UNIMOD_Tyr__Asp,

            // "Tyr->Cys substitution."
            UNIMOD_Tyr__Cys,

            // "Mass Defect Tag on lysine e-amino."
            UNIMOD_BDMAPP,

            // "Nitroalkylation by Nitro Linoleic Acid."
            UNIMOD_NA_LNO2,

            // "Nitroalkylation by Nitro Oleic Acid."
            UNIMOD_NA_OA_NO2,

            // "Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, medium form."
            UNIMOD_ICPL_2H_4_,

            // "13C(6) 15N(1) Silac label."
            UNIMOD_Label_13C_6_15N_1_,

            // "13C(6) 15N(2) (D)9 SILAC label."
            UNIMOD_Label_2H_9_13C_6_15N_2_,

            // "Nicotinic Acid."
            UNIMOD_NIC,

            // "Deuterated Nicotinic Acid."
            UNIMOD_dNIC,

            // "Dehydrated 4-hydroxynonenal."
            UNIMOD_HNE_Delta_H_2_O,

            // "4-Oxononenal (ONE)."
            UNIMOD_4_ONE,

            // "O-Dimethylphosphorylation."
            UNIMOD_O_Dimethylphosphate,

            // "O-Methylphosphorylation."
            UNIMOD_O_Methylphosphate,

            // "O-Diethylphosphorylation."
            UNIMOD_Diethylphosphate,

            // "O-Ethylphosphorylation."
            UNIMOD_Ethylphosphate,

            // "O-pinacolylmethylphosphonylation."
            UNIMOD_O_pinacolylmethylphosphonate,

            // "Methylphosphonylation."
            UNIMOD_Methylphosphonate,

            // "O-Isopropylmethylphosphonylation."
            UNIMOD_O_Isopropylmethylphosphonate,

            // "Representative mass and accurate mass for 113, 114, 116 & 117."
            UNIMOD_iTRAQ8plex,

            // "Accurate mass for 115, 118, 119 & 121."
            UNIMOD_iTRAQ8plex_13C_6_15N_2_,

            // "Carboxyl modification with ethanolamine."
            UNIMOD_Ethanolamine,

            // "Dithiothreitol (DTT)."
            UNIMOD_DTT_ST,

            // "Dithiothreitol (DTT) on Cys."
            UNIMOD_DTT_C,

            // "Sixplex Tandem Mass TagÂ®."
            UNIMOD_TMT6plex,

            // "Duplex Tandem Mass TagÂ®."
            UNIMOD_TMT2plex,

            // "Native Tandem Mass TagÂ®."
            UNIMOD_TMT,

            // "ExacTag Thiol label mass for 2-4-7-10 plex."
            UNIMOD_ExacTagThiol,

            // "ExacTag Amine label mass for 2-4-7-10 plex."
            UNIMOD_ExacTagAmine,

            // "Dehydrated 4-Oxononenal Michael adduct."
            UNIMOD_4_ONE_Delta_H__2_O__1_,

            // "Nitroso Sulfamethoxazole Sulphenamide thiol adduct."
            UNIMOD_NO_SMX_SEMD,

            // "Nitroso Sulfamethoxazole semimercaptal thiol adduct."
            UNIMOD_NO_SMX_SMCT,

            // "Nitroso Sulfamethoxazole Sulfinamide thiol adduct."
            UNIMOD_NO_SMX_SIMD,

            // "Malonylation of C and S residues."
            UNIMOD_Malonyl,

            // "Derivatization by N-term modification using 3-Sulfobenzoic succinimidyl ester."
            UNIMOD_3sulfo,

            // "Trifluoroleucine replacement of leucine."
            UNIMOD_trifluoro,

            // "Tri nitro benzene."
            UNIMOD_TNBS,

            // "Isotope Distribution Encoded Tag."
            UNIMOD_IDEnT,

            // "Isotopically labeled Dithiothreitol (DTT) modification of serines or threonines."
            UNIMOD_DTT_ST_2H_6_,

            // "Isotopically labeled Dithiothreitol (DTT) modification of cysteines."
            UNIMOD_DTT_C_2H_6_,

            // "Removal of initiator methionine from protein N-terminus."
            UNIMOD_Met_loss,

            // "Removal of initiator methionine from protein N-terminus, then acetylation of the new N-terminus."
            UNIMOD_Met_loss_Acetyl,

            // "Menadione hydroquinone derivative."
            UNIMOD_Menadione_HQ,

            // "Mono-methylated lysine labelled with Acetyl_heavy."
            UNIMOD_Methyl_Acetyl_2H_3_,

            // "Lapachenole photochemically added to cysteine."
            UNIMOD_lapachenole,

            // "13C(5) Silac label."
            UNIMOD_Label_13C_5_,

            // "Maleimide."
            UNIMOD_maleimide,

            // "Alkylation by biotinylated form of phenacyl bromide."
            UNIMOD_Biotin_phenacyl,

            // "Iodoacetic acid derivative w/ 13C label."
            UNIMOD_Carboxymethyl_13C_2_,

            // "D5 N-ethylmaleimide on cysteines."
            UNIMOD_NEM_2H_5_,

            // "Deuterium cysteamine modification to S or T."
            UNIMOD_AEC_MAEC_2H_4_,

            // "Hex1HexNAc1."
            UNIMOD_Hex1HexNAc1,

            // "13C6 labeled ubiquitinylation residue."
            UNIMOD_Label_13C_6__GlyGly,

            // "Was PentylamineBiotin."
            UNIMOD_Biotin_Thermo_21345,

            // "Labeling transglutaminase substrate on glutamine side chain."
            UNIMOD_Pentylamine,

            // "Was Biotin-PEO4-hydrazide."
            UNIMOD_Biotin_Thermo_21360,

            // "Fluorescent dye that labels cysteines."
            UNIMOD_Cy3b_maleimide,

            // "Enzymatic glycine removal leaving an amidated C-terminus."
            UNIMOD_Gly_loss_Amide,

            // "Addition of BMOE crosslinker."
            UNIMOD_BMOE,

            // "Addition of DFDNB crosslinker."
            UNIMOD_DFDNB,

            // "Tris(2,4,6-trimethoxyphenyl)phosphonium acetic acid N-hydroxysuccinimide ester derivative."
            UNIMOD_TMPP_Ac,

            // "Dihydroxy methylglyoxal adduct."
            UNIMOD_Dihydroxyimidazolidine,

            // "Acetyl 4,4,5,5-D4 Lysine."
            UNIMOD_Label_2H_4__Acetyl,

            // "Acetyl 13C(6) Silac label."
            UNIMOD_Label_13C_6__Acetyl,

            // "Acetyl_13C(6) 15N(2) Silac label."
            UNIMOD_Label_13C_6_15N_2__Acetyl,

            // "Arginine replacement by Nitropyrimidyl ornithine."
            UNIMOD_Arg__Npo,

            // "Sumo mutant Smt3-WT tail following trypsin digestion."
            UNIMOD_EQIGG,

            // "Adduct of phenylglyoxal with Arg."
            UNIMOD_Arg2PG,

            // "S-guanylation."
            UNIMOD_cGMP,

            // "S-guanylation-2."
            UNIMOD_cGMP_RMP_loss,

            // "Ubiquitination 2H4 lysine."
            UNIMOD_Label_2H_4__GlyGly,

            // "13C(8) 15N(2) Silac label."
            UNIMOD_Label_13C_8_15N_2_,

            // "Methylglyoxal-derived hydroimidazolone."
            UNIMOD_MG_H1,

            // "Glyoxal-derived hydroimiadazolone."
            UNIMOD_G_H1,

            // "NHS ester linked Green Fluorescent Bodipy Dye."
            UNIMOD_ZGB,

            // "SILAC."
            UNIMOD_Label_13C_1_2H_3_,

            // "13C(6) 15N(2) Lysine glygly."
            UNIMOD_Label_13C_6_15N_2__GlyGly,

            // "Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, +10 Da form."
            UNIMOD_ICPL_13C_6_2H_4_,

            // "SUMOylation by SUMO-1."
            UNIMOD_QEQTGG,

            // "SUMOylation by SUMO-2/3."
            UNIMOD_QQQTGG,

            // "Bodipy modifications onto cysteine."
            UNIMOD_Bodipy,

            // "Was ChromoBiotin."
            UNIMOD_Biotin_Thermo_21325,

            // "Oxidised methionine 13C(1)2H(3) SILAC label."
            UNIMOD_Label_13C_1_2H_3__Oxidation,

            // "2-ammonio-6-
            UNIMOD_HydroxymethylOP,

            // "Covalent linkage of maleimidyl coumarin probe (Molecular Probes D-10253)."
            UNIMOD_MDCC,

            // "MTRAQ light."
            UNIMOD_mTRAQ,

            // "MTRAQ medium."
            UNIMOD_mTRAQ_13C_3_15N_1_,

            // "Thiol-reactive dye for fluorescence labelling of proteins."
            UNIMOD_DyLight_maleimide,

            // "Methyl-PEO12-Maleimide."
            UNIMOD_Methyl_PEO12_Maleimide,

            // "Carbamidomethylated DTT modification of cysteine."
            UNIMOD_CarbamidomethylDTT,

            // "Carboxymethylated DTT modification of cysteine."
            UNIMOD_CarboxymethylDTT,

            // "Biotin polyethyleneoxide (n=3) alkyne."
            UNIMOD_Biotin_PEG_PRA,

            // "Methionine replacement by azido homoalanine."
            UNIMOD_Met__Aha,

            // "SILAC 15N(4)."
            UNIMOD_Label_15N_4_,

            // "Pyrophosphorylation of Ser/Thr."
            UNIMOD_pyrophospho,

            // "Methionine replacement by homopropargylglycine."
            UNIMOD_Met__Hpg,

            // "2,3,4,6-tetra-O-Acetyl-1-allyl-alpha-D-galactopyranoside modification of cysteine."
            UNIMOD_4AcAllylGal,

            // "Reaction with dimethylarsinous (AsIII) acid."
            UNIMOD_DimethylArsino,

            // "Lys->Cys substitution and carbamidomethylation."
            UNIMOD_Lys__CamCys,

            // "Phe->Cys substitution and carbamidomethylation."
            UNIMOD_Phe__CamCys,

            // "Leu->Met substitution and sulfoxidation."
            UNIMOD_Leu__MetOx,

            // "Lys->Met substitution and sulfoxidation."
            UNIMOD_Lys__MetOx,

            // "Galactosyl hydroxylysine."
            UNIMOD_Galactosyl,

            // "Modified SMCC maleimide with 3-(dimethylamino)-1-propylamine."
            UNIMOD_SMCC_maleimide,

            // "2,4-diacetamido-2,4,6-trideoxyglucopyranose."
            UNIMOD_Bacillosamine,

            // "Cys modification by (1-oxyl-2,2,5,5-tetramethyl-3-pyrroline-3-methyl)methanesulfonate (MTSL)."
            UNIMOD_MTSL,

            // "4-hydroxy-2-nonenal and biotinamidohexanoic acid hydrazide, reduced."
            UNIMOD_HNE_BAHAH,

            // "Methylmalonylation on Serine."
            UNIMOD_Methylmalonylation,

            // "Ethoxyformylation."
            UNIMOD_Ethoxyformyl,

            // "13C(4) 15N(2) Lysine glygly."
            UNIMOD_Label_13C_4_15N_2__GlyGly,

            // "Ethyl amino."
            UNIMOD_ethylamino,

            // "2-OH-ethyl thio-Ser."
            UNIMOD_MercaptoEthanol,

            // "Solvolysis of amide group on Asn or Gln by ethanol."
            UNIMOD_EthylAmide,

            // "SUMOylation by SUMO-2/3 (formic acid cleavage)."
            UNIMOD_VFQQQTGG,

            // "SUMOylation by SUMO-1 (formic acid cleavage)."
            UNIMOD_VIEVYQEQTGG,

            // "Photocleavable Biotin + GalNAz on O-GlcNAc."
            UNIMOD_AMTzHexNAc2,

            // "High molecular absorption maleimide label for proteins."
            UNIMOD_Atto495Maleimide,

            // "Chlorination of tyrosine residues."
            UNIMOD_Chlorination,

            // "Dichlorination of tyrosine residues."
            UNIMOD_dichlorination,

            // "Cysteine modifier."
            UNIMOD_AROD,

            // "Carbamidomethylated Cys that undergoes beta-elimination and Michael addition of methylamine."
            UNIMOD_Cys__methylaminoAla,

            // "Carbamidomethylated Cys that undergoes beta-elimination and Michael addition of ethylamine."
            UNIMOD_Cys__ethylaminoAla,

            // "2,4-Dinitrobenzenesulfenyl."
            UNIMOD_DNPS,

            // "High molecular absorption label for proteins."
            UNIMOD_SulfoGMBS,

            // "Modified GMBS X linker for proteins."
            UNIMOD_DimethylamineGMBS,

            // "SILAC label."
            UNIMOD_Label_15N_2_2H_9_,

            // "Levuglandinyl-lysine anhydrolactam adduct."
            UNIMOD_LG_anhydrolactam,

            // "Levuglandinyl-lysine pyrrole adduct."
            UNIMOD_LG_pyrrole,

            // "Levuglandinyl-lysine anhyropyrrole adduct."
            UNIMOD_LG_anhyropyrrole,

            // "Condensation product of 3-deoxyglucosone."
            UNIMOD_3_deoxyglucosone,

            // "Replacement of proton by lithium."
            UNIMOD_Cation_Li,

            // "Replacement of 2 protons by calcium."
            UNIMOD_Cation_Ca_II_,

            // "Replacement of 2 protons by iron."
            UNIMOD_Cation_Fe_II_,

            // "Replacement of 2 protons by nickel."
            UNIMOD_Cation_Ni_II_,

            // "Replacement of 2 protons by zinc."
            UNIMOD_Cation_Zn_II_,

            // "Replacement of proton by silver."
            UNIMOD_Cation_Ag,

            // "Replacement of 2 protons by magnesium."
            UNIMOD_Cation_Mg_II_,

            // "S-(2-succinyl) cysteine."
            UNIMOD_2_succinyl,

            // "Propargylamine."
            UNIMOD_Propargylamine,

            // "Phospho-propargylamine."
            UNIMOD_Phosphopropargyl,

            // "SUMOylation by SUMO-1 after tryptic cleavage."
            UNIMOD_SUMO2135,

            // "SUMOylation by SUMO-2/3 after tryptic cleavage."
            UNIMOD_SUMO3549,

            // "Membrane protein extraction."
            UNIMOD_thioacylPA,

            // "Maleimide-3-saccharide."
            UNIMOD_maleimide3,

            // "Maleimide-5-saccharide."
            UNIMOD_maleimide5,

            // "Puromycin."
            UNIMOD_Puromycin,

            // "O,O-diethyl o-3,5,6-trichloro-2-pyridyl phosphorothioate."
            UNIMOD_Chlorpyrifos,

            // "2,3-dihydro-2,2-dimethyl-7-benzofuranol N-methyl carbamate."
            UNIMOD_Carbofuran,

            // "Benzyl isothiocyanate."
            UNIMOD_BITC,

            // "Phenethyl isothiocyanate."
            UNIMOD_PEITC,

            // "Condensation product of glucosone."
            UNIMOD_glucosone,

            // "Native cysteine-reactive Tandem Mass TagÂ®."
            UNIMOD_cysTMT,

            // "Cysteine-reactive Sixplex Tandem Mass TagÂ®."
            UNIMOD_cysTMT6plex,

            // "Dimethyl 13C(6) Silac label."
            UNIMOD_Label_13C_6__Dimethyl,

            // "Dimethyl 13C(6)15N(2) Silac label."
            UNIMOD_Label_13C_6_15N_2__Dimethyl,

            // "Replacement of proton with ammonium ion."
            UNIMOD_Ammonium,

            // "ISD (z+2)-series."
            UNIMOD_ISD_z_2_ion,

            // "Was Biotin-maleimide."
            UNIMOD_Biotin_Sigma_B1267,

            // "15N(1)."
            UNIMOD_Label_15N_1_,

            // "15N(2)."
            UNIMOD_Label_15N_2_,

            // "15N(3)."
            UNIMOD_Label_15N_3_,

            // "Aminotyrosine with sulfation."
            UNIMOD_sulfo_amino,

            // "N-biotinyl-6-aminohexanoyl."
            UNIMOD_BHAc,

            // "Azidohomoalanine (AHA) bound to propargylglycine-NH2 (alkyne)."
            UNIMOD_AHA_Alkyne,

            // "Azidohomoalanine (AHA) bound to DDDDK-propargylglycine-NH2 (alkyne)."
            UNIMOD_AHA_Alkyne_KDDDD,

            // "(-)-epigallocatechin-3-gallate."
            UNIMOD_EGCG1,

            // "(-)-dehydroepigallocatechin."
            UNIMOD_EGCG2,

            // "Monomethylated Arg13C(6) 15N(4)."
            UNIMOD_Label_13C_6_15N_4__Methyl,

            // "Dimethylated Arg13C(6) 15N(4)."
            UNIMOD_Label_13C_6_15N_4__Dimethyl,

            // "2H(3) 13C(1) monomethylated Arg13C(6) 15N(4)."
            UNIMOD_Label_13C_6_15N_4__Methyl_2H_3_13C_1_,

            // "2H(6) 13C(2) Dimethylated Arg13C(6) 15N(4)."
            UNIMOD_Label_13C_6_15N_4__Dimethyl_2H_6_13C_2_,

            // "Sec Iodoacetamide derivative."
            UNIMOD_SecCarbamidomethyl,

            // "Addition of Carbon to cysteine."
            UNIMOD_Thiazolidine,

            // "Addition of DEDGFLYMVYASQETFG."
            UNIMOD_DEDGFLYMVYASQETFG,

            // "Nalpha-(3-maleimidylpropionyl)biocytin."
            UNIMOD_Biotin_Invitrogen_M1602,

            // "Glycidamide adduct."
            UNIMOD_glycidamide,

            // "C-terminal homoserine lactone and two aminohexanoic acids."
            UNIMOD_Ahx2_Hsl,

            // "DMPO spin-trap nitrone adduct."
            UNIMOD_DMPO,

            // "Isotope-Coded Dimedone light form."
            UNIMOD_ICDID,

            // "Isotope-Coded Dimedone heavy form."
            UNIMOD_ICDID_2H_6_,

            // "Monolink of DSS/BS3 crosslinker to Lys or N-terminus."
            UNIMOD_Xlink_DSS,

            // "Monolink of EGS crosslinker to Lys or N-terminus."
            UNIMOD_Xlink_EGS,

            // "Monolink of DST crosslinker to Lys or N-terminus."
            UNIMOD_Xlink_DST,

            // "Monolink of DSP/DTSSP crosslinker to Lys or N-terminus."
            UNIMOD_Xlink_DTSSP,

            // "Monolink of sulfoSMCC/SMCC crosslinker to Cys."
            UNIMOD_Xlink_SMCC,

            // "Monolink of DMP crosslinker to Lys or N-terminus."
            UNIMOD_Xlink_DMP_de,

            // "EGS crosslinker to Lys or N-terminus following hydroxylamine cleavage."
            UNIMOD_Xlink_EGScleaved,

            // "Desthiobiotin modification of lysine."
            UNIMOD_Biotin_Thermo_88310,

            // "Tyrosine caged with 2-nitrobenzyl (ONB)."
            UNIMOD_2_nitrobenzyl,

            // "N-ethylmaleimide on selenocysteines."
            UNIMOD_SecNEM,

            // "D5 N-ethylmaleimide on selenocysteines."
            UNIMOD_SecNEM_2H_5_,

            // "Thiadiazolydation of Cys."
            UNIMOD_Thiadiazole,

            // "Modification of cystein by withaferin."
            UNIMOD_Withaferin,

            // "Desthiobiotin fluorophosphonate."
            UNIMOD_Biotin_Thermo_88317,

            // "TAMRA fluorophosphonate modification of serine."
            UNIMOD_TAMRA_FP,

            // "Maleimide-Biotin + Water."
            UNIMOD_Biotin_Thermo_21901_H2O,

            // "Deoxyhypusine."
            UNIMOD_Deoxyhypusine,

            // "Acetyldeoxyhypusine."
            UNIMOD_Acetyldeoxyhypusine,

            // "Acetylhypusine."
            UNIMOD_Acetylhypusine,

            // "Ala->Cys substitution."
            UNIMOD_Ala__Cys,

            // "Ala->Phe substitution."
            UNIMOD_Ala__Phe,

            // "Ala->His substitution."
            UNIMOD_Ala__His,

            // "Ala->Leu/Ile substitution."
            UNIMOD_Ala__Xle,

            // "Ala->Lys substitution."
            UNIMOD_Ala__Lys,

            // "Ala->Met substitution."
            UNIMOD_Ala__Met,

            // "Ala->Asn substitution."
            UNIMOD_Ala__Asn,

            // "Ala->Gln substitution."
            UNIMOD_Ala__Gln,

            // "Ala->Arg substitution."
            UNIMOD_Ala__Arg,

            // "Ala->Trp substitution."
            UNIMOD_Ala__Trp,

            // "Ala->Tyr substitution."
            UNIMOD_Ala__Tyr,

            // "Cys->Ala substitution."
            UNIMOD_Cys__Ala,

            // "Cys->Asp substitution."
            UNIMOD_Cys__Asp,

            // "Cys->Glu substitution."
            UNIMOD_Cys__Glu,

            // "Cys->His substitution."
            UNIMOD_Cys__His,

            // "Cys->Leu/Ile substitution."
            UNIMOD_Cys__Xle,

            // "Cys->Lys substitution."
            UNIMOD_Cys__Lys,

            // "Cys->Met substitution."
            UNIMOD_Cys__Met,

            // "Cys->Asn substitution."
            UNIMOD_Cys__Asn,

            // "Cys->Pro substitution."
            UNIMOD_Cys__Pro,

            // "Cys->Gln substitution."
            UNIMOD_Cys__Gln,

            // "Cys->Thr substitution."
            UNIMOD_Cys__Thr,

            // "Cys->Val substitution."
            UNIMOD_Cys__Val,

            // "Asp->Cys substitution."
            UNIMOD_Asp__Cys,

            // "Asp->Phe substitution."
            UNIMOD_Asp__Phe,

            // "Asp->Leu/Ile substitution."
            UNIMOD_Asp__Xle,

            // "Asp->Lys substitution."
            UNIMOD_Asp__Lys,

            // "Asp->Met substitution."
            UNIMOD_Asp__Met,

            // "Asp->Pro substitution."
            UNIMOD_Asp__Pro,

            // "Asp->Gln substitution."
            UNIMOD_Asp__Gln,

            // "Asp->Arg substitution."
            UNIMOD_Asp__Arg,

            // "Asp->Ser substitution."
            UNIMOD_Asp__Ser,

            // "Asp->Thr substitution."
            UNIMOD_Asp__Thr,

            // "Asp->Trp substitution."
            UNIMOD_Asp__Trp,

            // "Glu->Cys substitution."
            UNIMOD_Glu__Cys,

            // "Glu->Phe substitution."
            UNIMOD_Glu__Phe,

            // "Glu->His substitution."
            UNIMOD_Glu__His,

            // "Glu->Leu/Ile substitution."
            UNIMOD_Glu__Xle,

            // "Glu->Met substitution."
            UNIMOD_Glu__Met,

            // "Glu->Asn substitution."
            UNIMOD_Glu__Asn,

            // "Glu->Pro substitution."
            UNIMOD_Glu__Pro,

            // "Glu->Arg substitution."
            UNIMOD_Glu__Arg,

            // "Glu->Ser substitution."
            UNIMOD_Glu__Ser,

            // "Glu->Thr substitution."
            UNIMOD_Glu__Thr,

            // "Glu->Trp substitution."
            UNIMOD_Glu__Trp,

            // "Glu->Tyr substitution."
            UNIMOD_Glu__Tyr,

            // "Phe->Ala substitution."
            UNIMOD_Phe__Ala,

            // "Phe->Asp substitution."
            UNIMOD_Phe__Asp,

            // "Phe->Glu substitution."
            UNIMOD_Phe__Glu,

            // "Phe->Gly substitution."
            UNIMOD_Phe__Gly,

            // "Phe->His substitution."
            UNIMOD_Phe__His,

            // "Phe->Lys substitution."
            UNIMOD_Phe__Lys,

            // "Phe->Met substitution."
            UNIMOD_Phe__Met,

            // "Phe->Asn substitution."
            UNIMOD_Phe__Asn,

            // "Phe->Pro substitution."
            UNIMOD_Phe__Pro,

            // "Phe->Gln substitution."
            UNIMOD_Phe__Gln,

            // "Phe->Arg substitution."
            UNIMOD_Phe__Arg,

            // "Phe->Thr substitution."
            UNIMOD_Phe__Thr,

            // "Phe->Trp substitution."
            UNIMOD_Phe__Trp,

            // "Gly->Phe substitution."
            UNIMOD_Gly__Phe,

            // "Gly->His substitution."
            UNIMOD_Gly__His,

            // "Gly->Leu/Ile substitution."
            UNIMOD_Gly__Xle,

            // "Gly->Lys substitution."
            UNIMOD_Gly__Lys,

            // "Gly->Met substitution."
            UNIMOD_Gly__Met,

            // "Gly->Asn substitution."
            UNIMOD_Gly__Asn,

            // "Gly->Pro substitution."
            UNIMOD_Gly__Pro,

            // "Gly->Gln substitution."
            UNIMOD_Gly__Gln,

            // "Gly->Thr substitution."
            UNIMOD_Gly__Thr,

            // "Gly->Tyr substitution."
            UNIMOD_Gly__Tyr,

            // "His->Ala substitution."
            UNIMOD_His__Ala,

            // "His->Cys substitution."
            UNIMOD_His__Cys,

            // "His->Glu substitution."
            UNIMOD_His__Glu,

            // "His->Phe substitution."
            UNIMOD_His__Phe,

            // "His->Gly substitution."
            UNIMOD_His__Gly,

            // "His->Lys substitution."
            UNIMOD_His__Lys,

            // "His->Met substitution."
            UNIMOD_His__Met,

            // "His->Ser substitution."
            UNIMOD_His__Ser,

            // "His->Thr substitution."
            UNIMOD_His__Thr,

            // "His->Val substitution."
            UNIMOD_His__Val,

            // "His->Trp substitution."
            UNIMOD_His__Trp,

            // "Leu/Ile->Ala substitution."
            UNIMOD_Xle__Ala,

            // "Leu/Ile->Cys substitution."
            UNIMOD_Xle__Cys,

            // "Leu/Ile->Asp substitution."
            UNIMOD_Xle__Asp,

            // "Leu/Ile->Glu substitution."
            UNIMOD_Xle__Glu,

            // "Leu/Ile->Gly substitution."
            UNIMOD_Xle__Gly,

            // "Leu/Ile->Tyr substitution."
            UNIMOD_Xle__Tyr,

            // "Lys->Ala substitution."
            UNIMOD_Lys__Ala,

            // "Lys->Cys substitution."
            UNIMOD_Lys__Cys,

            // "Lys->Asp substitution."
            UNIMOD_Lys__Asp,

            // "Lys->Phe substitution."
            UNIMOD_Lys__Phe,

            // "Lys->Gly substitution."
            UNIMOD_Lys__Gly,

            // "Lys->His substitution."
            UNIMOD_Lys__His,

            // "Lys->Pro substitution."
            UNIMOD_Lys__Pro,

            // "Lys->Ser substitution."
            UNIMOD_Lys__Ser,

            // "Lys->Val substitution."
            UNIMOD_Lys__Val,

            // "Lys->Trp substitution."
            UNIMOD_Lys__Trp,

            // "Lys->Tyr substitution."
            UNIMOD_Lys__Tyr,

            // "Met->Ala substitution."
            UNIMOD_Met__Ala,

            // "Met->Cys substitution."
            UNIMOD_Met__Cys,

            // "Met->Asp substitution."
            UNIMOD_Met__Asp,

            // "Met->Glu substitution."
            UNIMOD_Met__Glu,

            // "Met->Phe substitution."
            UNIMOD_Met__Phe,

            // "Met->Gly substitution."
            UNIMOD_Met__Gly,

            // "Met->His substitution."
            UNIMOD_Met__His,

            // "Met->Asn substitution."
            UNIMOD_Met__Asn,

            // "Met->Pro substitution."
            UNIMOD_Met__Pro,

            // "Met->Gln substitution."
            UNIMOD_Met__Gln,

            // "Met->Ser substitution."
            UNIMOD_Met__Ser,

            // "Met->Trp substitution."
            UNIMOD_Met__Trp,

            // "Met->Tyr substitution."
            UNIMOD_Met__Tyr,

            // "Asn->Ala substitution."
            UNIMOD_Asn__Ala,

            // "Asn->Cys substitution."
            UNIMOD_Asn__Cys,

            // "Asn->Glu substitution."
            UNIMOD_Asn__Glu,

            // "Asn->Phe substitution."
            UNIMOD_Asn__Phe,

            // "Asn->Gly substitution."
            UNIMOD_Asn__Gly,

            // "Asn->Met substitution."
            UNIMOD_Asn__Met,

            // "Asn->Pro substitution."
            UNIMOD_Asn__Pro,

            // "Asn->Gln substitution."
            UNIMOD_Asn__Gln,

            // "Asn->Arg substitution."
            UNIMOD_Asn__Arg,

            // "Asn->Val substitution."
            UNIMOD_Asn__Val,

            // "Asn->Trp substitution."
            UNIMOD_Asn__Trp,

            // "Pro->Cys substitution."
            UNIMOD_Pro__Cys,

            // "Pro->Asp substitution."
            UNIMOD_Pro__Asp,

            // "Pro->Glu substitution."
            UNIMOD_Pro__Glu,

            // "Pro->Phe substitution."
            UNIMOD_Pro__Phe,

            // "Pro->Gly substitution."
            UNIMOD_Pro__Gly,

            // "Pro->Lys substitution."
            UNIMOD_Pro__Lys,

            // "Pro->Met substitution."
            UNIMOD_Pro__Met,

            // "Pro->Asn substitution."
            UNIMOD_Pro__Asn,

            // "Pro->Val substitution."
            UNIMOD_Pro__Val,

            // "Pro->Trp substitution."
            UNIMOD_Pro__Trp,

            // "Pro->Tyr substitution."
            UNIMOD_Pro__Tyr,

            // "Gln->Ala substitution."
            UNIMOD_Gln__Ala,

            // "Gln->Cys substitution."
            UNIMOD_Gln__Cys,

            // "Gln->Asp substitution."
            UNIMOD_Gln__Asp,

            // "Gln->Phe substitution."
            UNIMOD_Gln__Phe,

            // "Gln->Gly substitution."
            UNIMOD_Gln__Gly,

            // "Gln->Met substitution."
            UNIMOD_Gln__Met,

            // "Gln->Asn substitution."
            UNIMOD_Gln__Asn,

            // "Gln->Ser substitution."
            UNIMOD_Gln__Ser,

            // "Gln->Thr substitution."
            UNIMOD_Gln__Thr,

            // "Gln->Val substitution."
            UNIMOD_Gln__Val,

            // "Gln->Trp substitution."
            UNIMOD_Gln__Trp,

            // "Gln->Tyr substitution."
            UNIMOD_Gln__Tyr,

            // "Arg->Ala substitution."
            UNIMOD_Arg__Ala,

            // "Arg->Asp substitution."
            UNIMOD_Arg__Asp,

            // "Arg->Glu substitution."
            UNIMOD_Arg__Glu,

            // "Arg->Asn substitution."
            UNIMOD_Arg__Asn,

            // "Arg->Val substitution."
            UNIMOD_Arg__Val,

            // "Arg->Tyr substitution."
            UNIMOD_Arg__Tyr,

            // "Arg->Phe substitution."
            UNIMOD_Arg__Phe,

            // "Ser->Asp substitution."
            UNIMOD_Ser__Asp,

            // "Ser->Glu substitution."
            UNIMOD_Ser__Glu,

            // "Ser->His substitution."
            UNIMOD_Ser__His,

            // "Ser->Lys substitution."
            UNIMOD_Ser__Lys,

            // "Ser->Met substitution."
            UNIMOD_Ser__Met,

            // "Ser->Gln substitution."
            UNIMOD_Ser__Gln,

            // "Ser->Val substitution."
            UNIMOD_Ser__Val,

            // "Thr->Cys substitution."
            UNIMOD_Thr__Cys,

            // "Thr->Asp substitution."
            UNIMOD_Thr__Asp,

            // "Thr->Glu substitution."
            UNIMOD_Thr__Glu,

            // "Thr->Phe substitution."
            UNIMOD_Thr__Phe,

            // "Thr->Gly substitution."
            UNIMOD_Thr__Gly,

            // "Thr->His substitution."
            UNIMOD_Thr__His,

            // "Thr->Gln substitution."
            UNIMOD_Thr__Gln,

            // "Thr->Val substitution."
            UNIMOD_Thr__Val,

            // "Thr->Trp substitution."
            UNIMOD_Thr__Trp,

            // "Thr->Tyr substitution."
            UNIMOD_Thr__Tyr,

            // "Val->Cys substitution."
            UNIMOD_Val__Cys,

            // "Val->His substitution."
            UNIMOD_Val__His,

            // "Val->Lys substitution."
            UNIMOD_Val__Lys,

            // "Val->Asn substitution."
            UNIMOD_Val__Asn,

            // "Val->Pro substitution."
            UNIMOD_Val__Pro,

            // "Val->Gln substitution."
            UNIMOD_Val__Gln,

            // "Val->Arg substitution."
            UNIMOD_Val__Arg,

            // "Val->Ser substitution."
            UNIMOD_Val__Ser,

            // "Val->Thr substitution."
            UNIMOD_Val__Thr,

            // "Val->Trp substitution."
            UNIMOD_Val__Trp,

            // "Val->Tyr substitution."
            UNIMOD_Val__Tyr,

            // "Trp->Ala substitution."
            UNIMOD_Trp__Ala,

            // "Trp->Asp substitution."
            UNIMOD_Trp__Asp,

            // "Trp->Glu substitution."
            UNIMOD_Trp__Glu,

            // "Trp->Phe substitution."
            UNIMOD_Trp__Phe,

            // "Trp->His substitution."
            UNIMOD_Trp__His,

            // "Trp->Lys substitution."
            UNIMOD_Trp__Lys,

            // "Trp->Met substitution."
            UNIMOD_Trp__Met,

            // "Trp->Asn substitution."
            UNIMOD_Trp__Asn,

            // "Trp->Pro substitution."
            UNIMOD_Trp__Pro,

            // "Trp->Gln substitution."
            UNIMOD_Trp__Gln,

            // "Trp->Thr substitution."
            UNIMOD_Trp__Thr,

            // "Trp->Val substitution."
            UNIMOD_Trp__Val,

            // "Trp->Tyr substitution."
            UNIMOD_Trp__Tyr,

            // "Tyr->Ala substitution."
            UNIMOD_Tyr__Ala,

            // "Tyr->Glu substitution."
            UNIMOD_Tyr__Glu,

            // "Tyr->Gly substitution."
            UNIMOD_Tyr__Gly,

            // "Tyr->Lys substitution."
            UNIMOD_Tyr__Lys,

            // "Tyr->Met substitution."
            UNIMOD_Tyr__Met,

            // "Tyr->Pro substitution."
            UNIMOD_Tyr__Pro,

            // "Tyr->Gln substitution."
            UNIMOD_Tyr__Gln,

            // "Tyr->Arg substitution."
            UNIMOD_Tyr__Arg,

            // "Tyr->Thr substitution."
            UNIMOD_Tyr__Thr,

            // "Tyr->Val substitution."
            UNIMOD_Tyr__Val,

            // "Tyr->Trp substitution."
            UNIMOD_Tyr__Trp,

            // "Tyr->Leu/Ile substitution."
            UNIMOD_Tyr__Xle,

            // "Azidohomoalanine coupled to reductively cleaved tag."
            UNIMOD_AHA_SS,

            // "Carbamidomethylated form of reductively cleaved tag coupled to azidohomoalanine."
            UNIMOD_AHA_SS_CAM,

            // "Sulfo-SBED Label Photoreactive Biotin Crosslinker."
            UNIMOD_Biotin_Thermo_33033,

            // "Sulfo-SBED Label Photoreactive Biotin Crosslinker minus Hydrogen."
            UNIMOD_Biotin_Thermo_33033_H,

            // "S-(2-monomethylsuccinyl) cysteine."
            UNIMOD_2_monomethylsuccinyl,

            // "O-toluene."
            UNIMOD_Saligenin,

            // "O-toluyl-phosphorylation."
            UNIMOD_Cresylphosphate,

            // "Cresyl-Saligenin-phosphorylation."
            UNIMOD_CresylSaligeninPhosphate,

            // "Ub Bromide probe addition."
            UNIMOD_Ub_Br2,

            // "Ubiquitin vinylmethylester."
            UNIMOD_Ub_VME,

            // "Ub amide probe addition."
            UNIMOD_Ub_amide,

            // "Ub Fluorescein probe addition."
            UNIMOD_Ub_fluorescein,

            // "S-(2-dimethylsuccinyl) cysteine."
            UNIMOD_2_dimethylsuccinyl,

            // "Addition of Glycine."
            UNIMOD_Gly,

            // "Addition of GGE."
            UNIMOD_pupylation,

            // "13C4 Methionine label."
            UNIMOD_Label_13C_4_,

            // "Oxidised 13C4 labelled Methionine."
            UNIMOD_Label_13C_4__Oxidation,

            // "N-Homocysteine thiolactone."
            UNIMOD_HCysThiolactone,

            // "S-homocysteinylation."
            UNIMOD_HCysteinyl,

            // "Side reaction of HisTag."
            UNIMOD_UgiJoullie,

            // "Cys modified with dipy ligand."
            UNIMOD_Dipyridyl,

            // "Chemical modification of the iodinated sites of thyroglobulin by Suzuki reaction."
            UNIMOD_Furan,

            // "Chemical modification of the diiodinated sites of thyroglobulin by Suzuki reaction."
            UNIMOD_Difuran,

            // "1-methyl-3-benzoyl-4-hydroxy-4-phenylpiperidine."
            UNIMOD_BMP_piperidinol,

            // "Side reaction of PG with Side chain of aspartic or glutamic acid."
            UNIMOD_UgiJoullieProGly,

            // "Side reaction of PGPG with Side chain of aspartic or glutamic acid."
            UNIMOD_UgiJoullieProGlyProGly,

            // "Glycosylation with IME linked Hex(2) NeuAc."
            UNIMOD_IMEHex_2_NeuAc,

            // "Loss of arginine due to transpeptidation."
            UNIMOD_Arg_loss,

            // "Addition of arginine due to transpeptidation."
            UNIMOD_Arg,

            // "Butyryl."
            UNIMOD_Butyryl,

            // "Double Carbamidomethylation."
            UNIMOD_Dicarbamidomethyl,

            // "Dimethyl-Medium."
            UNIMOD_Dimethyl_2H_6_,

            // "SUMOylation leaving GlyGlyGln."
            UNIMOD_GGQ,

            // "SUMOylation leaving GlnThrGlyGly."
            UNIMOD_QTGG,

            // "13C3 label for SILAC."
            UNIMOD_Label_13C_3_,

            // "13C3 15N1 label for SILAC."
            UNIMOD_Label_13C_3_15N_1_,

            // "13C4 15N1 label for SILAC."
            UNIMOD_Label_13C_4_15N_1_,

            // "2H(10) label."
            UNIMOD_Label_2H_10_,

            // "Label:2H(4)13C(1)."
            UNIMOD_Label_2H_4_13C_1_,

            // "Addition of lysine due to transpeptidation."
            UNIMOD_Lys,

            // "MTRAQ heavy."
            UNIMOD_mTRAQ_13C_6_15N_2_,

            // "N-acetyl neuraminic acid."
            UNIMOD_NeuAc,

            // "N-glycoyl neuraminic acid."
            UNIMOD_NeuGc,

            // "Propyl."
            UNIMOD_Propyl,

            // "Propyl:2H(6)."
            UNIMOD_Propyl_2H_6_,

            // "Propiophenone."
            UNIMOD_Propiophenone,

            // "1,3 dipolar cycloaddition of ethynyluridine to azidohomoalanine."
            UNIMOD_AhaEthynylUridine,

            // "Reduced acrolein addition +58."
            UNIMOD_Delta_H_6_C_3_O_1_,

            // "Reduced acrolein addition +96."
            UNIMOD_Delta_H_8_C_6_O_1_,

            // "Biotin hydrazide labeled acrolein addition +298."
            UNIMOD_biotinAcrolein298,

            // "3-methyl-5-(methylamino)-1,3-diphenylpentan-1-one."
            UNIMOD_MM_diphenylpentanone,

            // "2-ethyl-3-hydroxy-1,3-diphenylpentan-1-one."
            UNIMOD_EHD_diphenylpentanone,

            // "Cys modified with bipy ligand."
            UNIMOD_Bipyridine,

            // "Serine modified with p-vinylphenylmethylsulfonyl group."
            UNIMOD_VinylPMS,

            // "Maleimide-Biotin + 2Water."
            UNIMOD_Biotin_Thermo_21901_2H2O,

            // "Accurate mass for DiLeu 115 isobaric tag."
            UNIMOD_DiLeu4plex115,

            // "Accurate mass for DiLeu 116 isobaric tag."
            UNIMOD_DiLeu4plex,

            // "Accurate mass for DiLeu 117 isobaric tag."
            UNIMOD_DiLeu4plex117,

            // "Accurate mass for DiLeu 118 isobaric tag."
            UNIMOD_DiLeu4plex118,

            // "N-ethylmaleimideSulfur."
            UNIMOD_NEMsulfur,

            // "SulfurDioxide."
            UNIMOD_SulfurDioxide,

            // "N-ethylmaleimideSulfurWater."
            UNIMOD_NEMsulfurWater,

            PATO_pato_OBSOLETE,

            // "A dependent entity that inheres in a bearer by virtue of how the bearer is related to other entities."
            PATO_quality,

            PATO_value_OBSOLETE,

            PATO_assay_OBSOLETE,

            // "A quality of inhering in a bearer by virtue of the bearer's disposition to move freely."
            PATO_mobility,

            PATO_absolute_activity_OBSOLETE,

            PATO_process_OBSOLETE,

            PATO_relative_activity_OBSOLETE,

            // "A physical quality inhering in a bearer by virtue of the bearer's scalar absolute value of the rate of change of the bearer's position."
            PATO_speed,

            PATO_absolute_speed_OBSOLETE,

            PATO_relative_speed_OBSOLETE,

            // "A time quality inhering in a bearer by virtue of how long the bearer has existed."
            PATO_age,

            PATO_absolute_age_OBSOLETE,

            PATO_relative_age_OBSOLETE,

            // "A composite chromatic quality composed of hue, saturation and intensity parts."
            PATO_color,

            // "A chromatic scalar-circular quality inhering in an object that manifests in an observer by virtue of the dominant wavelength of the visible light; may be subject to fiat divisions, typically into 7 or 8 spectra."
            PATO_color_hue,

            // "A scalar optical property that is the intensity, value or amount of perceived light."
            PATO_color_brightness,

            // "A scalar chromatic property that is the degree of purity of perceived light."
            PATO_color_saturation,

            // "A luminous flux quality inhering in a bearer by virtue of the bearer's emitting longer wavelength light following the absorption of shorter wavelength radiation; fluorescence is common with aromatic compounds with several rings joined together."
            PATO_fluorescence,

            // "A chromatic property that is the relative position of different hues or degrees of saturation."
            PATO_color_pattern,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to harmonious coexistence."
            PATO_compatibility,

            PATO_gametophytic_compatability_OBSOLETE,

            PATO_relative_compatability_OBSOLETE,

            PATO_sporophytic_compatability_OBSOLETE,

            // "A single physical entity inhering in an bearer by virtue of the bearer's quantities or relative ratios of subparts."
            PATO_composition,

            PATO_carbohydrate_composition_OBSOLETE,

            PATO_electrolyte_composition_OBSOLETE,

            PATO_macromolecular_composition_OBSOLETE,

            PATO_protein_composition_OBSOLETE,

            PATO_enzyme_composition_OBSOLETE,

            PATO_metabolite_composition_OBSOLETE,

            PATO_secondary_product_composition_OBSOLETE,

            // "A quality inhering in a substance by virtue of the amount of the bearer's there is mixed with another substance."
            PATO_concentration_of,

            PATO_protein_concentration_OBSOLETE,

            PATO_carbohydrate_concentration_OBSOLETE,

            PATO_water_content_OBSOLETE,

            // "A physical quality inhering in a bearer by virtue of the bearer's density, firmness, or viscosity."
            PATO_consistency,

            PATO_gel_consistency_OBSOLETE,

            // "A physical quality inhering in a bearer by virtue of the bearer's orientation in space."
            PATO_direction,

            // "A quality that is the extent of space between two entities."
            PATO_distance,

            PATO_absolutedistance_OBSOLETE,

            PATO_relative_distance_OBSOLETE,

            // "A quality of a physical entity inhering in a bearer by virtue of whether the bearer's molecules are being perceived by a taste and odorant receptors."
            PATO_flavor,

            // "A physical quality which inheres in a bearer by virtue of the number of the bearer's repetitive actions in a particular time."
            PATO_frequency,

            PATO_absolute_frequency_OBSOLETE,

            PATO_relative_frequency_OBSOLETE,

            // "An organismal quality inhering in a bearer by virtue of the bearer's ability to undergo sexual reproduction in order to differentiate the individuals or types involved."
            PATO_biological_sex,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to being turned, bowed, or twisted without breaking."
            PATO_hardness,

            // "A quality inhering in a bearer by virtue of the bearer's possessing or displaying a distinctive feature in type or degree or effect or force."
            PATO_intensity,

            // "A time quality inhering in a bearer by virtue of the bearer's expected maximum age."
            PATO_life_span,

            // "A quality of a single physical entity inhering in the bearer by virtue of the bearer's size or shape or structure."
            PATO_morphology,

            // "A morphological quality inhering in a bearer by virtue of the bearer's ratios of distances between its features (points, edges, surfaces and also holes etc)."
            PATO_shape,

            PATO_absolute_number_OBSOLETE,

            PATO_relative_number_OBSOLETE,

            // "An organismal quality inhering in a bearer by virtue of the bearer's disposition to synthesize a particular organic compound required for its growth."
            PATO_trophic_quality,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's occurrence."
            PATO_occurrence,

            // "A physical quality inhering in a bearer by virtue of the bearer's molecules being are aerially dispersed and perceived by an odorant receptor."
            PATO_odor,

            // "A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a parent."
            PATO_parental_quality_OBSOLETE,

            // "A spatial quality inhering in a bearer by virtue of the bearer's exhibiting repetition of placement of its parts."
            PATO_spatial_pattern,

            PATO_relative_pattern_OBSOLETE,

            // "A sleep quality defined by the mathematic properties of the relative time frames of the sleep cycle."
            PATO_sleep_pattern,

            PATO_percentage_OBSOLETE,

            PATO_absolute_percentage_OBSOLETE,

            PATO_relative_percentage_OBSOLETE,

            // "A texture quality inhering in a bearer by virtue of the bearer's having hair or bristles."
            PATO_pilosity,

            PATO_relative_pilosity_OBSOLETE,

            PATO_qualitative,

            // "A quality inhering in a bearer by virtue of the whether the bearer differs from normal or average."
            PATO_deviation_from_normal_,

            // "The number of entities of this type that are part of the whole organism."
            PATO_count,

            PATO_relative_quality_OBSOLETE,

            PATO_shattering_OBSOLETE,

            PATO_threshability_OBSOLETE,

            PATO_regulation_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the whether the bearer's disposition to react to a stimulus or an agent."
            PATO_response_to,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's movement or variation characterized by the regular recurrence or alternation of different quantities or conditions."
            PATO_rhythm_quality,

            PATO_absolute_rhythym_OBSOLETE,

            // "A physical quality of a process inhering in a bearer by virtue of the size of the bearer's maximum displacement from the 'normal' position, when periodic motion is taking place."
            PATO_amplitude,

            // "A rhythm quality inhering in a bearer by virtue of the repetitiveness of bearer's rhythm."
            PATO_persistence,

            // "A quality that exists by virtue of being a particular point in the time of a cycle."
            PATO_phase,

            PATO_relative_rhythym_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to detect or perceive external stimulation."
            PATO_sensitivity_toward,

            PATO_absolute_sensitivity_OBSOLETE,

            PATO_disease_sensitivity_OBSOLETE,

            PATO_absolute_disease_sensitivity_OBSOLETE,

            PATO_relative_disease_sensitivity_OBSOLETE,

            PATO_relative_sensitivity_OBSOLETE,

            PATO_stress_sensitivity_OBSOLETE,

            PATO_abiotic_stress_sensitivity_OBSOLETE,

            PATO_chemical_sensitivity_OBSOLETE,

            PATO_drug_sensitivity_OBSOLETE,

            PATO_absolute_drug_sensitivity_OBSOLETE,

            PATO_relative_drug_sensitivity_OBSOLETE,

            PATO_herbicide_sensitivity_OBSOLETE,

            PATO_insecticide_sensitivity_OBSOLETE,

            PATO_plant_growth_hormone_sensitivity_OBSOLETE,

            PATO_soil_composition_sensitivity_OBSOLETE,

            PATO_soil_nutrient_sensitivity_OBSOLETE,

            PATO_macronutrient_sensitivity_OBSOLETE,

            PATO_micronutrient_sensitivity_OBSOLETE,

            PATO_osmotic_response_sensitivity_OBSOLETE,

            PATO_p_h_sensitivity_OBSOLETE,

            PATO_acid_sensitivity_OBSOLETE,

            PATO_alkali_sensitivity_OBSOLETE,

            PATO_salt_sensitivity_OBSOLETE,

            PATO_water_sensitivity_OBSOLETE,

            PATO_drought_sensitivity_OBSOLETE,

            PATO_flooding_sensitivity_OBSOLETE,

            PATO_humidity_sensitivity_OBSOLETE,

            PATO_radiation_sensitivity_OBSOLETE,

            PATO_temperature_sensitivity_OBSOLETE,

            PATO_absolute_temperature_sensitivity_OBSOLETE,

            PATO_relative_temperature_sensitivity_OBSOLETE,

            // "A morphology quality inhering in a bearer by virtue of the bearer's physical magnitude."
            PATO_size,

            PATO_absolute_size_OBSOLETE,

            // "A 1-D extent quality inhering in a bearer by virtue of the bearer's vertical dimension of extension."
            PATO_height,

            PATO_absolute_height_OBSOLETE,

            PATO_relative_height_OBSOLETE,

            // "A 1-D extent quality which is equal to the distance between two points."
            PATO_length,

            PATO_absolute_length_OBSOLETE,

            PATO_relative_length_OBSOLETE,

            // "A physical quality that inheres in a bearer by virtue of the proportion of the bearer's amount of matter."
            PATO_mass,

            PATO_absolute_mass_OBSOLETE,

            PATO_relative_mass_OBSOLETE,

            // "A physical quality inhering in a bearer that has mass near a gravitational body."
            PATO_weight,

            PATO_absolute_weight_OBSOLETE,

            PATO_relative_weight_OBSOLETE,

            PATO_relative_size_OBSOLETE,

            // "A spatial quality inhering in a bearer by virtue of the bearer's placement which is defined by the angle between the bearer and an axis, or the angle between the bearer and another object."
            PATO_orientation,

            PATO_absolute_angle_OBSOLETE,

            PATO_relative_angle_OBSOLETE,

            // "A morphological quality pertaining to the degree to which an object contains an opening, aperture, orifice or vent."
            PATO_closure,

            PATO_absolute_orientation_OBSOLETE,

            PATO_relative_orientation_OBSOLETE,

            // "A spatial quality inhering in a bearer by virtue of the bearer's spatial location relative to other objects in the vicinity."
            PATO_position,

            // "A morphology quality inhering in a bearer by virtue of the bearer's relative position, shape, arrangements and connectivity of an organism's various parts; the pattern underlying its form."
            PATO_structure,

            PATO_substance_OBSOLETE,

            PATO_addictive_substance_OBSOLETE,

            PATO_solid_substance_OBSOLETE,

            PATO_liquid_substance_OBSOLETE,

            // "A physical quality of the thermal energy of a system."
            PATO_temperature,

            PATO_absolute_temperature_OBSOLETE,

            PATO_body_temperature_OBSOLETE,

            PATO_relative_temperature_OBSOLETE,

            // "A morphologic quality inhering in a bearer by virtue of the bearer's relative size, organization and distribution of its surface elements or the representation or invention of the appearance of its surface; visual and tactile surface characteristics."
            PATO_texture,

            PATO_relative_texture_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's sensitivity towards a fixed location or value where a change is observed; upper limit."
            PATO_threshold,

            PATO_absolute_threshold_OBSOLETE,

            PATO_pain_threshold_OBSOLETE,

            PATO_relative_threshold_OBSOLETE,

            PATO_absolute_temporal_OBSOLETE,

            PATO_absolute_incidence_OBSOLETE,

            PATO_relative_incidence_OBSOLETE,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's occurrence per unit time."
            PATO_rate,

            PATO_absolute_rate_OBSOLETE,

            PATO_relative_rate_OBSOLETE,

            PATO_relative_temporal_OBSOLETE,

            // "A quality in which events occur in sequence."
            PATO_time,

            PATO_absolute_time_OBSOLETE,

            // "A limited, often assigned period of activity."
            PATO_bouts_OBSOLETE,

            PATO_relative_time_OBSOLETE,

            // "An organismal quality inhering in a bearer or a population by virtue of the bearer's disposition to survive and develop normally or the number of surviving individuals in a given population."
            PATO_viability,

            PATO_yield_OBSOLETE,

            PATO_absolute_yield_OBSOLETE,

            PATO_relative_yield_OBSOLETE,

            PATO_function_OBSOLETE,

            PATO_autonomic_function_OBSOLETE,

            PATO_behavioral_function_OBSOLETE,

            PATO_metabolic_function_OBSOLETE,

            PATO_physiological_function_OBSOLETE,

            PATO_relative_function_OBSOLETE,

            PATO_body_position_OBSOLETE,

            PATO_body_tone_OBSOLETE,

            PATO_piloerection_OBSOLETE,

            PATO_abdominal_tone_OBSOLETE,

            PATO_limb_tone_OBSOLETE,

            PATO_arousal_OBSOLETE,

            // "A behavioral quality inhering in a bearer by virtue of having physical steadiness."
            PATO_balance,

            // "An organismal quality inhering in a bearer by virtue of the bearer's behavior aggregate of the responses or reactions or movements in a given situation."
            PATO_behavioral_quality,

            // "A relational quality of occurrent inhering in a bearer by virtue of the bearer's ability to consume a resource."
            PATO_consumption_quality_OBSOLETE,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's having or lacking skillful and effective interaction of movement."
            PATO_coordination,

            // "A behavioral quality inhering in a bearer by virtue of whether the bearer's disposition to perceive differences between two or more stimuli."
            PATO_discrimination,

            PATO_gait_OBSOLETE,

            PATO_learning_and_memory_OBSOLETE,

            PATO_locomotor_activity_OBSOLETE,

            PATO_mating_OBSOLETE,

            PATO_spontaneous_activity_OBSOLETE,

            PATO_startle_response_OBSOLETE,

            PATO_vocalization_OBSOLETE,

            PATO_transfer_arousal_OBSOLETE,

            PATO_absolute_consumption_OBSOLETE,

            PATO_relative_consumption_OBSOLETE,

            PATO_learning_OBSOLETE,

            PATO_memory_OBSOLETE,

            PATO_long_term_memory_OBSOLETE,

            PATO_short_term_memory_OBSOLETE,

            PATO_absolute_locomotor_activity_OBSOLETE,

            PATO_relative_locomotor_activity_OBSOLETE,

            PATO_enzyme_function_OBSOLETE,

            PATO_circulatory_function_OBSOLETE,

            PATO_defensive_function_OBSOLETE,

            PATO_digestive_function_OBSOLETE,

            PATO_excretory_function_OBSOLETE,

            PATO_muscle_function_OBSOLETE,

            PATO_neural_function_OBSOLETE,

            PATO_neurobehavioral_function_OBSOLETE,

            PATO_reproductive_function_OBSOLETE,

            PATO_respiratory_function_OBSOLETE,

            PATO_heart_rate_OBSOLETE,

            PATO_immune_function_OBSOLETE,

            PATO_repair_function_OBSOLETE,

            PATO_healing_OBSOLETE,

            PATO_regeneration_OBSOLETE,

            PATO_urination_OBSOLETE,

            PATO_muscle_elevation_OBSOLETE,

            PATO_muscle_strength_OBSOLETE,

            PATO_motor_function_OBSOLETE,

            PATO_sensory_function_OBSOLETE,

            PATO_tactile_response_OBSOLETE,

            PATO_motor_performance_OBSOLETE,

            PATO_auditory_OBSOLETE,

            PATO_olfactory_OBSOLETE,

            PATO_proprioreception_OBSOLETE,

            PATO_reflex_OBSOLETE,

            PATO_taste_OBSOLETE,

            PATO_touch_OBSOLETE,

            PATO_visual_OBSOLETE,

            PATO_odor_acuity_OBSOLETE,

            PATO_odor_type_OBSOLETE,

            PATO_absolute_odor_acuity_OBSOLETE,

            PATO_relative_odor_acuity_OBSOLETE,

            PATO_blinking_reflex_OBSOLETE,

            PATO_contact_righting_reflex_OBSOLETE,

            PATO_corneal_reflex_OBSOLETE,

            PATO_flinch_reflex_OBSOLETE,

            PATO_lordosis_reflex_OBSOLETE,

            PATO_ocular_reflex_OBSOLETE,

            PATO_pinna_reflex_OBSOLETE,

            PATO_postural_reflex_OBSOLETE,

            PATO_proboscis_extension_reflex_OBSOLETE,

            PATO_pupillary_reflex_OBSOLETE,

            PATO_righting_reflex_OBSOLETE,

            PATO_spinal_reflex_OBSOLETE,

            PATO_startle_reflex_OBSOLETE,

            PATO_suckling_reflex_OBSOLETE,

            PATO_swallowing_reflex_OBSOLETE,

            PATO_vibrissae_reflex_OBSOLETE,

            PATO_taste_acuity_OBSOLETE,

            PATO_taste_type_OBSOLETE,

            PATO_absolute_taste_acuity_OBSOLETE,

            PATO_relative_taste_acuity_OBSOLETE,

            PATO_visual_ability_OBSOLETE,

            PATO_visual_acuity_OBSOLETE,

            // "A quality of a single physical entity which is held by a bearer when the latter exhibits complete growth, differentiation, or development."
            PATO_maturity,

            PATO_visual_placing_OBSOLETE,

            PATO_visual_threshold_OBSOLETE,

            PATO_absolute_visual_ability_OBSOLETE,

            PATO_relative_visual_ability_OBSOLETE,

            PATO_absolute_visual_acuity_OBSOLETE,

            PATO_relative_visual_acuity_OBSOLETE,

            PATO_absolute_visual_threshold_OBSOLETE,

            PATO_relative_visual_threshold_OBSOLETE,

            PATO_defecation_OBSOLETE,

            PATO_prepulse_inhibition_OBSOLETE,

            PATO_relative_neurobehavioral_function_OBSOLETE,

            // "A reproductive quality inhering in an organism or population by virtue of the bearer's potential reproductive capacity ad measured by the number of gametes."
            PATO_fecundity,

            // "A reproductive quality inhering in a bearer by virtue of the bearer's initiating, sustaining, or supporting reproduction."
            PATO_fertility,

            PATO_gestational_period_OBSOLETE,

            // "A reproductive quality inhering in the young of an animal by virtue of their number."
            PATO_brood_size,

            // "A fertility quality inhering in a female by virtue of the bearer's disposition to initiate, sustain, or support reproduction."
            PATO_female_fertility,

            PATO_hybrid_fertility_OBSOLETE,

            // "A fertility quality of inhering in a male by virtue of the bearer's disposition to initiate, sustain, or support reproduction."
            PATO_male_fertility,

            PATO_backcross_fertility_OBSOLETE,

            PATO_cytoplasmic_sterility_OBSOLETE,

            PATO_f1_fertility_OBSOLETE,

            PATO_f2_fertility_OBSOLETE,

            PATO_germ_line_dependent_fertility_OBSOLETE,

            PATO_soma_dependent_fertility_OBSOLETE,

            PATO_cytoplasmic_male_sterility_OBSOLETE,

            PATO_absolute_litter_size_OBSOLETE,

            PATO_relative_litter_size_OBSOLETE,

            PATO_respiratory_rate_OBSOLETE,

            PATO_absolute_respiratory_rate_OBSOLETE,

            PATO_relative_respiratory_rate_OBSOLETE,

            PATO_mobility_value_OBSOLETE,

            PATO_absolute_activity_value_OBSOLETE,

            PATO_process_value_OBSOLETE,

            PATO_relative_activity_value_OBSOLETE,

            PATO_speed_value_OBSOLETE,

            // "A quality of a process which ends earlier than the natural end time or reference process."
            PATO_arrested,

            PATO_not_arrested_value_OBSOLETE,

            // "A mobility quality of inhering in a bearer by virtue of the bearer's disposition to move freely."
            PATO_mobile,

            // "A mobility quality inhering in a bearer by virtue of the bearer's being incapable to move freely."
            PATO_immobile,

            PATO_absolute_speed_value_OBSOLETE,

            PATO_relative_speed_value_OBSOLETE,

            // "A speed which is relatively high."
            PATO_increased_speed,

            // "A speed which is relatively low."
            PATO_decreased_speed,

            PATO_age_value_OBSOLETE,

            PATO_absolute_age_value_OBSOLETE,

            PATO_relative_age_value_OBSOLETE,

            // "An age which is relatively high."
            PATO_old,

            // "An age which is relatively low."
            PATO_young,

            PATO_color_value_OBSOLETE,

            PATO_color_hue_value_OBSOLETE,

            PATO_color_intensity_value_OBSOLETE,

            PATO_color_saturation_value_OBSOLETE,

            PATO_flourescence_value_OBSOLETE,

            PATO_color_pattern_value_OBSOLETE,

            PATO_relative_color_value_OBSOLETE,

            // "A color that lacks any hues as parts."
            PATO_black,

            // "A color hue with low wavelength of that portion of the visible spectrum lying between green and indigo, evoked in the human observer by radiant energy with wavelengths of approximately 420 to 490 nanometers."
            PATO_blue,

            // "A color consisting of green and blue hue."
            PATO_cyan,

            // "A color hue with medium-low wavelength of that portion of the visible spectrum lying between yellow and blue, evoked in the human observer by radiant energy with wavelengths of approximately 490 to 570 nanometers."
            PATO_green,

            // "A color consisting of red and blue hues."
            PATO_magenta,

            // "A color hue with high wavelength of the long-wave end of the visible spectrum, evoked in the human observer by radiant energy with wavelengths of approximately 630 to 750 nanometers."
            PATO_red,

            // "An achromatic color of maximum brightness; the color of objects that reflect nearly all light of all visible wavelengths."
            PATO_white,

            // "A color hue with medium wavelength of that portion of the visible spectrum lying between orange and green, evoked in the human observer by radiant energy with wavelengths of approximately 570 to 590 nanometers."
            PATO_yellow,

            PATO_bright_OBSOLETE,

            PATO_dim_OBSOLETE,

            // "A color brightness which is relatively low."
            PATO_low_brightness,

            // "A color saturation which is of low purity."
            PATO_low_saturation,

            // "A color pattern inhering in a bearer by virtue of bearer's being marked with irregularly shaped spots or blots of a different hue or degree of saturation."
            PATO_blotchy,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's magnitude of or the relationships between its repeated parts lack consistency."
            PATO_irregular_spatial_pattern,

            // "A color quality inhering in a bearer by virtue of the bearer's being altered or spoiled in color."
            PATO_discolored,

            // "A color pattern inhering in a bearer by virtue of bearer's being marked with a round area of different hue or degree of saturation."
            PATO_spotted,

            PATO_variegated_OBSOLETE,

            // "A color quality inhering in a bearer by virtue of the bearer's having color."
            PATO_colored,

            // "A color quality inhering in a bearer by virtue of the bearer's lacking color."
            PATO_colorless,

            PATO_compatability_value_OBSOLETE,

            PATO_gametophytic_compatability_value_OBSOLETE,

            PATO_relative_compatability_value_OBSOLETE,

            PATO_sporophytic_compatability_value_OBSOLETE,

            PATO_gametophyte_compatible_value_OBSOLETE,

            PATO_gametophyte_incompatible_value_OBSOLETE,

            // "A compatibility quality inhering in a bearer by virtue of the bearer's being capable of harmonious coexistence."
            PATO_compatible,

            // "A compatibility quality inhering in a bearer by virtue of the bearer's being incapable of harmonious coexistence."
            PATO_incompatible,

            PATO_sporophyte_compatible_value_OBSOLETE,

            PATO_sporophyte_incompatible_value_OBSOLETE,

            PATO_composition_value_OBSOLETE,

            PATO_carbohydrate_composition_value_OBSOLETE,

            PATO_electrolyte_composition_value_OBSOLETE,

            PATO_macromolecular_composition_value_OBSOLETE,

            PATO_metabolite_composition_value_OBSOLETE,

            PATO_secondary_product_composition_value_OBSOLETE,

            PATO_protein_composition_value_OBSOLETE,

            PATO_enzyme_composition_value_OBSOLETE,

            PATO_concentration_value_OBSOLETE,

            PATO_protein_concentration_value_OBSOLETE,

            PATO_sugar_concentration_value_OBSOLETE,

            PATO_water_content_value_OBSOLETE,

            PATO_consistency_value_OBSOLETE,

            PATO_gel_consistency_value_OBSOLETE,

            PATO_direction_value_OBSOLETE,

            PATO_away_OBSOLETE,

            PATO_bi_directional_OBSOLETE,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction from a higher to a lower point."
            PATO_down,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces east."
            PATO_left,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces west."
            PATO_right,

            PATO_towards1_OBSOLETE,

            PATO_unidirectional_OBSOLETE,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction from a lower to a higher point."
            PATO_up,

            PATO_distance_value_OBSOLETE,

            PATO_absolute_distance_value_OBSOLETE,

            PATO_relative_distance_value_OBSOLETE,

            // "A distance which is greater relative to the normal or average."
            PATO_increased_distance,

            // "A distance which is lesser relative to the normal or average."
            PATO_decreased_distance,

            PATO_flavor_value_OBSOLETE,

            PATO_frequency_value_OBSOLETE,

            PATO_absolute_frequency_value_OBSOLETE,

            PATO_relative_frequency_value_OBSOLETE,

            // "A frequency which is relatively high."
            PATO_increased_frequency,

            // "A frequency which is relatively low."
            PATO_decreased_frequency,

            PATO_gender_value_OBSOLETE,

            // "A biological sex quality inhering in an individual or a population that only produces gametes that can be fertilised by male gametes."
            PATO_female,

            // "A biological sex quality inhering in an individual or a population whose sex organs contain only male gametes."
            PATO_male,

            PATO_hardness_value_OBSOLETE,

            // "A hardness quality of being rigid and resistant to pressure."
            PATO_hard,

            // "A hardness quality of giving little resistance to pressure."
            PATO_soft,

            PATO_intensity_value_OBSOLETE,

            // "A quality of a process inhering in a bearer by virtue of the bearer's having a sudden onset, sharp rise, and short course."
            PATO_acute,

            PATO_extreme_OBSOLETE,

            PATO_intense_OBSOLETE,

            PATO_limited_OBSOLETE,

            PATO_maximal_OBSOLETE,

            // "An intensity which is less than moderate in type or degree or effect or force."
            PATO_mild_intensity,

            // "An intensity which is less than extreme in type or degree or effect or force."
            PATO_moderate_intensity,

            // "An intensity which is extremely bad or unpleasant in type or degree or effect or force."
            PATO_severe_intensity,

            PATO_slight_OBSOLETE,

            PATO_vigorous_OBSOLETE,

            PATO_life_span_value_OBSOLETE,

            PATO_morphology_value_OBSOLETE,

            PATO_shape_value_OBSOLETE,

            // "A branchiness quality inhering in a bearer by virtue of the bearer's having branches."
            PATO_branched,

            // "A concave quality inhering in a bearer by virtue of the bearer's resembling a groove or fissure."
            PATO_cleft,

            // "A shape quality inhering in a bearer by virtue of the bearer's being curled or wound (especially in concentric rings or spirals)."
            PATO_coiled,

            // "A shape quality inhering in a bearer by virtue of the bearer's having parallel chains in undulate fashion on the border."
            PATO_curled,

            // "A curvature quality inhering in a bearer by virtue of the bearer's having or being marked by a curve or smoothly rounded bend."
            PATO_curved,

            // "A quality inhering in a bearer by virtue of the bearer's having a horizontal surface without a slope, tilt, or curvature."
            PATO_flat,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting an equatorial diameter greater than its polar diameter."
            PATO_oblate,

            // "A shape quality inhering in a bearer by virtue of the bearer's having leaflets or leaflets-like structures on each side of a common axis."
            PATO_pinnate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being such that every part of the surface or the circumference is equidistant from the center."
            PATO_circular,

            // "A shape quality inhering in a bearer by virtue of the bearer's having an equal-sided rectangular form."
            PATO_square,

            // "A branchiness quality inhering in a bearer by virtue of the bearer's lacking branches."
            PATO_unbranched,

            // "A shape quality inhering in a bearer by virtue of the bearer's being not curled or wound (especially in concentric rings or spirals)."
            PATO_uncoiled,

            PATO_count_value_OBSOLETE,

            PATO_absolute_number_value_OBSOLETE,

            PATO_relative_number_value_OBSOLETE,

            PATO_nutritional_value_OBSOLETE,

            // "A nutritional quality inhering in a bearer by virtue of the bearer's inability to synthesize a particular organic compound required for its growth."
            PATO_auxotrophic,

            // "A nutritional quality inhering in a bearer by virtue of the bearer's ability to synthesize a particular organic compound required for its growth."
            PATO_prototrophic,

            PATO_occurence_value_OBSOLETE,

            PATO_continual_OBSOLETE,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's occurring or appearing again or repeatedly."
            PATO_recurrent,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's once or in or a few unpredictable instances."
            PATO_sporadic,

            PATO_unique_OBSOLETE,

            PATO_odor_value_OBSOLETE,

            PATO_parental_type_value_OBSOLETE,

            // "A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a father."
            PATO_paternal_OBSOLETE,

            // "A parental quality inhering in a bearer by virtue of exhibiting the characteristic of a mother."
            PATO_maternal_OBSOLETE,

            PATO_pattern_value_OBSOLETE,

            PATO_concrete_OBSOLETE,

            PATO_sleep_pattern_value_OBSOLETE,

            // "A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation."
            PATO_invariant,

            PATO_perseverative_OBSOLETE,

            // "A pattern quality inhering in a bearer by virtue of the bearer's having a repeatable or predictable placement."
            PATO_regular_spatial_pattern,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's marked by tedious repetition."
            PATO_repetitive,

            // "A sleep pattern quality inhering in a bearer by virtue of the bearer's inability to sleep."
            PATO_insomnia_OBSOLETE,

            // "A sleep pattern quality inhering in a bearer by virtue of the bearer's disrupted sleep during normal sleeping period; often accompanied by cataplexy, sleep paralysis."
            PATO_narcolepsy_OBSOLETE,

            PATO_percentage_value_OBSOLETE,

            PATO_relative_percentage_value_OBSOLETE,

            PATO_absolute_percentage_value_OBSOLETE,

            PATO_decreased_percentage_OBSOLETE,

            PATO_high_percentage_OBSOLETE,

            PATO_increased_percentage_OBSOLETE,

            PATO_low_percentage_OBSOLETE,

            PATO_pilosity_value_OBSOLETE,

            PATO_relative_pilosity_value_OBSOLETE,

            // "A pilosity quality inhering in a bearer by virtue of the bearer's lack of hairs or bristles."
            PATO_glabrous,

            // "A pilosity quality inhering in a bearer by virtue of the bearer's being covered with hair or hairlike projections."
            PATO_hairy,

            // "A maturity quality inhering in a bearer by virtue of the bearer's having arrived at the onset of puberty (the age at which sex glands become functional) but not yet fully mature."
            PATO_pubescent,

            PATO_abstract_OBSOLETE,

            PATO_deviation_from_normal__value_OBSOLETE,

            PATO_presence_value_OBSOLETE,

            PATO_relative_quantity_value_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's deviation from normal or average."
            PATO_abnormal,

            // "A quality inhering in a bearer by virtue of the bearer's exhibiting no deviation from normal or average."
            PATO_normal,

            // "A quality denoting the lack of an entity."
            PATO_absent,

            // "A quality inhering in a bearer by virtue of being clearly visible."
            PATO_conspicuous,

            // "A quality inhering in a bearer by virtue of not being clearly visible."
            PATO_inconspicuous,

            PATO_marked_OBSOLETE,

            PATO_none_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's existence."
            PATO_present,

            PATO_high_OBSOLETE,

            // "An amount which is relatively high."
            PATO_present_in_greater_numbers_in_organism,

            PATO_low_OBSOLETE,

            PATO_quality_value_OBSOLETE,

            PATO_relative_quality_value_OBSOLETE,

            PATO_shattering_value_OBSOLETE,

            PATO_threshability_value_OBSOLETE,

            PATO_bad_value_OBSOLETE,

            PATO_good_value_OBSOLETE,

            PATO_poor_value_OBSOLETE,

            PATO_regulation_value_OBSOLETE,

            PATO_positive_regulation_OBSOLETE,

            PATO_negative_regulation_OBSOLETE,

            PATO_response_value_OBSOLETE,

            PATO_tactile_hyperresponsive_OBSOLETE,

            PATO_tactile_hyporesponsive_OBSOLETE,

            PATO_mild_response_OBSOLETE,

            PATO_moderate_response_OBSOLETE,

            // "A response quality inhering in a bearer by virtue of the bearer's disposition to react to a stimulus or an agent."
            PATO_responsive_to,

            // "A response quality inhering in a bearer by virtue of the bearer's lack of reaction to a stimulus or an agent."
            PATO_unresponsive_to,

            PATO_vigorous_response_OBSOLETE,

            PATO_rhythym_value_OBSOLETE,

            PATO_sensitivity_value_OBSOLETE,

            PATO_absolute_rhythym_value_OBSOLETE,

            PATO_amplitude_value_OBSOLETE,

            PATO_period_value_OBSOLETE,

            PATO_persistence_value_OBSOLETE,

            PATO_phase_value_OBSOLETE,

            PATO_relative_rhythym_value_OBSOLETE,

            // "A duration quality of a process which is relatively high."
            PATO_increased_duration,

            // "A duration quality of a process which is relatively low."
            PATO_decreased_duration,

            // "A phase which occurs earlier than the natural start time."
            PATO_advanced_phase,

            // "A phase which occurs during dark cycle."
            PATO_dark_phase,

            // "A quality of a process which starts later than the natural start time or the reference process."
            PATO_delayed,

            // "A phase which occurs during the light cycle."
            PATO_light_phase,

            // "A rhythm quality inhering in a bearer by virtue of the bearer's lacking rhythm."
            PATO_arrhythmic,

            // "A rhythm quality inhering in a bearer by virtue of the bearer's having rhythm."
            PATO_rhythmic,

            PATO_absolute_sensitivity_value_OBSOLETE,

            PATO_disease_sensitivity_value_OBSOLETE,

            PATO_relative_sensitivity_value_OBSOLETE,

            PATO_stress_sensitivity_value_OBSOLETE,

            PATO_temperature_sensitivity_value_OBSOLETE,

            PATO_absolute_disease_sensitivity_value_OBSOLETE,

            PATO_relative_disease_sensitivity_value_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's lacking sensitivity toward an external stimulus."
            PATO_insensitive_toward,

            PATO_intolerant_value_OBSOLETE,

            // "A resistance quality inhering in a bearer by virtue of its disposition to endure or being insensitive to a stimulus."
            PATO_tolerant_to,

            // "A quality inhering in a bearer by virtue of the bearer's having sensitivity toward an external stimulus."
            PATO_sensitive_toward,

            PATO_abiotic_stress_sensitivity_value_OBSOLETE,

            PATO_chemical_sensitivity_value_OBSOLETE,

            PATO_humidity_sensitivity_value_OBSOLETE,

            PATO_radiation_sensitivity_value_OBSOLETE,

            PATO_drug_sensitivity_value_OBSOLETE,

            PATO_herbicide_sensitivity_value_OBSOLETE,

            PATO_insecticide_sensitivity_value_OBSOLETE,

            PATO_plant_growth_hormone_sensitivity_value_OBSOLETE,

            PATO_soil_composition_sensitivity_value_OBSOLETE,

            PATO_absolute_drug_sensitivity_value_OBSOLETE,

            PATO_relative_drug_sensitivity_value_OBSOLETE,

            PATO_drug_insensitive_OBSOLETE,

            PATO_drug_sensitive_OBSOLETE,

            PATO_soil_nutrient_sensitivity_value_OBSOLETE,

            PATO_macronutrient_sensitivity_value_OBSOLETE,

            PATO_micronutrient_sensitivity_value_OBSOLETE,

            PATO_osmotic_response_sensitivity_OBSOLETE1,

            PATO_p_h_sensitivity_value_OBSOLETE,

            PATO_salt_sensitivity_value_OBSOLETE,

            PATO_water_sensitivity_value_OBSOLETE,

            PATO_acid_sensitivity_value_OBSOLETE,

            PATO_alkali_sensitivity_value_OBSOLETE,

            PATO_drought_sensitivity_value_OBSOLETE,

            PATO_flooding_sensitivity_value_OBSOLETE,

            PATO_photosensitivity_value_OBSOLETE,

            PATO_absolute_photosensitivity_value_OBSOLETE,

            PATO_light_intensivity_sensitivity_value_OBSOLETE,

            PATO_light_quality_sensitivity_value_OBSOLETE,

            PATO_relative_photosensitivity_value_OBSOLETE,

            // "A photosensitivity quality inhering in a bearer by virtue of the bearer's lacking photosensitivity."
            PATO_photoinsensitive,

            // "A photosensitivity quality inhering in a bearer by virtue of the bearer's exhibiting photosensitivity."
            PATO_photosensitive,

            PATO_blue_light_sensitivity_value_OBSOLETE,

            PATO_far_red_light_sensitivity_value_OBSOLETE,

            PATO_red_light_sensitivity_value_OBSOLETE,

            PATO_u_v_light_sensitivity_value_OBSOLETE,

            PATO_absolute_temperature_sensitivity_value_OBSOLETE,

            PATO_relative_temperature_sensitivity_value_OBSOLETE,

            PATO_cold_sensitive_OBSOLETE,

            PATO_heat_sensitive_OBSOLETE,

            PATO_thermoinsensitive_OBSOLETE,

            PATO_thermosensitive_OBSOLETE,

            PATO_size_value_OBSOLETE,

            PATO_absolute_size_value_OBSOLETE,

            PATO_height_value_OBSOLETE,

            PATO_length_value_OBSOLETE,

            PATO_mass_value_OBSOLETE,

            PATO_relative_size_value_OBSOLETE,

            PATO_thickness_value_OBSOLETE,

            PATO_volume_value_OBSOLETE,

            PATO_width_value_OBSOLETE,

            PATO_absolute_height_value_OBSOLETE,

            PATO_relative_height_value_OBSOLETE,

            // "A height which is relatively low."
            PATO_decreased_height,

            // "A height which is relatively high."
            PATO_increased_height,

            PATO_absolute_length_value_OBSOLETE,

            PATO_relative_length_value_OBSOLETE,

            // "A length quality which is relatively large."
            PATO_increased_length,

            // "A length quality which is relatively small."
            PATO_decreased_length,

            PATO_absolute_mass_value_OBSOLETE,

            PATO_relative_mass_value_OBSOLETE,

            PATO_weight_value_OBSOLETE,

            PATO_absolute_weight_value_OBSOLETE,

            PATO_relative_weight_value_OBSOLETE,

            // "A weight which is relatively high."
            PATO_increased_weight,

            // "A weight which is relatively low."
            PATO_decreased_weight,

            // "An increased size quality inhering in a bearer by virtue of the bearer's exhibiting enlargement of a cell or constituent group of cells (for example, organ)."
            PATO_hypertrophic,

            // "A decreased size quality inhering in a bearer by virtue of the bearer's exhibiting reduced size of a cell or constituent group of cells (for example, organ)."
            PATO_hypotrophic,

            // "A size quality which is relatively high."
            PATO_increased_size,

            // "A size quality which is relatively low."
            PATO_decreased_size,

            // "A quality inhering in a bearer by virtue of the bearer's being a remnant structure from earlier development or evolution."
            PATO_vestigial,

            PATO_absolute_thickness_value_OBSOLETE,

            PATO_relative_thickness_value_OBSOLETE,

            // "A thickness which is relatively high."
            PATO_increased_thickness,

            // "A thickness which is relatively low."
            PATO_decreased_thickness,

            PATO_absolute_volume_value_OBSOLETE,

            PATO_relative_volume_value_OBSOLETE,

            // "A volume which is relatively high."
            PATO_increased_volume,

            // "A volume which is relatively low."
            PATO_decreased_volume,

            PATO_absolute_width_value_OBSOLETE,

            PATO_relative_width_value_OBSOLETE,

            // "A width which is relatively small."
            PATO_decreased_width,

            // "A width which is relatively large."
            PATO_increased_width,

            PATO_spatial_value_OBSOLETE,

            PATO_angle_value_OBSOLETE,

            PATO_closure_value_OBSOLETE,

            PATO_orientation_value_OBSOLETE,

            PATO_placement_value_OBSOLETE,

            PATO_absolute_angle_value_OBSOLETE,

            PATO_relative_angle_value_OBSOLETE,

            // "A morphological quality inhering in a bearer by virtue of the bearer's affording blocked passage or view."
            PATO_closed,

            // "A morphological quality inhering in a bearer by virtue of the bearer's affording not completed blocked passage or view."
            PATO_closure_incomplete,

            // "A morphological quality inhering in a bearer by virtue of the bearer's affording unobstructed passage or view."
            PATO_open,

            PATO_absolute_orientation_value_OBSOLETE,

            PATO_relative_orientation_value_OBSOLETE,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's lacking orientation."
            PATO_disoriented,

            // "A pattern where all the repeated elements are oriented in the same direction."
            PATO_oriented,

            // "A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally anterior structures."
            PATO_anterioralized,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's lacking symmetry."
            PATO_asymmetrical,

            // "A shape quality inhering in a bearer by virtue of the bearer's having one or more angle(s) in its length."
            PATO_bent,

            // "A positional quality inhering in a bearer by virtue of the bearer's having two sides; two-sided."
            PATO_bilateral,

            // "A positional quality inhering in a bearer by virtue of the bearer's being overfilled."
            PATO_crowded,

            // "A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally dorsal structures."
            PATO_dorsalized,

            // "A positional quality inhering in a bearer by virtue of the bearer's being upright in position or posture."
            PATO_erect,

            // "A quality inhering in a bearer by virtue of the bearer's protruding or projecting from the body."
            PATO_exserted,

            // "A spatial quality inhering in a bearer by virtue of the bearer's becoming joined together with an additional entity."
            PATO_inserted_into,

            // "An oriented quality inhering in a bearer by virtue of the bearer's being reversed in position, order, or condition."
            PATO_inverted,

            // "A positional quality inhering in a bearer by virtue of the bearer's being moved or displaced to one side so as to make lateral."
            PATO_lateralized,

            // "A spatial pattern quality inhering in a bearer by virtue of the bearer's being confined or restricted to a particular location."
            PATO_localized,

            // "A positional quality inhering in a bearer by virtue the bearer's being changed in abnormal position."
            PATO_mislocalised,

            // "A positional quality inhering in a bearer by virtue of the bearer's having mistakenly taken course, way, or passage; ill-routed."
            PATO_misrouted,

            // "A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally posterior structures."
            PATO_posterioralized,

            // "A positional quality inhering in a bearer by virtue of the bearer's being stretched out and lying at full length along the ground."
            PATO_prostrate,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division by a longitudinal plane into similar halves."
            PATO_symmetrical,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being not overfilled."
            PATO_uncrowded,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's involvement of only one part or side."
            PATO_unilateral,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's not being confined or restricted to a particular location."
            PATO_unlocalised,

            // "A malformed quality inhering in a bearer by virtue of the bearer's gross morphology containing only what are normally ventral structures."
            PATO_ventralized,

            PATO_structure_value_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer's consisting of blebbing of the nucleus and DNA fragmentation due to the cell undergoing a specific form of programmed cell death termed apoptosis."
            PATO_apoptotic,

            // "A structural quality inhering in a bearer whose structure deteriorates or is lost over time."
            PATO_degenerate,

            // "A structural quality inhering in a bearer by virtue of the bearer's exhibiting an alteration in size, shape or organization of its constituent cells."
            PATO_dysplastic,

            PATO_deposition_defective_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer's being merged with another entity."
            PATO_fused_with,

            // "A quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded through an abnormal opening in the wall that contains it."
            PATO_herniated,

            // "A increased size quality inhering in an organ or tissue by virtue of the bearer's exhibiting increased number of cells."
            PATO_hyperplastic,

            // "A decreased size quality inhering in a bearer by virtue of the bearer's exhibiting reduced number of cells within an organ or tissue."
            PATO_hypoplastic,

            // "A morphological quality inhering in a bearer by virtue of the bearer's being distorted during formation."
            PATO_malformed,

            // "A structural quality inhering in a bearer by virtue of the bearer's undergoing unprogrammed cell death."
            PATO_necrotic,

            // "A morphological quality inhering in a bearer by virtue of the bearer's being blocked or filled with obstacles or an obstacle."
            PATO_obstructed,

            // "A structural quality inhering in a bearer by virtue of the bearer's being no longer merged with another entity."
            PATO_unfused_from,

            PATO_substance_value_OBSOLETE,

            PATO_addictive_substance_value_OBSOLETE,

            PATO_alcochol_value_OBSOLETE,

            PATO_amphetamine_value_OBSOLETE,

            PATO_time_quantity_OBSOLETE,

            PATO_length_quantity_OBSOLETE,

            PATO_metamphetamine_value_OBSOLETE,

            PATO_temparature_quantity_OBSOLETE,

            PATO_angle_quantity_OBSOLETE,

            PATO_solid_substance_value_OBSOLETE,

            PATO_volume_quantity_OBSOLETE,

            PATO_occurrent_OBSOLETE,

            PATO_substance_quantity_OBSOLETE,

            // "A color brightness which is relatively high."
            PATO_high_brightness,

            PATO_energy_quantity_OBSOLETE,

            PATO_liquid_substance_value_OBSOLETE,

            PATO_mass_quantity_OBSOLETE,

            PATO_concentration_unit_OBSOLETE,

            PATO_saccharin_versus_water_value_OBSOLETE,

            PATO_water_value_OBSOLETE,

            PATO_unit_OBSOLETE,

            PATO_temperature_value_OBSOLETE,

            PATO_absolute_temperature_value_OBSOLETE,

            PATO_body_temperature_value_OBSOLETE,

            PATO_relative_temperature_value_OBSOLETE,

            PATO_temporal_value_OBSOLETE,

            PATO_absolute_temporal_value_OBSOLETE,

            PATO_incidence_value_OBSOLETE,

            PATO_rate_value_OBSOLETE,

            PATO_relative_temporal_value_OBSOLETE,

            PATO_absolute_incidence_value_OBSOLETE,

            PATO_relative_incidence_value_OBSOLETE,

            PATO_absolute_rate_value_OBSOLETE,

            PATO_relative_rate_value_OBSOLETE,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's not occurring or existing at the same time or having the same period or phase."
            PATO_asynchronous,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's being uninterrupted in time, sequence, substance, or extent."
            PATO_continuous,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's being marked by breaks or interruptions."
            PATO_discontinuous,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's origin or development at an unusual time or out of the regular sequence."
            PATO_heterochronic,

            PATO_late_OBSOLETE,

            // "A quality of a process which starts earlier than the natural start time or the reference process."
            PATO_premature,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's occurring or existing at the same time or having the same period or phase."
            PATO_synchronous,

            PATO_texture_value_OBSOLETE,

            PATO_relative_texture_value_OBSOLETE,

            PATO_floury_OBSOLETE,

            PATO_glutinous_OBSOLETE,

            // "A texture quality inhering in a bearer by virtue of the bearer's irregular surface."
            PATO_rough,

            // "A texture quality inhering in a bearer by virtue of the bearer's processing a surface free of roughness or irregularities."
            PATO_smooth,

            PATO_threshold_value_OBSOLETE,

            PATO_absolute_threshold_value_OBSOLETE,

            PATO_pain_threshold_value_OBSOLETE,

            PATO_relative_threshold_value_OBSOLETE,

            // "A threshold which is relatively high."
            PATO_increased_threshold,

            // "A threshold which is relatively low."
            PATO_decreased_threshold,

            PATO_time_value_OBSOLETE,

            PATO_absolute_time_value_OBSOLETE,

            PATO_bouts_value_OBSOLETE,

            PATO_relative_time_value_OBSOLETE,

            PATO_latency_value_OBSOLETE,

            PATO_viability_value_OBSOLETE,

            // "A viability quality inhering in a population by virtue of the bearer's long term survival inability."
            PATO_lethal__sensu_genetics_,

            // "A viability quality inhering in a bearer or a population by virtue of the bearer's ability to survive or the long term survival ability of a given population."
            PATO_viable,

            PATO_yield_value_OBSOLETE,

            PATO_absolute_yield_value_OBSOLETE,

            PATO_relative_yield_value_OBSOLETE,

            PATO_high_yield_OBSOLETE,

            PATO_low_yield_OBSOLETE,

            PATO_function_value_OBSOLETE,

            PATO_autonomic_function_value_OBSOLETE,

            PATO_behavioral_function_value_OBSOLETE,

            PATO_metabolic_function_value_OBSOLETE,

            PATO_physiological_function_value_OBSOLETE,

            PATO_relative_function_value_OBSOLETE,

            PATO_body_position_value_OBSOLETE,

            PATO_body_tone_value_OBSOLETE,

            PATO_piloerection_value_OBSOLETE,

            PATO_abdominal_tone_value_OBSOLETE,

            PATO_limb_tone_value_OBSOLETE,

            PATO_dysfunctional_value_OBSOLETE,

            PATO_functional_value_OBSOLETE,

            PATO_enzyme_function_value_OBSOLETE,

            PATO_absolute_enzyme_function_value_OBSOLETE,

            PATO_relative_enzyme_function_value_OBSOLETE,

            PATO_high_enzyme_function_value_OBSOLETE,

            PATO_low_enzyme_function_value_OBSOLETE,

            PATO_arousal_value_OBSOLETE,

            PATO_balance_value_OBSOLETE,

            PATO_behavioral_quality_value_OBSOLETE,

            PATO_consumption_value_OBSOLETE,

            PATO_coordination_value_OBSOLETE,

            PATO_discrimination_value_OBSOLETE,

            PATO_gait_value_OBSOLETE,

            PATO_learning_and_memory_value_OBSOLETE,

            PATO_locomotor_activity_value_OBSOLETE,

            PATO_mating_value_OBSOLETE,

            PATO_spontaneous_activity_value_OBSOLETE,

            PATO_startle_response_OBSOLETE1,

            PATO_vocalization_value_OBSOLETE,

            PATO_transfer_arousal_value_OBSOLETE,

            // "A balance quality inhering in a bearer by virtue of the bearer's having balance."
            PATO_balanced,

            // "A balance quality inhering in a bearer by virtue of the bearer's lacking balance."
            PATO_unbalanced,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's exhibiting paralytic behaviour when subjected to mechanical shock."
            PATO_bang_sensitive,

            // "A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting increased activity."
            PATO_increased_behavioural_activity,

            // "A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting reduced activity."
            PATO_decreased_behavioural_activity,

            // "Diminished, damaged, or weakened."
            PATO_impaired_OBSOLETE,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's being affected by loss of the ability to move a body part."
            PATO_paralysed,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's receiving or being subjected to an action without responding or initiating an action in return."
            PATO_passive,

            PATO_absolute_consumption_value_OBSOLETE,

            PATO_relative_consumption_value_OBSOLETE,

            // "A consumption which is relatively high."
            PATO_increased_consumption_OBSOLETE,

            // "A consumption which is relatively low."
            PATO_decreased_consumption_OBSOLETE,

            // "A coordination quality of inhering in a bearer by virtue of the bearer's having skillful and effective interaction of movement."
            PATO_coordinated,

            // "A coordination quality of inhering in a bearer by virtue of the bearer's lacking skillful and effective interaction of movement."
            PATO_uncoordinated,

            // "A preference quality in a bearer by virtue of the bearer's disliking a perceived stimulus."
            PATO_aversion,

            // "A preference quality in a bearer by virtue of the bearer's having no preference to a perceived stimulus."
            PATO_indifference,

            // "A discrimination quality in a bearer by virtue of the bearer's liking a perceived stimulus."
            PATO_preference,

            PATO_bizarre_gate_OBSOLETE,

            PATO_learning_value_OBSOLETE,

            PATO_memory_value_OBSOLETE,

            PATO_long_term_memory_value_OBSOLETE,

            PATO_short_term_memory_value_OBSOLETE,

            PATO_absolute_locomotor_activity_value_OBSOLETE,

            PATO_relative_locomotor_activity_value_OBSOLETE,

            PATO_circulatory_function_value_OBSOLETE,

            PATO_defensive_function_value_OBSOLETE,

            PATO_digestive_function_value_OBSOLETE,

            PATO_excretory_function_value_OBSOLETE,

            PATO_muscle_function_value_OBSOLETE,

            PATO_neural_function_value_OBSOLETE,

            PATO_neurobehavioral_function_value_OBSOLETE,

            PATO_reproductive_function_value_OBSOLETE,

            PATO_respiratory_function_value_OBSOLETE,

            PATO_heart_rate_value_OBSOLETE,

            PATO_immune_function_value_OBSOLETE,

            PATO_repair_function_value_OBSOLETE,

            PATO_immubocompetent_value_OBSOLETE,

            PATO_immunodeficient_value_OBSOLETE,

            PATO_healing_value_OBSOLETE,

            PATO_regeneration_value_OBSOLETE,

            PATO_urination_value_OBSOLETE,

            PATO_defecation_value_OBSOLETE,

            PATO_muscle_elevation_value_OBSOLETE,

            PATO_muscle_strength_value_OBSOLETE,

            PATO_motor_function_value_OBSOLETE,

            PATO_sensory_function_value_OBSOLETE,

            PATO_tactile_response_value_OBSOLETE,

            PATO_motor_performance_value_OBSOLETE,

            PATO_auditory_value_OBSOLETE,

            PATO_olfactory_value_OBSOLETE,

            PATO_proprioreception_value_OBSOLETE,

            PATO_reflex_value_OBSOLETE,

            PATO_taste_value_OBSOLETE,

            PATO_touch_value_OBSOLETE,

            PATO_visual_value_OBSOLETE,

            PATO_odor_acuity_value_OBSOLETE,

            PATO_odor_type_value_OBSOLETE,

            PATO_taste_acuity_value_OBSOLETE,

            PATO_absolute_odor_acuity_value_OBSOLETE,

            PATO_relative_odor_acuity_value_OBSOLETE,

            PATO_anosmia_OBSOLETE,

            PATO_concentration_quantity_OBSOLETE,

            PATO_quantity_OBSOLETE,

            PATO_absolute_taste_acuity_value_OBSOLETE,

            PATO_relative_taste_acuity_value_OBSOLETE,

            PATO_taste_type_value_OBSOLETE,

            PATO_quinine_taste_OBSOLETE,

            PATO_water_taste_OBSOLETE,

            PATO_visual_ability_value_OBSOLETE,

            PATO_visual_acuity_value_OBSOLETE,

            PATO_visual_threshold_value_OBSOLETE,

            PATO_visual_placing_value_OBSOLETE,

            PATO_absolute_visual_ability_value_OBSOLETE,

            PATO_relative_visual_ability_value_OBSOLETE,

            PATO_absolute_visual_acuity_value_OBSOLETE,

            PATO_relative_visual_acuity_value_OBSOLETE,

            PATO_absolute_visual_threshold_value_OBSOLETE,

            PATO_relative_visual_threshold_value_OBSOLETE,

            PATO_auditory_acuity_value_OBSOLETE,

            PATO_auditory_ability_value_OBSOLETE,

            PATO_auditory_threshold_value_OBSOLETE,

            PATO_absolute_auditory_ability_value_OBSOLETE,

            PATO_relative_auditory_ability_value_OBSOLETE,

            PATO_absolute_auditory_acuity_value_OBSOLETE,

            PATO_relative_auditory_acuity_value_OBSOLETE,

            PATO_absolute_auditory_threshold_value_OBSOLETE,

            PATO_relative_auditory_threshold_value_OBSOLETE,

            PATO_auditory_acuity_OBSOLETE,

            PATO_auditory_ability_OBSOLETE,

            PATO_auditory_threshold_OBSOLETE,

            PATO_absolute_auditory_acuity_OBSOLETE,

            PATO_relative_auditory_acuity_OBSOLETE,

            PATO_absolute_auditory_ability_OBSOLETE,

            PATO_relative_auditory_ability_OBSOLETE,

            PATO_absolute_auditory_threshold_OBSOLETE,

            PATO_relative_auditory_threshold_OBSOLETE,

            PATO_blinking_reflex_value_OBSOLETE,

            PATO_contact_righting_reflex_value_OBSOLETE,

            PATO_corneal_reflex_value_OBSOLETE,

            PATO_flinch_reflex_value_OBSOLETE,

            PATO_lordosis_reflex_value_OBSOLETE,

            PATO_ocular_reflex_value_OBSOLETE,

            PATO_pinna_reflex_value_OBSOLETE,

            PATO_postural_reflex_value_OBSOLETE,

            PATO_proboscis_extension_reflex_value_OBSOLETE,

            PATO_pupillary_reflex_value_OBSOLETE,

            PATO_righting_reflex_value_OBSOLETE,

            PATO_spinal_reflex_value_OBSOLETE,

            PATO_startle_reflex_value_OBSOLETE,

            PATO_suckling_reflex_value_OBSOLETE,

            PATO_swallowing_reflex_value_OBSOLETE,

            PATO_vibrissae_reflex_value_OBSOLETE,

            PATO_prepulse_inhibition_value_OBSOLETE,

            PATO_relative_neurobehavioral_function_value_OBSOLETE,

            PATO_aggressive_OBSOLETE,

            PATO_anxious_OBSOLETE,

            PATO_cataleptic_OBSOLETE,

            PATO_fearful_OBSOLETE,

            PATO_irritable_OBSOLETE,

            PATO_respiratory_rate_value_OBSOLETE,

            PATO_absolute_respiratory_rate_value_OBSOLETE,

            PATO_relative_respiratory_rate_value_OBSOLETE,

            PATO_fecundity_value_OBSOLETE,

            PATO_fertility_value_OBSOLETE,

            PATO_gestational_period_value_OBSOLETE,

            PATO_litter_size_value_OBSOLETE,

            PATO_female_fertility_value_OBSOLETE,

            PATO_hybrid_fertility_value_OBSOLETE,

            PATO_male_fertility_value_OBSOLETE,

            PATO_absolute_litter_size_value_OBSOLETE,

            PATO_relative_litter_size_value_OBSOLETE,

            // "A female fertility quality inhering in a female by virtue of the bearer's disposition to initiate, sustain, or support reproduction."
            PATO_female_fertile,

            PATO_cytoplasmic_male_sterility_value_OBSOLETE,

            // "A male fertility quality inhering in a male by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction."
            PATO_male_sterile,

            // "A male fertility quality inhering in a male by virtue of the bearer's being capable of initiating, sustaining, or supporting reproduction."
            PATO_male_fertile,

            // "A female fertility quality inhering in a female by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction."
            PATO_female_sterile,

            PATO_backcross_fertility_value_OBSOLETE,

            PATO_cytoplasmic_sterility_value_OBSOLETE,

            PATO_f1_fertility_value_OBSOLETE,

            PATO_f2_fertility_value_OBSOLETE,

            PATO_germ_line_dependent_fertility_value_OBSOLETE,

            PATO_intercross_fertility_value_OBSOLETE,

            PATO_soma_dependent_fertility_value_OBSOLETE,

            PATO_backcross_fertile_OBSOLETE,

            PATO_backcross_sterile_OBSOLETE,

            PATO_chinsurah_boro_type_value_OBSOLETE,

            PATO_cms_hl_type_value_OBSOLETE,

            PATO_wild_abortive_value_OBSOLETE,

            PATO_f1_fertile_OBSOLETE,

            PATO_f1_sterile_OBSOLETE,

            PATO_f2_fertile_OBSOLETE,

            PATO_f2_sterile_OBSOLETE,

            PATO_intercross_fertile_OBSOLETE,

            PATO_intercross_sterile_OBSOLETE,

            // "A rate which is relatively low."
            PATO_decreased_rate,

            // "A rate which is relatively high."
            PATO_increased_rate,

            PATO_qualitative_value_OBSOLETE,

            PATO_continuant_OBSOLETE,

            // "A 1-D extent quality which is equal to the dimension through an object as opposed to its length or width."
            PATO_thickness,

            PATO_absolute_thickness_OBSOLETE,

            PATO_relative_thickness_OBSOLETE,

            // "A 3-D extent quality inhering in a bearer by virtue of the bearer's amount of 3-dimensional space it occupies."
            PATO_volume,

            PATO_absolute_volume_OBSOLETE,

            PATO_relative_volume_OBSOLETE,

            // "A 1-D extent quality which is equal to the distance from one side of an object to another side which is opposite."
            PATO_width,

            PATO_absolute_width_OBSOLETE,

            PATO_relative_width_OBSOLETE,

            PATO_relative_enzyme_function_OBSOLETE,

            PATO_absolute_enzyme_function_OBSOLETE,

            PATO_intercross_fertility_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to being sensitivity to the action of radiant energy."
            PATO_photosensitivity,

            PATO_absolute_photosensitivity_OBSOLETE,

            PATO_light_intensivity_sensitivity_OBSOLETE,

            PATO_light_quality_sensitivity_OBSOLETE,

            PATO_blue_light_sensitivity_OBSOLETE,

            PATO_far_red_light_sensitivity_OBSOLETE,

            PATO_red_light_sensitivity_OBSOLETE,

            PATO_u_v_light_sensitivity_OBSOLETE,

            PATO_relative_photosensitivity_OBSOLETE,

            // "A shape quality inhering in a bearer by virtue of the bearer's terminating abruptly by having or as if having an end or point cut off."
            PATO_truncated,

            // "A structural quality inhering in a bearer by virtue of the bearer's lacking organisation."
            PATO_disorganized,

            // "A structural quality inhering in a bearer by virtue of the bearer's exhibiting organisation."
            PATO_organized,

            PATO_regular_shape_OBSOLETE,

            PATO_irregular_shape_OBSOLETE,

            // "A structural quality inhering in a cytoplasm that contains fluid filled cavities."
            PATO_vacuolated,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a sharp or tapered end or point."
            PATO_sharpness,

            // "A shape quality inhering in a bearer by virtue of the bearer's exhibiting a downward bending of its leaves or other plant parts."
            PATO_epinastic,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a somewhat elongated form with approximately parallel sides."
            PATO_oblong,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's being oval with two axes of symmetry, as produced by a conical section."
            PATO_elliptic,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having a sinus or rounded lobe at the base."
            PATO_heart_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's being abnormally flattened or coalesced."
            PATO_fasciated,

            // "A color between white and black colors."
            PATO_grey,

            // "A color that falls about midway between red and blue in hue."
            PATO_purple,

            // "A color consisting of dark orange, red, of very low intensity."
            PATO_brown,

            // "A color hue with high-medium wavelength that of that portion of the visible spectrum lying between red and yellow, evoked in the human observer by radiant energy with wavelengths of approximately 585 to 620 nanometers."
            PATO_orange,

            // "Red color having medium to high brightness and low to moderate saturation."
            PATO_pink,

            // "A fertility quality inhering in a bearer by virtue of the bearer's being capable of initiating, sustaining, or supporting reproduction."
            PATO_fertile,

            // "A fertility quality inhering in a bearer by virtue of the bearer's being incapable of initiating, sustaining, or supporting reproduction."
            PATO_sterile,

            // "An optical quality which obtains by virtue of the ability of the bearer to absorb visible light."
            PATO_opacity,

            PATO_opacity_value_OBSOLETE,

            PATO_relative_opacity_OBSOLETE,

            PATO_absolute_opacity_OBSOLETE,

            PATO_relative_opacity_value_OBSOLETE,

            PATO_absolute_opacity_value_OBSOLETE,

            // "A optical quality inhering in a bearer by virtue of the bearer's not being clear; not transmitting or reflecting light or radiant energy."
            PATO_opaque,

            // "A optical quality inhering in a bearer by virtue of the bearer's lacking opacity."
            PATO_transparent,

            // "A pattern quality of inhering in a bearer by virtue of the correspondence in size, shape, and relative position of the bearer's parts on opposite sides of a dividing line or median plane or about a center or axis."
            PATO_symmetry,

            PATO_symmetry_value_OBSOLETE,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a sinuate margin and rippled surface."
            PATO_undulate,

            PATO_albino_value_OBSOLETE,

            // "A size quality inhering in a bearer by virtue of the bearer's being abnormally small."
            PATO_dwarf_like,

            // "A structural quality inhering in a bearer by virtue of the bearer's disposition to being permeated or pervaded by a liquid (as by osmosis or diffusion)."
            PATO_permeability,

            PATO_absolute_permeability_OBSOLETE,

            PATO_relative_permeability_OBSOLETE,

            // "A permeability quality inhering in a bearer by virtue of the bearer's disposition to admit the passage of gas or liquid through pores or interstices."
            PATO_porosity,

            PATO_relative_porosity_OBSOLETE,

            PATO_absolute_porosity_OBSOLETE,

            PATO_permeability_value_OBSOLETE,

            PATO_absolute_permeability_value_OBSOLETE,

            PATO_relative_permeability_value_OBSOLETE,

            PATO_porosity_value_OBSOLETE,

            PATO_absolute_porosity_value_OBSOLETE,

            PATO_relative_porosity_value_OBSOLETE,

            // "A permeability quality inhering in a bearer by virtue of the bearer's being capable to be permeated or pervaded by a liquid (as by osmosis or diffusion)."
            PATO_permeable,

            // "A permeability quality inhering in a bearer by virtue of the bearer's being incapable of being permeated or pervaded by a liquid (as by osmosis or diffusion)."
            PATO_impermeable,

            // "A porosity quality inhering in a bearer by virtue of the bearer's being capable of admitting the passage of gas or liquid through pores or interstices."
            PATO_porous,

            // "A porosity quality inhering in a bearer by virtue of the bearer's being incapable of admitting the passage of gas or liquid through pores or interstices."
            PATO_non_porous,

            PATO_absolute_consistency_OBSOLETE,

            PATO_relative_consistency_OBSOLETE,

            PATO_relative_consistency_value_OBSOLETE,

            PATO_absolute_consistency_value_OBSOLETE,

            PATO_consistent_OBSOLETE,

            PATO_inconsistent_OBSOLETE,

            // "A physical quality of a liquid inhering in a bearer by virtue of the bearer's disposition to internal resistance to flow."
            PATO_viscosity,

            PATO_relative_viscosity_OBSOLETE,

            PATO_absolute_viscosity_OBSOLETE,

            PATO_viscosity_value_OBSOLETE,

            PATO_absolute_viscosity_value_OBSOLETE,

            PATO_relative_viscosity_value_OBSOLETE,

            // "A viscosity quality inhering in a bearer by virtue of the bearer's having viscosity."
            PATO_viscous,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's successive change from one thing or state to another and back again."
            PATO_alternation,

            PATO_relative_alternation_OBSOLETE,

            PATO_absolute_alternation_OBSOLETE,

            PATO_alternation_value_OBSOLETE,

            PATO_relative_alternation_value_OBSOLETE,

            PATO_absolute_alternation_value_OBSOLETE,

            // "A time quality inhering in a bearer by virtue of the time it elapses for the bearer to respond to a stimulus."
            PATO_latency,

            PATO_absolute_latency_OBSOLETE,

            PATO_relative_latency_OBSOLETE,

            PATO_absolute_latency_value_OBSOLETE,

            PATO_relative_latency_value_OBSOLETE,

            PATO_relative_intensity_OBSOLETE,

            PATO_absolute_intensity_OBSOLETE,

            PATO_relative_intensity_value_OBSOLETE,

            PATO_absolute_intensity_value_OBSOLETE,

            PATO_absolute_occurence_OBSOLETE,

            PATO_relative_occurence_OBSOLETE,

            PATO_absolute_occurence_value_OBSOLETE,

            PATO_relative_occurence_value_OBSOLETE,

            // "A quality of a physical entity that exists through action of continuants at the physical level of organisation in relation to other entities."
            PATO_physical_quality,

            // "A physical quality which inheres in a bearer by virtue of some influence is exerted by the bearer's mass per unit size."
            PATO_mass_density,

            // "A structural quality inhering in a bearer by virtue of whether the bearer has been harmed or injured or spoiled."
            PATO_damage,

            // "A physical quality inhering in a bearer by virtue of the bearer's capacity to do work."
            PATO_energy,

            // "A physical quality inhering in a bearer by virtue of the amount of momentum caused a certain force will produce over time."
            PATO_impulse,

            // "A physical quality inhering in a bearer by virtue of the bearer's velocity multiplied by its mass."
            PATO_momentum,

            // "A physical quality inhering in a bearer by virtue of the bearer's rate of doing work."
            PATO_power,

            // "A physical quality that inheres in a bearer by virtue of the bearer's amount of force per unit area it exerts."
            PATO_pressure,

            // "A physical quality which is equal to the energy transferred by a force to a moving object."
            PATO_work,

            PATO_physical_quantity_OBSOLETE,

            // "A physical quality inhering in a bearer by virtue of the rate of change of the bearer's velocity in either speed or direction."
            PATO_acceleration,

            // "A physical quality inhering in a bearer by virtue of ratio of the bearer's output to the bearer's input."
            PATO_efficiency,

            // "A physical quality that exists by virtue of the rate of flow of the bearer across a given surface."
            PATO_flux,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to recover its size and shape after deformation in any way."
            PATO_elasticity,

            PATO_stiffness_OBSOLETE,

            // "A physical quality inhering in a bearer by virtue of the relative change in the bearer's length or the bearer's volume when being stretched or squashed."
            PATO_strain,

            // "A physical quality inhering in a bearer by virtue of the bearer's rate of change of momentum."
            PATO_force,

            PATO_relative_life_span_OBSOLETE,

            PATO_absolute_life_span_OBSOLETE,

            PATO_ratio_OBSOLETE,

            PATO_absolute_ratio_OBSOLETE,

            PATO_relative_ratio_OBSOLETE,

            PATO_relative_amplitude_OBSOLETE,

            PATO_absolute_amplitude_OBSOLETE,

            // "A quality inhering in an entity by virtue of the bearer's propensity to resist an external stimulus."
            PATO_susceptibility_toward,

            PATO_absolute_power_OBSOLETE,

            PATO_relative_power_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to resist to a stimulus."
            PATO_resistance_to,

            PATO_absolute_resistance_OBSOLETE,

            PATO_relative_resistance_OBSOLETE,

            PATO_absolute_susceptibility_OBSOLETE,

            PATO_relative_susceptibility_OBSOLETE,

            // "An angle which is less than 90 degrees."
            PATO_acute_angle_to,

            // "An angle which is between 90 degrees and 180 degrees to another entity."
            PATO_obtuse_angle_to,

            // "An angle which is less than 180 degrees to another entity."
            PATO_convex_angle_to,

            // "A convex angle that is inside two adjacent sides of a polygon."
            PATO_internal_angle,

            // "An angular placement quality inhering in a bearer by virtue of the bearer's placement at an angle that is greater than 180 degrees but less than 360 degrees to another entity."
            PATO_reflex_angle_to,

            PATO_number_OBSOLETE,

            PATO_relative_acceleration_OBSOLETE,

            PATO_absolute_acceleration_OBSOLETE,

            PATO_relative_efficiency_OBSOLETE,

            PATO_absolute_efficiency_OBSOLETE,

            PATO_relative_elasticity_OBSOLETE,

            PATO_absolute_elasticity_OBSOLETE,

            PATO_relative_flux_OBSOLETE,

            PATO_absolute_flux_OBSOLETE,

            PATO_relative_stiffness_OBSOLETE,

            PATO_absolute_stiffness_OBSOLETE,

            PATO_absolute_strain_OBSOLETE,

            PATO_relative_strain_OBSOLETE,

            PATO_relative_density_OBSOLETE,

            PATO_absolute_density_OBSOLETE,

            PATO_relative_energy_OBSOLETE,

            PATO_absolute_energy_OBSOLETE,

            PATO_relative_impulse_OBSOLETE,

            PATO_absolute_impulse_OBSOLETE,

            PATO_absolute_momentum_OBSOLETE,

            PATO_relative_momentum_OBSOLETE,

            PATO_absolute_pressure_OBSOLETE,

            PATO_relative_pressure_OBSOLETE,

            PATO_absolute_work_OBSOLETE,

            PATO_relative_work_OBSOLETE,

            PATO_physical_measure_value_OBSOLETE,

            PATO_damage_value_OBSOLETE,

            PATO_acceleration_value_OBSOLETE,

            PATO_relative_acceleration_value_OBSOLETE,

            PATO_absolute_acceleration_value_OBSOLETE,

            PATO_efficiency_value_OBSOLETE,

            PATO_relative_efficiency_value_OBSOLETE,

            PATO_absolute_efficiency_value_OBSOLETE,

            PATO_elasticity_value_OBSOLETE,

            PATO_absolute_elasticity_value_OBSOLETE,

            PATO_relative_elasticity_value_OBSOLETE,

            PATO_flux_value_OBSOLETE,

            PATO_relative_flux_value_OBSOLETE,

            PATO_absolute_flux_value_OBSOLETE,

            PATO_force_value_OBSOLETE,

            PATO_absolute_force_value_OBSOLETE,

            PATO_relative_force_value_OBSOLETE,

            PATO_absolute_force_OBSOLETE,

            PATO_relative_force_OBSOLETE,

            PATO_position_value_OBSOLETE,

            PATO_stiffness_value_OBSOLETE,

            PATO_absolute_stiffness_value_OBSOLETE,

            PATO_relative_stiffness_value_OBSOLETE,

            PATO_strain_value_OBSOLETE,

            PATO_absolute_strain_value_OBSOLETE,

            PATO_relative_strain_value_OBSOLETE,

            PATO_density_value_OBSOLETE,

            PATO_relative_amplitude_value_OBSOLETE,

            PATO_absolute_amplitude_value_OBSOLETE,

            PATO_absolute_density_value_OBSOLETE,

            PATO_relative_density_value_OBSOLETE,

            PATO_energy_value_OBSOLETE,

            PATO_absolute_energy_value_OBSOLETE,

            PATO_relative_energy_value_OBSOLETE,

            PATO_impulse_value_OBSOLETE,

            PATO_relative_impulse_value_OBSOLETE,

            PATO_absolute_impulse_value_OBSOLETE,

            PATO_momentum_value_OBSOLETE,

            PATO_absolute_momentum_value_OBSOLETE,

            PATO_relative_momentum_value_OBSOLETE,

            PATO_power_value_OBSOLETE,

            PATO_absolute_power_value_OBSOLETE,

            PATO_relative_power_value_OBSOLETE,

            PATO_pressure_value_OBSOLETE,

            PATO_absolute_pressure_value_OBSOLETE,

            PATO_relative_pressure_value_OBSOLETE,

            PATO_work_value_OBSOLETE,

            PATO_absolute_work_value_OBSOLETE,

            PATO_relative_work_value_OBSOLETE,

            PATO_ratio_value_OBSOLETE,

            PATO_absolute_ratio_value_OBSOLETE,

            PATO_relative_ratio_value_OBSOLETE,

            PATO_immunoglobulin_concentration_OBSOLETE,

            PATO_ig_a_concentration_OBSOLETE,

            PATO_ig_d_concentration_OBSOLETE,

            PATO_ig_e_concentration_OBSOLETE,

            PATO_ig_g_concentration_OBSOLETE,

            PATO_ig_m_concentration_OBSOLETE,

            PATO_urine_glucose_composition_OBSOLETE,

            PATO_immunoglobulin_concentration_value_OBSOLETE,

            PATO_ig_a_concentration_value_OBSOLETE,

            PATO_ig_d_concentration_value_OBSOLETE,

            PATO_ig_e_concentration_value_OBSOLETE,

            PATO_ig_g_concentration_value_OBSOLETE,

            PATO_ig_m_concentration_value_OBSOLETE,

            PATO_resistance_value_OBSOLETE,

            PATO_absolute_resistance_value_OBSOLETE,

            PATO_relative_resistance_value_OBSOLETE,

            PATO_susceptibility_value_OBSOLETE,

            PATO_absolute_susceptibility_value_OBSOLETE,

            PATO_relative_susceptibility_value_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's having susceptibilty toward an external stimulus."
            PATO_susceptible_toward,

            // "A quality inhering in a bearer by virtue of the bearer's lacking susceptibilty toward an external stimulus."
            PATO_insusceptible_toward,

            // "A quality inhering in a bearer by virtue of the bearer's length being notably higher than its width."
            PATO_elongated,

            PATO_absolute_concentration_OBSOLETE,

            PATO_relative_concentration_OBSOLETE,

            PATO_absolute_concentration_value_OBSOLETE,

            PATO_relative_concentration_value_OBSOLETE,

            // "A concentration quality inhering in a bearer by virtue of the bearer's exhibiting concentration."
            PATO_concentrated,

            PATO_unconcentrated_OBSOLETE,

            // "A concentration which relatively low."
            PATO_diluted,

            // "A concentration which is higher relative to the normal or average."
            PATO_increased_concentration,

            // "A concentration which is lower relative to the normal or average."
            PATO_decreased_concentration,

            // "A physical quality which inheres in a bearer by virtue of the bearer's exhibiting density."
            PATO_dense,

            PATO_urine_enzyme_composition_value_OBSOLETE,

            PATO_urine_enzyme_composition_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer being harmed or injured or spoiled, such that its functionality is impaired."
            PATO_damaged,

            // "A structural quality inhering in a bearer by virtue of not being harmed or injured or spoiled."
            PATO_undamaged,

            PATO_numerical_value_OBSOLETE,

            // "An elasticity quality inhering in a bearer by virtue of the bearer's ability to recover its size and shape after deformation in any way."
            PATO_elastic,

            // "An elasticity quality inhering in a bearer by virtue of the bearer's inability to recover its size and shape after deformation in any way."
            PATO_inelastic,

            PATO_urine_glucose_composition_value_OBSOLETE,

            PATO_urine_composition_OBSOLETE,

            PATO_urine_composition_OBSOLETE1,

            PATO_deaf_OBSOLETE,

            PATO_blind_OBSOLETE,

            // "A resistance quality inhering in a bearer by virtue of the bearer's resistance to a stimulus."
            PATO_resistant_to,

            PATO_immune_OBSOLETE,

            PATO_relative_response_OBSOLETE,

            PATO_absolute_response_OBSOLETE,

            PATO_relative_response_OBSOLETE1,

            PATO_absolute_response_value_OBSOLETE,

            PATO_maturity_value_OBSOLETE,

            // "A maturity quality inhering in a bearer by virtue of the bearer's indirect development, undergoing metamorphosis."
            PATO_larval,

            // "A maturity quality inhering in a bearer by virtue of the bearer's being at the age immediately before puberty."
            PATO_prepubescent,

            // "A maturity quality inhering in a insect by virtue of the bearer's being in the chrysalis (cocoon) or post larval stage."
            PATO_pupal,

            // "A maturity quality inhering in a bearer by virtue of the bearer's being in an inactive stage in the development of some insects, between the larval and the pupal stages."
            PATO_prepupal,

            // "A maturity quality inhering in a bearer by virtue of the bearer's being between the onset of puberty and maturity."
            PATO_adolescent,

            // "A maturity quality inhering in a bearer by virtue the bearer's being not fully grown or developed."
            PATO_juvenile,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the middle relative to another entity."
            PATO_medial_to,

            // "A response quality inhering in a bearer by virtue of the bearer's excessive reaction to a stimulus or an agent."
            PATO_hyperresponsive_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the side relative to another entity."
            PATO_lateral_to,

            // "A response quality inhering in a bearer by virtue of the bearer's limited reaction to a stimulus or an agent."
            PATO_hyporesponsive_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located more centrally than another entity."
            PATO_proximal_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the abdomen of an organism relative to another entity."
            PATO_ventral_to,

            PATO_modified_direction_OBSOLETE,

            PATO_unmodified_direction_OBSOLETE,

            // "A shape quality inhering in a bearer by virtue of the bearer's being narrow, with the two opposite margins parallel."
            PATO_linear,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter T."
            PATO_T_shaped,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter Y."
            PATO_Y_shaped,

            PATO_not_enlarged_OBSOLETE,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having toothlike projections in the margin."
            PATO_dentated,

            // "A shape quality inhering in a bearer by virtue of having sharp straight-edged teeth pointing to the apex."
            PATO_serrated,

            PATO_absolute_compatability_OBSOLETE,

            // "An odor quality inhering in a bearer by virtue of the bearer's lacking odour."
            PATO_odorless,

            PATO_absolute_function_OBSOLETE,

            PATO_plane_angle_quantity_OBSOLETE,

            PATO_solid_angle_quantity_OBSOLETE,

            PATO_length_unit_OBSOLETE,

            PATO_mass_unit_OBSOLETE,

            PATO_temparature_unit_OBSOLETE,

            PATO_time_unit_OBSOLETE,

            PATO_volume_unit_OBSOLETE,

            PATO_energy_unit_OBSOLETE,

            PATO_substance_unit_OBSOLETE,

            PATO_area_unit_OBSOLETE,

            PATO_angle_unit_OBSOLETE,

            PATO_plane_angle_unit_OBSOLETE,

            PATO_solid_angle_unit_OBSOLETE,

            PATO_quantitative_value_OBSOLETE,

            PATO_real_number_OBSOLETE,

            PATO_relational_number_OBSOLETE,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits variation or change."
            PATO_variant,

            PATO_dull_OBSOLETE,

            // "A color saturation which is of high purity."
            PATO_high_saturation,

            // "A quality inhering in a bearer by virtue of the bearer's power or force."
            PATO_strength,

            PATO_cold_insensitive_OBSOLETE,

            PATO_heat_insentive_OBSOLETE,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the back or upper surface of an organism relative to another entity."
            PATO_dorsal_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located further from a more centrally located entity."
            PATO_distal_to,

            PATO_strength_value_OBSOLETE,

            // "A quality which inheres in an process."
            PATO_process_quality,

            // "A quality which inheres in a continuant."
            PATO_physical_object_quality,

            // "A physical quality which is equal to the distance between repeating units of a wave pattern."
            PATO_wavelength,

            // "A color consisting of blue hue and high brightness."
            PATO_light_blue,

            // "A color consisting of blue hue and low brightness."
            PATO_dark_blue,

            // "A color consisting of brown hue and low brightness."
            PATO_dark_brown,

            // "A color consisting of brown hue and high brightness."
            PATO_light_brown,

            // "A color consisting of cyan hue and high brightness."
            PATO_light_cyan,

            // "A color consisting of cyan hue and low brightness."
            PATO_dark_cyan,

            // "A color consisting of green hue and low brightness."
            PATO_dark_green,

            // "A color consisting of green hue and high brightness."
            PATO_light_green,

            // "A color consisting of grey color and low brightness."
            PATO_dark_grey,

            // "A color consisting of grey color and high brightness."
            PATO_light_grey,

            // "A color consisting of magenta color and high brightness."
            PATO_light_magenta,

            // "A color consisting of magenta with low brightness."
            PATO_dark_magenta,

            // "A color consisting of orange hue and high brightness."
            PATO_light_orange,

            // "A color consisting of orange color and low brightness."
            PATO_dark_orange,

            // "Pink color having high brightness and moderate saturation."
            PATO_light_deep_pink,

            // "Pink color having medium brightness and moderate saturation."
            PATO_deep_pink,

            // "A color consisting of purple color and low brightness."
            PATO_dark_purple,

            // "A color consisting of purple color and high brightness."
            PATO_light_purple,

            // "A color consisting of red hue and low brightness."
            PATO_dark_red,

            // "A color consisting of red hue and high brightness."
            PATO_light_red,

            // "A color consisting of yellow hue and low brightness."
            PATO_dark_yellow,

            // "A color consisting of yellow hue and high brightness."
            PATO_light_yellow,

            // "A color consisting of blue hue and high saturation."
            PATO_saturated_blue,

            // "A color consisting of blue hue and low saturation."
            PATO_desaturated_blue,

            // "A color consisting of brown hue and high saturation."
            PATO_saturated_brown,

            // "A color consisting of brown hue and low saturation."
            PATO_desaturated_brown,

            // "A color consisting of cyan colour and high saturation."
            PATO_saturated_cyan,

            // "A color consisting of cyan colour and low saturation."
            PATO_desaturated_cyan,

            // "A color consisting of green hue and high saturation."
            PATO_saturated_green,

            // "A color consisting of green hue and low saturation."
            PATO_desaturated_green,

            // "A color consisting of grey color and high saturation."
            PATO_bright_grey_OBSOLETE,

            // "A color consisting of grey color and low saturation."
            PATO_pale_grey_OBSOLETE,

            // "A color consisting of magenta color and high saturation."
            PATO_saturated_magenta,

            // "A color consisting of magenta color and low saturation."
            PATO_desaturated_magenta,

            // "A color consisting of orange hue and high saturation."
            PATO_saturated_orange,

            // "A color consisting of orange hue and low saturation."
            PATO_desaturated_orange,

            // "Pink color having medium brightness and low saturation."
            PATO_dark_pale_pink,

            // "A color consisting of purple color and high saturation."
            PATO_saturated_purple,

            // "A color consisting of purple color and low saturation."
            PATO_desaturated_purple,

            // "A color consisting of red hue and high saturation."
            PATO_saturated_red,

            // "A color consisting of red hue and low saturation."
            PATO_desaturated_red,

            // "A color consisting of yellow hue and high saturation."
            PATO_saturated_yellow,

            // "A color consisting of yellow hue and low saturation."
            PATO_desaturated_yellow,

            // "A color consisting of red and brown hue."
            PATO_red_brown,

            // "A color consisting of red and brown hue and low brightness."
            PATO_dark_red_brown,

            // "A color consisting of red and brown hue and high brightness."
            PATO_light_red_brown,

            // "A fluorescence quality inhering in a bearer by virtue of emitting light during exposure to radiation from an external source."
            PATO_fluorescent,

            // "A physical quality that inheres in an bearer by virtue of how that bearer interacts with electromagnetic radiation."
            PATO_electromagnetic__EM__radiation_quality,

            // "An EM radiation quality that is independent of the EM wavelength range."
            PATO_full_spectrum_EM_radiation_quality,

            // "A scalar EM radiation quality which obtains by the capacity of the bearer to retain radiation."
            PATO_absorption_quality,

            // "A scalar EM radiation quality which obtains by the capacity of the bearer to scatter or reflect radiation."
            PATO_radiation_reflective_quality,

            // "A reflective quality restricted to a particular wavelength."
            PATO_albedo,

            // "A scalar optical quality which obtains by the magnitude of the light emitted by the bearer."
            PATO_luminous_flux,

            // "A radiation reflective quality inhering in a bearer by virtue of the ratio of the energy of a wave reflected from its surface to the energy possessed by the wave striking the bearer's surface."
            PATO_reflectivity,

            // "A fluorescence in which the emittence continues after the absorption has ceased."
            PATO_phosphorescence,

            // "A scalar EM radiation quality which obtains by the capacity of the bearer to emit radiation."
            PATO_radiation_emitting_quality,

            // "An EM radiation quality in which the EM radiation is within the fiat range of the spectrum visible deemed to be light."
            PATO_optical_quality,

            // "An optical quality that is the mixture, purity or pattern of wavelengths of light perceived by the observer."
            PATO_chromatic_property,

            // "A color consisting of red and orange hue with a slight amount of gray."
            PATO_vermilion,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to varying or changing."
            PATO_variability,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits temperature variation or change."
            PATO_variability_of_temperature,

            // "A temperature which is relatively high."
            PATO_increased_temperature,

            // "A temperature which is relatively low."
            PATO_decreased_temperature,

            // "A variability of temperature which is relatively low."
            PATO_decreased_variability_of_temperature,

            // "A variability of temperature which is relatively high."
            PATO_increased_variability_of_temperature,

            // "A process quality inhering in a bearer by virtue of the bearer's magnitude of the temporal extent between the starting and ending point."
            PATO_duration,

            // "A duration quality of a process inhering in a bearer by virtue of the bearer's duration of exhibition of thermal energy."
            PATO_duration_of_temperature,

            // "A duration of temperature which is lesser relative to the normal or average enduring or continuing in time."
            PATO_decreased_duration_of_temperature,

            // "A duration of temperature which is greater relative to the normal or average in respect to the quality of temperature of enduring or continuing in time."
            PATO_increased_duration_of_temperature,

            // "A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of temperature."
            PATO_invariant_temperature,

            // "A variability quality inhering in a bearer by virtue of the bearer's having or exhibiting variation of temperature."
            PATO_variant_temperature,

            // "A temperature which is increased by a low degree."
            PATO_mild_increased_temperature,

            // "A temperature which is increased by a medium degree."
            PATO_moderate_increased_temperature,

            // "A temperature which is increased by a high degree."
            PATO_severe_increased_temperature,

            // "A discrimination quality in a bearer by virtue of the bearer's being incapable perceiving differences between two or more stimuli."
            PATO_indiscriminate,

            // "A discrimination quality in a bearer by virtue of the bearer's being capable of perceiving differences between two or more stimuli."
            PATO_discriminate,

            // "A pilosity quality of being covered with short hairs or soft down."
            PATO_pubescent_hair,

            // "An angle which is 90 degrees to another entity."
            PATO_right_angle_to,

            // "An angle which is 180 degrees to another entity."
            PATO_straight_angle_to,

            // "A 2-D extent quality inhering in a bearer by virtue of the bearer's two dimensional extent."
            PATO_area,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's being symmetric about a plane running from its frontal end to its caudal end (head to tail), and has nearly identical right and left halves."
            PATO_bilateral_symmetry,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's having equal proportion around a central point or axis."
            PATO_radial_symmetry,

            PATO_left_right_symmetry_OBSOLETE,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division into symmetrical halves by only one longitudinal plane passing through the axis."
            PATO_zygomorphic,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's being capable of division into symmetrical halves by any longitudinal plane passing through the axis."
            PATO_actinomorphic,

            // "A flavor quality inhering in a bearer by virtue of the bearer's having flavour."
            PATO_flavourful,

            // "A flavor quality inhering in a bearer by virtue of the bearer's lacking flavour."
            PATO_flavourless,

            // "An odor quality inhering in a bearer by virtue of the bearer's having odour."
            PATO_odorous,

            // "A morphology quality inhering in a bearer by virtue of the bearer's lack of distinct morphology."
            PATO_amorphous,

            // "A quality of a process which ends later than the natural end time."
            PATO_temporally_extended,

            // "A length quality which is equal to the length of any straight line segment that passes through the center of a circle and whose endpoints are on the circular boundary."
            PATO_diameter,

            // "A mating type that indicates whether the F plasmid has integrated into the chromosome."
            PATO_bacterial_mating_type,

            // "A biological sex quality inhering in an individual whose sex is unknown."
            PATO_unknown_sex_OBSOLETE,

            // "A yeast mating type."
            PATO_yeast_mating_type,

            // "A biological sex quality inhering in a population of multiple sexes."
            PATO_mixed_sex,

            // "A composition quality inhering in an bearer by virtue of the bearer's homogeneity of a biomaterial."
            PATO_biomaterial_purity,

            // "A biological sex quality inhering in an organism or a population with both male and female sexual organs in one individual."
            PATO_hermaphrodite,

            // "A S. cerevisiae mating type cells that secrete a pheromone that in alpha haploids stimulates processes that lead to mating."
            PATO_a_mating_type__yeast_,

            // "A S. cerevisiae mating type."
            PATO_Saccharomyces_cerevisiae_mating_type,

            // "A S. pombe mating type determined by the gene configuration on the mat1 locus."
            PATO_Schizosaccharomyces_pombe_mating_type,

            // "A S. cerevisiae mating type cells that secrete a pheromone that stimulates a haploids."
            PATO_alpha_mating_type__yeast_,

            // "A S. pombe mating type determined by the mat1-Mc and mat1-Mi on the mat1 locus."
            PATO_h_minus,

            // "A S. pombe mating type determined by the mat1-Pc and mat1-Pi on the mat1 locus."
            PATO_h_plus,

            // "A bacterial mating type indicating the presence of F plasmid in a bacterial cell."
            PATO_F_mating_type,

            // "A bacterial mating type indicating the absence of F plasmid in a bacterial cell."
            PATO_F_minus_mating_type,

            // "A mating type that indicates that the F plasmid has integrated into the chromosome."
            PATO_high_frequency_recombinant,

            // "A physical quality inhering in a bearer by virtue of the rate of change of the bearer's angular velocity."
            PATO_angular_acceleration,

            // "A density quality which inheres in a bearer by virtue of some influence exerted by the bearer's mass on a given area."
            PATO_area_density,

            // "A density quality which is equal to the mass exerting an influence on a one-dimensional object."
            PATO_linear_density,

            // "A density quality which inheres in a bearer by virtue of some influence exerted by the bearer's mass on a given volume."
            PATO_volumetric_density,

            // "A optical quality inhering in a bearer by virtue of the bearer's exhibiting low opacity."
            PATO_translucent,

            // "A shape quality that obtains by virtue of the bearer having inward facing edges; having a surface or boundary that curves or bulges outward, as the exterior of a sphere."
            PATO_convex,

            // "A shape quality inhering in a cell by virtue of the bearer's ability to take on two or more different shapes during its life cycle."
            PATO_pleomorphic,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped like a cushion or has a marked convex cushion-like form."
            PATO_pulvinate,

            // "A quality inhering in a bearer by virtue of the bearer's having a knob or knoblike protuberance."
            PATO_umbonate,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having many wrinkles or creases on the surface."
            PATO_rugose,

            // "A shape quality inhering in a bearer by virtue of the bearer's having thin filamentous extensions at its edge."
            PATO_filamentous,

            // "A texture quality inhering in a bearer by virtue of the bearer's being covered with warts or projections that resemble warts resulting in a hard rough surface."
            PATO_warty,

            // "A structural quality inhering in a bearer by virtue of the bearer's disposition to being easily damaged or destroyed."
            PATO_fragile,

            // "A quality inhering in a bearer by virtue of the bearer's having root like extensions radiating from its center."
            PATO_rhizoidal,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having spines, thorns or similar thin projections on its surface."
            PATO_spiny,

            // "A shape quality inhering in a bearer by virtue of the bearer's being small and resembling a point."
            PATO_punctiform,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having deeply undulating edges forming lobes."
            PATO_lobate,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having an irregularly toothed edge."
            PATO_erose,

            // "A shape quality inhering in a colony by virtue of the bearer's appearing above the medium surface with terraced edges."
            PATO_raised,

            // "A coating quality which is sticky or clammy."
            PATO_viscid,

            // "A composition quality inhering in an bearer by virtue of the bearer's consistency of mucus."
            PATO_mucoid,

            // "A physical quality that inheres in propagating wave (light or sound) virtue of the bearer's change in direction when passing from one medium to another."
            PATO_refractivity,

            // "A reflectivity quality inhering in a bearer by virtue of the bearer's reflecting lots of light."
            PATO_glistening,

            // "A cellular quality inhering in a bearer by virtue of the bearer's number of homologous sets of chromosomes in the nucleus or primary chromosome-containing compartment of the cell, each set essentially coding for all the biological traits of the organism."
            PATO_ploidy,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's containing a single set of homologous chromosomes."
            PATO_haploid,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's containing a single set of unique homologous chromosomes."
            PATO_monoploid,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's containing more than two homologous sets of chromosomes."
            PATO_polyploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing chromosomes derived from a single species."
            PATO_autopolyploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing chromosomes derived from different species."
            PATO_allopolyploidy,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's having an ancient polyploid ancestor."
            PATO_paleopolyploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing three homologous sets of chromosomes."
            PATO_triploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing four homologous sets of chromosomes."
            PATO_tetraploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing five homologous sets of chromosomes."
            PATO_pentaploid,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's containing four homologous sets of chromosomes."
            PATO_hexaploid,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's containing a non-integral multiple of the monoploid number, due to extra or missing chromosomes."
            PATO_aneuploid,

            // "An aneuploidy quality inhering in a bearer by virtue of the bearer's containing only one chromosome from a pair in a cell's nucleus."
            PATO_monosomy,

            // "An aneuploidy quality inhering in a bearer by virtue of the bearer's containing only two chromosome from a pair in a cell's nucleus."
            PATO_disomy,

            // "A disomy quality inhering in a bearer by virtue of the bearer's containing two copies of the chromosome from one of the parents (with no contribution from the other parent)."
            PATO_uniparental_disomy,

            // "An aneuploidy quality inhering in a bearer by virtue of the bearer's containing three, instead of two, chromosomes of a particular numbered type in an organism."
            PATO_trisomy,

            // "A trisomy quality inhering in a bearer when part of the bearer's extra chromosome is attached to one of the other chromosomes, or if one of the bearer's chromosomes has two copies of part of its chromosome."
            PATO_partial_trisomy,

            // "A trisomy quality inhering in a bearer by virtue of the bearer's having extra chromosomal material in only some of it's cells."
            PATO_mosaic_trisomy,

            // "A polyploidy quality inhering in a bearer by virtue of the bearer's chromosome number being increased by endomitosis and for which the degree of ploidy is proportional to the number of times that endomitosis has taken place."
            PATO_endopolyploid,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's containing an integral multiple of the monoploid number, possibly excluding the sex-determining chromosomes."
            PATO_euploid,

            // "A ploidy quality inhering in a bearer by virtue of the bearer's having two copies (homologs) of each chromosome, usually one from the mother and one from the father."
            PATO_diploid,

            // "A diploidy quality inhering in a bearer in by virtue of belonging in a species whose one of the sexes has haploid cells and the other has diploid cells."
            PATO_haplodiploid,

            // "A monadic quality of continuant that exists at the cellular level of organisation."
            PATO_cellular_quality,

            // "A cellular quality that arises by virtue of whether the bearer's disposition to differentiate into one or more mature cell types."
            PATO_cellular_potency,

            // "A cellular quality inhering in a bearer by virtue of the bearer's having the ability to go through numerous cycles of cell division while maintaining the undifferentiated state."
            PATO_self_renewal,

            // "A cellular potency that is the capacity to produce differentiated cell types of all three primary germ layers and extraembryonic cell types."
            PATO_totipotent,

            // "A cellular potency that is the capacity to produce only one differentiated cell type."
            PATO_unipotent,

            // "A cellular potency that is the capacity to form multiple differentiated cell types of a specific lineage and lack self renewing capacity."
            PATO_oligopotent,

            // "A cellular potency that is the capacity to form multiple differentiated cell types."
            PATO_multipotent,

            // "A cellular potency that is the capacity to produce differentiated cell types of all three primary germ layers but not extraembryonic cell types."
            PATO_pluripotent,

            // "A cellular quality inhering in a bearer by virtue of bearer's number of nuclei."
            PATO_nucleate_quality,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having no nucleus."
            PATO_anucleate,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having two nuclei."
            PATO_binucleate,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having one nucleus."
            PATO_mononucleate,

            // "A cellular quality inhering in a bearer by virtue of the bearer's having thin, tail-like projections extending outwards from the cell body."
            PATO_ciliatedness,

            // "A shape quality inhering in a bearer by virtue of the bearer's resembling a long tapered rod."
            PATO_spindle_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel."
            PATO_striated,

            // "A structural quality inhering in a bearer by virtue of the bearer's having distinct structure."
            PATO_structured,

            // "A structural quality inhering in a bearer by virtue of the bearer's lacking distinct structure."
            PATO_unstructured,

            // "A physical quality inhering in a bearer by virtue of the rate of the bearer's angular movement about an axis; the angle rotated in a given time."
            PATO_angular_velocity,

            // "A physical quality inhering in a catalyst by virtue of the amount of the catalyst's action."
            PATO_catalytic_activity,

            // "A quality inhering in a population by virtue of the proportion of its members that are ill at a given time."
            PATO_morbidity,

            // "A duration which has regular start and/or end times."
            PATO_regular_duration,

            // "A duration quality of a process inhering in a bearer by virtue of the bearer's duration which has irregular start and/or end times."
            PATO_irregular_duration,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's being deficient in alertness or activity."
            PATO_lethargic,

            // "A shape quality inhering in a bearer by virtue of the bearer's terminating in a point or edge."
            PATO_sharp,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to rise or float in a fluid medium such as water or air."
            PATO_buoyancy,

            // "A viability quality inhering in a bearer by virtue of the bearer's condition before death."
            PATO_alive,

            // "A viability quality inhering in a bearer by virtue of the cessation of the bearer's life."
            PATO_dead,

            // "A reflectivity quality inhering in the bearer by virtue of the bearer's ability to refract light."
            PATO_refractile,

            // "A color hue with very low wavelength of that portion of the visible spectrum lying between reddish blue or bluish purple, evoked in the human observer by radiant energy with wavelengths of approximately 420 to 380 nanometers."
            PATO_violet,

            // "A color hue consisting of red hue and yellow hue and high brightness."
            PATO_rosy,

            // "A color consisting of purple and brown hue."
            PATO_maroon,

            // "A concentration quality inhering in compound by virtue of the bearer's tendency to act as a hydron donor."
            PATO_compound_acidity,

            // "A concentration quality inhering in a medium by virtue of the bearer's tendency to hydronate a specific reference base."
            PATO_medium_acidity,

            // "An medium acidity quality inhering in a solution by virtue of the bearer's a high concentration of H+ ions."
            PATO_acidic,

            // "An medium acidity quality inhering in a solution by virtue of the bearer's a low concentration of H+ ions."
            PATO_alkaline,

            // "An emergent molecular quality that arises by virtue of the bearer's disposition to exhibit molecular attraction to another entity in contact."
            PATO_adhesivity,

            // "A quality inhering in a bearer by virtue of the bearer's decomposition into component parts."
            PATO_decayed,

            // "A quality of a single process which describes the growth of an organism, structure, or group of organisms."
            PATO_growth_quality_of_occurrent,

            // "An organismal quality inhering in a bearer by virtue of the bearer's ability to produce new life or offspring."
            PATO_reproductive_quality,

            // "A structural quality inhering in a bearer by virtue of the bearer's having connection or association with another entity."
            PATO_attachment_quality,

            // "An attachment quality inhering in a flower by virtue of the bearer's lacking a stalk, as in flowers or leaves that grow directly from the stem."
            PATO_sessile__sensu_botany_,

            // "A attachment quality inhering in a bearer by virtue of the bearer's inability to move about."
            PATO_sessile__sensu_zoology_,

            // "A attachment quality inhering in a bearer by virtue of the bearer's having or being supported by a pedicel or pedicle."
            PATO_pedicellate,

            // "A contractile quality inhering in a bearer by virtue of the bearer's elastic tension that facilitate response to stimuli."
            PATO_tonicity,

            // "A cellular adhesivity quality inhering in a molecule in one cell by virtue of the bearer's attachment to an identical molecule in an adjacent cell."
            PATO_homophilic,

            // "A cellular adhesivity quality inhering in a molecule in one cell by virtue of the bearer's attachment to an nonidentical molecule in an adjacent cell."
            PATO_heterophilic,

            // "A structural quality inhering in a bearer by virtue of whether the bearer includes all its components."
            PATO_wholeness,

            // "A broken quality inhering in a bearer by virtue of the bearer's being broken open."
            PATO_broken,

            // "A wholeness quality inhering in a bearer by virtue of the bearer's being taken apart into its constituent parts."
            PATO_disassembled,

            // "A wholeness quality inhering in a bearer by virtue of the bearer's including all its components."
            PATO_whole,

            // "A composition quality inhering in an bearer by virtue of the bearer's being encrusted or impregnated with calcium carbonate (CHEBI:3311)."
            PATO_calcified,

            // "A composition quality inhering in an bearer by virtue of the bearer's being hardened by the deposition of calcium into bone."
            PATO_ossified,

            // "A composition quality inhering in an bearer by virtue of the bearer's cartilage quantities."
            PATO_cartilaginous,

            // "A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of extracellular fluid."
            PATO_edematous,

            // "An extended swelling in plant organs caused primarily by an excessive accumulation of water."
            PATO_edematous__sensu_botany__OBSOLETE,

            // "An attachment quality inhering in a bearer by virtue of the bearer's lacking connection or association with another entity."
            PATO_detached_from,

            // "A sensitivity quality inhering in a bearer by virtue of the bearer's dependence on oxygen."
            PATO_sensitivity_to_oxygen,

            // "A quality inhering in a bearer by virtue of the bearer's dependence on oxygen."
            PATO_aerobic,

            // "A quality inhering in a bearer by virtue of the bearer's independence on oxygen."
            PATO_anaerobic,

            // "A quality of a process inhering in bearer by virtue of the bearer's disposition to respond to stimulation."
            PATO_sensitivity_of_a_process,

            // "A sensitivity of a process quality inhering in a bearer by virtue of the bearer's unfolding in a location with or without oxygen."
            PATO_sensitivity_of_a_process_to_oxygen,

            // "A sensitivity of a process inhering in a biological process by virtue of the process unfolding in a location with oxygen."
            PATO_aerobic__for_occurrence_,

            // "A sensitivity of a process inhering in a biological process by virtue of the process unfolding in a location without oxygen."
            PATO_anaerobic__for_occurrence_,

            // "A physical quality inhering in a liquid by virtue of the bearer's ability to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces."
            PATO_surface_tension,

            // "A quality inhering in a cell's plasma membrane by virtue of the electrical potential difference across it."
            PATO_membrane_potential,

            // "A quality inhering in a cell's plasma membrane by virtue of a brief fluctuation in the bearer's potential caused by the rapid opening and closing of voltage-gated ion channels."
            PATO_action_potential,

            // "A quality that is equal to the potential energy per unit charge associated with a static (time-invariant) electric field, also called the electrostatic potential."
            PATO_electric_potential,

            // "A malformed quality inhering in a bearer by virtue of the bearer's all-encompassing, grotesque morphological defects."
            PATO_monstrous,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the front of an organism."
            PATO_curved_rostral,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the part of the body from which the tail arises."
            PATO_curved_caudal,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the back or upper surface of an organism."
            PATO_curved_dorsal,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the abdomen of an organism."
            PATO_curved_ventral,

            // "A quality inhering in a bearer by virtue of the bearer's magnitude in respect to a related entity."
            PATO_proportionality_to,

            // "A depth which is relatively low."
            PATO_decreased_depth,

            // "A quality inhering in a bearer by virtue of the bearer's being present in two copies."
            PATO_duplicated,

            // "An oriented quality inhering in a bearer by virtue of the bearer's axis being positioned forward."
            PATO_anteverted,

            // "A position which is relatively high."
            PATO_increased_position,

            // "A positional which is relatively low."
            PATO_decreased_position,

            // "A positional quality inhering in a bearer by virtue of the bearer's being drawn in or pulled back from any given point."
            PATO_retracted,

            // "A structural quality inhering in a bearer by virtue of the bearer's being broken down; caved in."
            PATO_collapsed,

            // "A structural quality inhering in a bearer by virtue of the bearer's resembling a sponge in elasticity, absorbency, or porousness."
            PATO_spongy,

            // "A shape quality inhering in a bearer by virtue of the bearer's having an oblique or slanted direction."
            PATO_sloped,

            // "A quality inhering in a bearer by virtue of the bearer's standing out or projecting beyond a surface or line."
            PATO_prominent,

            // "A size quality inhering in a an organ or tissue by virtue of the bearer's absence coupled with persistence of the organ/tissue primordium, which fails to develop completely."
            PATO_aplastic,

            // "A quality of a process which occurs near to or not long before the present."
            PATO_recent,

            // "A structural quality inhering in a bearer by virtue of the bearer's being thicker or more closely packed together; pressed tightly together."
            PATO_condensed,

            // "An age quality that exists by virtue of the time (years and months) that the bearer has existed."
            PATO_chronological_age,

            // "A time quality inhering in a bearer by virtue of the bearer's growing old; aging."
            PATO_senescent,

            // "A cellular quality inhering in a cell by virtue of whether the bearer exhibits the ability to move spontaneously."
            PATO_cellular_motility,

            // "A growth quality of a process inhering in an organism, structure, or group of organisms by virtue of the bearer's reduced or increased growth."
            PATO_heterochronic_growth,

            // "A paedomorphic growth quality which is due to a reduced rate."
            PATO_neotenous_growth,

            PATO_growth_rate,

            PATO_hypertrophic_growth,

            PATO_hypotrophic_growth,

            // "A concave quality inhering in a bearer by virtue of the bearer's shape being a V-shaped cut."
            PATO_notched,

            // "A reproductive quality inhering in the young of an animal by virtue of the bearer's being cared for at one time."
            PATO_brood_quality,

            // "A reproductive quality inhering in the young of an animal by virtue of the bearer's disposition to survive and develop normally."
            PATO_brood_viability,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's resembling a ball (a sphere whose equatorial diameter is equal to the polar diameter)."
            PATO_spherical,

            // "A shape quality inhering in a bearer by virtue of the bearer's being gradually narrower or thinner toward one end."
            PATO_tapered,

            // "A quality inhering in a bearer by virtue of the bearer's lacking complete growth, differentiation, or development."
            PATO_immature,

            // "A monadic quality of continuant inhering in a bearer by virtue of the bearer's being intricate and compounded."
            PATO_complexity,

            // "A complexity quality in a bearer by virtue of the bearer's having few parts or being complicated or compound."
            PATO_simple,

            // "A complexity quality inhering in a bearer by virtue of the bearer's being intricate and compounded."
            PATO_complex,

            // "A structural quality inhering in a bearer by virtue of the bearer's not being in contact with another entity, or of no longer being connected or joined with another entity."
            PATO_separated_from,

            // "A structural quality inhering in a bearer by virtue of the bearer's separation of normally joined parts, such as the separation of adjacent bones without fracture or of certain abdominal muscles during pregnancy."
            PATO_diastatic,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's being interrupted of its normal course."
            PATO_disrupted,

            // "A quality of a single physical entity that arises by virtue of whether the bearer exhibits the ability to perform a regular function(s)."
            PATO_functionality,

            // "A functionality quality held by the bearer when the latter is able to perform a regular function(s)."
            PATO_functional,

            // "A disfunctional quality held by the bearer when the latter is unable to perform a regular function(s)."
            PATO_non_functional,

            // "A pattern inhering in a surface by virtue of the bearer's being marked by the presence of dots, punctures, points or pits."
            PATO_punctate,

            // "A structural quality inhering in a bearer by virtue of the bearer's lacking some outer layer."
            PATO_delaminated,

            // "A color quality inhering in a bearer by virtue of the bearer's being uneven in color."
            PATO_variable_color,

            // "An optical quality where light rays originating from a point on the object converge."
            PATO_focus,

            // "An optical quality inhering in a bearer by virtue of the bearer's having focus."
            PATO_focused,

            // "An optical quality inhering in a bearer by virtue of the bearer's lacking focus."
            PATO_blurry,

            // "A quality inhering in a bearer by virtue of vibration, as perceived by the sense of hearing."
            PATO_sound_quality,

            // "The frequency of transmitted vibrations."
            PATO_sound_frequency,

            // "A physical quality inhering in a sound wave by virtue of the maximum magnitude (value without regard to sign) of its disturbance."
            PATO_sound_amplitude,

            // "A physical quality inhering in sound by virtue of the bearer's travelling speed in a given medium under specified conditions."
            PATO_sound_speed,

            // "A physical quality which is equal to the quotient of the speed of a sound wave divided by its wavelength."
            PATO_sound_wavelength,

            // "A sound frequency in the range of 0-20 Hz."
            PATO_intrasonic,

            // "A sound frequency in the range of 20 to 20.000 Hz."
            PATO_sonic,

            // "A sound frequency in the range of 20 000 + Hz."
            PATO_ultrasonic,

            // "A sound amplitude which is relatively low."
            PATO_quiet,

            // "A sound amplitude which is relatively high."
            PATO_loud,

            // "A spatiotemporal quality inhering in a cell."
            PATO_cellular_spatiotemporal_quality,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's behavior."
            PATO_behavioral_quality_of_a_process,

            // "A cellular quality that exists by virtue of the disposition of the cell to adhere to other cells and molecules, through the emergent action of the molecular parts of the cell surface."
            PATO_cellular_adhesivity,

            // "A color pattern inhering in a bearer by virtue of the bearer's having one hue."
            PATO_mono_colored,

            // "A color pattern inhering in a bearer by virtue of bearer's having two or more hues or degrees of saturation."
            PATO_multi_colored,

            // "A color pattern inhering in a bearer by virtue of bearer's having 3 or more hues or degrees of saturations."
            PATO_motley,

            // "A color pattern inhering in a bearer by virtue of bearer's being marked with small spots, patches, or specks of hue or degree of saturation differing from that of the background."
            PATO_dappled,

            // "A molecular quality that inheres in a molecular entity by virtue of the bearer's disposition to dissolve in a liquid."
            PATO_solubility,

            // "A solubility quality inhering in a substance by virtue of the bearer's disposition to dissolve in a liquid."
            PATO_soluble_in,

            // "A solubility quality inhering in a substance by virtue of the bearer's inability of a substance to dissolve in a liquid."
            PATO_insoluble_in,

            // "A compositional quality inhering in an bearer by virtue of the bearer's quantities or relative ratios of amylose of the inhering entity."
            PATO_amylose_composition,

            // "An amylose composition quality inhering in an bearer by virtue of the bearer's having negligible or no amylose content."
            PATO_glutinous,

            // "An amylose composition quality inhering in an bearer by virtue of the bearer's having high amount of amylose content."
            PATO_non_glutinous,

            // "A phase which starts later than natural start point."
            PATO_delayed_phase,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to being turned, bowed, or twisted without breaking."
            PATO_flexibility,

            // "A physical quality inhering in a bearer by virtue of the bearer's ability of being turned, bowed, or twisted without breaking."
            PATO_flexible,

            // "A physical quality inhering in a bearer by virtue of the bearer's inability of being turned, bowed, or twisted without breaking."
            PATO_inflexible,

            // "A physical quality inhering in a bearer by virtue of the bearer's exhibiting the physical characteristics of an entity characterized by particles arranged such that their shape and volume are relatively stable."
            PATO_quality_of_a_solid,

            // "A physical quality inhering in a bearer by virtue of the bearer's exhibiting the physical characteristics of an entity consisting of particles that have neither a defined volume nor defined shape."
            PATO_quality_of_a_gas,

            // "A physical quality inhering in an entity exhibiting the physical characteristics of an amorphous (non-crystalline) form of matter between a gas and a solid that has a definite volume, but no definite shape."
            PATO_quality_of_a_liquid,

            // "A sensitivity toward an external stimulus which is higher than normal/average."
            PATO_increased_sensitivity_toward,

            // "A sensitivity toward an external stimulus which is lower than normal/average."
            PATO_decreased_sensitivity_toward,

            // "A sensitivity of a process which is higher than normal or average."
            PATO_increased_sensitivity_of_a_process,

            // "A sensitivity of a process which is lower than normal or average."
            PATO_decreased_sensitivity_of_a_process,

            // "A sensitivity of occurrent to oxygen which is higher than normal or average."
            PATO_increased_sensitivity_of_a_process_to_oxygen,

            // "A sensitivity of a process to oxygen which is lower than normal or average."
            PATO_decreased_sensitivity_of_a_process_to_oxygen,

            // "The number of parts of a particular type that the bearer entity has. This is a relational quality, and thus holds between two entities: the bearer of the quality, and the type of parts."
            PATO_has_number_of,

            // "A quality of a process inhering in a bearer by virtue of the bearer's lacking a processual part as specified by the additional entity."
            PATO_lacking_processual_parts,

            // "A functionality quality which is held by the bearer when the latter is able to perform additional or different function(s)."
            PATO_having_extra_function,

            // "A quality of a process inhering in a bearer by virtue of the bearer's having additional processual parts."
            PATO_having_extra_processual_parts,

            // "A mass which is lower than normal or average."
            PATO_decreased_mass,

            // "A mass which is higher than normal or average."
            PATO_increased_mass,

            // "A quality of a process inhering in a bearer by virtue of the bearer's processual parts."
            PATO_extra_or_missing_processual_parts,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being spread out or scattered about or divided up."
            PATO_distributed,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's not being spread out or scattered about or divided up."
            PATO_undistributed,

            // "A quality of a process inhering in a bearer by virtue of the bearer's having fewer processual parts."
            PATO_having_decreased_processual_parts,

            // "A size quality inhering in a bearer by virtue of the bearer's being made wider or larger in all dimensions."
            PATO_dilated,

            // "A symmetry quality inhering in a bearer by virtue of the bearer's having equal dimensions or measurements."
            PATO_isometrical,

            // "A physical quality inhering in a bearer by virtue of the bearer's motion characteristic."
            PATO_flow_rate,

            // "A pressure which is relatively low."
            PATO_decreased_pressure,

            // "A pressure which is relatively high."
            PATO_increased_pressure,

            // "A permeability which is relatively high."
            PATO_increased_permeability,

            // "A permeability which is relatively low."
            PATO_decreased_permeability,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to shrink or contract."
            PATO_contractility,

            // "A contractility which is relatively high."
            PATO_increased_contractility,

            // "A contractility which is relatively low."
            PATO_decreased_contractility,

            // "A spatial quality inhering in an inactive muscle or muscle fibers by virtue of the bearer's exhibiting gradual lengthening."
            PATO_relaxational_quality_OBSOLETE,

            // "A variability which is relatively low."
            PATO_decreased_variability,

            // "A variability which is relatively high."
            PATO_increased_variability,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to transmit of an entity through a medium."
            PATO_conductivity,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits rate variation or change."
            PATO_variability_of_rate,

            // "A variability of rate which is relatively high."
            PATO_increased_variability_of_rate,

            // "A variability of rate which is relatively low."
            PATO_decreased_variability_of_rate,

            // "Increased, intensified."
            PATO_enhanced_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer's coinciding spatially, partially or wholly with another entity."
            PATO_overlap_with,

            // "A surface shape quality inhering in a bearer by virtue of the bearer's exhibiting a degree of bending."
            PATO_curvature,

            // "A curvature which is relatively high."
            PATO_increased_curvature,

            // "A curvature which is relatively low."
            PATO_decreased_curvature,

            // "A concave quality inhering in a bearer by virtue of the bearer's forming or resembling an arch."
            PATO_arched,

            // "A 1-D extent quality inhering in a bearer by virtue of the bearer's downward or backward or inward dimenision."
            PATO_depth,

            // "A depth quality which is relatively high."
            PATO_increased_depth,

            // "An oriented quality inhering in a bearer by virtue of the bearer's being turned outward in placement."
            PATO_everted,

            // "A quality inhering in a bearer by virtue of the bearer's extending out above or beyond a surface or boundary."
            PATO_protruding,

            // "An oriented quality inhering in a bearer by virtue of the bearer's being relocated around an axis."
            PATO_rotated,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the rear of organism."
            PATO_posteriorly_rotated,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the front of an organism."
            PATO_anteriorly_rotated,

            // "A size quality inhering in a bearer by virtue of the bearer's being abnormally expanded or increased in size."
            PATO_distended,

            // "A life span which is relatively high."
            PATO_increased_life_span,

            // "A life span which is relatively low."
            PATO_decreased_life_span,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being in disarray; extremely disorderly."
            PATO_disheveled,

            // "A coating which is oily and slippery."
            PATO_greasy,

            // "A tangled quality inhering in a bearer by virtue of the bearer's being not possible to unravel."
            PATO_matted,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being marked by, consisting of, or diversified with patches."
            PATO_patchy,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being scattered; spread irregularly, and at a distance from each other."
            PATO_sparse,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits color variation or change."
            PATO_variability_of_color,

            // "A variability of color which is relatively high."
            PATO_increased_variability_of_color,

            // "A variability of color which is relatively low."
            PATO_decreased_variability_of_color,

            // "A variability quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of color."
            PATO_invariant_color,

            // "A variability quality inhering in a bearer by virtue of the bearer's having or exhibiting variation of colour."
            PATO_variant_color,

            // "A morphological quality inhering in a bearer by virtue of the bearer's being distorted in form."
            PATO_deformed,

            // "A tonicity which is relatively high."
            PATO_increased_tonicity,

            // "A tonicity which is relatively low."
            PATO_decreased_tonicity,

            // "A structural quality inhering in a cell or blood vessel or capillary by virtue of the bearer's being in a rigid state of fullness resulting from pressure of the contents against the wall or membrane."
            PATO_turgor,

            // "A turgor which is relatively low."
            PATO_decreased_turgor,

            // "A turgor which is relatively high."
            PATO_increased_turgor,

            // "A size quality inhering in a bearer by virtue of a part or parts of the bearer's being decreased in size due to reduction in tissue mass through wasting."
            PATO_atrophied,

            // "A functionality quality held by the bearer when the latter exhibits decreased ability to perform a regular function(s)."
            PATO_decreased_functionality,

            // "A functional quality held by the bearer when the latter exhibits increased ability to perform a regular function(s)."
            PATO_increased_functionality,

            // "A structural quality inhering in a bearer by virtue of whether the bearer has enough functionality."
            PATO_sufficiency,

            // "A wholeness quality inhering in a bearer by virtue of the bearer's has enough functionality."
            PATO_sufficient,

            // "A wholeness quality inhering in a bearer by virtue of the bearer's lacks enough functionality."
            PATO_insufficient,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being gathered or tending to gather into a mass or whole."
            PATO_aggregated,

            // "A positional quality inhering in a bearer by virtue of the bearer's being distributed or spread over a considerable extent."
            PATO_dispersed,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front of an organism relative to another entity."
            PATO_anterior_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear of an organism relative to another entity."
            PATO_posterior_to,

            // "A quality of a single physical entity inhering in a bearer by virtue of whether the bearer is essential or indispensable."
            PATO_necessity__continuant_,

            // "A necessity quality (continuant) inhering in a bearer by virtue of the bearer's being essential or indispensable."
            PATO_necessary__continuant_,

            // "A necessity quality (continuant) inhering in a bearer by virtue of the bearer's being non-essential or dispensable."
            PATO_unnecessary__continuant_,

            // "A quality of single process inhering in a bearer by virtue of whether the bearer is essential or indispensable."
            PATO_necessity_of_occurrent,

            // "A necessity quality inhering in a process by virtue of the bearer's being essential or indispensable."
            PATO_necessary__occurrent_,

            // "A necessity quality inhering in a process by virtue of the bearer's being non-essential or dispensable."
            PATO_unnecessary__occurrent_,

            // "A size quality inhering in a bearer by virtue of the bearer's having a short, stocky build."
            PATO_stubby,

            // "A quality inhering into a bearer by virtue of the bearer's extending out above or beyond its surface or boundary into the surface or boundary of another entity."
            PATO_protruding_into,

            // "A quality inhering into a bearer by virtue of the bearer's extending out above or beyond its surface or boundary and outwards in relation to the physical space occupied by another entity."
            PATO_protruding_out_of,

            // "An 1-D extent quality which is equal to the length of the closed curve of a circle."
            PATO_circumference,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the side."
            PATO_curved_lateral,

            // "A resistance to a stimulus which is relatively high."
            PATO_increased_resistance_to,

            // "A resistance to a stimulus which is relatively low."
            PATO_decreased_resistance_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's spatial positioning with respect to an additional entity."
            PATO_alignment,

            // "An alignment quality inhering in a bearer by virtue of the bearer's being in a proper spatial positioning with respect to an additional entity."
            PATO_aligned_with,

            // "An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning with respect to an additional entity."
            PATO_misaligned_with,

            // "A concentration quality inhering in a bearer by virtue of the bearer's amount of osmoles of solute per liter of solution."
            PATO_osmolarity,

            // "A osmolarity which is relatively low."
            PATO_decreased_osmolarity,

            // "A osmolarity which is relatively high."
            PATO_increased_osmolarity,

            // "A rotatiotion quality inhering in a bearer by virtue of being rotated towards the back or upper surface of an organism."
            PATO_dorsally_rotated,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the abdomen of an organism."
            PATO_ventrally_rotated,

            // "An action potential which is relatively low."
            PATO_decreased_action_potential_OBSOLETE,

            // "An action potential which is relatively high."
            PATO_increased_action_potential_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer's disposition to being damaged or destroyed."
            PATO_fragility,

            // "A solubility which is relatively high."
            PATO_increased_solubility,

            // "A solubility which is relatively low."
            PATO_decreased_solubility,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being located near a surface."
            PATO_superficial,

            // "An attachment quality inhering in a bearer by virtue of the bearer's connection or association with another entity."
            PATO_attached_to,

            // "A structural quality inhering in a bearer by virtue of the bearer's being in close proximity and physically interacting with another entity."
            PATO_associated_with,

            // "A susceptibility toward an external stimulus which is higher than normal/average."
            PATO_increased_susceptibility_toward,

            // "A susceptibility toward an external stimulus which is lower than normal/average."
            PATO_decreased_susceptibility_toward,

            // "A distribution which is relatively high."
            PATO_increased_distribution,

            // "A distribution which is relatively low."
            PATO_decreased_distribution,

            // "Structure quality that is the presence of closed epithelium bounded capsules containing one or more liquid or solid organism substances."
            PATO_cystic,

            // "A concentration quality inhering in a bearer by virtue of the bearer's catalytic activity divided by the volume of the system."
            PATO_catalytic__activity__concentration,

            // "An efficiency which is relatively low."
            PATO_decreased_efficiency,

            // "An efficiency which is relatively high."
            PATO_increased_efficiency,

            // "An efficiency quality inhering in a bearer by virtue of the bearer's lacking efficiency."
            PATO_inefficient,

            // "An efficiency quality inhering in a bearer by virtue of the bearer's having efficiency."
            PATO_efficient,

            // "A volume quality inhering in a mass of substance by virtue of the amount of 3-dimensional space it occupies."
            PATO_specific_volume,

            // "A volume quality inhering in a homogeneous substance containing 6.02 x 1023 atoms or molecules by virtue of the amount of 3-dimensional space it occupies."
            PATO_molar_volume,

            // "A physical quality that inheres in a homogeneous substance containing 6.02 x 1023 atoms or molecules."
            PATO_molar_mass,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to exert an attractive or repulsive force on other entities."
            PATO_magnetism,

            // "A magnetism which is relatively high."
            PATO_increased_magnetism,

            // "A magnetism which is relatively low."
            PATO_decreased_magnetism,

            // "A magnetic quality inhering in a bearer by virtue of the bearer's ability to exert magnitism."
            PATO_magnetic,

            // "A magnetic quality inhering in a bearer by virtue of the bearer's inability to exert magnitism."
            PATO_non_magnetic,

            // "A positional quality inhering in a bearer by virtue of the bearer's vertical distance of a point above or below a reference surface."
            PATO_elevation,

            // "An elevation which is relatively high."
            PATO_increased_elevation,

            // "An elevation which is relatively low."
            PATO_decreased_elevation,

            // "A contractility quality inhering in a bearer by virtue of the bearer's ability of contracting or being contracted."
            PATO_contractile,

            // "A contractility quality inhering in a bearer by virtue of the bearer's inability of contracting or being contracted."
            PATO_non_contractile,

            // "A viscosity which relatively high."
            PATO_increased_viscosity,

            // "A viscosity which relatively low."
            PATO_decreased_viscosity,

            // "A fecundity which is relatively high."
            PATO_increased_fecundity,

            // "A fecundity which is relatively low."
            PATO_decreased_fecundity,

            // "A photosensitivity which is relatively low."
            PATO_decreased_photosensitivity,

            // "A photosensitivity which is relatively high."
            PATO_increased_photosensitivity,

            // "A sleep pattern which has regular start and/or end times."
            PATO_regular_sleep_pattern,

            // "A sleep pattern which has irregular start and/or end times."
            PATO_irregular_sleep_pattern,

            // "A quality inhering in a bearer by virtue of the bearer's exhibiting complete growth, differentiation, or development."
            PATO_mature,

            // "A color consisting of violet hue and high saturation."
            PATO_saturated_violet,

            // "A color consisting of violet hue and low saturation."
            PATO_desaturated_violet,

            // "A color consisting of violet hue and high brightness."
            PATO_light_violet,

            // "A color consisting of violet hue and low brightness."
            PATO_dark_violet,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's disposition to lack activity."
            PATO_behavioural_inactive,

            // "A behavioral quality of a process inhering in a bearer by virtue of the bearer's exhibiting marked activity."
            PATO_behavioural_active,

            // "A size quality inhering in an bearer by virtue of the bearer's extension in one dimension."
            PATO_1_D_extent,

            // "A size quality inhering in an bearer by virtue of the bearer's extension in two dimensions."
            PATO_2_D_extent,

            // "A size quality inhering in an bearer by virtue of the bearer's extension in three dimensions."
            PATO_3_D_extent,

            // "An 1-D extent quality inhering in two-dimensional bearer by virtue of being equal to the distance around it."
            PATO_perimeter,

            // "A perimeter which is relatively high."
            PATO_increased_perimeter,

            // "A perimeter which is relatively low."
            PATO_decreased_perimeter,

            // "A diameter which is relatively large."
            PATO_increased_diameter,

            // "A diameter which is relatively small."
            PATO_decreased_diameter,

            // "A structural quality inhering in a bearer by virtue of the bearer's ability to withstand great strain without tearing or breaking."
            PATO_non_fragile,

            // "A radiation emitting quality which obtains by the intensity of the bearer emitted radiation."
            PATO_radiation_emitting_intensity_quality,

            // "A quality that exists by virtue of the luminous intensity per unit area projected in a given direction."
            PATO_luminance,

            // "A behavioral quality which holds by virtue of whether the bearer exhibits the ability to receive another agentitive entity."
            PATO_receptivity,

            // "A behavioral quality which holds by virtue of extent of the receptiveness of a female to male advances."
            PATO_female_receptivity,

            // "A behavioral quality which holds by virtue of extent of the receptiveness of a male to female advances."
            PATO_male_receptivity,

            // "A female receptivity which is relatively high."
            PATO_increased_female_receptivity,

            // "A female receptivity which is relatively low."
            PATO_decreased_female_receptivity,

            // "A male receptivity which is relatively high."
            PATO_increased_male_receptivity,

            // "A male receptivity which is relatively low."
            PATO_decreased_male_receptivity,

            // "A quality inhering in a bearer by virtue of the bearer's prevailing tendency, mood, or inclination."
            PATO_disposition,

            // "A disposition inhering in a multi-cellular organism."
            PATO_multi_cellular_organismal_disposition,

            // "An organismal quality inhering in a bearer by virtue of the bearer's disposition to lose an entitity by natural process."
            PATO_shedability,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to shed body parts."
            PATO_deciduous__generic_,

            // "A quality inhering in a plant by virtue of the bearer's disposition to shed foliage."
            PATO_deciduous__plant_,

            // "A quality inhering in a plant by virtue of the bearer's disposition to not shed any body part."
            PATO_non_deciduous__any_body_part_,

            // "A quality inhering in a plant by virtue of the bearer's disposition to retain foliage."
            PATO_evergreen__plant_,

            // "A quality inhering in a plant by virtue of the bearer's disposition to being between evergeen and deciduous."
            PATO_semi_deciduous_plant_,

            // "A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of liquids."
            PATO_liquid_configuration,

            // "A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of solids."
            PATO_solid_configuration,

            // "A physical quality inhering in a bearer by virtue of the bearer's parts having the arrangement which exhibits characteristics of gases."
            PATO_gaseus_configuration,

            // "A structural quality inhering in a bearer by virtue of the bearer's lacking physically interaction with another entity."
            PATO_dissociated_from,

            // "A quality that inheres in an bearer by virtue of how that bearer interacts with radiation."
            PATO_radiation_quality,

            // "A radiation quality inhering in a radioactive substance by virtue of its transformation (disintegration) rate."
            PATO_activity__of_a_radionuclide_,

            // "A radiation quality inhering in bearer by virtue of the bearer's exhibiting or being caused by radioactivity."
            PATO_radioactive,

            // "A radioactivity which is relatively low."
            PATO_increased_radioactivity,

            // "A radioactivity which is relatively high."
            PATO_decreased_radioactivity,

            // "A radiation quality inhering in a bearer by virtue of what the bearer receives as a result of being exposed to ionizing radiation."
            PATO_radiation_exposure,

            // "A radiation exposure quality inhering in a substance by virtue of the radiation energy \"deposited\" in a kilogram of a substance."
            PATO_radiation_absorbed_dose,

            // "A radiation exposure quality inhering in a tissue by virtue of the relation between the absorbed dose to the effective biological damage of the radiation to that tissue."
            PATO_radiation_equivalent_dose,

            // "A radiation exposure quality inhering in an organ by virtue of the multiplication of an equivalent dose to that organ multiplied by the tissue weighting factor for that organ."
            PATO_radiation_effective_dose,

            // "A shape quality in which a portion of the outermost boundary of an entity folds in space such that a portion that was originally convex is now concave."
            PATO_invaginated,

            // "A heterochronic growth quality inhering in an organism, structure, or group of organisms by virtue of the bearer's reduced growth."
            PATO_paedomorphic_growth,

            // "A paedomorphic growth quality which is due to a delayed onset."
            PATO_postdisplaced_growth,

            // "A paedomorphic growth quality which is due to an ealier offset."
            PATO_progenetic_growth,

            // "A heterochronic growth quality inhering in an organism, structure, or group of organisms by virtue of the bearer's increased growth."
            PATO_peramorphic_growth,

            // "A peramorphic growth quality which is due to an increased rate."
            PATO_accelerated_growth,

            // "A peramorphic growth quality which is due to an earlier onset."
            PATO_predisplaced_growth,

            // "A peramorphic growth quality which is due to a delayed offset."
            PATO_hypermorphic_growth,

            // "A conductivity quality inhering in a bearer by virtue of the bearer's disposition to spontaneous transfer of thermal energy from a region of higher temperature to a region of lower temperature."
            PATO_heat_conductivity,

            // "A conductivity quality inhering in a bearer by virtue of the bearer's ability to convey electricity."
            PATO_electrical_conductivity,

            // "A conductivity quality inhering in motor and sensory nerves by virtue of the bearer's ability to convey electricity."
            PATO_nerve_conductivity,

            // "A composition quality inhering in a bearer by virtue of the bearer's containing granules."
            PATO_granular,

            PATO_female_semi_fertile,

            PATO_male_semi_fertile,

            PATO_male_semi_sterile,

            PATO_female_semi_sterile,

            // "An age which is high relative to the normal or average."
            PATO_increased_age,

            // "An age which is low relative to the normal or average."
            PATO_decreased_age,

            // "A cellular quality inhering in a cell by virtue of its anisotropic intracellular organization."
            PATO_cellular_polarity_OBSOLETE,

            PATO_semi_fertile,

            // "A viability quality inhering in a bearer or a population by virtue of some of it's members' inability to survive to reproduce."
            PATO_semi_lethal__sensu_genetics_,

            // "A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along an axis."
            PATO_positional_polarity,

            // "A viability quality inhering in a population by virtue of some of it's members' ability to survive."
            PATO_semi_viable,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being extended on all sides of another entity simultaneously."
            PATO_surrounding,

            // "A quality inhering in a bearer by virtue of the bearer's having only one phase or stage."
            PATO_monophasic,

            // "A quality inhering in a bearer by virtue of the bearer's having or existing in many phases."
            PATO_polyphasic,

            // "A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the dorsal-ventral axis."
            PATO_dorsal_ventral_polarity,

            // "A flexibility which is relatively high."
            PATO_increased_flexibility,

            // "A flexibility which is relatively low."
            PATO_decreased_flexibility,

            // "A strength which is relatively high."
            PATO_increased_strength,

            // "A strength which is relatively low."
            PATO_decreased_strength,

            // "A size quality inhering in a bearer by virtue of the bearer's being abnormally developed, usually due to malnutrition."
            PATO_dystrophic,

            // "A thickness quality which lacks pattern."
            PATO_irregular_thickness,

            // "An intensity which is relatively high."
            PATO_increased_intensity,

            // "An intensity which is relatively low."
            PATO_decreased_intensity,

            // "A branched quality inhering in a bearer by virtue of the bearer's being divided into two branches."
            PATO_bifurcated,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outward."
            PATO_splayed,

            // "A shape quality inhering in a bearer by virtue of the bearer's being divided or broken up into parts or divisions."
            PATO_split,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved around an axis."
            PATO_rotational_curvature,

            // "A density which is higher relative to the normal or average."
            PATO_increased_mass_density,

            // "A curvature quality inhering in a bearer by virtue of the bearer's having a shape resembling a dome."
            PATO_domed,

            // "A density which is lower relative to the normal or average."
            PATO_decreased_mass_density,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being confined or restricted to multiple locations."
            PATO_multi_localised,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located on left side of from the a another entity."
            PATO_left_side_of,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located on right side of a another entity."
            PATO_right_side_of,

            // "A shape quality inhering in a bearer by virtue of the bearer's being wound in a continuous series of loops."
            PATO_coiling,

            // "A coiling which is relatively high."
            PATO_increased_coiling,

            // "A coiling which is relatively low."
            PATO_decreased_coiling,

            // "A shape quality inhering in a bearer by virtue of the bearer's having multiple angles in its length."
            PATO_kinked,

            // "A shape quality inhering in a bearer by virtue of the bearer's exhibiting disturbance of its smoothness or regularity."
            PATO_ruffled,

            // "A composition quality inhering in an bearer by virtue of the quantities or relative ratios of water of the inhering entity."
            PATO_water_composition,

            // "A composition quality inhering in an bearer by virtue of the reduction in amount of water the bearer contains."
            PATO_decreased_water_composition,

            // "A pattern quality inhering in a bearer by virtue of the bearer's not being compact or dense in arrangement."
            PATO_loose,

            // "A photosensitivity quality inhering in a bearer by virtue of the bearer's disposition to being susceptible to damage by light."
            PATO_phototoxic,

            // "A texture quality inhering in a bearer by virtue of the bearer's being covered or partially covered with scales."
            PATO_scaly,

            // "A texture quality inhering in a bearer by virtue of the bearer's formed or tending to form flakes or thin, crisp fragments."
            PATO_flaky,

            // "A sensitivity quality inhering in a bearer by virtue of the bearer's exposure to radiation."
            PATO_sensitivity_to_irradiation,

            // "A sensitivity to irradiation which is relatively low."
            PATO_decreased_sensitivity_to_irradiation,

            // "A sensitivity to irradiation which is relatively high."
            PATO_increased_sensitivity_to_irradiation,

            // "A pattern quality inhering in a bearer by virtue of the bearer's being compact or dense in arrangement."
            PATO_tight,

            // "A grooved texture quality inhering in a bearer by virtue of the bearer's being marked by one or more creases in a normally smooth surface."
            PATO_wrinkled,

            // "A relaxation which is relatively high."
            PATO_increased_relaxation_OBSOLETE,

            // "A relaxation which is relatively low."
            PATO_decreased_relaxation_OBSOLETE,

            // "A structural quality inhering in a bearer by virtue of the bearer's lack elastic tension that facilitate response to stimuli."
            PATO_atonicity,

            // "A structural quality inhering in a bearer by virtue of the bearer's impaired elastic tension that facilitate response to stimuli."
            PATO_dystonicity,

            // "A strength quality inhering in a bearer by virtue of the bearer's disposition to lose strength."
            PATO_fatigability,

            // "A fatigability which is relatively high."
            PATO_increased_fatigability,

            // "A fatigability which is relatively low."
            PATO_decreased_fatigability,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's increasing over time."
            PATO_progressive,

            // "A morphological quality inhering in a bearer by virtue of the bearer's absence or closure of a normal body orifice or tubular passage."
            PATO_atretic,

            // "A structural quality inhering in a bearer by virtue of the bearer's having no opening."
            PATO_imperforate,

            // "A quality inhering in a bearer by virtue of whether the bearer's being covered by a liquid."
            PATO_wetness,

            // "A wetness quality inhering in a bearer by virtue of the bearer's being covered by a liquid."
            PATO_wet,

            // "A wetness quality inhering in a bearer by virtue of the bearer's not being covered by a liquid."
            PATO_dry,

            // "A wetness quality that is relatively high."
            PATO_increased_wetness,

            // "A wetness quality that is relatively low."
            PATO_decreased_wetness,

            // "A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of one sex and external sexual characteristics of the other sex."
            PATO_pseudohermaphrodite,

            // "A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of male and external sexual characteristics of female."
            PATO_male_pseudohermaphrodite,

            // "A biological sex quality inhering in an individual or a population by virtue of having internal reproductive organs of female and external sexual characteristics of male."
            PATO_female_pseudohermaphrodite,

            // "A female fertility which is relatively low."
            PATO_decreased_female_fertility,

            // "A female fertility which is relatively high."
            PATO_increased_female_fertility,

            // "A male fertility which is relatively high."
            PATO_increased_male_fertility,

            // "A male fertility which is relatively low."
            PATO_decreased_male_fertility,

            // "A fertility which is relatively low."
            PATO_decreased_fertility,

            // "A fertility which is relatively high."
            PATO_increased_fertility,

            // "A structural quality inhering in a bearer with some kind of aperture or opening that is blocked or clogged."
            PATO_congested,

            // "A flow that is relatively low."
            PATO_decreased_fluid_flow,

            // "A fluid flow that is relatively high."
            PATO_increased_fluid_flow,

            // "An intensity which is characterized by temporary abatement in severity."
            PATO_remittent_intensity,

            // "A concentration quality inhering in a bearer by virtue of the bearer's containing acid (hydrogen ions)."
            PATO_acidity,

            // "An acidity which is relatively low."
            PATO_decreased_acidity,

            // "An acidity which is relatively high."
            PATO_increased_acidity,

            // "A rhythm quality inhering in a bearer by virtue of the bearer's lacking rhythm lacking pattern."
            PATO_irregular_rhythm,

            // "A structural quality inhering in a bearer by virtue of the bearer's being entwined and difficult to unravel."
            PATO_tangled,

            // "A structural quality inhering in a bearer by virtue of the bearer's being drawn together, compressed or squeezed physically."
            PATO_constricted,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved asymmetrically."
            PATO_asymmetrically_curved,

            // "A texture quality inhering in a bearer by virtue of a portion of the bearer's surface being scraped away."
            PATO_abrased,

            // "A structural quality inhering in a bearer by virtue of the bearer's being fibrous tissue that replaces normal tissue destroyed by injury or disease."
            PATO_scarred,

            // "A structure quality inhering in a bearer by virtue of the bearer's exhibiting transient abnormal enlargement, not due to cell proliferation."
            PATO_swollen,

            // "A positional quality inhering in a bearer by virtue of the bearer's being out of its usual or proper place, or position."
            PATO_dislocated,

            // "A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of cerebral spinal fluid."
            PATO_hydrocephalic,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being situated at right angles to the horizon."
            PATO_vertical,

            // "A positional quality inhering in a bearer by virtue of the bearer's being in the plane of the horizon."
            PATO_horizontal,

            // "An oriented quality inhering in a bearer by virtue of the bearer's being turned inward upon itself."
            PATO_introverted,

            // "A shape quality in a bearer by virtue of the bearer's curving inward."
            PATO_concave,

            // "A functionality quality inhering in a bearer by virtue of being not completely paralysed."
            PATO_partially_paralysed,

            // "A coordination which is relatively high."
            PATO_increased_coordination,

            // "A coordination which is relatively low."
            PATO_decreased_coordination,

            // "A structural quality inhering in a bearer by virtue of the bearer's forming a bundle of aligned anatomical fibers, as of muscle or nerve."
            PATO_fasciculated,

            // "A fertility quality inhering in a bearer by virtue of the bearer's disposition to make its offspring sterile."
            PATO_lack_of_fertility_in_offspring,

            // "A duration quality of a process inhering in a bearer by virtue of the bearer's having slow progressive course of indefinite duration."
            PATO_chronic,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's having a quadric surface in three dimensions obtained by rotating an ellipse about one of its principal axes. Includes spheres and oblate/prolate spheroids."
            PATO_spheroid,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a polar diameter longer than its equatorial diameter."
            PATO_prolate,

            // "A shape quality inhering in a bearer by virtue of it being a quadrilateral polygon in which all four angles are right angles."
            PATO_rectangular,

            // "A fluorescence quality inhering in a bearer by virtue of the bearer's exhibiting fluorescence which is self-induced."
            PATO_autofluorescence,

            // "A quality inhering in a bearer by virtue of the bearer's being abnormal and having a destructive effect on living tissue."
            PATO_pathological,

            // "A shape quality inhering in a circular disk by virtue of the bearer's having a segment of another circle removed from its edge, so that what remains is a shape enclosed by two circular arcs of different diameters which intersect at two points (usually in such a manner that the enclosed shape does not include the center of the original circle)."
            PATO_crescent_shaped,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having the shape of a kidney."
            PATO_reniform,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resemblance to a cube (a 3-D shape with a square cross section)."
            PATO_cuboid,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's exhibiting a consistently-sized round cross section."
            PATO_cylindrical,

            // "A shape quality inhering in a bearer by virtue of the bearer's being cylindrical, in which the height is less than the diameter."
            PATO_discoid,

            // "A shape quality inhering in a bearer by virtue of the bearer's having three angles."
            PATO_triangular,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having two parts, roughly spherical and of equal size, connected by a bar."
            PATO_dumbbell_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's being shaped like a lance-head, considerably longer than wide, tapering towards the tip from below the middle; attached at the broad end."
            PATO_lanceolate,

            // "A shape quality inhering in a bearer by virtue of the bearer's consisting of two curves, in opposite directions. S-shaped."
            PATO_sigmoid,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter U."
            PATO_U_shaped,

            // "A quality inhering in a bearer by virtue of the bearer's having a tail or tail-like projection."
            PATO_caudate,

            // "A shape quality inhering in a bearer by virtue of the bearer's forming two equal obtuse triangles with a short side in common."
            PATO_arrow_shaped,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a slug."
            PATO_limaciform,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's gradually becoming thicker towards the end."
            PATO_clavate,

            // "A physical quality inhering in a bearer by virtue the bearer's disposition to being water-repellent; tending to repel and not absorb water."
            PATO_hydrophobicity,

            // "A quality inhering in a bearer by virtue of the bearer's lacking affinity for water; tending to repel and not absorb water; tending not to dissolve in or mix with or be wetted by water."
            PATO_hydrophobic,

            // "A physical quality inhering in a bearer by virtue the bearer's disposition to having an affinity for water; it is readily absorbing or dissolving in water."
            PATO_hydrophilicity,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to having a strong affinity for water; tending to dissolve in, mix with, or be wetted by water."
            PATO_hydrophilic,

            // "A quality of a liquid inhering in a bearer by virtue of the bearer's ability to mix with (dissolve in) another liquid."
            PATO_miscibility,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having the border, edge, or outline cut into a series of segments of circles resembling a scallop-shell."
            PATO_scalloped,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being divided into three branches."
            PATO_tripartite,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a continuous convex surface with an axis of symmetry and one axis longer than the other; egg-shaped."
            PATO_ovate,

            // "An odor quality of having decreased odor."
            PATO_decreased_odor,

            // "An odor quality of having increased odor."
            PATO_increased_odor,

            PATO_phenotypic_sex,

            // "A biological sex quality inhering in an individual or a population that undergo sexual reproduction."
            PATO_mating_type,

            // "A structure quality inhering in a bearer by virtue of the bearer's lacking of a three dimensional space surrounded by one or more anatomical structures and containing one or more anatomical substances."
            PATO_unlumenized,

            // "A structure quality inhering in a bearer by virtue of the bearer's having a three dimensional space surrounded by one or more anatomical structures and containing one or more anatomical substances."
            PATO_lumenized,

            // "A circumference which is relatively high."
            PATO_increased_circumference,

            // "A circumference which is relatively low."
            PATO_decreased_circumference,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the south when it faces north."
            PATO_front,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction that is similar to the direction of an object to the north when it faces south."
            PATO_back,

            // "A directional quality inhering in a bearer by virtue of the bearer's having one direction only."
            PATO_unidirectional,

            // "A directional quality inhering in a bearer by virtue of the bearer's having two directions."
            PATO_bi_directional,

            // "A directional quality inhering in a bearer by virtue of the bearer's direction approximating the shape of a circle."
            PATO_circling_direction,

            // "The bearer of this quality has_part = n, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part."
            PATO_has_normal_numbers_of_parts_of_type,

            // "A physical quality inhering in a bearer by virtue of the bearer's participation in movement."
            PATO_movement_quality,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's being like the surface of a compact mass of grapes."
            PATO_botryoidal,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having more than one nucleus."
            PATO_multinucleate,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having three nuclei."
            PATO_trinucleate,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's one part being layered over another connected part."
            PATO_folded,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's exhibiting movement in a circular course."
            PATO_circling,

            // "A quality of a single process inhering in a bearer by virtue of the state of bearer's mechanical, physical, and biochemical processes."
            PATO_physiological_state,

            // "A physiological state which is characterized by periods of high-frequency high amplitude electrical activity in neuronal tissue."
            PATO_ictal,

            // "A physiological state which is characterized by normal electrical activity in neuronal tissue."
            PATO_non_ictal,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front and upper surface of an organism relative to another entity."
            PATO_anterodorsal_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and upper surface of an organism relative to another entity."
            PATO_posterodorsal_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the front and abdomen of an organism relative to another entity."
            PATO_anteroventral_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and abdomen of an organism relative to another entity."
            PATO_posteroventral_to,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the back or upper surface of an organism."
            PATO_mislocalised_dorsally,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the abdomen of an organism."
            PATO_mislocalised_ventrally,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the front of an organism."
            PATO_mislocalised_anteriorly,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the rear of an organism."
            PATO_mislocalised_posteriorly,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the side of an organism."
            PATO_mislocalised_laterally,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the middle of an organism."
            PATO_mislocalised_medially,

            // "A surface shape quality inhering in a bearer by virtue of the bearer's shape of features present on its surface or outer shell."
            PATO_surface_feature_shape,

            // "A fluorescence which is higher than normal."
            PATO_increased_fluorescence,

            // "A fluorescence which is lower than normal."
            PATO_decreased_fluorescence,

            // "A texture quality inhering in a bearer by virtue of a local accumulation of fluid underneath the surface of the bearer."
            PATO_blistered,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits shape variation or change."
            PATO_variability_of_shape,

            // "A quality inhering in a bearer by virtue the bearer's having or exhibiting variation its shape."
            PATO_variant_shape,

            // "A quality inhering in a bearer by virtue of the bearer's lacking or not exhibiting variation of shape."
            PATO_invariant_shape,

            // "A pattern quality inhering in a bearer by virtue of the bearer's being placed alternately one above the other."
            PATO_alternate_placement,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned on opposite sides on the same plane."
            PATO_opposite,

            // "A shape quality inhering in a bearer by virtue of the bearer's being perfectly circular."
            PATO_orbicular,

            // "A shape quality inhering in a bearer by virtue of the bearer's being roundish, a little inclining to be oblong."
            PATO_obtuse,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's being egg-shaped and flat, with the narrow end attached to the base."
            PATO_obovate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being oblong, with the lower end very much attenuated."
            PATO_spatulate,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's being oval and a little angular in the middle."
            PATO_rhomboid,

            // "A size quality inhering in a bearer by virtue of the bearer's being many folds greater relative to the normal average."
            PATO_gigantic,

            // "A color consisting of yellow and green hues."
            PATO_yellow_green,

            // "A color consisting of brown and green hues."
            PATO_brown_green,

            // "A purple color which has low saturation and low brightness."
            PATO_lilac,

            // "A color consisting of yellow and orange hue."
            PATO_yellow_orange,

            // "A moderate yellow-orange to orange color."
            PATO_ochre,

            // "A color pattern inhering in a bearer by virtue of bearer's exhibiting transverse stripes of one hue or degree of saturation crossing another."
            PATO_banded,

            // "A color pattern inhering in a bearer by virtue of bearer's being covered with reticulated lines of a different hue or degree of saturation."
            PATO_netted,

            // "A grooved texture quality inhering in a bearer by virtue of the bearer's being marked by two or more parallel channels."
            PATO_furrowed,

            // "A shape quality inhering in a bearer by virtue of the bearer's terminating abruptly in a little point."
            PATO_pointleted,

            // "A shape quality inhering in a bearer by virtue of the bearer's terminating gradually in a rounded end."
            PATO_blunt,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's being in opposition round a common axis."
            PATO_whorled,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being arranged in two opposite rows (and hence in the same plane)."
            PATO_distichous,

            // "A pattern quality inhering in a bearer by virtue of the bearer's consisting of paired parts that alternately cross each other."
            PATO_decussate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being linear, very narrow, tapering to a very fine point from a narrow base."
            PATO_subulate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being narrowly triangular, wider at the apex and tapering toward the base."
            PATO_cuneate,

            // "A variability quality inhering in a bearer by virtue of whether the bearer exhibits size variation or change."
            PATO_variability_of_size,

            // "A variability of size which is relatively low."
            PATO_decreased_variability_of_size,

            // "A variability of size which is relatively high."
            PATO_increased_variability_of_size,

            // "A structural quality inhering in a bearer by virtue of the bearer's in which bundles of aligned anatomical fibers have become separated."
            PATO_defasciculated,

            // "A shape quality inhering in a bearer by virtue of the bearer's parts or projections being interlocked; for example, the fingers of two hands that are clasped."
            PATO_interdigitated,

            // "A structural quality inhering in a bearer by virtue of the bearer's touching another entity."
            PATO_in_contact_with,

            // "A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled inwards spirally on each side."
            PATO_involute,

            // "A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled backwards spirally on each side."
            PATO_revolute,

            // "A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being rolled spirally downwards."
            PATO_circinate,

            // "A curled quality inhering in a bearer by virtue of the bearer's edges of its surface being bent down upon their stalk."
            PATO_reclinate,

            // "A curled quality inhering in a bearer by virtue of the bearer's one edge of its surface being wholly rolled up in another."
            PATO_convolute,

            // "A branched quality inhering in a bearer by virtue of the bearer's having three or more primary branches diverging radially from a single point."
            PATO_actinodromous,

            // "A branched quality inhering in a bearer by virtue of the bearer's having two or more parallel primary branches originate beside each other and converge apically."
            PATO_parallelodromous,

            // "A branched quality inhering in a bearer by virtue of the bearer's having secondary branches terminating at the margin."
            PATO_craspedodromous,

            // "A branched quality inhering in a bearer by virtue of the bearer's having secondary branches joined together in a series of prominent arches."
            PATO_brochidodromous,

            // "A branched quality inhering in a bearer by virtue of the bearer's having secondary branches freely branching toward the margin."
            PATO_cladodromous,

            // "A branched quality inhering in a bearer by virtue of the bearer's having secondary branches branching into a reticulum toward the margin."
            PATO_reticulodromous,

            // "A shape quality inhering in a bearer by virtue of the bearer's being tapering gradually into a rigid point."
            PATO_cuspidate,

            // "A shape quality inhering in a bearer by virtue of the bearer's terminating in a round end, the centre of which is depressed."
            PATO_retuse,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's lacking sharp straight-edged teeth pointing to the apex."
            PATO_unserrated,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's having or lacking sharp straight-edged teeth pointing to the apex."
            PATO_serration,

            // "A shape quality inhering in a bearer by virtue of the bearer's having at least one salient angle on the margin."
            PATO_angular,

            // "A shape quality inhering in a bearer by virtue of the bearer's being regularly divided by deep incisions."
            PATO_cut,

            // "A shape quality inhering in a bearer by virtue of the bearer's being partly divided into a determinate number of regions."
            PATO_lobed,

            // "A shape quality inhering in a bearer by virtue of the bearer's having distinct parts arising from a common point or center."
            PATO_digitate,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a shape resembling an ear."
            PATO_auriculate,

            // "A shape quality inhering in a bearer by virtue of the bearer's gradually tapering to a slender point."
            PATO_attenuate,

            // "A structural quality inhering in a bearer by virtue of the bearer's two basal lobes being united together."
            PATO_perfoliate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being prolonged below the point of insertion."
            PATO_decurrent,

            // "A quality inhering in a bearer by virtue of the bearer's being kept below its freezing point."
            PATO_frozen,

            // "A quality inhering in a bearer by virtue of the bearer's passing into solution."
            PATO_dissolved,

            // "A structural quality inhering in a bearer by virtue of the bearer's having a three dimensional cavity with a narrow or no opening, and often containing an anatomical substance."
            PATO_saccular,

            // "A shape quality inhering in a bearer by virtue of the bearer's having four angles and four sides."
            PATO_quadrangular,

            // "A curvature quality inhering in a bearer by virtue of the bearer's having many curves and turns."
            PATO_sinuous,

            // "A duration quality of a process inhering in a disease by virtue of the bearer's duration of an impairment of health or of a condition of abnormal functioning."
            PATO_duration_of_disease,

            // "A quality inhering in a bearer by virtue of the bearer's disposition to being capable of indefinite growth or division."
            PATO_immortal,

            // "An organismal quality inhering in a bearer by virtue of the bearer's consisting cells."
            PATO_cellularity,

            // "A cellularity quality inhering in a bearer by virtue of the bearer's consisting of more than one cell."
            PATO_multicellular,

            // "A cellularity quality inhering in a bearer by virtue of the bearer's consisting of exactly one cell."
            PATO_unicellular,

            // "A quality that inheres in an entire organism or part of an organism."
            PATO_organismal_quality,

            // "An amount which is relatively low."
            PATO_present_in_fewer_numbers_in_organism,

            // "A quality inhering in a bearer by virtue of its visibility."
            PATO_conspicuousness,

            // "The bearer of this quality has_part < n of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part. Formally: If a bearer entity e has fewer parts of type X at time t, then the number of instances x of X at t such that x part_of e is < n, where n is either the normal number for comparable entities, or n is stated explicitly. This case includes the limit case, where the bearer lacks all parts of the specified type."
            PATO_lacks_parts_or_has_fewer_parts_of_type,

            // "A quality of physical entities inhering in a bearer by virtue of the bearer's lacking a physical part as specified by the additional entity."
            PATO_lacks_all_parts_of_type,

            // "The bearer of this quality has_part < n AND has_part > 0 of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part. Formally: If a bearer entity e has fewer parts of type X at time t, then the number of instances x of X at t such that x part_of e is < n, where n is either the normal number for comparable entities, or n is stated explicitly."
            PATO_has_fewer_parts_of_type,

            // "The bearer of this quality has_part > n of the indicated entity type, where n is the normal amount for a comparable organism. Note that the bearer of the quality is the whole, not the part."
            PATO_has_extra_parts_of_type,

            // "A quality that inheres in an entire population or part of a population."
            PATO_population_quality,

            // "A shape that inheres in a part of a surface. An object can have different surface shapes on different parts of its surface."
            PATO_surface_shape_OBSOLETE,

            // "Surface shape that refers to the inward or outward curvature of the surface."
            PATO_concavity,

            // "A shape that inheres in a 2 dimensional entity, such as a cross section or projection of a 3 dimensional entity."
            PATO_2_D_shape,

            // "A complete three dimensional shape in which for every line connecting pair of points on the object is within the object. Or: a shape lacking cavities. Contrast: concave."
            PATO_convex_3_D_shape,

            // "A complete three dimensional shape in which there is a line connecting pair of points on the object that lies outside the object. Or: a shape with cavities. Contrast: concave."
            PATO_concave_3_D_shape,

            // "A shape quality inhering in a bearer by virtue of the degree to which there are subdivisions or offshoots in a bearer entity."
            PATO_branchiness,

            // "A texture quality inhering in a bearer by virtue of the bearer's bing full of small openings or gaps."
            PATO_looseness,

            // "A structural quality which is held by a bearer when the latter's disposition the presence of abnormally proliferating masses of cells."
            PATO_neoplastic,

            // "A texture quality that exists through a liquid cover on the surface of the bearer."
            PATO_coating,

            // "A structural quality inhering in a bearer by virtue of whether the bearer forms a bundle of anatomical fibers, as of muscle or nerve."
            PATO_fasciculation,

            // "A structural quality that inheres in a bearer by virtue of the bearer's containing hollow areas."
            PATO_structure__cavities,

            PATO_magnitude,

            PATO_increased_magnitude,

            PATO_decreased_magnitude,

            // "A growth quality of occurrent in which the growth of an organism, structure or group of organisms does not occur."
            PATO_aplastic_growth,

            // "Pink color having high brightness and low saturation."
            PATO_pale_pink,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a cone (a 3-D shape with a round cross section that tapers)."
            PATO_conical,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a minute projection (villus)."
            PATO_villiform,

            // "A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along an apical-basal axis."
            PATO_apical_basal_polarity,

            // "A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the anterior-posterior axis."
            PATO_anterior_posterior_polarity,

            // "A convex angle that is formed by one side of a polygon and a line extended from an adjacent side."
            PATO_external_angle,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's not increasing over time."
            PATO_non_progressive,

            // "A concentration quality inhering in a bearer by virtue of the bearer's amount of osmoles of solute per kilogram of solvent."
            PATO_osmolality,

            // "An osmolality which is relatively low."
            PATO_decreased_osmolality,

            // "An osmolality which is relatively high."
            PATO_increased_osmolality,

            // "A molecular quality that inheres in a molecular entity by virtue of whether the bearer exhibits the ability of a probe to react precisely with a specific target molecule."
            PATO_specificity_to,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved or tilted such that the tip points upwards."
            PATO_upturned,

            // "A reflectivity quality inhering in light by virtue of the bearer's scattering occurring at small angle to the incident beam."
            PATO_forward_scatter,

            // "A reflective quality that is the light scattering occurring at wide angle (around 90 degrees) to the incident beam."
            PATO_side_scatter,

            // "A shape quality inhering in a bearer by virtue of the bearer's being unseparated into parts or divisions."
            PATO_undivided,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being on the same side in relation to another structure."
            PATO_ipsilateral_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located towards the central axis of the organism or an extremity."
            PATO_axial_to,

            // "A structural quality inhering in a bearer by virtue of the bearer exhibiting deterioration of its structure."
            PATO_degeneration,

            // "A structural quality inhering in a bearer whose structure which does not deteriorate."
            PATO_non_degenerate,

            // "A concave quality inhering in a bearer by virtue of the bearer's curving inward on both sides or surfaces."
            PATO_biconcave,

            // "A shape quality inhering in a bearer by virtue of the bearer's being convex on both sides or surface."
            PATO_biconvex,

            // "A diameter that is along the anterior-posterior axis."
            PATO_anterior_posterior_diameter,

            // "An anterior-posterior diameter quality which is relatively small."
            PATO_decreased_anterior_posterior_diameter,

            // "An anterior-posterior diameter quality which is relatively large."
            PATO_increased_anterior_posterior_diameter,

            // "A shape quality inhering in a bearer by virtue of the bearer's being a quadrilateral with two parallel sides."
            PATO_trapezoid,

            // "A branched quality inhering in a bearer by virtue of the bearer's having smaller branches arising from larger branches. Resembling a tree in branching structure."
            PATO_dendritic,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being away from or on the opposite side of the central axis."
            PATO_abaxial_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located on the side nearest to the axis of an organ or organism."
            PATO_adaxial_to,

            // "An organismal quality inhering in a bearer by virtue of the bearer's having two or more cell populations that differ in genetic makeup. This situation can affect any type of cell, including blood cells, gametes (egg and sperm cells), and skin."
            PATO_mosaicism,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved around an axis and towards the side."
            PATO_lateral_and_rotional_curvature,

            // "An amount which normal."
            PATO_present_in_normal_numbers_in_organism,

            // "An occurrence which is relatively high."
            PATO_increased_occurrence,

            // "An occurrence which is relatively low."
            PATO_decreased_occurrence,

            // "A quality inhering in a bearer by virtue of the bearer's being flattened along dorso-ventral axis."
            PATO_dorso_ventrally_flattened,

            // "A quality inhering in a bearer by virtue of the bearer's being flattened along transverse axis."
            PATO_laterally_compressed,

            // "A fragility which is relatively high."
            PATO_increased_fragility,

            // "A fragility which is relatively low."
            PATO_decreased_fragility,

            // "An area which is relatively high."
            PATO_increased_area,

            // "An area which is relatively low."
            PATO_decreased_area,

            // "The specific wavelength of light emitted by a fluorescent molecule, such as a labelled probe, upon absorption of light at the (higher) excitation wavelength."
            PATO_emmision_wavelength,

            // "The specific wavelength of radiation that can be retained by a bearer."
            PATO_absorption_wavelength,

            PATO_physical_quality_of_a_process,

            // "A shape inhering in a bearer by virtue of the bearer's being elongated and cylindrical."
            PATO_columnar,

            // "A shape quality inhering in a bearer by virtue of the bearer's delimited by a surface with holes."
            PATO_fenestrated,

            // "A shape quality inhering in a bearer by virtue of the bearer's being arranged like rays or radii; radiating from a common center."
            PATO_star_shaped,

            // "A solid configuration inhering in a material entity by virtue of its constituent atoms, molecules, or ions being arranged in an orderly repeating pattern extending in all three spatial dimensions."
            PATO_crystal_configuration,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's layered configuration."
            PATO_stratification,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's exhibiting a layered configuration."
            PATO_stratified,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's lacking a layered configuration."
            PATO_unstratified,

            // "A molecular quality that arises from the molecular attraction exerted between two atoms or compounds."
            PATO_affinity,

            // "An affinity which is relatively high."
            PATO_increased_affinity,

            // "An affinity which is relatively low."
            PATO_decreased_affinity,

            // "A molecular quality that arises from the synergistic strength of bond affinities between multiple bond interactions."
            PATO_avidity,

            // "An avidity which is relatively high."
            PATO_increased_avidity,

            // "An avidity which is relatively low."
            PATO_decreased_avidity,

            // "A behavioral quality inhering in a bearer by virtue of the bearer's movement."
            PATO_movement_behavioral_quality,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being positioned with multiple entities of the same type above and below."
            PATO_stacked,

            // "A quality inhering in a bearer by virtue of the bearer's having an empty space or cavity within."
            PATO_hollow,

            // "A broken quality inhering in a bearer by virtue of the bearer's being seperated into two contiguous wholes."
            PATO_broken_into_two_pieces,

            // "A broken quality inhering in a bearer by virtue of the bearer's being broken into multiple contiguous wholes."
            PATO_shattered,

            // "A broken quality inhering in a bearer by virtue of the bearer's being still one contiguous whole but structurally damaged such that in danger of become two or more."
            PATO_partially_broken,

            // "Having extra or fewer parts."
            PATO_altered_number_of,

            // "The period after death of the organism."
            PATO_post_mortem_OBSOLETE,

            // "The period before death of the organism."
            PATO_pre_mortem_OBSOLETE,

            // "A quality inhering in a bearer by virtue of the bearer's being short and wide and tapered distally."
            PATO_bullet_shaped,

            // "A structure quality inhering in a bearer by virtue of the bearer's body consisting of one sac."
            PATO_monocystic,

            // "A structure quality inhering in a bearer by virtue of the bearer's body containing more than one cyst - formations of an epithelium bounded cavity not associated with neoplasia."
            PATO_polycystic,

            // "A morphology quality inhering in a tumour by virtue of the bearer's exhbiting the morphological characteristics of a glandular epithelial cell."
            PATO_adenomatous,

            // "A quality of a single process inhering in a bearer by virtue of the bearer's having an onset and time course between acute and chronic."
            PATO_subacute,

            // "A morphology quality inhering in a neoplastic cell by virtue of the bearer's exhibiting breakdown of cell-cell interaction maintaining tissue architecture, proliferative dysregulation and bizarre modification to nucleus size and shape."
            PATO_anaplastic,

            // "A volume quality inhering in a degenerating cell by virtue of the bearer's exhibiting an increase in volume associated with cytoplasmic abnormalities."
            PATO_ballooning,

            // "An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for basic dyes under specific ph conditions."
            PATO_basophilic,

            // "A disposition inhering in a tumour to progress or fail to progress during it's life time."
            PATO_neoplasm_disposition_OBSOLETE,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition not to progress, invade surrounding tissues or metastasize."
            PATO_neoplastic__non_malignant,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition to progress, invade surrounding tissues or metastasize."
            PATO_neoplastic__malignant,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition to spread and invade distant tissues."
            PATO_neoplastic__metastatic,

            // "A cellular quality inhering in a bearer by virtue of its stable specialization to a particular cell type."
            PATO_differentiated,

            // "A cellular quality inhering in a bearer by virtue of having not yet acquired a special structure of function."
            PATO_undifferentiated,

            // "A cellular quality inhering in a bearer by virtue of having changed from one fully differentiated state into another."
            PATO_metaplastic,

            // "A cellular quality inhering in a cell that arises by virtue of whether the bearer exhibits the ability to grow and proliferate in number through cell division."
            PATO_proliferative,

            // "A structural quality inhering in a bearer by virtue of the bearer's penetrating or permeating another substance or area."
            PATO_infiltrative,

            // "A compositional quality inhering in an bearer by virtue of the bearer's infiltration by leukocytes, local edema and accumulation of plasma proteins."
            PATO_inflammatory,

            // "A structural quality inhering in a bearer by virtue of the bearer's exhibiting excessive discharge of blood from the blood vessels."
            PATO_hemorrhagic,

            // "A cellular quality inhering in a bearer by virtue of its lacking most of the cellular characteristics which would allow it to be fully differentiated."
            PATO_poorly_differentiated,

            // "A positional quality inhering in a bearer by virtue of the bearer's being at the edge or boundary of a related entity."
            PATO_peripheral,

            // "A quality inhering in a bearer by virtue of the bearer's resembling small nipple like projection."
            PATO_papillary,

            // "A structural quality inhering in a bearer by virtue of the bearer's resembling cheese."
            PATO_caseous,

            // "A cellular quality inhering in a bearer by virtue of its having most of the cellular characteristics of the tissue of origin."
            PATO_well_differentiated,

            // "A cellular quality inhering in a bearer by virtue of its lacking few of the cellular characteristics which would allow it to be fully differentiated."
            PATO_moderately_well_differentiated,

            // "A structural quality inhering in a bearer by virtue of the bearer's having a hole or holes, especially a row or array of small holes."
            PATO_perforate,

            // "Perforated like a sieve."
            PATO_cribriform,

            // "A composition quality inhering in a bearer by virtue of the bearer's containing excess lipid."
            PATO_fatty,

            // "A composition quality inhering in a bearer by virtue of the bearer's containing fibrin."
            PATO_fibrinoid,

            // "A composition quality inhering in exudate by virtue of the bearer's containing fibrin."
            PATO_fibrinopurulent,

            // "A morphology quality inhering in a bearer by virtue of the bearer's exhbiting the morphological characteristics of a gland."
            PATO_glandular,

            // "A quality inhering in a bearer by virtue of the bearer's being present in more than two copies."
            PATO_multiple,

            // "A structural quality which is held by a bearer when the latter exhibits an excessive accumulation of intracellular fluid."
            PATO_hydropic,

            // "A quality inhering a bearer by virtue of the bearer's ability to generate pus."
            PATO_suppurative,

            // "A spatial pattern inhering in a bearer by virtue of the bearer's structureresembling an irregular meshwork with cross-linking struts."
            PATO_trabecular,

            // "A composition quality inhering in a bearer by virtue of the bearer's being composed of more than one identifiable entities."
            PATO_mixed,

            // "Being smallest in amount, extent or degree."
            PATO_minimal,

            // "A quality inhering in a bearer by virtue of the bearer's processing the form of a thin plate sheet or layer."
            PATO_laminar,

            // "A quality inhering in a bearer by virtue of the bearer's consisting a knot-like mass."
            PATO_nodular,

            // "A quality inhering in a bearer by virtue of the bearer's containing bone."
            PATO_osseous,

            // "A hardness quality of being rigid and resistant to pressure and fibrous."
            PATO_scirrhous,

            // "A quality inhering a bearer by virtue of the bearer's containing or resembling serum."
            PATO_serous,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition to invade surrounding tissues."
            PATO_neoplastic__invasive,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition to invade surrounding tissues to a large extend."
            PATO_neoplastic__deeply_invasive,

            // "A displaced angular placement quality inhering in a body part by virtue of the bearer's movement away from the medial plane of the body."
            PATO_abduction,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition not to invade surrounding tissues."
            PATO_neoplastic__non_invasive,

            // "A displaced angular placement quality inhering in a body part by virtue of the bearer's movement closer the medial plane of the body."
            PATO_adduction,

            // "A composition quaity inhering in a bearer by virtue of the bearer's containing of or pertaining to fibrils, or nanoscale fibers."
            PATO_fibrillary,

            // "A duration quality of a process inhering in a bearer by virtue of the bearer's delay to complete the closure of the opening of an anatomical entity."
            PATO_delayed_closure,

            // "A quality inhering in a bearer by virtue of the bearer's relative inability of electromagnetism to pass through a particular material, particularly X-rays."
            PATO_radiopacity,

            // "A readiopacity quality inhering in a bearer by virtue of the bearer's prevention of the passage of electromagnetic radiation."
            PATO_radiopaque,

            // "A physical quality inhering in a bearer by virtue of the bearer's disposition to being fit to be eaten."
            PATO_edibility,

            // "A physical quality inhering in a bearer by virtue of the bearer being suitable for use as food."
            PATO_edible,

            // "A physical quality inhering in a bearer by virtue of the bearer not being suitable for use as food."
            PATO_inedible,

            // "A density quality which lacks pattern."
            PATO_irregular_density,

            PATO_bracket,

            PATO_sloped_downward,

            // "A radiopacity that is relatively high."
            PATO_increased_radiopacity,

            // "A radiopacity that is relatively low."
            PATO_decreased_radiopacity,

            // "A quality inhering in a bearer by virtue of the bearer's pathogenicity."
            PATO_virulence,

            // "A virulence that is relatively low."
            PATO_reduced_virulence,

            // "A virulence that is relatively high."
            PATO_increased_virulence,

            // "A quality inhering in a bearer by virtue of the bearer exhibiting increased density resulting in exhibiting increased degree of radiopacity (in X-rays)."
            PATO_ivory,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the part of the body from which the tail arises."
            PATO_splayed_caudal,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the back or upper surface of an organism."
            PATO_splayed_dorsal,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards from the side."
            PATO_splayed_lateral,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards the front of an organism."
            PATO_splayed_rostral,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved outwards the abdomen of an organism."
            PATO_splayed_ventral,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the middle of an organism."
            PATO_medially_rotated,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the side of an organism."
            PATO_laterally_rotated,

            // "A positional quality inhering in a bearer by virtue of the bearer's being slightly out of its usual or proper place, or position."
            PATO_partially_dislocated,

            // "Having two horns or horn-shaped branches."
            PATO_bicornuate,

            // "A concave quality inhering in a bearer by virtue of the bearer's forming or resembling an arch of an increased apical height."
            PATO_high_arched,

            // "A quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded through an abnormal opening in the wall that contains it into the surface or boundary of another entity."
            PATO_herniated_into,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved towards the middle."
            PATO_curved_medial,

            // "To bent or hang downwards."
            PATO_drooping,

            // "A duration quality of a process inhering in a bearer by virtue of the bearer's premature completion of the closure of the opening of an anatomical entity."
            PATO_premature_closure,

            // "A protruding quality inhering in a bearer by virtue of the bearer's bodily structure that has protruded out of the surface or boundary of another entity."
            PATO_herniated_out_of,

            // "An angular placement quality inhering in a bearer by virtue of the bearer being changed in position in relation to another entity."
            PATO_displaced_to,

            // "A shape quality inhering in a bearer by virtue of the bearer's being split along the median axis."
            PATO_split_medially,

            // "A shape quality inhering in a bearer by virtue of the bearer's being split asymmetrically on one side."
            PATO_split_laterally,

            // "A shape quality inhering in a bearer by virtue of the bearer's being split on two side."
            PATO_split_bilaterally,

            // "A shape quality inhering in a bearer by virtue of the bearer's being split along the radial axis."
            PATO_split_radially,

            // "An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning towards an additional entity."
            PATO_misaligned_towards,

            // "An alignment quality inhering in a bearer by virtue of the bearer's being in a improper spatial positioning away from an additional entity."
            PATO_misaligned_away_from,

            // "A spatial quality inhering in a bearer by virtue of the bearer's changed direction of position towards another entity."
            PATO_deviation,

            // "A deviation quality inhering in a bearer by virtue of the bearer's changed direction of position towards the side."
            PATO_deviation_towards_the_lateral_side,

            // "A deviation quality inhering in a bearer by virtue of the bearer's changed direction of position towards the middle."
            PATO_deviation_towards_the_medial_side,

            // "A positional quality inhering in a bearer by virtue of the bearer's being out of its usual or proper place, or position around a central point or axis."
            PATO_mislocalised_radially,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards to point of attachment or origin."
            PATO_mislocalised_proximally,

            // "A shape quality inhering in a bearer by virtue of the bearer's being free of curves, bends, or angles."
            PATO_straight,

            // "A positional quality inhering in a bearer by virtue the bearer's being changed in position."
            PATO_displaced,

            // "A quality which inheres in a molecular entity, a single molecule, atom, ion, radical etc."
            PATO_molecular_quality,

            // "A molecular quality that inheres in a molecular entity by virtue of whether that there is a presence of cycles in the connection of the atoms within the molecular entity."
            PATO_cyclicity,

            // "Cyclic cyclicity inheres in a molecule when the atoms of the molecule do contain at least one cycle in the atom-atom connection paths (through bonds)."
            PATO_cyclic_cyclicity,

            // "Acyclic cyclicity inheres in a molecule when the atoms within the molecule do not contain at least one cycle in the atom-atom connection paths (through the bonds)."
            PATO_acyclic_cyclicity,

            // "A molecular quality that inheres in a molecular entity by virtue of whether or not the molecular entity has a separation of electric charge which leads to the molecule having an electric dipole."
            PATO_polarity,

            // "Polar polarity is a quality that inheres in a molecular entity when the molecular entity is polar, i.e. does possess an electric dipole."
            PATO_polar_polarity,

            // "A molecular quality which inheres in a molecular entity when the molecular entity does not possess an electrical dipole."
            PATO_nonpolar_polarity,

            // "The ease of distortion of the electron cloud of a molecular entity by an electric field."
            PATO_electric_polarizability,

            // "A molecular quality that inheres in a molecular entity by virtue of the presence of a conjugated ring of unsaturated bonds, lone pairs, or empty orbitals that exhibit a stabilization stronger than would be expected by the stabilization of conjugation alone."
            PATO_aromaticity,

            // "A molecular quality that inheres in a molecular entity when it possesses at least one ring that is aromatic, i.e. A conjugated ring of unsaturated bonds, lone pairs, or empty orbitals that exhibit a stabilization stronger than would be expected by the stabilization of conjugation alone."
            PATO_aromatic,

            // "A quality that inheres in a molecular entity by virtue of the molecule possessing no rings that are aromatic."
            PATO_non_aromatic,

            // "A molecular quality that inheres in a molecular entity by virtue of the overall electric charge of the molecule, which is due to a comparison between the total number of electrons and the total number of protons."
            PATO_electric_charge,

            // "A quality which inheres in a molecular entity by virtue of the molecular entity possessing the same amount of electrons overall as protons, thus having an overall neutral charge."
            PATO_neutral_charge,

            // "A quality which inheres in a molecular entity by virtue of the molecular entity possessing more protons overall than electrons, thus having an overall positive charge."
            PATO_positive_charge,

            // "A quality which inheres in a molecular entity by virtue of the molecular entity possessing more electrons overall than protons, thus having an overall negative charge."
            PATO_negative_charge,

            // "A quality that describes the power of an atom to attract electrons to itself ."
            PATO_electronegativity,

            // "A quality inhering in a bearer by virtue of its constitution."
            PATO_quality_of_a_substance,

            // "A quality which inheres in a substance by virtue of the ease with which the substance can be changed from a solid to a liquid state especially by the application of heat."
            PATO_meltability,

            // "A quality which inheres in a substance by virtue of the ease with which the substance can be changed into a gaseous state."
            PATO_vaporizability,

            // "A behavioral quality inhering ina bearer by virtue of the bearer's unequal distribution of fine motor skill between its left and right hands or feet."
            PATO_handedness,

            // "Handedness where the organism preferentially uses the left hand or foot for tasks requiring the use of a single hand or foot or a dominant hand or foot."
            PATO_left_handedness,

            // "Handedness where the organism preferentially uses the right hand or foot for tasks requiring the use of a single hand or foot or a dominant hand or foot."
            PATO_right_handedness,

            // "Handedness where the organism exhibits no overall dominance in the use of right or left hand or foot in the performance of tasks that require one hand or foot or a dominant hand or foot."
            PATO_ambidextrous_handedness,

            // "A quality inhering in a bearer by virtue of the bearer's ability to hold an electrical charge."
            PATO_capacitance,

            // "A maturity quality inhering to a bearer by virtue of the bearer's being at the point or short after birth."
            PATO_neonatal,

            // "A quality that is the distance between the end of the inserted object and the surface of the object into which it penetrates."
            PATO_insertion_depth,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of a spoon."
            PATO_spoon_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's having the shape of an incisor tooth."
            PATO_incisiform,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's resembling a teardrop."
            PATO_bulbous,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved backward or inward."
            PATO_recurved,

            // "A shape quality inhering in a bearer by virtue of the bearer's being small or narrow in circumference or width in proportion to length or height."
            PATO_slender,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape being inversely clavate."
            PATO_obclavate,

            // "A lobed quality inhering in a bearer by virtue of the bearer's being divided into or having two lobes."
            PATO_bilobed,

            // "A shape quality inhering in a bearer by virtue of the bearer's having the shape of a scythe or sickle."
            PATO_falciform,

            // "A molecular quality that pertains to the post-translational modification of a protein by the covalent attachment of one or more ubiquitin monomer."
            PATO_ubiquinated,

            // "A molecular quality inhering in a bearer by virtue of the bearer's being combined, or impregnated, with nitric acid, or some of its compounds."
            PATO_nitrated,

            // "A quality inhering in a bearer by virtue of the bearer's loss of myelin sheath."
            PATO_demyelinated,

            // "A quality inhering in a bearer that is shaped in the form of a fan."
            PATO_fan_shaped,

            // "A quality inhering in a protein or a molecule by virtue of the bearer's having a phosphate (PO4) group."
            PATO_phosphorylated,

            // "A quality inhering in a bearer by virtue of the bearer's being phosphorylated to a more than normal extent, or fully saturated with phosphate groups."
            PATO_increased_phosphorylation,

            // "A quality inhering in a bearer by virtue of the bearer's being phosphorylated to a lesser than normal extent, or less than fully."
            PATO_decreased_phosphorylation,

            // "A quality inhering in a bearer by virtue of the bearer's having reacted with oxygen, or been modified by oxidation (the reaction in which the atoms of an element lose electrons and the valence of the element increases)."
            PATO_oxidized,

            // "An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of the letter V."
            PATO_V_shaped,

            // "An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of the letter L."
            PATO_L_shaped,

            // "A cylindrical shape quality inhering in a bearer by virtue of the bearer's being imperfectly cylindrical or approximately cylindrical."
            PATO_subcylindrical,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape form resembling the shape of a cup."
            PATO_cup_shaped,

            // "A tapered shape quality inhering in a bearer by virtue of the bearer's tapering gradually to a sharp point."
            PATO_acuminate,

            // "A quadrangular shape quality inhering in a bearer by virtue of the bearer's being approximately rectangular."
            PATO_subrectangular,

            // "A triangular shape quality inhering in a bearer by virtue of the bearer's being nearly, but not perfectly, triangular."
            PATO_subtriangular,

            // "A split shape quality inhering in a bearer by virtue of the bearer's having or being divided into many lobes or similar segments."
            PATO_multifid,

            // "A 2-D shape quality inhering in a bearer by virtue of the bearer's having shape or form of half a circle."
            PATO_semicircular,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located far (not close to) in space in relation to another entity."
            PATO_far_from,

            // "A notched shape quality inhering in a bearer by virtue of the bearer's having a notched tip or edge."
            PATO_emarginate,

            // "A tapered shape quality inhering in a bearer by virtue of the bearer's being flat, slender, and tapering to a point."
            PATO_blade_like,

            // "Shape quality inhering in a bearer by virtue of the bearer's being shaped like a wing."
            PATO_aliform,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved backward or downward."
            PATO_retrorse,

            // "A curvature quality inhering in a bearer by virtue of the bearer's being curved forward or upward."
            PATO_antrorse,

            // "A concave 3-D shape that inheres in the bearer by virtue of the bearer's nearly) symmetric shape wide at its ends and narrow in the middle, resembling the figure of number 8."
            PATO_hourglass_shaped,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's shape resembling falling drop."
            PATO_teardrop_shaped,

            // "A lobed quality inhering in a bearer by virtue of the bearer's being divided into or having three lobes."
            PATO_trilobed,

            // "A physical quality inhering in a bearer by virtue of the bearer's rate of change of the position."
            PATO_velocity,

            // "A physical quality inhering in a fluid (liquid or gas) by virtue of the amount of fluid which passes through a given surface per unit time."
            PATO_fluid_flow_rate,

            // "A flow rate quality inhering in a substance by virtue of the mass of substance which passes through a given surface per unit time."
            PATO_mass_flow_rate,

            // "A force which relative high."
            PATO_increased_force,

            // "A force which is relative low."
            PATO_decreased_force,

            // "A quality inhering in a bearer by virtue of the bearer's having or lacking of substances produced by living organisms that have a color resulting from selective color absorption."
            PATO_degree_of_pigmentation,

            // "A degree of pigmentation quality inhering in a bearer by virtue of the bearer's having substances produced by living organisms that have a color resulting from selective color absorption."
            PATO_pigmented,

            // "A degree of pigmentation quality inhering in a bearer by virtue of the bearer's lacking substances produced by living organisms that have a color resulting from selective color absorption."
            PATO_unpigmented,

            // "A degree of pigmentation quality that is relative high."
            PATO_increased_pigmentation,

            // "A degree of pigmentation quality that is relative low."
            PATO_decreased_pigmentation,

            // "A quality inhering in a bearer by virtue of the bearer's being flattened along the antero-posterior axis."
            PATO_antero_posteriorly_flattened,

            // "A quality inhering in a bearer by virtue of the bearer's being roundish, flattish shape, possibly with a slightly angled edge."
            PATO_platelike,

            // "A quality inhering in a bearer by virtue of the bearer's surface becoming more extended in a plane."
            PATO_flattened,

            // "Texture quality inhering in a bearer by virtue of the bearer's being marked with one or more channels."
            PATO_grooved,

            // "A cuscpidate quality inhering in a bearer by virtue of the bearer possessing three cusps."
            PATO_tricuspidate,

            // "A cuscpidate quality inhering in a bearer by virtue of the bearer possessing more than one cusp."
            PATO_multicuspidate,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a point."
            PATO_pointed,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located near in space in relation to another entity."
            PATO_adjacent_to,

            // "A quality inhering in a bearer by virtue of the bearer's being partially upright in position or posture."
            PATO_semi_erect,

            // "A spatial quality inhering in a bearer by virtue of the bearer's location within another entity."
            PATO_located_in,

            // "A quality inhering in a protein or a molecule by virtue of the addition of a phosphate (PO4) group to the bearer."
            PATO_phosphorylation,

            // "A quality inhering in a protein or a molecule by virtue of the bearer's lacking a phosphate (PO4) group."
            PATO_dephosphorylated,

            // "A structural quality inhering in a bearer by virtue of the bearer's being arranged in a systematic fashion."
            PATO_organization_quality,

            // "A behavioral quality of a process inhering in a bearer by virtue of the bearer's disposition to exhibit marked activity."
            PATO_behavioural_activity,

            // "A shape that inheres in a 3 dimensional entity."
            PATO_3_D_shape,

            PATO_edge_shape,

            // "A positional quality inhering in a bearer by virtue of the bearer's being located in a position equidistant from edges."
            PATO_centered,

            // "A structural quality of the collection or massing of one physical object within another physical object."
            PATO_accumulation,

            // "An increased number of physical objects that are accumulated within another physical object usually as a result of a failure to break down or remove objects in a timely manner."
            PATO_increased_accumulation,

            // "An accumulation which is relative low."
            PATO_decreased_accumulation,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located at the same continuous distance relative to another object."
            PATO_parallel_to,

            // "Multicolored quality inhering in a bearer by virtue of the bearer's being colored with a variegated pattern resembling marble,."
            PATO_marbled,

            // "Multicolored quality inhering in a bearer by virtue of the bearer's being dappled with spots, patches, or blotches of different colors."
            PATO_mottled,

            // "A color pattern quality inhering in a bearer by virtue of the bearer's color pattern in which light and dark colors (for example white and black) are codistributed to create a visual impression."
            PATO_high_contrast_color_pattern,

            // "A color pattern inhering in a bearer by virtue of bearer's exhibiting vertical bars of one hue or degree of saturation crossing another."
            PATO_barred,

            // "A quality of certain surfaces which appear to change colour as the angle of view changes."
            PATO_iridescent,

            // "A structural quality inhering in a bearer by virtue of the bearer's participating in a joint with another entity."
            PATO_articulated_with,

            // "A structural quality inhering in a bearer by virtue of the bearer's being strongly articulated with another entity."
            PATO_tightly_articulated_with,

            // "A structural quality inhering in a bearer by virtue of the bearer's possessing a broad surface in articulation with another entity."
            PATO_broadly_articulated_with,

            // "A cuscpidate quality inhering in a bearer by virtue of the bearer possessing two cusps."
            PATO_biscupidate,

            // "A mobility which is relative high."
            PATO_increased_mobility,

            // "A mobility which is relative low."
            PATO_decreased_mobility,

            // "A physical quality that pertains by virtue of a pulling force that is directed away from the bearer and attempts to stretch or elongate the bearer."
            PATO_tension,

            // "Branchiness quality inhering in a bearer by virtue of increasing the degree to which there are subdivisions or offshoots in a bearer entity."
            PATO_increased_branchiness,

            // "Branchiness quality inhering in a bearer by virtue of decreasing the degree to which there are subdivisions or offshoots in a bearer entity."
            PATO_decreased_branchiness,

            // "An elasticity which is relatively high."
            PATO_increased_elasticity,

            // "An elasticity which is relatively low."
            PATO_decreased_elasticity,

            // "A hairy quality inhering in a bearer by virtue of the bearer's being covered with setae."
            PATO_setose,

            PATO_aplastic_hypoplastic,

            // "Failure of a tissue of organ to develop."
            PATO_agenesis,

            // "A structural quality inhering in a bearer by virtue of the bearer's underlying structure being capable of change."
            PATO_transient,

            // "A structural quality inhering in a bearer by virtue of the bearer's underlying structure not changing over time."
            PATO_permanent,

            // "A texture that is uniformly covered in short, oblong, or trench-like depressions."
            PATO_scrobiculate,

            // "A surface feature shape inhering in a surface by virtue of the bearer's being divided by ridge-like structures into a number of small, irregular spaces."
            PATO_areolate,

            // "A texture quality inhering in a surface by virtue of the bearer's being marked by the presence of small, shallow, regular depressions called fovae."
            PATO_foveate,

            // "A cellular motility which is lower relative to the normal or average."
            PATO_decreased_cellular_motility,

            // "A cellular motility which is higher relative to the normal or average."
            PATO_increased_cellular_motility,

            // "A cylindrical shape that is hollow."
            PATO_tubular,

            // "A quality that has a value that is increased compared to normal or average."
            PATO_increased_quality,

            // "A quality that has a value that is decreased compared to normal or average."
            PATO_decreased_quality,

            // "A quality of a process that has a value that is decreased compared to normal or average."
            PATO_decreased_process_quality,

            // "A quality of an object that has a value that is decreased compared to normal or average."
            PATO_decreased_object_quality,

            // "A quality of a process that has a value that is increased compared to normal or average."
            PATO_increased_process_quality,

            // "A quality of an object that has a value that is increased compared to normal or average."
            PATO_increased_object_quality,

            // "A triangular quality inhering in a bearer by virtue of the bearer's having all sides of the same length."
            PATO_equilateral_triangular,

            // "A triangular quality inhering in a bearer by virtue of the bearer's having two sides have the same length."
            PATO_isosceles_triangular,

            // "A triangular quality inhering in a bearer by virtue of the bearer's having all sides of unequal length."
            PATO_scalene_triangular,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's exhibiting a by virtue of the bearer's exhibiting a consistently sized and approximately round cross-section along its length, which is many times larger than its diameter."
            PATO_fiber_shaped,

            // "A quality inhering in a bearer by virtue of the bearer's being strong, thick or sturdy."
            PATO_robust,

            // "Having a fringe or border of hairlike or fingerlike projections."
            PATO_fimbriated,

            // "Consisting of segments or similar parts arranged in a longitudinal series."
            PATO_segmented,

            // "Having or resembling the shape of a telescope."
            PATO_telescopic,

            // "Having the nature or characteristic of, a ligament; composed of the tissue proper to ligaments."
            PATO_ligamentous,

            // "A shape quality inhering in a bearer by virtue of the bearer's resembling the end of a brush with a multitude of bristles."
            PATO_brush_like_shape,

            // "Being separate or discrete from other skeletal elements."
            PATO_autogenous,

            // "A convex quadrilateral is a parallelogram if and only if any one of the following statements are true:\n1. Each diagonal divides the quadrilateral into two congruent triangles with the same orientation.\n2. The opposite sides are congruent in pairs.\n3. The diagonals bisect each other.\n4. The opposite angles are congruent in pairs.\n5. The sum of the squares of the sides equals the sum of the squares of the diagonals. (This is the parallelogram law)\n6.It possesses rotational symmetry.\n7.One pair of opposite sides are parallel and congruent.\n8.Two pairs of adjacent angles are supplementary."
            PATO_parallelogram,

            // "A shape constituting a transition between a rectangle and a circle; a closed curve, of which the circle and ellipse are special cases, whose parametric equation is x = a.cos2/rt, y = b.cos2/rt"
            PATO_superelliptic,

            // "A shape with properties between those of a square and those of a circle."
            PATO_squircle,

            // "A superelptic shape inhering in a bearer by virtue of the bearer's shape resembling a diamond."
            PATO_diamond_shaped,

            PATO_hypoelliptic,

            PATO_hyperelliptic,

            // "A temporal distribution pattern of process occurrences within a regulation/reference process."
            PATO_temporal_distribution_quality,

            // "The temporal relation between the end of the process with respect to a reference process."
            PATO_offset_quality,

            // "The temporal relation between the start of the process with respect to a reference process."
            PATO_onset_quality,

            // "An orientation inhering in a bearer by virtue of the bearer's placement at an angle."
            PATO_angle,

            // "An angle which is relatively high."
            PATO_increased_angle_to,

            // "An angle which is relatively low."
            PATO_decreased_angle_to,

            // "A shape quality inhering in a bearer by virtue of the bearer's exhibiting a upward bending of its leaves or other plant parts."
            PATO_hyponastic,

            // "A quality inhering in a bearer by virtue of the bearer's being extended along a straight line, and is shaped like a reversed lance-point, with the tapering point attached to the leafstalk."
            PATO_oblanceolate,

            // "A physical quality inhering in a bearer by virtue of the bearer exhibiting molecular attraction to another entity in contact."
            PATO_adhesive,

            // "A physical quality inhering in a bearer by virtue of the bearer not exhibiting molecular attraction to another entity in contact."
            PATO_non_adhesive,

            // "A adhesivity which is relatively high."
            PATO_increased_adhesivity,

            // "A adhesivity which is relatively low."
            PATO_decreased_adhesivity,

            // "A shape quality inhering in a bearer by virtue of the bearer's being dome-shaped."
            PATO_tholiform,

            // "A shape quality inhering in a bearer by virtue of the bearer's having triangular faces that meet at a common point and containing a polygonal shaped base."
            PATO_pyramidal,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a continuous convex surface with an axis of symmetry and one axis longer than the other; characterized with an egg-shaped form crossed with a lance-head shaped form."
            PATO_lance_ovate,

            // "A shape quality inhering in a bearer by virtue of the bearer's being shaped like a lance-head, considerably longer than wide, tapering towards the tip from below the middle together forming three angles; attached at the broad end."
            PATO_lanceolate_triangular,

            // "A quality of being covered with stiff or rough hairs."
            PATO_hispid,

            // "A quality of being minutely hispid."
            PATO_hispidulous,

            // "A quality of being covered with short, dense, matted hairs."
            PATO_tomentose,

            // "A quality inhering in a bearer by virtue of the bearer's being a cupule, with a structure similar to a cup that also encloses the ovule in partiality."
            PATO_cupulate,

            // "A positional quality inhering in a bearer by virtue of the bearer's lying or growing on the ground but with erect or rising tips."
            PATO_decumbent,

            // "A quality inhering in a bearer by virtue of the bearer's being characterized by fine, entangled hairs giving the appearance of cobweb."
            PATO_arachnose,

            // "A convex 3-D shape quality inhering in a bearer by virtue of the bearer's having a quadric surface in three dimensions obtained by rotating less than half of a circular arc about an axis passing through the endpoints of the arc"
            PATO_lemon_shaped,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's having two connected parts, roughly spherical, of different sizes."
            PATO_snowman_shaped,

            // "A conical quality inhering in a bearer by virtue of the bearer's resembling a cone, with the pointed end attached to an organism."
            PATO_obconical,

            // "A structural quality inhering in a bearer by virtue of the bearer resembling wood."
            PATO_ligneous,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the base of an organism relative to another entity."
            PATO_basal_to,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the stalk of an organism relative to another entity."
            PATO_cauline_to,

            // "A structural quality inhering in a bearer by virtue of the bearer resembling or containing flesh."
            PATO_fleshy,

            // "A quality inhering in a bearer by virtue of the bearer's upper parts die back to the rootstock at the end of the growing season."
            PATO_herbaceous,

            // "A quality that inheres in a bearer in virtue of its realizing one of its functions."
            PATO_activation_quality,

            // "A quality of an physical object that is currently realizing one of its functions."
            PATO_active,

            // "A quality of a physical object that is currently realizing none of its functions."
            PATO_inactive,

            // "A quality of a physical object that has been constantly realizing some of its functions."
            PATO_constitutively_active,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a strait side and an arched side giving the bearer the form of the letter D."
            PATO_D_shaped,

            // "An elongated raised margin or border."
            PATO_ridged,

            // "A quality inhering in a bearer by virtue of the bearer's width being notably higher than its length."
            PATO_broad,

            // "A disposition that can be compared on a linear scale - that is that it can be increased or decreased."
            PATO_tendency,

            // "A tendency which is relatively high."
            PATO_increased_tendency,

            // "A tendency which is relatively low."
            PATO_decreased_tendency,

            // "A medium brown color with a metallic sheen, resembles the actual alloy bronze."
            PATO_bronze,

            // "A quality inhering in a bearer by virtue of the bearer's length being notably lower than its width."
            PATO_shortened,

            // "Female quality of having complete, unaltered reproductive organs"
            PATO_intact_female,

            // "Male quality of having complete, unaltered reproductive organs."
            PATO_intact_male,

            // "Male quality of being incapable to reproduce because of functional loss of the testicles from surgical removal or chemical means."
            PATO_castrated_male,

            // "A viviparous organism having never given birth."
            PATO_nulliparous,

            // "A viviparous organism that has given birth two or more times."
            PATO_multiparous,

            // "The number of time that a viviparous organism has given birth."
            PATO_parity,

            // "A viviparous organism having given birth one time."
            PATO_primiparous,

            // "A viviparous organism that has given birth five or more times."
            PATO_grand_multi_arous,

            // "A positional quality inhering in a bearer by virtue of the bearer's location of features or characteristics along the mediolateral axis."
            PATO_mediolateral_polarity,

            // "Recurrent and often more or less cyclic alteration."
            PATO_fluctuating,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer's shape form resembling the shape of a trumpet."
            PATO_trumpet_shaped,

            // "A structure quality inhering in a bearer by virtue of the bearer's being filled with air."
            PATO_inflated,

            // "A structure quality inhering in a bearer by virtue of the bearer's being not filed with air."
            PATO_uninflated,

            // "Having a shape that resembles a many-lobed \"berry,\" such as a raspberry."
            PATO_acinus,

            // "A female fertility quality inhering in a female by virtue of the bearer's not being capable of reproducing because of surgical removal of ovaries and uterus."
            PATO_ovariohysterectomized_female,

            // "A female fertility quality inhering in a female by virtue of the bearer's not being capable of reproducing because of surgical removal of ovaries."
            PATO_ovariectomized_female,

            // "A composition quality inhering in an bearer by virtue of the presence of long chain aliphatic lipids on the surface of an organism."
            PATO_waxiness,

            // "A waxiness which is relatively high."
            PATO_increased_waxiness,

            // "A waxiness which is relatively low."
            PATO_decreased_waxiness,

            // "Presence of long chain aliphatic lipids on the surface of an organism."
            PATO_waxy,

            // "A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines, usually parallel, with at least one salient angle on the margin"
            PATO_striate_angular,

            // "A concave 3-D shape that inheres in the bearer by virtue of the bearer's shape that is wider at one end and narrow in the middle."
            PATO_anvil,

            // "Extremely acute and aggressive onset of a pathological process."
            PATO_peracute,

            // "Being supported by a peduncle or stalk."
            PATO_pedunculate,

            // "Growing horizontal to the ground without setting roots."
            PATO_procumbent,

            // "A length quality which is equal to the length of any straight line segment that passes from the center of a circle to any endpoint on the circular boundary. The radius is half of the diameter."
            PATO_radius,

            // "A shape quality inhering in a bearer by virtue of the bearer's having three rays or radiating branches."
            PATO_triradiate,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located on a sloping line joining two nonconsecutive points of an entity relative to another entity."
            PATO_diagonal_to,

            // "A tolerance quality inhering in a bearer by virtue of the bearer's increased ability to endure a stimulus."
            PATO_increased_tolerance_to,

            // "A tolerance quality inhering in a bearer by virtue of the bearer's decreased ability to endure a stimulus."
            PATO_decreased_tolerance_to,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned away from the axis of an organism."
            PATO_mislocalized_abaxially,

            // "A positional quality inhering in a bearer by virtue of the bearer's being positioned towards the axis of an organism."
            PATO_mislocalized_adaxially,

            // "A circular shape quality inhering in a bearer by virtue of the bearer's being nearly, but not perfectly, circular."
            PATO_subcircular,

            PATO__new_term__OBSOLETE,

            // "A rotation quality inhering in a bearer by virtue of being rotated towards the front and the middle of an organism."
            PATO_anteromedially_rotated,

            // "Having a spindle-like shape that is wide in the middle and tapers at both ends."
            PATO_fusiform,

            // "characterised by an unidentifiable pattern."
            PATO_random_pattern,

            // "Multiple lesions some interconnecting with each other."
            PATO_multifocal_to_coalescing,

            // "Affecting all regions without specificity of distribution."
            PATO_generalized,

            // "Affecting a segment or segments."
            PATO_segmental,

            // "A structural quality inhering in a bearer by virtue of the bearer's disposition to be reduced to smaller pieces with little effort."
            PATO_friability,

            // "Easily reduced to powder or easily fragmentable or crumbly."
            PATO_friable,

            // "Having become firm or hard especially by increase of fibrous elements."
            PATO_indurated,

            // "Having the consistency of water."
            PATO_watery,

            // "Bounded structure filled with fluid."
            PATO_fluid_filled,

            // "A colour that is very pale yellowish brown."
            PATO_beige,

            // "A color consisting of yellow and brown hue."
            PATO_yellow_brown,

            // "A color consisting of yellow and brown hue and low brightness."
            PATO_dark_yellow_brown,

            // "A color consisting of yellow and brown hue and high brightness."
            PATO_light_yellow_brown,

            // "A quality of duration having progressive course of indefinite duration with active, acute-like elements."
            PATO_chronic_active,

            // "Single lesion with expansion into surrounding tissue."
            PATO_focally_extensive,

            // "Flattened from above downward; below the normal level or the level of the surrounding parts."
            PATO_sunken,

            // "Extending through or affecting the entire thickness of the wall of an organ or cavity or boundary."
            PATO_transmural,

            // "An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for acidic dyes under specific ph conditions."
            PATO_acidophilic,

            // "An affinity inhering in a tissue constituent by virtue of the bearer exhibiting a molecular interaction for eosin dye."
            PATO_eosinophilic,

            // "Having both hydrophilic and hydrophobic (or lipophilic) groups."
            PATO_amphiphilic,

            // "Having or resembling the characteristic of a cicatrix - a scar resulting from formation and contraction of fibrous tissue."
            PATO_cicatricial,

            // "Pertaining to the individual parts making up an aggregate fruit like a many-lobed \"berry,\" such as a raspberry."
            PATO_acinar,

            // "A round or lobulated protruding form resembling a nipple."
            PATO_papillomatous,

            // "A positional quality inhering in a bearer by virtue of the bearer's having two or more entities that extend from a common point in different directions."
            PATO_divergent_from,

            // "Open to view or not covered by another entity."
            PATO_exposed,

            // "A shape quality inhering in a bearer by virtue of the bearer's being shaped like a boat."
            PATO_scaphoid,

            // "A surface feature shape having numerous very small circular rounded projections or protuberances."
            PATO_knobbled,

            // "A 3-D shape with three supports or legs."
            PATO_tripodal,

            // "A shape quality inhering in a bearer by virtue of the bearer's being shaped in the form of the letter X."
            PATO_x_shaped,

            // "A shape quality in which the bearer is shaped like a narrow band; ligulate."
            PATO_strap_shaped,

            // "A shape quality in which the bearer possesses a gradual, yet distinct, thinning from a wide starting point."
            PATO_waisted,

            // "A shape that is in the form of a spade."
            PATO_spade_shaped,

            // "A surface feature shape marked by large amounts of relief, often with multiple ridges and grooves in close association. Topographically complex."
            PATO_sculpted_surface,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located at a right angle relative to another entity."
            PATO_perpendicular_to,

            // "A positional quality inhering in a bearer by virtue of the bearer touching another entity along a border or with a projecting part."
            PATO_abut,

            // "A positional quality inhering in a bearer by virtue of the bearer's position being displaced from a reference point."
            PATO_offset,

            // "A structural quality inhering in a bearer by virtue of the bearer's being locked together or interconnected to another entity."
            PATO_interlocked_with,

            // "A structural quality inhering in a bearer by virtue of the bearer's being located or placed beneath the skin."
            PATO_subdermal,

            // "An angular shape quality inhering in a bearer by virtue of the bearer's having two angles in its length giving the bearer the form of the letter W."
            PATO_w_shaped,

            // "A surface feature shape quality inhering in a bearer by virtue of the degree of the bearer's  highly topographical with ridges, pits, rugosity or other surface structures."
            PATO_ornamentation,

            // "A surface feature shape in which the bearer's surface is highly topographical with ridges, pits, rugosity or other surface structures."
            PATO_ornamented,

            // "A surface feature shape in which the bearer's surface is lacking ridges, pits, rugosity or other surface structures."
            PATO_unornamented,

            // "A positional quality inhering in a bearer by virtue of the bearer's being located at the same level as another entity."
            PATO_level_with,

            // "A composition quality inhering in a bearer by virtue of the bearer's being composed of or possessing inorganic material."
            PATO_mineralized,

            // "A shape quality inhering in a bearer by virtue of the bearer's being twisted or turned."
            PATO_torsioned,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a shape resembling an anchor."
            PATO_anchor_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer being divided into four parts."
            PATO_quadripartite,

            // "A quality inhering in a bearer by virtue of the bearer's bing aligned or positioned towards another entity."
            PATO_oriented_towards,

            // "A spatial quality inhering in a bearer by virtue of the bearer's being located toward the rear and mid-line surface of an organism relative to another entity."
            PATO_posteromedial_to,

            // "A hardness quality of giving significant resistance to pressure."
            PATO_firm,

            // "A quality inhering in a bearer by virtue of the bearer's exhibiting a phenotypic difference between males and females of the same species."
            PATO_sexually_dimorphic,

            // "A structural quality inhering in a bearer by virtue of the bearer being thinner or more losely packed."
            PATO_decondensed,

            // "A structural quality inhering in a bearer by virtue of the bearer bring gradually worn away."
            PATO_eroding,

            // "A  quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a carpel."
            PATO_carpel_like,

            // "A  quality inhering in a bearer by virtue of the bearer's architecture bearing resemblence to a corymb type of inflorescence."
            PATO_corymb_like,

            // "A  quality inhering in a bearer by virtue of the bearer's similarity to the appearance of an inflorescence."
            PATO_inflorescence_like,

            // "A structural quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a leaf."
            PATO_leaf_like,

            // "A quality inhering in a bearer by virtue of the bearer being thin and lacking outgrowths"
            PATO_pin_like,

            // "A structural quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a sepal,"
            PATO_sepal_like,

            // "A structural quality inhering in a bearer by virtue of the bearer being smaller and contracted, expecially due to loss of moisture."
            PATO_shriveled,

            // "To bend or hang downwards due to loss of water"
            PATO_wilty,

            // "A composition quality inhering in an bearer by virtue of the bearer's consisting of collagen."
            PATO_collagenous,

            // "A positional quality inhering in a bearer by virtue of some aspect of the bearer extending to the position of another entity."
            PATO_extends_to,

            // "A positional quality inhering in a bearer by virtue of some aspect of the bearer extending past the position of another entity."
            PATO_extends_beyond,

            // "A quality inhering in a bearer by virtue of the bearer's resembling a prism."
            PATO_prism_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer resembling a keyhole."
            PATO_keyhole_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer resembling a thin narrow strip."
            PATO_lathlike,

            // "A structure quality inhering in a bearer by virtue of the bearer's being capable of swelling or stretching."
            PATO_distensible,

            // "Structural quality inhereing in a bearer in which a joint has apposed bony surfaces united by fibrous tissue, permitting no movement; found only between bones."
            PATO_sutured_to,

            // "A morphological quality between two bearers inhering that one bearer is subject to change the nature, function, or condition of itself to become the other."
            PATO_transformed_to,

            // "A physical quality inhering in a bearer by virtue of the bearer's increased rate of change of the position."
            PATO_increased_velocity,

            // "A physical quality inhering in a bearer by virtue of the bearer's decreased rate of change of the position."
            PATO_decreased_velocity,

            // "A disposition inhering in a tumour by virtue of the bearer's disposition to spontaneously arise."
            PATO_neoplastic__spontaneous,

            // "A flavor quality inhering in a bearer by virtue of the bearer's having an acrid, sharp, or disagreeable flavor."
            PATO_bitter,

            // "A position quality inhering in a bearer by virtue of the bearer's existing near the end of another entity."
            PATO_subterminal,

            // "A position quality inhering in a bearer by virtue of the bearer's forming the end of another entity."
            PATO_terminal,

            // "A structural quality inhering in a bearer by virtue of the bearer's disposition to breaks without significant deformation (strain) when subjected to stress."
            PATO_brittle,

            // "A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel, that are oriented transversely relative to the long axis of the bearer."
            PATO_transversely_striated,

            // "A shape quality inhering in a bearer by virtue of the bearer's being marked by narrow lines or grooves, usually parallel, that are oriented obliquely relative to the long axis of the bearer."
            PATO_obliquely_striated,

            // "A quality inhering in an bearer by virtue of the bearer's possessing only minor levels of ossification."
            PATO_poorly_ossified,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a slanting direction or position : neither perpendicular nor parallel."
            PATO_oblique_orientation,

            // "Shape quality inhering in a bearer by virtue of the bearer exhibiting a narrow and elongate opening."
            PATO_slit_like,

            // "Positional quality in which an entity is located outside of another entity."
            PATO_external_to,

            // "An angular shape quality inhering in a bearer by virtue of the bearer's having a single angle in its length giving the bearer the form of an inverted letter V."
            PATO_inverted_V_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's possessing two sides that are at the same continuous distance relative to each other."
            PATO_parallel_sided,

            // "A quality inhering in a process by virtue of that process having two or more organisms as participants."
            PATO_multi_organismal_process_quality,

            // "A quality inhering in a process by virtue of that process having exactly one organism as a participant."
            PATO_single_organismal_process_quality,

            // "Overlap with quality inhering in a bearer by virtue of the bearer's being positioned over another entity so as to cover some portion of it."
            PATO_overlapping,

            // "Overlap with quality inhering in a bearer by virtue of the bearer's being positioned under another entity so as to be covered by some portion of it."
            PATO_overlapped_by,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteriorly."
            PATO_anterior_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterodorsally."
            PATO_anterodorsal_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterolaterally."
            PATO_anterolateral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteroventrally."
            PATO_anteroventral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed distally."
            PATO_distal_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed dorsally."
            PATO_dorsal_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed dorsolaterally."
            PATO_dorsolateral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed laterally."
            PATO_lateral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed medially."
            PATO_medial_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posteriorly."
            PATO_posterior_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed ventrolaterally."
            PATO_ventrolaterally_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed ventrally."
            PATO_ventral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed transversely."
            PATO_transverse_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterolaterally."
            PATO_posterolateral_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterodorsally."
            PATO_posterodorsal_orientation,

            // "A nucleate quality inhering in a bearer by virtue of the bearer's having one or more nucleus."
            PATO_nucleated,

            // "A surface feature shape quality inhering in a bearer by virtue of the bearer's not having undulating edges forming lobes."
            PATO_alobate,

            // "A composition quality inhering in a bearer by virtue of the bearer's consisting of keratin."
            PATO_keratinous,

            // "A positional quality inhering in a bearer by virtue of the bearer being hidden from view."
            PATO_concealed,

            // "A 2-D shape quality inhering in a bearer by virtue of the bearer's having six angles and six sides."
            PATO_hexagonal,

            // "A concave 3-D shape quality inhering in a bearer by virtue of the bearer being divided into multiple parts."
            PATO_multipartite,

            // "A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a cane."
            PATO_cane_like,

            // "A positional quality inhering in a bearer by virtue of the bearer flowing or coming together with another entity."
            PATO_confluent_with,

            // "A positional quality inhering in a bearer by virtue of the bearer's having a slanting direction (neither perpendicular nor parallel) relative to another entity."
            PATO_oblique_to,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anteromedially."
            PATO_anteromedial_orientation,

            // "An elevation quality inhering in a bearer by virtue the bearer's being in a high position relative to another entity."
            PATO_increased_elevation_relative_to,

            // "A positional quality inhering in a bearer by virtue of the bearer being hidden from view or covered by another entity."
            PATO_concealed_by,

            // "A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a saddle."
            PATO_saddle_shaped,

            // "A positional quality inhering in a bearer by virtue of the bearer being level or even with another surface."
            PATO_flush,

            // "A structural quality inhering in a bearer by virtue of the bearer's having an open, latticed, or porous structure; used especially of bone."
            PATO_cancellous,

            // "A shape quality inhering in a bearer by virtue of the bearer being shaped like a scute or an osteoderm."
            PATO_scute_like,

            // "A shape quality inhering in a bearer by virtue of the bearer's similarity to the appearance of a funnel."
            PATO_funnel_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer having an elongate structure, similar to a ridge, that extends longitudinally along an anatomical entity."
            PATO_keel_shaped,

            // "A positional quality inhering in a bearer by virtue of the bearer's being located at a right angle relative to another entity and to the horizon."
            PATO_vertical_to,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed mesiolaterally."
            PATO_mesiolateral_orientation,

            // "A structural quality inhering in a bearer by virtue of the bearer being in a position that produces a separation in, or acting to separate, another entity."
            PATO_separating,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed anterodistally."
            PATO_anterodistal_orientation,

            // "An orientation quality inhering in a bearer by virtue of the bearer having a position that is directed posterodistally."
            PATO_posterodistal_orientation,

            // "An intensity which is borderline in it its effect or force as compared to baseline or normal."
            PATO_borderline_intensity,

            // "An intensity which is characterized by being very severe."
            PATO_profound_intensity,

            // "An occurrence quality inhering in a bearer by virtue of the bearer's having a course that occurs occasionally."
            PATO_episodic,

            // "An occurrence of a process during which time there is an inability to change the course, extent, or repetition of the process."
            PATO_refractory,

            // "A quality in which the effect or outcome is not primary or the focus of the observation."
            PATO_secondary,

            // "A multipartite quality inhering in a bearer by virtue of the bearer being divided into two parts."
            PATO_bipartite,

            // "A shape quality inhering in a bearer by virtue of the bearer's being shaped like a plowshare."
            PATO_plowshare_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a short and stout cylindrical shape."
            PATO_peg_like,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a shape like a boomerang, with two arms connected at an angle."
            PATO_boomerang_shaped,

            // "A spheroid quality inhering in a bearer by virtue of the bearer's exhibiting a shape not quite ovoid. approximately ovoid."
            PATO_subovoid,

            // "A shape quality that obtains by virtue of the bearer being concave on one side and convex on the other."
            PATO_concavo_convex,

            // "A shape quality inhering in a bearer by virtue of the bearer's having a shape like a ring (a circular shape enclosing a space)."
            PATO_ring_shaped,

            // "A shape quality inhering in a bearer by virtue of the bearer's possessing a small, spike-like shape."
            PATO_spur_shaped,

            // "A unit of measurement is a standardized quantity of a physical quality."
            UO_unit,

            // "A unit which is a standard measure of the distance between two points."
            UO_length_unit,

            // "A unit which is a standard measure of the amount of matter/energy of a physical object."
            UO_mass_unit,

            // "A unit which is a standard measure of the dimension in which events occur in sequence."
            UO_time_unit,

            // "A unit which is a standard measure of the flow of electric charge."
            UO_electric_current_unit,

            // "A unit which is a standard measure of the average kinetic energy of the particles in a sample of matter."
            UO_temperature_unit,

            // "A unit which is a standardised quantity of an element or compound with uniform composition."
            UO_substance_unit,

            // "A unit which is a standard measure of the wavelength-weighted power emitted by a light source in a particular direction."
            UO_luminous_intensity_unit,

            // "A length unit which is equal to the length of the path traveled by light in vacuum during a time interval of 1/299 792 458 of a second."
            UO_meter,

            // "A mass unit which is equal to the mass of the International Prototype Kilogram kept by the BIPM at Svres, France."
            UO_kilogram,

            // "A time unit which is equal to the duration of 9 192 631 770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom."
            UO_second,

            // "An electric current unit which is equal to the constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 m apart in vacuum, would produce between these conductors a force equal to 2 x 10^
            UO_ampere,

            // "A thermodynamic temperature unit which is equal to the fraction 1/273.16 of the thermodynamic temperature of the triple point of water."
            UO_kelvin,

            // "A substance unit which is equal to the amount of substance of a molecular system which contains as many elementary entities as there are atoms in 0.012 kilogram of carbon 12."
            UO_mole,

            // "A luminous intensity unit which equal to the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540 x 1012 hertz and that has a radiant intensity in that direction of 1/683 watt per steradian."
            UO_candela,

            // "A length unit which is equal to one hundredth of a meter or 10^
            UO_centimeter,

            // "A length unit which is equal to one thousandth of a meter or 10^
            UO_millimeter,

            // "A length unit which is equal to one millionth of a meter or 10^
            UO_micrometer,

            // "A length unit which is equal to one thousandth of one millionth of a meter or 10^
            UO_nanometer,

            // "A length unit which is equal to 10
            UO_angstrom,

            // "A length unit which is equal to 10^
            UO_picometer,

            // "A mass unit which is equal to one thousandth of a kilogram or 10^
            UO_gram,

            // "A mass unit which is equal to one thousandth of a gram or 10^
            UO_milligram,

            // "A mass unit which is equal to one millionth of a gram or 10^
            UO_microgram,

            // "A mass unit which is equal to one thousandth of one millionth of a gram or 10^
            UO_nanogram,

            // "A mass unit which is equal to 10^
            UO_picogram,

            // "A mass unit which is equal to 10^
            UO_femtogram,

            // "A temperature unit which is equal to one kelvin degree. However, they have their zeros at different points. The centigrade scale has its zero at 273.15 K."
            UO_degree_Celsius,

            // "A time unit which is equal to one thousandth of a second or 10^
            UO_millisecond,

            // "A time unit which is equal to one millionth of a second or 10^
            UO_microsecond,

            // "A time unit which is equal to 10^
            UO_picosecond,

            // "A time unit which is equal to 60 seconds."
            UO_minute,

            // "A time unit which is equal to 3600 seconds or 60 minutes."
            UO_hour,

            // "A time unit which is equal to 24 hours."
            UO_day,

            // "A time unit which is equal to 7 days."
            UO_week,

            // "A time unit which is approximately equal to the length of time of one of cycle of the moon's phases which in science is taken to be equal to 30 days."
            UO_month,

            // "A time unit which is equal to 12 months which is science is taken to be equal to 365.25 days."
            UO_year,

            // "An electric current unit current which is equal to one thousandth of an ampere or 10^
            UO_milliampere,

            // "An electric current unit current which is equal to one millionth of an ampere or 10^
            UO_microampere,

            // "A substance unit equal to a millionth of a mol or 10^
            UO_micromole,

            // "A substance unit equal to a thousandth of a mol or 10^
            UO_millimole,

            // "A substance unit equal to one thousandth of one millionth of a mole or 10^
            UO_nanomole,

            // "A substance unit equal to 10^
            UO_picomole,

            // "A substance unit equal to 10^
            UO_femtomole,

            // "A substance unit equal to 10^
            UO_attomole,

            // "A unit which is one of a particular measure to which all measures of that type can be related."
            UO_base_unit,

            UO_prefix,

            // "A unit which is a standard measure of the amount of a 2-dimensional flat surface."
            UO_area_unit,

            // "A unit which is a standard measure of the rate of change of velocity in either speed or direction."
            UO_acceleration_unit,

            // "A unit which is a standard measure of the rate of angular movement about an axis; the angle rotated in a given time."
            UO_angular_velocity_unit,

            // "A unit which is a standard measure of the rate of change of angular velocity."
            UO_angular_acceleration_unit,

            // "A unit which represents a standard measurement of how much of a given substance there is mixed with another substance."
            UO_concentration_unit,

            // "A density unit which is a standard measure of the mass of a substance in a given volume."
            UO_mass_density_unit,

            // "A unit which is a standard measure of the luminous intensity impinging on a given area."
            UO_luminance_unit,

            // "A density unit which is a standard measure of the mass exerting an influence on a given area."
            UO_area_density_unit,

            // "A unit which is a standard measure of the mass of a homogeneous substance containing 6.02 x 1023 atoms or molecules."
            UO_molar_mass_unit,

            // "A unit which is a standard measure of the volume of a homogeneous substance containing 6.02 x 1023 atoms or molecules."
            UO_molar_volume_unit,

            // "A unit which is a standard measure of the quantity of motion measured by the product of mass and velocity."
            UO_momentum_unit,

            // "A unit which is a standard measure of the number of rotations in a given time."
            UO_rotational_frequency_unit,

            // "A unit which is a standard measure of the volume of a given mass of substance (the reciprocal of density)."
            UO_specific_volume_unit,

            // "A unit which is a standard measure of the rate of movement. Speed is measured in the same physical units of measurement as velocity, but does not contain the element of direction that velocity has. Speed is thus the magnitude component of velocity."
            UO_speed_velocity_unit,

            // "A concentration unit which is a standard measure of the number of moles of a given substance per liter of solution."
            UO_unit_of_molarity,

            // "A unit of concentration which expresses a concentration of 1 mole of solute per liter of solution (mol/L)."
            UO_molar,

            // "A unit of molarity which is equal to one thousandth of a molar or 10^
            UO_millimolar,

            // "A unit of molarity which is equal to one millionth of a molar or 10^
            UO_micromolar,

            // "A unit of molarity which is equal to one thousandth of one millionth of a molar or 10^
            UO_nanomolar,

            // "A unit of molarity which is equal to 10^
            UO_picomolar,

            // "A concentration unit which is a standard measure of the number of moles of a given substance per kilogram of solvent."
            UO_unit_of_molality,

            // "A unit of concentration which expresses a concentration of a solution of 1 mole per kilogram of solvent (mol/kg)."
            UO_molal,

            // "A molality unit which is equal to one thousandth of a molal or 10^
            UO_millimolal,

            // "A molality unit which is equal to one millionth of a molal or 10^
            UO_micromolal,

            // "A molality unit which is equal to one thousandth of one millionth of a molal or 10^
            UO_nanomolal,

            // "A molality unit which is equal to 10^
            UO_picomolal,

            // "A unit of molarity which is equal to 10^
            UO_femtomolar,

            // "A unit of concentration which highlights the chemical nature of salts."
            UO_unit_of_normality,

            // "A unit of concentration which is one gram equivalent of a solute per liter of solution. A gram equivalent weight or equivalent is a measure of the reactive capacity of a given molecule."
            UO_normal,

            // "A concentration unit which denotes the number of moles of solute as a proportion of the total number of moles in a solution."
            UO_mole_fraction,

            // "An acceleration unit which is equal to the acceleration an object changing its velocity by 1meter/s over a time period that equals one second."
            UO_meter_per_second_per_second,

            // "An angular unit acceleration which is equal to the angular acceleration of an object changing its angular velocity by 1rad/s over a time period that equals one second."
            UO_radian_per_second_per_second,

            // "An angular unit velocity which is equal to about 9.54930 rpm (revolutions per minute)."
            UO_radian_per_second,

            // "An area unit which is equal to an area enclosed by a square with sides each 1 meter long."
            UO_square_meter,

            // "An area unit which is equal to one thousand of square meter or 10^
            UO_square_centimeter,

            // "An area unit which is equal to one millionth of a square meter or 10^
            UO_square_millimeter,

            // "A mass unit density which is equal to mass of an object in kilograms divided by the volume in cubic meters."
            UO_kilogram_per_cubic_meter,

            // "A mass unit density which is equal to mass of an object in grams divided by the volume in cubic centimeters."
            UO_gram_per_cubic_centimeter,

            // "A luminance unit which is equal to a luminous intensity of one candela radiating from a surface whose area is one square meter."
            UO_candela_per_square_meter,

            // "An area density unit which is equal to the mass of an object in kilograms divided by the surface area in meters squared."
            UO_kilogram_per_square_meter,

            // "A molar mass unit which is equal to one kilogram of mass of one mole of chemical element or chemical compound."
            UO_kilogram_per_mole,

            // "A molar mass unit which is equal to one gram of mass of one mole of chemical element or chemical compound."
            UO_gram_per_mole,

            // "A molar volume unit which is equal to 1 cubic meter occupied by one mole of a substance in the form of a solid, liquid, or gas."
            UO_cubic_meter_per_mole,

            // "A molar volume unit which is equal to 1 cubic centimeter occupied by one mole of a substance in the form of a solid, liquid, or gas."
            UO_cubic_centimeter_per_mole,

            // "A momentum unit which is equal to the momentum of a one kilogram mass object with a speed of one meter per second."
            UO_kilogram_meter_per_second,

            // "A rotational frequency unit which is equal to the number complete turn in a period of time that equals to 1 second."
            UO_turns_per_second,

            // "A specific volume unit which is equal to one cubic meter volume occupied by one kilogram of a particular substance."
            UO_cubic_meter_per_kilogram,

            // "A speed/velocity unit which is equal to the speed of an object traveling 1 meter distance in one second."
            UO_meter_per_second,

            // "A unit which is a standard measure of the amount of space occupied by any substance, whether solid, liquid, or gas."
            UO_volume_unit,

            // "A volume unit which is equal to the volume of a cube with edges one meter in length. One cubic meter equals to 1000 liters."
            UO_cubic_meter,

            // "A volume unit which is equal to one millionth of a cubic meter or 10^
            UO_cubic_centimeter,

            // "A volume unit which is equal to one thousandth of a liter or 10^
            UO_milliliter,

            // "A volume unit which is equal to one thousandth of a cubic meter or 10^
            UO_liter,

            // "A volume unit which is equal to one thousand of a cubic meter or 10^
            UO_cubic_decimeter,

            // "A volume unit which is equal to one millionth of a liter or 10^
            UO_microliter,

            // "A volume unit which is equal to one thousandth of one millionth of a liter or 10^
            UO_nanoliter,

            // "A volume unit which is equal to 10^
            UO_picoliter,

            // "A volume unit which is equal to 10^
            UO_femtoliter,

            // "A unit which is a standard measure of the number of repetitive actions in a particular time."
            UO_frequency_unit,

            // "A frequency unit which is equal to 1 complete cycle of a recurring phenomenon in 1 second."
            UO_hertz,

            // "A unit which is a standard measure of the force is applied when a mass is accelerated."
            UO_force_unit,

            // "A force unit which is equal to the force required to cause an acceleration of 1m/s2 of a mass of 1 Kg in the direction of the force."
            UO_newton,

            // "A unit which is a standard measure of the force applied to a given area."
            UO_pressure_unit,

            // "A pressure unit which is equal to the pressure or stress on a surface caused by a force of 1 newton spread over a surface of 1 m^
            UO_pascal,

            // "A unit which is a standard measure of the work done by a certain force (gravitational, electric, magnetic, force of inertia, etc)."
            UO_energy_unit,

            // "An energy unit which is equal to the energy required when a force of 1 newton moves an object 1 meter in the direction of the force."
            UO_joule,

            // "A unit which is a standard measure power or the rate of doing work."
            UO_power_unit,

            // "A power unit which is equal to the power used when work is done at the rate of 1 joule per second."
            UO_watt,

            // "A unit which is a standard measure of the luminous flux incident on a unit area."
            UO_illuminance_unit,

            // "An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 m^
            UO_lux,

            // "A unit which is a standard measure of the flow of radiant energy."
            UO_luminous_flux_unit,

            // "A luminous flux unit which is equal to the luminous flux emitted into 1 steradian by a point source of 1 candela."
            UO_lumen,

            // "A unit which is a standard measure of the amount of the action of a catalyst."
            UO_catalytic_activity_unit,

            // "A catalytic unit activity which is equal to the activity of a catalyst in moles per second, such as the amount of an enzyme needed to transform one mole of substrate per second."
            UO_katal,

            // "A unit which is a standard measure of the figure or space formed by the junction of two lines or planes."
            UO_angle_unit,

            // "A unit which is a standard measure of the angle formed by two straight lines in the same plane."
            UO_plane_angle_unit,

            // "A plane angle unit which is equal to the angle subtended at the center of a circle by an arc equal in length to the radius of the circle, approximately 57 degrees 17 minutes and 44.6 seconds."
            UO_radian,

            // "A unit which is a standard measure of the angle formed by three or more planes intersecting at a common point."
            UO_solid_angle_unit,

            // "A solid angle unit which is equal to the solid angle subtended at the center of a sphere by an area on the surface of the sphere that is equal to the radius squared."
            UO_steradian,

            // "A unit which is a standard measure of the amount of radiation emitted by a given radiation source as well as the amount of radiation absorbed or deposited in a specific material by a radiation source."
            UO_radiation_unit,

            // "A unit which is a standard measure of the transformation (disintegration) rate of a radioactive substance."
            UO_activity__of_a_radionuclide__unit,

            // "A unit which is a standard measure of the energy imparted by ionizing radiation to unit mass of matter such as tissue."
            UO_absorbed_dose_unit,

            // "A unit which is a standard measure of the expression of dose in terms of its biological effect."
            UO_dose_equivalent_unit,

            // "A unit which is a standard measure of the quantity that expresses the ability of radiation to ionize air and thereby create electric charges which can be collected and measured."
            UO_exposure_unit,

            // "An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second (dps)."
            UO_becquerel,

            // "An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which there are 3.7 x 10^
            UO_curie,

            // "An absorbed dose unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter."
            UO_gray,

            // "An absorbed dose unit which is equal to 0.01 gray (Gy)."
            UO_rad,

            // "An exposure unit which is equal to the amount of radiation required to liberate positive and negative charges of one electrostatic unit of charge in 1 cm^
            UO_roentgen,

            // "A dose equivalent unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter."
            UO_sievert,

            // "A dose equivalent unit which is equal to one thousandth of a sievert or 10^
            UO_millisievert,

            // "A dose equivalent unit which is equal to one millionth of a sievert or 10^
            UO_microsievert,

            // "A dose equivalent unit which when multiplied by hundred is equal to one sievert or 1 Sv. 1 Sv is equal to 100 rem."
            UO_Roentgen_equivalent_man,

            // "An absorbed dose unit which is equal to one millionth of a gray or 10^
            UO_microgray,

            // "An absorbed dose unit which is equal to one thousandth of a gray or 10^
            UO_milligray,

            // "An absorbed dose unit which is equal to one thousandth of a millionth of a gray or 10^
            UO_nanogray,

            // "A dose equivalent unit which is equal to one thousandth of a millionth of a sievert or 10^
            UO_nanosievert,

            // "An activity (of a radionuclide) unit which is equal to one thousandth of a curie or 10^
            UO_millicurie,

            // "An activity (of a radionuclide) unit which is equal to one millionth of a curie or 10^
            UO_microcurie,

            // "An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per minute or there is one atom disintegration per minute."
            UO_disintegrations_per_minute,

            // "An activity (of a radionuclide) unit which is equal to the number of light emissions produced by ionizing radiation in one minute."
            UO_counts_per_minute,

            // "A time unit which is equal to one thousandth of one millionth of a second or 10^
            UO_nanosecond,

            // "A time unit which is equal to 100 years."
            UO_century,

            // "A time unit which represents the period over which the activity or concentration of a specified chemical or element falls to half its original activity or concentration."
            UO_half_life,

            // "An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 foot^
            UO_foot_candle,

            // "A unit which is a standard measure of the power of electromagnetic radiation at a surface, per unit area."
            UO_irradiance_unit,

            // "An irradiance unit which is equal to 1 watt of radiant power incident per one square meter surface area."
            UO_watt_per_square_meter,

            // "An irradiance unit which is equal to one einstein per square meter per second. One einstein is one mole of photons, regardless of their frequency. Therefore, the number of photons in an einstein is Avogadro's number."
            UO_einstein_per_square_meter_per_second,

            // "A unit which is a standard measure of the intensity of light."
            UO_light_unit,

            // "A radiance unit which is equal to one watt of radiant power incident per steradian solid angle per one square meter projected area of the source, as viewed from the given direction."
            UO_watt_per_steradian_per_square_meter,

            // "A unit which is a standard measure of the intensity of electromagnetic radiation."
            UO_radiant_intensity_unit,

            // "An irradiance unit which is equal to one microeinstein per square meter per second or 10^
            UO_microeinstein_per_square_meter_per_second,

            // "A unit which is a standard measure of the power of electromagnetic radiation through space or through a material medium in the form of electromagnetic waves."
            UO_radiance_unit,

            // "A radiant intensity unit which is equal to one kilogram meter squared per second cubed per steradian."
            UO_watt_per_steradian,

            // "A dimensionless concentration unit which denotes the mass of a substance in a mixture as a percentage of the mass of the entire mixture."
            UO_mass_percentage,

            // "A dimensionless concentration unit which denotes the mass of the substance in a mixture as a percentage of the volume of the entire mixture."
            UO_mass_volume_percentage,

            // "A dimensionless concentration unit which denotes the volume of the solute in mL per 100 mL of the resulting solution."
            UO_volume_percentage,

            // "A dimensionless concentration notation which describes the amount of one substance in another. It is the ratio of the amount of the substance of interest to the amount of that substance plus the amount of the substance."
            UO_parts_per_notation_unit,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 100 regardless of the units of measure as long as they are the same."
            UO_parts_per_hundred,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1000 regardless of the units of measure as long as they are the same."
            UO_parts_per_thousand,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^
            UO_parts_per_million,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure as long as they are the same or 1 part in 10^
            UO_parts_per_billion,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^
            UO_parts_per_trillion,

            // "A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^
            UO_parts_per_quadrillion,

            // "A mass unit density which is equal to mass of an object in grams divided by the volume in milliliter."
            UO_gram_per_milliliter,

            // "A mass unit density which is equal to mass of an object in kilograms divided by the volume in liters."
            UO_kilogram_per_liter,

            // "A mass unit density which is equal to mass of an object in grams divided by the volume in liters."
            UO_gram_per_liter,

            // "A mass unit density which is equal to mass of an object in milligrams divided by the volume in milliliters."
            UO_milligram_per_milliliter,

            // "A concentration unit which is a standard measure of the number of units, as an agreed arbitrary amount, of a given substance per a specific volume of solution."
            UO_unit_per_volume_unit,

            // "A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one milliliter."
            UO_unit_per_milliliter,

            // "A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one liter."
            UO_unit_per_liter,

            // "A concentration unit which is a standard measure of the mass of a substance in a given volume (density)."
            UO_mass_per_unit_volume,

            // "A catalytic unit activity which is equal to the amount of the enzyme that catalyzes the conversion of 1 micro mole of substrate per minute."
            UO_enzyme_unit,

            // "A unit which is a standard measure of the influence exerted by some mass."
            UO_density_unit,

            // "A density unit which is a standard measure of the mass exerting an influence on a one-dimensional object."
            UO_linear_density_unit,

            // "An area density unit which is equal to the mass of an object in kilograms divided by one meter."
            UO_kilogram_per_meter,

            // "A plane angle unit which is equal to 1/360 of a full rotation or 1.7453310^
            UO_degree,

            // "A unit which is a standard measure of physical quantity consisting of only a numerical number without any units."
            UO_dimensionless_unit,

            // "A dimensionless ratio unit which denotes numbers as fractions of 100."
            UO_percent,

            // "A dimensionless unit which denoted an irrational real number, approximately equal to 3.14159 which is the ratio of a circle's circumference to its diameter in Euclidean geometry."
            UO_pi,

            // "A dimensionless unit which denotes a simple count of things."
            UO_count_unit,

            // "A dimensionless unit which denotes an amount or magnitude of one quantity relative to another."
            UO_ratio,

            // "A dimensionless ratio unit which relates the part (the numerator) to the whole (the denominator)."
            UO_fraction,

            // "A dimensionless count unit which denotes the number of molecules."
            UO_molecule_count,

            // "A dimensionless percent unit which denotes the homogeneity of a biomaterial."
            UO_purity_percentage,

            // "A dimensionless percent unit which denotes the density of an attached or monolayer culture (e.g., cell culture)."
            UO_confluence_percentage,

            // "A temperature unit which is equal to 5/9ths of a kelvin. Negative 40 degrees Fahrenheit is equal to negative 40 degrees Celsius."
            UO_degree_Fahrenheit,

            // "A dimensionless concentration notation which denotes the acidity of a solution in terms of activity of hydrogen ions (H+)."
            UO_pH,

            // "A specific volume unit which is equal to one liter volume occupied by one kilogram of a particular substance."
            UO_liter_per_kilogram,

            // "A specific volume unit which is equal to a thousandth of a liter per kilogram or 10^
            UO_milliliter_per_kilogram,

            // "A specific volume unit which is equal to one millionth of a liter per kilogram or 10^
            UO_microliter_per_kilogram,

            // "A concentration unit which denotes the average cell number in a given volume."
            UO_cell_concentration_unit,

            // "A unit of cell concentration which is equal to one cell in a volume of 1 milliliter."
            UO_cells_per_milliliter,

            // "A concentration unit which is a standard measure of the amount of the action of a catalyst in a given volume."
            UO_catalytic__activity__concentration_unit,

            // "A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one cubic meter."
            UO_katal_per_cubic_meter,

            // "A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one thousandth of a cubic meter."
            UO_katal_per_liter,

            // "A dimensionless concentration unit which denotes the given volume of the solute in the total volume of the resulting solution."
            UO_volume_per_unit_volume,

            // "A volume per unit volume unit which is equal to one millionth of a liter of solute in one cubic meter of solution."
            UO_milliliter_per_cubic_meter,

            // "A volume per unit volume unit which is equal to one millionth of a liter of solute in one liter of solution."
            UO_milliliter_per_liter,

            // "A mass density unit which is equal to mass of an object in grams divided by the volume in deciliters."
            UO_gram_per_deciliter,

            // "A volume unit which is equal to one tenth of a liter or 10^
            UO_deciliter,

            // "A dimensionless count unit which a measure of viable bacterial numbers."
            UO_colony_forming_unit,

            // "A dimensionless count unit which a measure of plague forming units in a given volume."
            UO_plaque_forming_unit,

            // "A concentration unit which a measure of viable bacterial numbers in a given volume."
            UO_colony_forming_unit_per_volume,

            // "A colony forming unit which a measure of viable bacterial numbers in one milliliter."
            UO_colony_forming_unit_per_milliliter,

            // "A concentration unit which a measure of plague forming units in a given volume."
            UO_plaque_forming_unit_per_volume,

            // "A concentration unit which a measure of plague forming units in one milliliter."
            UO_plaque_forming_unit_per_milliliter,

            // "An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second."
            UO_disintegrations_per_second,

            // "A unit which is a standard measure of the work done per unit charge as a charge is moved between two points in an electric field."
            UO_electric_potential_difference_unit,

            // "An electric potential difference unit which is equal to the work per unit charge. One volt is the potential difference required to move one coulomb of charge between two points in a circuit while using one joule of energy."
            UO_volt,

            // "A unit which is a standard measure of the quantity of unbalanced electricity in a body (either positive or negative) and construed as an excess or deficiency of electrons."
            UO_electric_charge,

            // "An electrical charge unit which is equal to the amount of charge transferred by a current of 1 ampere in 1 second."
            UO_coulomb,

            // "An independently to the base SI units defined mass unit which is equal to one twelfth of the mass of an unbound atom of the carbon-12 nuclide, at rest and in its ground state."
            UO_dalton,

            // "A mass unit which is equal to one thousand daltons."
            UO_kilodalton,

            // "An energy unit which is equal to the amount of electrical energy equivalent to a one-watt load drawing power for one hour."
            UO_watt_hour,

            // "An energy unit which is equal to 1,000 watt-hours."
            UO_kilowatt_hour,

            // "A unit which is a standard measure of quantity of magnetism, taking account of the strength and the extent of a magnetic field."
            UO_magnetic_flux_unit,

            // "A magnetic flux unit which is equal to the amount of flux that when linked with a single turn of wire for an interval of one second will induce an electromotive force of one volt."
            UO_weber,

            // "A unit which is a standard measure of the strength of a magnetic field."
            UO_magnetic_flux_density_unit,

            // "A magnetic flux density unit which is equal to one weber per square meter."
            UO_tesla,

            // "A magnetic flux unit which is equal to 3600 Wb."
            UO_volt_hour,

            // "A magnetic flux unit which is equal to one thousand volt-hours."
            UO_kilovolt_hour,

            // "A unit which is a standard measure of the amount of information."
            UO_information_unit,

            // "An information unit which refers to a digit in the binary numeral system, which consists of base 2 digits (ie there are only 2 possible values: 0 or 1)."
            UO_bit,

            // "An information unit which is equal to 8 bits."
            UO_byte,

            // "An information unit which is equal to 1000 bytes."
            UO_kilobyte,

            // "An information unit which is equal to 1000 kB."
            UO_megabyte,

            // "An information unit which is a standard measure of the detail an image holds."
            UO_image_resolution_unit,

            // "An image resolution unit which is a standard measure of the amount of spatial detail in an image."
            UO_chroma_sampling_unit,

            // "An image resolution unit which is a standard measure of the amount of contrast available in a pixel."
            UO_dynamic_range_unit,

            // "An image resolution unit which is a standard measure of the way luminance and chrominance may be sampled at different levels."
            UO_spatial_resolution_unit,

            // "A spatial resolution unit which is a standard measure of the printing resolution, in particular the number of individual dots of ink a printer or toner can produce within a linear one-inch space."
            UO_dots_per_inch,

            // "A spatial resolution unit which is equal to a pixel size of one micrometer."
            UO_micron_pixel,

            // "A spatial resolution unit which is a standard measure of the resolution of a computer display, related to the size of the display in inches and the total number of pixels in the horizontal and vertical directions."
            UO_pixels_per_inch,

            // "A spatial resolution unit which is a standard measure of the number of pixels in one millimeter length or width of a digital image divided by the physical length or width of a printed image."
            UO_pixels_per_millimeter,

            // "A count unit which contains one nucleotide."
            UO_base_pair,

            // "An information unit which is equal to 1024 B."
            UO_kibibyte,

            // "An information unit which is equal to 1024 KiB."
            UO_mebibyte,

            // "An electric potential difference unit which is equal to one thousandth of a volt or 10^
            UO_millivolt,

            // "An electric potential difference unit which is equal to one thousand volts or 10^
            UO_kilovolt,

            // "An electric potential difference unit which is equal to one millionth of a volt or 10^
            UO_microvolt,

            // "An electric potential difference unit which is equal to one billionth of a volt or 10^
            UO_nanovolt,

            // "An electric potential difference unit which is equal to one trillionth of a volt or 10^
            UO_picovolt,

            // "An electric potential difference unit which is equal to one million volts or 10^
            UO_megavolt,

            // "A unit which is a standard measure of the ability of a liguid to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces."
            UO_surface_tension_unit,

            // "A surface tension unit which is equal to one newton per meter."
            UO_newton_per_meter,

            // "A surface tension unit which is equal to one dyne per centimeter."
            UO_dyne_per_cm,

            // "A unit which is a standard measure of the internal resistance of fluids to flow."
            UO_viscosity_unit,

            // "A viscosity unit which is equal to one pascale per second."
            UO_pascal_second,

            // "A viscosity unit which is equal to one dyne second per square centimeter."
            UO_poise,

            // "A ratio unit which is an indicator of sound power per unit area."
            UO_decibel,

            // "A unit which is a standard measure of the estimate of the stochastic effect that a non-uniform radiation dose has on a human."
            UO_effective_dose_unit,

            // "A unit which represents a standard measurement of the transmission of an entity through a medium."
            UO_conduction_unit,

            // "A unit which represents a standard measurement of the movement of electrically charged particles through a transmission medium (electrical conductor)."
            UO_electrical_conduction_unit,

            // "A unit which represents a standard measurement of the spontaneous transfer of thermal energy through matter, from a region of higher temperature to a region of lower temperature."
            UO_heat_conduction_unit,

            // "An electrical conduction unit which is equal to A/V."
            UO_siemens,

            // "An heat conduction unit which is equal to one watt divided by meter kelvin."
            UO_watt_per_meter_kelvin,

            // "A non-SI unit of energy (eV) defined as the energy acquired by a single unbound electron when it passes through an electrostatic potential difference of one volt. An electronvolt is equal to 1.602 176 53(14) x 10^-19 J."
            UO_electronvolt,

            // "The electric field strength is a unit which is a measure of the potential difference between two points some distance apart."
            UO_electric_field_strength_unit,

            // "The volt per meter is a unit of electric field strength equal to the a potential difference of 1 volt existing between two points that are 1 meter apart."
            UO_volt_per_meter,

            // "A dimensionless logarithmic unit assigned to a measure of absorbance of light through a partially absorbing substance, defined as -log10(I/I_0) where I = transmitted light and I_0 = incident light."
            UO_absorbance_unit,

            // "A unit which is a standard measure of the volume of fluid which passes through a given surface per unit time ."
            UO_volumetric_flow_rate_unit,

            // "A volumetric flow rate unit which is equal to one microliter volume through a given surface in one minute."
            UO_microliters_per_minute,

            // "A unit of pressure equal to the amount of fluid pressure one millimeter deep in mercury at zero degrees centigrade on Earth."
            UO_millimetres_of_mercury,

            // "A mass unit density which is equal to mass of an object in milligrams divided by the volume in liters."
            UO_milligram_per_liter,

            // "A mass unit density which is equal to mass of an object in micrograms divided by the volume in millliters."
            UO_microgram_per_milliliter,

            // "A mass unit density which is equal to mass of an object in nanograms divided by the volume in milliliters."
            UO_nanogram_per_milliliter,

            // "A concentration unit which is a standard measure of the amount of a substance in a given container."
            UO_amount_per_container,

            // "A unit which is equal to one microgram per disk, where a disk is some physical surface/container upon which the substance is deposited."
            UO_ug_disk,

            // "A unit which is equal to one nanomole per disk, where a disk is some physical surface/container upon which the substance is deposited."
            UO_nmole_disk,

            // "A unit per milliliter unit which is equal to one thousandth of a unit of an agreed arbitrary amount per one milliliter."
            UO_milliunits_per_milliliter,

            // "A unit which represents a standard measurement occurrence of a process per unit time."
            UO_rate_unit,

            // "A rate unit which is equal to one over one nanomolar second."
            UO_count_per_nanomolar_second,

            // "A rate unit which is equal to one over one molar second."
            UO_count_per_molar_second,

            // "An area density unit which is equal to the mass of an object in kilograms divided by the surface area in hectares.."
            UO_kilogram_per_hectare,

            // "A rate unit which is equal to one over one nanomolar."
            UO_count_per_nanomolar,

            // "A rate unit which is equal to one over one molar."
            UO_count_per_molar,

            // "A prefix in the metric system denoting a factor of ten to the power of 24."
            UO_yotta,

            // "A prefix in the metric system denoting a factor of one hundred."
            UO_hecto,

            // "A prefix in the metric system denoting a factor of ten to the power of 21."
            UO_zetta,

            // "A prefix in the metric system denoting a factor of ten to the power of 18."
            UO_exa,

            // "A prefix in the metric system denoting a factor of ten to the power of 15."
            UO_peta,

            // "A prefix in the metric system denoting a factor of ten to the power of 12."
            UO_tera,

            // "A prefix in the metric system denoting a factor of ten to the power of 9."
            UO_giga,

            // "A prefix in the metric system denoting a factor of million."
            UO_mega,

            // "A prefix in the metric system denoting a factor of one thousand."
            UO_kilo,

            // "A prefix in the metric system denoting a factor of ten."
            UO_deca,

            // "A prefix in the metric system denoting a factor of one tenth."
            UO_deci,

            // "A prefix in the metric system denoting a factor of one thousand."
            UO_milli,

            // "A prefix in the metric system denoting a factor of one hundred."
            UO_centi,

            // "A prefix in the metric system denoting a factor of 10 to the power of -6."
            UO_micro,

            // "A prefix in the metric system denoting a factor of 10 to the power of -9."
            UO_nano,

            // "A mass unit density which is equal to mass of an object in micrograms divided by the volume in liters."
            UO_microgram_per_liter,

            // "A prefix in the metric system denoting a factor of 10 to the power of -12."
            UO_pico,

            // "A prefix in the metric system denoting a factor of 10 to the power of -15."
            UO_femto,

            // "A prefix in the metric system denoting a factor of 10 to the power of -18."
            UO_atto,

            // "A prefix in the metric system denoting a factor of 10 to the power of -21."
            UO_zepto,

            // "A prefix in the metric system denoting a factor of 10 to the power of -24."
            UO_yocto,

            // "A concentration unit which is a standard measure of the amount of a toxic or pharmaceutical substance administered to a recipient subject, expressed in terms of the size of the subject."
            UO_dose_unit,

            // "A dose unit which is equal to 1 milligram of a toxic or pharmaceutical substance per kilogram body weight of the recipient subject."
            UO_milligram_per_kilogram,

            // "A dose unit which is equal to 1 milligram of a toxic or pharmaceutical substance per square meter of surface area of the recipient subject."
            UO_milligram_per_square_meter,

            // "A concentration unit which is a standard measure of the amount of a toxic or pharmaceutical substance administered over time to a recipient subject, expressed in terms of the size of the subject."
            UO_dosage_unit,

            // "A dosage unit which is equal to 1 milligram per day of a toxic or pharmaceutical substance per kilogram body weight of the recipient subject."
            UO_milligram_per_kilogram_per_day,

            // "A derived unit which is a measure of relative light intensity, as typically measured by a luminometer, spectrophotometer, or fluorimeter in biological research applications."
            UO_relative_light_unit,

            // "A relative light unit which is a measure of relative luminescence intensity."
            UO_relative_luminescence_unit,

            // "A relative light unit which is a measure of relative fluorescence intensity."
            UO_relative_fluorescence_unit,

            // "A unit used to indicate the clarity of water or other solutions or suspensions, as measured by the ability of the solution or suspension to scatter light of a defined wavelength range."
            UO_turbidity_unit,

            // "A unit of cell concentration which is equal to one cell in a volume of 1 microliter."
            UO_cells_per_microliter,

            // "A unit of cell concentration which is equal to 1 cell in a well or discrete container of arbitrary volume."
            UO_cells_per_well,

            // "1000 formazin turbidity units (FNU) on the empirical formazin turbidity scale represents reflectance of insol. reaction products of 0.0725 g hydrazine sulfate with 0.7250 g hexamethylenetetramine diluted to 1 L."
            UO_formazin_nephelometric_unit,

            // "A concentration unit which is a standard measure of the amount of radioactivity in a given volume."
            UO_radioactivity_concentration,

            // "A unit of radioactivity concentration which is equal to one curie in a volume of 1 liter."
            UO_curie_per_liter,

            // "A unit of radioactivity concentration which is equal to one micro curie in a volume of 1 liter."
            UO_microcurie_per_milliliter,

            // "A unit that is the ratio of concentration of two solutions of interest, typically with one solution derived from the other by the addition of solvent."
            UO_fold_dilution,

            // "An area density unit which is equal to the mass of an object in tons divided by the surface area in hectares."
            UO_ton_per_hectare,

            // "An area unit which is equal to an area enclosed by a square with sides each 1 angstrom long."
            UO_square_angstrom,

            // "A frequency unit which is equal to one million hertz or 10^
            UO_megaHertz,

            // "A unit used to express distances on a genetic map. In genetic mapping, distances between markers are determined by measuring the rate of meoitic recombination between them, which increases proportionately with the distance separating them. A cM is defined as the length of an interval in which there is a 1% probability of recombination. On the average, 1 cM is roughly equivalent to 1 megabase (Mb) of DNA, although this can vary widely due to hot and cold spots of recombination."
            UO_centiMorgan,

            // "A unit of genetic map distance defined corresponding to an interval in which there is a 1% probability of X-irradiation induced breakage. To be completely specified, the unit must be qualified by the radiation in dosage in rads (e.g. cR8000), because this determines the actual breakage probability."
            UO_centiRay,

            // "A unit equal to one thousand base pairs."
            UO_kilobasepair,

            // "A unit equal to one million base pairs"
            UO_megabasepair,

            // "A unit equal to one billion base pairs."
            UO_gigabasepair,

            // "An information unit which is equal to 1000000000 bytes."
            UO_gigabyte,

            // "An information unit which is equal to 1000 gigabytes."
            UO_terabyte,

        }

        private void FillRelationsIsA()
        {
            RelationsIsA.Add(CVID.MS_sample_number, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_sample_name, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_sample_state, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_sample_mass, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_sample_volume, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_sample_concentration, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_mass_resolution, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_resolution_measurement_method, new List<CVID> { CVID.MS_measurement_method, });
            RelationsIsA.Add(CVID.MS_accuracy, new List<CVID> { CVID.MS_mass_analyzer_attribute, });
            RelationsIsA.Add(CVID.MS_scan_rate, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_scan_start_time, new List<CVID> { CVID.MS_scan_attribute, CVID.MS_peptide_result_details, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_reflectron_state, new List<CVID> { CVID.MS_mass_analyzer_attribute, });
            RelationsIsA.Add(CVID.MS_TOF_Total_Path_Length, new List<CVID> { CVID.MS_mass_analyzer_attribute, });
            RelationsIsA.Add(CVID.MS_final_MS_exponent, new List<CVID> { CVID.MS_mass_analyzer_attribute, });
            RelationsIsA.Add(CVID.MS_magnetic_field_strength, new List<CVID> { CVID.MS_mass_analyzer_attribute, });
            RelationsIsA.Add(CVID.MS_detector_resolution, new List<CVID> { CVID.MS_detector_attribute, });
            RelationsIsA.Add(CVID.MS_sampling_frequency, new List<CVID> { CVID.MS_detector_attribute, });
            RelationsIsA.Add(CVID.MS_customization, new List<CVID> { CVID.MS_instrument_attribute, });
            RelationsIsA.Add(CVID.MS_deisotoping, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_charge_deconvolution, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_peak_picking, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_m_z, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.MS_charge_state, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_peak_intensity, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_intensity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.MS_collision_energy, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_energy_unit_OBSOLETE, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.MS_emulsion, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_gaseous_sample_state, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_liquid_sample_state, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_solid_sample_state, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_solution, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_suspension, new List<CVID> { CVID.MS_sample_state, });
            RelationsIsA.Add(CVID.MS_sample_batch, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_continuous_flow_fast_atom_bombardment, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_direct_inlet, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_electrospray_inlet, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_flow_injection_analysis, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_inductively_coupled_plasma, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_infusion, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_jet_separator, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_membrane_separator, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_moving_belt, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_moving_wire, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_open_split, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_particle_beam, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_reservoir, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_septum, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_thermospray_inlet, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_atmospheric_pressure_chemical_ionization, new List<CVID> { CVID.MS_atmospheric_pressure_ionization, });
            RelationsIsA.Add(CVID.MS_chemical_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_electrospray_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_fast_atom_bombardment_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_matrix_assisted_laser_desorption_ionization, new List<CVID> { CVID.MS_desorption_ionization, });
            RelationsIsA.Add(CVID.MS_axial_ejection_linear_ion_trap, new List<CVID> { CVID.MS_linear_ion_trap, });
            RelationsIsA.Add(CVID.MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_magnetic_sector, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_quadrupole, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_quadrupole_ion_trap, new List<CVID> { CVID.MS_ion_trap, });
            RelationsIsA.Add(CVID.MS_radial_ejection_linear_ion_trap, new List<CVID> { CVID.MS_linear_ion_trap, });
            RelationsIsA.Add(CVID.MS_time_of_flight, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_baseline, new List<CVID> { CVID.MS_resolution_measurement_method, });
            RelationsIsA.Add(CVID.MS_full_width_at_half_maximum, new List<CVID> { CVID.MS_resolution_measurement_method, });
            RelationsIsA.Add(CVID.MS_ten_percent_valley, new List<CVID> { CVID.MS_resolution_measurement_method, });
            RelationsIsA.Add(CVID.MS_decreasing_m_z_scan, new List<CVID> { CVID.MS_scan_direction, });
            RelationsIsA.Add(CVID.MS_increasing_m_z_scan, new List<CVID> { CVID.MS_scan_direction, });
            RelationsIsA.Add(CVID.MS_exponential, new List<CVID> { CVID.MS_scan_law, });
            RelationsIsA.Add(CVID.MS_linear_OBSOLETE, new List<CVID> { CVID.MS_scan_law, });
            RelationsIsA.Add(CVID.MS_quadratic, new List<CVID> { CVID.MS_scan_law, });
            RelationsIsA.Add(CVID.MS_reflectron_off, new List<CVID> { CVID.MS_reflectron_state, });
            RelationsIsA.Add(CVID.MS_reflectron_on, new List<CVID> { CVID.MS_reflectron_state, });
            RelationsIsA.Add(CVID.MS_channeltron, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_conversion_dynode_electron_multiplier, new List<CVID> { CVID.MS_conversion_dynode, });
            RelationsIsA.Add(CVID.MS_conversion_dynode_photomultiplier, new List<CVID> { CVID.MS_conversion_dynode, });
            RelationsIsA.Add(CVID.MS_daly_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_electron_multiplier_tube, new List<CVID> { CVID.MS_electron_multiplier, });
            RelationsIsA.Add(CVID.MS_faraday_cup, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_focal_plane_array, new List<CVID> { CVID.MS_focal_plane_collector, });
            RelationsIsA.Add(CVID.MS_microchannel_plate_detector, new List<CVID> { CVID.MS_array_detector, });
            RelationsIsA.Add(CVID.MS_multi_collector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_photomultiplier, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_analog_digital_converter, new List<CVID> { CVID.MS_detector_acquisition_mode, });
            RelationsIsA.Add(CVID.MS_pulse_counting, new List<CVID> { CVID.MS_detector_acquisition_mode, });
            RelationsIsA.Add(CVID.MS_time_digital_converter, new List<CVID> { CVID.MS_detector_acquisition_mode, });
            RelationsIsA.Add(CVID.MS_transient_recorder, new List<CVID> { CVID.MS_detector_acquisition_mode, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_IonSpec_instrument_model, new List<CVID> { CVID.MS_Varian_instrument_model, });
            RelationsIsA.Add(CVID.MS_Shimadzu_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Thermo_Finnigan_instrument_model, new List<CVID> { CVID.MS_Thermo_Fisher_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Waters_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_centroid_spectrum, new List<CVID> { CVID.MS_spectrum_representation, });
            RelationsIsA.Add(CVID.MS_profile_spectrum, new List<CVID> { CVID.MS_spectrum_representation, });
            RelationsIsA.Add(CVID.MS_negative_scan, new List<CVID> { CVID.PATO_polarity, CVID.MS_scan_polarity, });
            RelationsIsA.Add(CVID.MS_positive_scan, new List<CVID> { CVID.PATO_polarity, CVID.MS_scan_polarity, });
            RelationsIsA.Add(CVID.MS_number_of_detector_counts, new List<CVID> { CVID.MS_intensity_unit, });
            RelationsIsA.Add(CVID.MS_percent_of_base_peak, new List<CVID> { CVID.MS_intensity_unit, });
            RelationsIsA.Add(CVID.MS_collision_induced_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_plasma_desorption, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_post_source_decay, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_surface_induced_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_normalized_collision_energy, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_4000_QTRAP, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_4700_Proteomics_Analyzer, new List<CVID> { CVID.MS_Applied_Biosystems_instrument_model, });
            RelationsIsA.Add(CVID.MS_apex_IV, new List<CVID> { CVID.MS_Bruker_Daltonics_apex_series, });
            RelationsIsA.Add(CVID.MS_apex_Q, new List<CVID> { CVID.MS_Bruker_Daltonics_apex_series, });
            RelationsIsA.Add(CVID.MS_API_150EX, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_150EX_Prep, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_2000, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_3000, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_4000, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_autoflex_II, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_autoflex_TOF_TOF, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Auto_Spec_Ultima_NT, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_BioTOF_II, new List<CVID> { CVID.MS_Bruker_Daltonics_BioTOF_series, });
            RelationsIsA.Add(CVID.MS_BioTOF_Q, new List<CVID> { CVID.MS_Bruker_Daltonics_BioTOF_series, });
            RelationsIsA.Add(CVID.MS_DELTA_plusAdvantage, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_DELTAplusXP, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_esquire_4000, new List<CVID> { CVID.MS_Bruker_Daltonics_esquire_series, });
            RelationsIsA.Add(CVID.MS_esquire_6000, new List<CVID> { CVID.MS_Bruker_Daltonics_esquire_series, });
            RelationsIsA.Add(CVID.MS_explorer, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_GCT, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_HCT, new List<CVID> { CVID.MS_Bruker_Daltonics_HCT_Series, });
            RelationsIsA.Add(CVID.MS_HCTplus, new List<CVID> { CVID.MS_Bruker_Daltonics_HCT_Series, });
            RelationsIsA.Add(CVID.MS_HiRes_ESI, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_HiRes_MALDI, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_IsoPrime, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_IsoProbe, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_IsoProbe_T, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCQ_Advantage, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCQ_Classic, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCQ_Deca_XP_Plus, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_M_LDI_L, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_M_LDI_LR, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MAT253, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_MAT900XP, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_MAT900XP_Trap, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_MAT95XP, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_MAT95XP_Trap, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_microflex, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_microTOF_LC, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_neptune, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_NG_5400, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_OMEGA, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_OMEGA_2001, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_OmniFlex, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Platform_ICP, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_PolarisQ, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_proteomics_solution_1, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_Q_TRAP, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_Q_Tof_micro, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Q_Tof_ultima, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_QSTAR, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_quattro_micro, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Quattro_UItima, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Surveyor_MSQ, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_SymBiot_I, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_SymBiot_XVI, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_TEMPUS_TOF, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_TRACE_DSQ, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_TRITON, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_Quantum, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_ultima, new List<CVID> { CVID.MS_IonSpec_instrument_model, });
            RelationsIsA.Add(CVID.MS_ultraflex, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_ultraflex_TOF_TOF, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Voyager_DE_PRO, new List<CVID> { CVID.MS_Applied_Biosystems_instrument_model, });
            RelationsIsA.Add(CVID.MS_Voyager_DE_STR, new List<CVID> { CVID.MS_Applied_Biosystems_instrument_model, });
            RelationsIsA.Add(CVID.MS_selected_ion_monitoring, new List<CVID> { CVID.MS_measurement_method, });
            RelationsIsA.Add(CVID.MS_selected_reaction_monitoring, new List<CVID> { CVID.MS_measurement_method, });
            RelationsIsA.Add(CVID.MS_base_peak, new List<CVID> { CVID.MS_peak, });
            RelationsIsA.Add(CVID.MS_field_free_region, new List<CVID> { CVID.MS_ion_optics_attribute, });
            RelationsIsA.Add(CVID.MS_magnetic_deflection, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_multiphoton_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_total_ion_current_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_transmission, new List<CVID> { CVID.MS_instrument_attribute, });
            RelationsIsA.Add(CVID.MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization, new List<CVID> { CVID.MS_atmospheric_pressure_ionization, });
            RelationsIsA.Add(CVID.MS_atmospheric_pressure_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_blackbody_infrared_radiative_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_charge_stripping, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_delayed_extraction, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_desorption_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_direct_insertion_probe, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_direct_liquid_introduction, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_electron_capture_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_electron_multiplier, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_electrostatic_energy_analyzer, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_flowing_afterglow, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_field_desorption, new List<CVID> { CVID.MS_desorption_ionization, });
            RelationsIsA.Add(CVID.MS_field_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_glow_discharge_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_infrared_multiphoton_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_ion_trap, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_Negative_Ion_chemical_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_neutralization_reionization_mass_spectrometry, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_photoionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_pyrolysis_mass_spectrometry, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_collision_quadrupole, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_resonance_enhanced_multiphoton_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_surface_enhanced_laser_desorption_ionization, new List<CVID> { CVID.MS_surface_ionization, });
            RelationsIsA.Add(CVID.MS_surface_enhanced_neat_desorption, new List<CVID> { CVID.MS_surface_ionization, });
            RelationsIsA.Add(CVID.MS_selected_ion_flow_tube, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_sustained_off_resonance_irradiation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_stored_waveform_inverse_fourier_transform, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_total_ion_current, new List<CVID> { CVID.MS_spectrum_attribute, });
            RelationsIsA.Add(CVID.MS_time_lag_focusing, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_cyclotron, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_linear_ion_trap, new List<CVID> { CVID.MS_ion_trap, });
            RelationsIsA.Add(CVID.MS_mass_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_reflectron, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_accelerating_voltage, new List<CVID> { CVID.MS_ion_optics_attribute, });
            RelationsIsA.Add(CVID.MS_einzel_lens, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_electric_field_strength, new List<CVID> { CVID.MS_ion_optics_attribute, });
            RelationsIsA.Add(CVID.MS_first_stability_region, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_fringing_field, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_kinetic_energy_analyzer, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_space_charge_effect, new List<CVID> { CVID.MS_ion_optics_attribute, });
            RelationsIsA.Add(CVID.MS_static_field, new List<CVID> { CVID.MS_ion_optics_type, });
            RelationsIsA.Add(CVID.MS_charge_inversion_mass_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_constant_neutral_gain_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_constant_neutral_loss_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_e_2_mass_spectrum, new List<CVID> { CVID.MS_mass_spectrum, });
            RelationsIsA.Add(CVID.MS_neutral_loss, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_precursor_ion_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_product_ion_spectrum_OBSOLETE, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_array_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_conversion_dynode, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_dynode, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_focal_plane_collector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_ion_to_photon_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_point_collector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_postacceleration_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_adiabatic_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_associative_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_atmospheric_pressure_photoionization, new List<CVID> { CVID.MS_atmospheric_pressure_ionization, });
            RelationsIsA.Add(CVID.MS_autodetachment, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_autoionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_charge_exchange_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_chemi_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_desorption_ionization_on_silicon, new List<CVID> { CVID.MS_desorption_ionization, });
            RelationsIsA.Add(CVID.MS_dissociative_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_electron_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_ionization_efficiency, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_laser_desorption_ionization, new List<CVID> { CVID.MS_desorption_ionization, });
            RelationsIsA.Add(CVID.MS_liquid_secondary_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_membrane_inlet, new List<CVID> { CVID.MS_inlet_type, });
            RelationsIsA.Add(CVID.MS_microelectrospray, new List<CVID> { CVID.MS_electrospray_ionization, });
            RelationsIsA.Add(CVID.MS_nanoelectrospray, new List<CVID> { CVID.MS_electrospray_ionization, });
            RelationsIsA.Add(CVID.MS_penning_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_plasma_desorption_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_secondary_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_soft_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_spark_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_surface_assisted_laser_desorption_ionization, new List<CVID> { CVID.MS_desorption_ionization, });
            RelationsIsA.Add(CVID.MS_surface_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_thermal_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_vertical_ionization, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_buffer_gas, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_collision_gas, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_beam_type_collision_induced_dissociation, new List<CVID> { CVID.MS_collision_induced_dissociation, });
            RelationsIsA.Add(CVID.MS_low_energy_collision_induced_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_photodissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_fast_ion_bombardment, new List<CVID> { CVID.MS_ionization_type, });
            RelationsIsA.Add(CVID.MS_LTQ, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_FT, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LXQ, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_ion_selection_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_1200_series_LC_MSD_SL, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6110_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6120_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6130_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6140_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6210_Time_of_Flight_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6310_Ion_Trap_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6320_Ion_Trap_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6330_Ion_Trap_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6340_Ion_Trap_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6410_Triple_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_1200_series_LC_MSD_VL, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_Thermo_Fisher_Scientific_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_orbitrap, new List<CVID> { CVID.MS_mass_analyzer_type, });
            RelationsIsA.Add(CVID.MS_nanospray_inlet, new List<CVID> { CVID.MS_electrospray_inlet, });
            RelationsIsA.Add(CVID.MS_source_potential, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_ion_optics_attribute, new List<CVID> { CVID.MS_ion_optics, });
            RelationsIsA.Add(CVID.MS_Hitachi_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Varian_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Agilent_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Dionex_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Thermo_Electron_instrument_model, new List<CVID> { CVID.MS_Thermo_Fisher_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Finnigan_MAT_instrument_model, new List<CVID> { CVID.MS_Thermo_Fisher_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Thermo_Scientific_instrument_model, new List<CVID> { CVID.MS_Thermo_Fisher_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Applied_Biosystems_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_instrument_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_zoom_scan, new List<CVID> { CVID.MS_spectrum_attribute, });
            RelationsIsA.Add(CVID.MS_spectrum_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_scan_window_upper_limit, new List<CVID> { CVID.MS_selection_window_attribute, });
            RelationsIsA.Add(CVID.MS_scan_window_lower_limit, new List<CVID> { CVID.MS_selection_window_attribute, });
            RelationsIsA.Add(CVID.MS_dwell_time, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_scan_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_base_peak_m_z, new List<CVID> { CVID.MS_spectrum_attribute, });
            RelationsIsA.Add(CVID.MS_base_peak_intensity, new List<CVID> { CVID.MS_spectrum_attribute, });
            RelationsIsA.Add(CVID.MS_activation_energy, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_ms_level, new List<CVID> { CVID.MS_spectrum_attribute, });
            RelationsIsA.Add(CVID.MS_filter_string, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_m_z_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_intensity_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_charge_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_signal_to_noise_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_32_bit_integer, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_16_bit_float_OBSOLETE, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_32_bit_float, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_64_bit_integer, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_64_bit_float, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_Waters_raw_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_highest_observed_m_z, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_chromatogram_attribute, });
            RelationsIsA.Add(CVID.MS_lowest_observed_m_z, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_chromatogram_attribute, });
            RelationsIsA.Add(CVID.MS_instrument_serial_number, new List<CVID> { CVID.MS_instrument_attribute, });
            RelationsIsA.Add(CVID.MS_file_format_conversion, new List<CVID> { CVID.MS_data_transformation, });
            RelationsIsA.Add(CVID.MS_Xcalibur, new List<CVID> { CVID.MS_Thermo_Finnigan_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Bioworks, new List<CVID> { CVID.MS_Thermo_Finnigan_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MassLynx, new List<CVID> { CVID.MS_Waters_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_FlexAnalysis, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Data_Explorer, new List<CVID> { CVID.MS_Applied_Biosystems_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_4700_Explorer, new List<CVID> { CVID.MS_Applied_Biosystems_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_massWolf, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Voyager_Biospectrometry_Workstation_System, new List<CVID> { CVID.MS_Applied_Biosystems_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_FlexControl, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_ReAdW, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MzStar, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_data_processing_action, new List<CVID> { CVID.MS_data_transformation, });
            RelationsIsA.Add(CVID.MS_Conversion_to_mzML, new List<CVID> { CVID.MS_file_format_conversion, });
            RelationsIsA.Add(CVID.MS_Conversion_to_mzXML, new List<CVID> { CVID.MS_file_format_conversion, });
            RelationsIsA.Add(CVID.MS_Conversion_to_mzData, new List<CVID> { CVID.MS_file_format_conversion, });
            RelationsIsA.Add(CVID.MS_sample_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_selection_window_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_Analyst, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Trapper, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_LCQ_Deca, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap_Discovery, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap_XL, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_FT_Ultra, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_GC_Quantum, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_mass_spectrometer_file_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_ABI_WIFF_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Thermo_RAW_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_PSI_mzData_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Micromass_PKL_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_ISB_mzXML_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Bruker_Agilent_YEP_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_MD5, new List<CVID> { CVID.MS_data_file_checksum_type, });
            RelationsIsA.Add(CVID.MS_SHA_1, new List<CVID> { CVID.MS_data_file_checksum_type, });
            RelationsIsA.Add(CVID.MS_sum_of_spectra, new List<CVID> { CVID.MS_spectra_combination, });
            RelationsIsA.Add(CVID.MS_median_of_spectra, new List<CVID> { CVID.MS_spectra_combination, });
            RelationsIsA.Add(CVID.MS_zlib_compression, new List<CVID> { CVID.MS_binary_data_compression_type, });
            RelationsIsA.Add(CVID.MS_mean_of_spectra, new List<CVID> { CVID.MS_spectra_combination, });
            RelationsIsA.Add(CVID.MS_no_compression, new List<CVID> { CVID.MS_binary_data_compression_type, });
            RelationsIsA.Add(CVID.MS_LCQ_Fleet, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_MS1_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_MSn_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_CRM_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_SIM_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_SRM_spectrum, new List<CVID> { CVID.MS_mass_spectrum, CVID.MS_data_file_content, });
            RelationsIsA.Add(CVID.MS_mzML_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_contact_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_contact_name, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_address, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_URL, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_email, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_affiliation, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_MzWiff, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_smoothing, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_baseline_reduction, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_low_intensity_data_point_removal, new List<CVID> { CVID.MS_data_filtering, });
            RelationsIsA.Add(CVID.MS_time_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_ion_optics_type, new List<CVID> { CVID.MS_ion_optics, });
            RelationsIsA.Add(CVID.MS_electron_transfer_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_pulsed_q_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_Proteios, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_ProteinLynx_Global_Server, new List<CVID> { CVID.MS_Waters_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Shimadzu_MALDI_TOF_instrument_model, new List<CVID> { CVID.MS_Shimadzu_instrument_model, });
            RelationsIsA.Add(CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, new List<CVID> { CVID.MS_Shimadzu_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCMS_IT_TOF, new List<CVID> { CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCMS_2010EV, new List<CVID> { CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, });
            RelationsIsA.Add(CVID.MS_LCMS_2010A, new List<CVID> { CVID.MS_Shimadzu_Scientific_Instruments_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_CFR_MALDI_TOF, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_QIT, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_CFR_plus, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_Performance_MALDI_TOF_TOF, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_Confidence_MALDI_TOF, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_AXIMA_Assurance_Linear_MALDI_TOF, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_DTA_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_ProteinLynx_Global_Server_mass_spectrum_XML_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_software, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_preset_scan_configuration, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_wavelength_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_highest_observed_wavelength, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_chromatogram_attribute, });
            RelationsIsA.Add(CVID.MS_lowest_observed_wavelength, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_chromatogram_attribute, });
            RelationsIsA.Add(CVID.MS_PDA_spectrum_OBSOLETE, new List<CVID> { CVID.MS_data_file_content, CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_photodiode_array_detector, new List<CVID> { CVID.MS_array_detector, });
            RelationsIsA.Add(CVID.MS_Surveyor_PDA, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Accela_PDA, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_inductive_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_selected_ion_current_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_basepeak_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_low_intensity_threshold, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_high_intensity_threshold, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_Q_Tof_Premier, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_possible_charge_state, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_DSQ, new List<CVID> { CVID.MS_Thermo_Finnigan_instrument_model, });
            RelationsIsA.Add(CVID.MS_ITQ_700, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_ITQ_900, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_ITQ_1100, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_XL_ETD, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap_XL_ETD, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_DFS, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_DSQ_II, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_LTQ_XL, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_LTQ_Orbitrap, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_Quantum_Access, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Element_XR, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Element_2, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Element_GD, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_GC_IsoLink, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Exactive, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Proteome_Discoverer, new List<CVID> { CVID.MS_Thermo_Finnigan_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_3200_QTRAP, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_4800_Plus_MALDI_TOF_TOF, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_3200, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_API_5000, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_QSTAR_Elite, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_QSTAR_Pulsar, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_QSTAR_XL, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_4800_Proteomics_Analyzer, new List<CVID> { CVID.MS_Applied_Biosystems_instrument_model, });
            RelationsIsA.Add(CVID.MS_4000_Series_Explorer_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_GPS_Explorer, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_LightSight_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_ProteinPilot_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_TissueView_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MarkerView_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MRMPilot_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_BioAnalyst, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Pro_ID, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Pro_ICAT, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Pro_Quant, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Pro_BLAST, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Cliquid, new List<CVID> { CVID.MS_AB_SCIEX_software, });
            RelationsIsA.Add(CVID.MS_MIDAS_Workflow_Designer, new List<CVID> { CVID.MS_AB_SCIEX_software, });
            RelationsIsA.Add(CVID.MS_MultiQuant, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_6220_Time_of_Flight_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6510_Quadrupole_Time_of_Flight_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6520_Quadrupole_Time_of_Flight_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_MassHunter_Data_Acquisition, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_Easy_Access, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_Qualitative_Analysis, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_Quantitative_Analysis, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_Metabolite_ID, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_BioConfirm, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Genespring_MS, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MassHunter_Mass_Profiler, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_METLIN, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Spectrum_Mill_for_MassHunter_Workstation, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_6300_Series_Ion_Trap_Data_Analysis_Software, new List<CVID> { CVID.MS_Agilent_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Agilent_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_Applied_Biosystems_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_Bruker_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_Thermo_Finnigan_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_Waters_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_apex_ultra, new List<CVID> { CVID.MS_Bruker_Daltonics_apex_series, });
            RelationsIsA.Add(CVID.MS_autoflex_III_smartbeam, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_HCT_Series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_HCTultra, new List<CVID> { CVID.MS_Bruker_Daltonics_HCT_Series, });
            RelationsIsA.Add(CVID.MS_HCTultra_PTM, new List<CVID> { CVID.MS_Bruker_Daltonics_HCT_Series, });
            RelationsIsA.Add(CVID.MS_HCTultra_ETD_II, new List<CVID> { CVID.MS_Bruker_Daltonics_HCT_Series, });
            RelationsIsA.Add(CVID.MS_microflex_LT, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_micrOTOF, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_micrOTOF_Q, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_micrOTOF_Q_II, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_ultraflex_III_TOF_TOF, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_apexControl, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_BioTools, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_CLINPROT, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_CLINPROT_micro, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_CLINPROT_robot, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_ClinProTools, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_Compass, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Compass_for_HCT_esquire, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Compass_for_micrOTOF, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Compass_OpenAccess, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Compass_Security_Pack, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_CompassXport, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_CompassXtract, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_DataAnalysis, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_dpControl, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_esquireControl, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_flexImaging, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_GENOLINK, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_GenoTools, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_HCTcontrol, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_micrOTOFcontrol, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_PolyTools, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_ProfileAnalysis, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PROTEINEER, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_PROTEINEER_dp, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_PROTEINEER_fc, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_PROTEINEER_spII, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_PROTEINEER_LC, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_ProteinScape, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_PureDisk, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_QuantAnalysis, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_spControl, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_acquisition_software, });
            RelationsIsA.Add(CVID.MS_TargetAnalysis, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_WARP_LC, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_parameter_file, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Conversion_to_dta, new List<CVID> { CVID.MS_file_format_conversion, });
            RelationsIsA.Add(CVID.MS_Bioworks_SRF_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_TSQ_Quantum_Ultra_AM, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_selected_ion_m_z, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_retention_time_alignment, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_high_intensity_data_point_removal, new List<CVID> { CVID.MS_data_filtering, });
            RelationsIsA.Add(CVID.MS_completion_time, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_SSQ_7000, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_7000, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ, new List<CVID> { CVID.MS_Finnigan_MAT_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_Quantum_Ultra, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_TOPP_software, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_BaselineFilter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_DBExporter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_DBImporter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_FileConverter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_FileFilter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_FileMerger, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_InternalCalibration, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_MapAligner_OBSOLETE, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_MapNormalizer, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_NoiseFilter_OBSOLETE, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_PeakPicker_OBSOLETE, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_Resampler, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_SpectraFilter_OBSOLETE, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOFCalibration, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_Thermo_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Waters_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_WIFF_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Bruker_Agilent_YEP_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Bruker_BAF_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Bruker_FID_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_multiple_peak_list_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_single_peak_list_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_scan_number_only_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_spectrum_identifier_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_charge_state_calculation, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_below_precursor_intensity_dominance_charge_state_calculation, new List<CVID> { CVID.MS_charge_state_calculation, });
            RelationsIsA.Add(CVID.MS_precursor_recalculation, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_msPrefix_precursor_recalculation, new List<CVID> { CVID.MS_precursor_recalculation, });
            RelationsIsA.Add(CVID.MS_Savitzky_Golay_smoothing, new List<CVID> { CVID.MS_smoothing, });
            RelationsIsA.Add(CVID.MS_LOWESS_smoothing, new List<CVID> { CVID.MS_smoothing, });
            RelationsIsA.Add(CVID.MS_Gaussian_smoothing, new List<CVID> { CVID.MS_smoothing, });
            RelationsIsA.Add(CVID.MS_moving_average_smoothing, new List<CVID> { CVID.MS_smoothing, });
            RelationsIsA.Add(CVID.MS_non_standard_data_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_inclusive_low_intensity_threshold, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_inclusive_high_intensity_threshold, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_enhanced_multiply_charged_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_MS1_spectrum, });
            RelationsIsA.Add(CVID.MS_time_delayed_fragmentation_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_MSn_spectrum, });
            RelationsIsA.Add(CVID.MS_isolation_window_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_isolation_window_upper_limit_OBSOLETE, new List<CVID> { CVID.MS_isolation_window_attribute, });
            RelationsIsA.Add(CVID.MS_isolation_window_lower_limit_OBSOLETE, new List<CVID> { CVID.MS_isolation_window_attribute, });
            RelationsIsA.Add(CVID.MS_no_combination, new List<CVID> { CVID.MS_spectra_combination, });
            RelationsIsA.Add(CVID.MS_spectrum_title, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_peak_list_scans, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_peak_list_raw_scans, new List<CVID> { CVID.MS_spectrum_attribute, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_custom_unreleased_software_tool, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_mass_resolving_power, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_area_peak_picking, new List<CVID> { CVID.MS_peak_picking, });
            RelationsIsA.Add(CVID.MS_height_peak_picking, new List<CVID> { CVID.MS_peak_picking, });
            RelationsIsA.Add(CVID.MS_analyzer_scan_offset, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_electromagnetic_radiation_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_emission_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_absorption_spectrum, new List<CVID> { CVID.MS_data_file_content, CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_Th_s, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.MS_chromatogram_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_chromatogram_title, new List<CVID> { CVID.MS_chromatogram_attribute, });
            RelationsIsA.Add(CVID.MS_mass_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_chromatogram_type, });
            RelationsIsA.Add(CVID.MS_electromagnetic_radiation_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_chromatogram_type, });
            RelationsIsA.Add(CVID.MS_absorption_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_electromagnetic_radiation_chromatogram, });
            RelationsIsA.Add(CVID.MS_emission_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_electromagnetic_radiation_chromatogram, });
            RelationsIsA.Add(CVID.MS_counts_per_second, new List<CVID> { CVID.MS_intensity_unit, });
            RelationsIsA.Add(CVID.MS_Bruker_BAF_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Bruker_U2_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_HyStar, new List<CVID> { CVID.MS_Bruker_software, });
            RelationsIsA.Add(CVID.MS_Acquity_UPLC_PDA, new List<CVID> { CVID.MS_Waters_instrument_model, CVID.MS_photodiode_array_detector, });
            RelationsIsA.Add(CVID.MS_Acquity_UPLC_FLR, new List<CVID> { CVID.MS_Waters_instrument_model, CVID.MS_fluorescence_detector, });
            RelationsIsA.Add(CVID.MS_flow_rate_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_pressure_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_temperature_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_Bruker_U2_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_no_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Bruker_FID_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_elution_time, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_isolation_window_target_m_z, new List<CVID> { CVID.MS_isolation_window_attribute, });
            RelationsIsA.Add(CVID.MS_isolation_window_lower_offset, new List<CVID> { CVID.MS_isolation_window_attribute, });
            RelationsIsA.Add(CVID.MS_isolation_window_upper_offset, new List<CVID> { CVID.MS_isolation_window_attribute, });
            RelationsIsA.Add(CVID.MS_sample_preparation, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_matrix_solution, new List<CVID> { CVID.MS_MALDI_matrix_application, });
            RelationsIsA.Add(CVID.MS_matrix_solution_concentration, new List<CVID> { CVID.MS_MALDI_matrix_application, });
            RelationsIsA.Add(CVID.MS_dried_droplet_MALDI_matrix_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_printed_MALDI_matrix_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_sprayed_MALDI_matrix_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_precoated_MALDI_sample_plate, new List<CVID> { CVID.MS_matrix_application_type, CVID.MS_sample_plate_type, });
            RelationsIsA.Add(CVID.MS_wavelength_OBSOLETE, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_focus_diameter_x, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_focus_diameter_y, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_pulse_energy, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_pulse_duration, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_attenuation, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_impact_angle, new List<CVID> { CVID.MS_laser_attribute, });
            RelationsIsA.Add(CVID.MS_gas_laser, new List<CVID> { CVID.MS_laser_type, });
            RelationsIsA.Add(CVID.MS_solid_state_laser, new List<CVID> { CVID.MS_laser_type, });
            RelationsIsA.Add(CVID.MS_dye_laser, new List<CVID> { CVID.MS_laser_type, });
            RelationsIsA.Add(CVID.MS_free_electron_laser, new List<CVID> { CVID.MS_laser_type, });
            RelationsIsA.Add(CVID.MS_LTQ_XL, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Velos, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Velos_ETD, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_run_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_fraction_identifier, new List<CVID> { CVID.MS_run_attribute, });
            RelationsIsA.Add(CVID.MS_peptide, new List<CVID> { CVID.MS_chemical_compound, });
            RelationsIsA.Add(CVID.MS_isoelectric_point, new List<CVID> { CVID.MS_chemical_compound_attribute, });
            RelationsIsA.Add(CVID.MS_predicted_isoelectric_point, new List<CVID> { CVID.MS_isoelectric_point, });
            RelationsIsA.Add(CVID.MS_empirical_formula, new List<CVID> { CVID.MS_chemical_compound_formula, });
            RelationsIsA.Add(CVID.MS_molecular_formula, new List<CVID> { CVID.MS_chemical_compound_formula, });
            RelationsIsA.Add(CVID.MS_structural_formula, new List<CVID> { CVID.MS_chemical_compound_formula, });
            RelationsIsA.Add(CVID.MS_SMILES_string, new List<CVID> { CVID.MS_chemical_compound_formula, });
            RelationsIsA.Add(CVID.MS_collision_gas_pressure, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_4000_QTRAP_OBSOLETE, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_SRM_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_MaRiMba, new List<CVID> { CVID.MS_SRM_software, });
            RelationsIsA.Add(CVID.MS_peptide_attribute_calculation_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_SSRCalc, new List<CVID> { CVID.MS_peptide_attribute_calculation_software, });
            RelationsIsA.Add(CVID.MS_declustering_potential, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_cone_voltage, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_tube_lens_voltage, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_PubMed_identifier, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_interchannel_delay, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_protein, new List<CVID> { CVID.MS_chemical_compound, });
            RelationsIsA.Add(CVID.MS_protein_short_name, new List<CVID> { CVID.MS_protein_attribute, });
            RelationsIsA.Add(CVID.MS_protein_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_protein_accession, new List<CVID> { CVID.MS_protein_attribute, });
            RelationsIsA.Add(CVID.MS_protein_name, new List<CVID> { CVID.MS_protein_attribute, });
            RelationsIsA.Add(CVID.MS_unmodified_peptide_sequence, new List<CVID> { CVID.MS_peptide_attribute, });
            RelationsIsA.Add(CVID.MS_modified_peptide_sequence, new List<CVID> { CVID.MS_peptide_attribute, });
            RelationsIsA.Add(CVID.MS_peptide_labeling_state, new List<CVID> { CVID.MS_peptide_attribute, });
            RelationsIsA.Add(CVID.MS_heavy_labeled_peptide, new List<CVID> { CVID.MS_peptide_labeling_state, });
            RelationsIsA.Add(CVID.MS_unlabeled_peptide, new List<CVID> { CVID.MS_peptide_labeling_state, });
            RelationsIsA.Add(CVID.MS_peptide_group_label, new List<CVID> { CVID.MS_peptide_attribute, });
            RelationsIsA.Add(CVID.MS_retention_time, new List<CVID> { CVID.MS_peptide_attribute, });
            RelationsIsA.Add(CVID.MS_local_retention_time, new List<CVID> { CVID.MS_retention_time, });
            RelationsIsA.Add(CVID.MS_normalized_retention_time, new List<CVID> { CVID.MS_retention_time, });
            RelationsIsA.Add(CVID.MS_predicted_retention_time, new List<CVID> { CVID.MS_retention_time, });
            RelationsIsA.Add(CVID.MS_de_facto_standard, new List<CVID> { CVID.MS_standard, });
            RelationsIsA.Add(CVID.MS_minimum_information_standard, new List<CVID> { CVID.MS_standard, });
            RelationsIsA.Add(CVID.MS_retention_time_normalization_standard, new List<CVID> { CVID.MS_standard, });
            RelationsIsA.Add(CVID.MS_H_PINS_retention_time_normalization_standard, new List<CVID> { CVID.MS_retention_time_normalization_standard, });
            RelationsIsA.Add(CVID.MS_product_ion_series_ordinal, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_product_ion_m_z_delta, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_percent_of_base_peak_times_100, new List<CVID> { CVID.MS_intensity_unit, });
            RelationsIsA.Add(CVID.MS_peak_intensity_rank, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_peak_targeting_suitability_rank, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_transition_optimized_on_specified_instrument, new List<CVID> { CVID.MS_transition_validation_method, });
            RelationsIsA.Add(CVID.MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument, new List<CVID> { CVID.MS_transition_validation_method, });
            RelationsIsA.Add(CVID.MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument, new List<CVID> { CVID.MS_transition_validation_method, });
            RelationsIsA.Add(CVID.MS_transition_predicted_by_informatic_analysis, new List<CVID> { CVID.MS_transition_validation_method, });
            RelationsIsA.Add(CVID.MS_tab_delimited_text_format, new List<CVID> { CVID.MS_file_format, CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_retention_time_window_lower_offset, new List<CVID> { CVID.MS_retention_time_window_attribute, });
            RelationsIsA.Add(CVID.MS_retention_time_window_upper_offset, new List<CVID> { CVID.MS_retention_time_window_attribute, });
            RelationsIsA.Add(CVID.MS_includes_supersede_excludes, new List<CVID> { CVID.MS_target_inclusion_exclusion_priority, });
            RelationsIsA.Add(CVID.MS_excludes_supersede_includes, new List<CVID> { CVID.MS_target_inclusion_exclusion_priority, });
            RelationsIsA.Add(CVID.MS_Skyline, new List<CVID> { CVID.MS_SRM_software, CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_TIQAM, new List<CVID> { CVID.MS_SRM_software, });
            RelationsIsA.Add(CVID.MS_ATAQS, new List<CVID> { CVID.MS_SRM_software, });
            RelationsIsA.Add(CVID.MS_product_interpretation_rank, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_ion_injection_time, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_calibration_spectrum, new List<CVID> { CVID.MS_spectrum_type, });
            RelationsIsA.Add(CVID.MS_Shimadzu_Biotech_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Shimadzu_Biotech_database_entity, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_QTRAP_5500, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_TripleTOF_5600, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_protein_modifications, new List<CVID> { CVID.MS_protein_attribute, });
            RelationsIsA.Add(CVID.MS_gene_name, new List<CVID> { CVID.MS_protein_attribute, });
            RelationsIsA.Add(CVID.MS_SEQUEST_CleavesAt, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_ViewCV, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_OutputLines, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_DescriptionLines, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_de_novo_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_search_database_details, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_database_source, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_name, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_local_file_path_OBSOLETE, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_original_uri, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_version_OBSOLETE, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_release_date_OBSOLETE, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_type, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_database_filtering, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_DB_filter_taxonomy, new List<CVID> { CVID.MS_Sequence_database_filter_types, });
            RelationsIsA.Add(CVID.MS_DB_filter_on_accession_numbers, new List<CVID> { CVID.MS_Sequence_database_filter_types, });
            RelationsIsA.Add(CVID.MS_DB_MW_filter, new List<CVID> { CVID.MS_Sequence_database_filter_types, });
            RelationsIsA.Add(CVID.MS_DB_PI_filter, new List<CVID> { CVID.MS_Sequence_database_filter_types, });
            RelationsIsA.Add(CVID.MS_translation_frame, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_translation_table, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_NormalizeXCorrValues, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_DB_filter_on_sequence_pattern, new List<CVID> { CVID.MS_Sequence_database_filter_types, });
            RelationsIsA.Add(CVID.MS_SEQUEST_SequenceHeaderFilter, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_number_of_sequences_searched, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_number_of_peptide_seqs_compared_to_each_spectrum, new List<CVID> { CVID.MS_search_database_details, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_spectral_library_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_SEQUEST_SequencePartialFilter, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_date___time_search_performed_OBSOLETE, new List<CVID> { CVID.MS_search_statistics, });
            RelationsIsA.Add(CVID.MS_search_time_taken, new List<CVID> { CVID.MS_search_statistics, });
            RelationsIsA.Add(CVID.MS_SEQUEST_ShowFragmentIons, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Consensus, new List<CVID> { CVID.MS_SEQUEST_ViewCV, });
            RelationsIsA.Add(CVID.MS_intermediate_analysis_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sortCV, new List<CVID> { CVID.MS_SEQUEST_ViewCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_LimitTo, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_cleavage_agent_details, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_cleavage_agent_name, new List<CVID> { CVID.MS_cleavage_agent_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_dCn, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_dM, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Ions, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_MH_, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_P, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_PreviousAminoAcid, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Ref, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_modification_specificity_rule, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_tolerance_on_types_OBSOLETE, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_quality_estimation_by_manual_validation, new List<CVID> { CVID.MS_quality_estimation_method_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_RSp, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_quality_estimation_method_details, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_neutral_loss_OBSOLETE, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_Mascot_MGF_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_TODOscoring_model_OBSOLETE, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_ions_series_considered_in_search, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Sp, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_TIC, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Scan, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Sequence, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_Sf, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_database_type_amino_acid, new List<CVID> { CVID.MS_database_type, });
            RelationsIsA.Add(CVID.MS_database_type_nucleotide, new List<CVID> { CVID.MS_database_type, });
            RelationsIsA.Add(CVID.MS_search_type, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_pmf_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_tag_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_ms_ms_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_database_nr, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_protein_result_details, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_XCorr, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_ProcessCV, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_protein_description, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_database_sequence_details, });
            RelationsIsA.Add(CVID.MS_molecule_taxonomy, new List<CVID> { CVID.MS_protein_result_details, CVID.MS_database_sequence_details, CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_taxonomy_nomenclature_OBSOLETE, new List<CVID> { CVID.MS_molecule_taxonomy, });
            RelationsIsA.Add(CVID.MS_NoEnzyme_OBSOLETE, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_peptide_identification_confidence_metric, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_sequence_coverage, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sort_by_z, new List<CVID> { CVID.MS_SEQUEST_sortCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_ProcessAll, new List<CVID> { CVID.MS_SEQUEST_ProcessCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_TopPercentMostIntense, new List<CVID> { CVID.MS_SEQUEST_ProcessCV, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_sequences, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_confident_distinct_peptide_sequences, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_confident_peptide_qualification, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_confident_peptide_sequence_number, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_protein_group_or_subset_relationship, new List<CVID> { CVID.MS_protein_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Chromatogram, new List<CVID> { CVID.MS_SEQUEST_ViewCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_InfoAndLog, new List<CVID> { CVID.MS_SEQUEST_ViewCV, });
            RelationsIsA.Add(CVID.MS_database_UniProtKB_Swiss_Prot, new List<CVID> { CVID.MS_database_UniProtKB, });
            RelationsIsA.Add(CVID.MS_peptide_result_details, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_TopNumber, new List<CVID> { CVID.MS_SEQUEST_ProcessCV, });
            RelationsIsA.Add(CVID.MS_data_stored_in_database, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_param__a_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_SEQUEST_CullTo, new List<CVID> { CVID.MS_SEQUEST_ProcessCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_modeCV, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Full, new List<CVID> { CVID.MS_SEQUEST_modeCV, });
            RelationsIsA.Add(CVID.MS_n_terminal_flanking_residue, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_c_terminal_flanking_residue, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_retention_time_s__OBSOLETE, new List<CVID> { CVID.MS_peptide_result_details, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_single_protein_result_details, new List<CVID> { CVID.MS_protein_result_details, });
            RelationsIsA.Add(CVID.MS_theoretical_mass, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_param__b_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__c_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_SEQUEST_FormatAndLinks, new List<CVID> { CVID.MS_SEQUEST_modeCV, });
            RelationsIsA.Add(CVID.MS_number_of_matched_peaks, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_ions_series_considered, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_number_of_peaks_used, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_number_of_peaks_submitted, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_manual_validation, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Fast, new List<CVID> { CVID.MS_SEQUEST_modeCV, });
            RelationsIsA.Add(CVID.MS_peptide_sharing_details, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_selectCV, new List<CVID> { CVID.MS_SEQUEST_input_parameter, });
            RelationsIsA.Add(CVID.MS_peptide_raw_area_OBSOLETE, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_error_on_peptide_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peptide_ratio, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_error_on_peptide_ratio, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_protein_ratio, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_error_on_protein_ratio, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_p_value__protein_diff_from_1_randomly__OBSOLETE, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_absolute_quantity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_error_on_absolute_quantity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_quantitation_software_name, new List<CVID> { CVID.MS_software, CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_quantitation_software_version_OBSOLETE, new List<CVID> { CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_intensity_of_precursor_ion, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_database_IPI_human, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_score_for_PSMs, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_SelectDefault, new List<CVID> { CVID.MS_SEQUEST_selectCV, });
            RelationsIsA.Add(CVID.MS_SEQUEST_SelectAdvancedCV, new List<CVID> { CVID.MS_SEQUEST_selectCV, });
            RelationsIsA.Add(CVID.MS_param__a_ion_NH3_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_protein_ambiguity_group_result_details, new List<CVID> { CVID.MS_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_param__a_ion_H2O_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__b_ion_NH3_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__b_ion_H2O_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__y_ion_NH3_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__y_ion_H2O_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_score, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_probability, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_xcorr, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_deltacn, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sp, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Uniq, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_expectation_value, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sf, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_matched_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_total_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_consensus_score, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_unused_protscore, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_total_protscore, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_score, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_confidence, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_expression_error_factor, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Paragon_expression_change_p_value, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_protein_level_p_value, });
            RelationsIsA.Add(CVID.MS_Paragon_contrib, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Mascot_score, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Mascot_expectation_value, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Mascot_matched_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Mascot_total_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_peptide_shared_in_multiple_proteins, new List<CVID> { CVID.MS_peptide_sharing_details, });
            RelationsIsA.Add(CVID.MS______KR______P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_number_of_molecular_hypothesis_considered, new List<CVID> { CVID.MS_search_statistics, });
            RelationsIsA.Add(CVID.MS_database_EST, new List<CVID> { CVID.MS_database_type_nucleotide, });
            RelationsIsA.Add(CVID.MS_Cleavage_agent_regular_expression, new List<CVID> { CVID.MS_regular_expression, });
            RelationsIsA.Add(CVID.MS_search_statistics, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_modification_specificity_peptide_N_term, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_modification_specificity_peptide_C_term, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_p_value_OBSOLETE, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_Expect_value, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_confidence_score, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_quality_estimation_with_decoy_database, new List<CVID> { CVID.MS_quality_estimation_method_details, });
            RelationsIsA.Add(CVID.MS_decoy_DB_type_reverse, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_decoy_DB_type_randomized, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_DB_composition_target_decoy, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_protein_identification_confidence_metric, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_Mascot_DAT_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_SEQUEST_out_file_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_DB_MW_filter_maximum, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_DB_MW_filter_minimum, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_DB_PI_filter_maximum, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_DB_PI_filter_minimum, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_Mascot, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_SEQUEST, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Phenyx, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_mass_type_settings, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_parent_mass_type_mono, new List<CVID> { CVID.MS_mass_type_settings, });
            RelationsIsA.Add(CVID.MS_parent_mass_type_average, new List<CVID> { CVID.MS_mass_type_settings, });
            RelationsIsA.Add(CVID.MS_protein_level_global_FDR, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_PeptideSp, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_PeptideRankSp, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_PeptideNumber, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_PeptideIdnumber, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_frag__y_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_fragmentation_information, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_frag__b_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__y_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__b_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_product_ion_m_z, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_product_ion_intensity, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_product_ion_m_z_error, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_frag__x_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__a_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__z_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__c_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__b_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__y_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__a_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__a_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__d_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__v_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__w_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__immonium_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_non_identified_ion, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_co_eluting_ion, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_SEQUEST_out_folder, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_SEQUEST_summary, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_PerSeptive_PKS_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Sciex_API_III_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Bruker_XML_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_local_FDR, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_Trypsin, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_DB_source_EBI, new List<CVID> { CVID.MS_database_source, });
            RelationsIsA.Add(CVID.MS_DB_source_NCBI, new List<CVID> { CVID.MS_database_source, });
            RelationsIsA.Add(CVID.MS_DB_source_UniProt, new List<CVID> { CVID.MS_database_source, });
            RelationsIsA.Add(CVID.MS_fragment_mass_type_average, new List<CVID> { CVID.MS_mass_type_settings, });
            RelationsIsA.Add(CVID.MS_fragment_mass_type_mono, new List<CVID> { CVID.MS_mass_type_settings, });
            RelationsIsA.Add(CVID.MS_param__v_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__d_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__immonium_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__w_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__x_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__y_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__z_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_role_type, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_software_vendor, new List<CVID> { CVID.MS_role_type, });
            RelationsIsA.Add(CVID.MS_programmer, new List<CVID> { CVID.MS_role_type, });
            RelationsIsA.Add(CVID.MS_instrument_vendor, new List<CVID> { CVID.MS_role_type, });
            RelationsIsA.Add(CVID.MS_lab_personnel, new List<CVID> { CVID.MS_role_type, });
            RelationsIsA.Add(CVID.MS_researcher, new List<CVID> { CVID.MS_role_type, });
            RelationsIsA.Add(CVID.MS_____R_____P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____BD__, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____DE__, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_ProteinScape_SearchEvent, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_ProteinScape_Gel, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_decoy_DB_accession_regexp, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_decoy_DB_derived_from_OBSOLETE, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_database_IPI_mouse, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_database_IPI_rat, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_database_IPI_zebrafish, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_database_IPI_chicken, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_database_IPI_cow, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_database_IPI_arabidopsis, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_protein_rank, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_input_parameter, new List<CVID> { CVID.MS_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_Arg_C, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Asp_N, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Asp_N_ambic, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Chymotrypsin, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_CNBr, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Formic_acid, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Lys_C, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Lys_C_P, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_PepsinA, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_TrypChymo, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Trypsin_P, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_V8_DE, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_V8_E, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_Mascot_SigThreshold, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_MaxProteinHits, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_ProteinScoringMethod, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_MinMSMSThreshold, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_ShowHomologousProteinsWithSamePeptides, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_ShowHomologousProteinsWithSubsetOfPeptides, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_RequireBoldRed, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_UseUnigeneClustering, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_IncludeErrorTolerantMatches, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_ShowDecoyMatches, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_OMSSA_evalue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_e_value, });
            RelationsIsA.Add(CVID.MS_OMSSA_pvalue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_p_value, });
            RelationsIsA.Add(CVID.MS_X__Tandem_expect, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_e_value, });
            RelationsIsA.Add(CVID.MS_X__Tandem_hyperscore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS______FYWL______P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____M_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______D_______D__, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____K_____P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____K_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______FL__, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______FYWLKR______P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______KR__, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______BDEZ______P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______EZ______P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_database_sequence_details, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_NA_sequence, new List<CVID> { CVID.MS_database_sequence_details, });
            RelationsIsA.Add(CVID.MS_AA_sequence, new List<CVID> { CVID.MS_database_sequence_details, });
            RelationsIsA.Add(CVID.MS_mass_table_source, new List<CVID> { CVID.MS_mass_table_options, });
            RelationsIsA.Add(CVID.MS_AAIndex_mass_table, new List<CVID> { CVID.MS_mass_table_source, });
            RelationsIsA.Add(CVID.MS_database_file_formats, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_FASTA_format, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_ASN_1, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_NCBI___p_, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_clustal_aln, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_embl_em, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_NBRF_PIR, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_peptide_descriptions, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_spectrum_descriptions, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_spectrum_quality_descriptions, new List<CVID> { CVID.MS_spectrum_descriptions, });
            RelationsIsA.Add(CVID.MS_msmsEval_quality, new List<CVID> { CVID.MS_spectrum_quality_descriptions, });
            RelationsIsA.Add(CVID.MS_alternate_single_letter_codes, new List<CVID> { CVID.MS_ambiguous_residues, });
            RelationsIsA.Add(CVID.MS_alternate_mass, new List<CVID> { CVID.MS_ambiguous_residues, });
            RelationsIsA.Add(CVID.MS_number_of_unmatched_peaks, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_peptide_unique_to_one_protein, new List<CVID> { CVID.MS_peptide_sharing_details, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_global_FDR, new List<CVID> { CVID.MS_peptide_result_details, CVID.MS_peptide_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_frag__internal_yb_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__internal_ya_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__z_1_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__z_2_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_text_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Mascot_homology_threshold, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_Mascot_identity_threshold, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Sequences, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_TIC, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_Sum, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Instrument_Type, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Scoring_Model, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Default_Parent_Charge, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Trust_Parent_Charge, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Turbo, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Turbo_ErrorTol, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Turbo_Coverage, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Turbo_Series, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_MinPepLength, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_MinPepzscore, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_MaxPepPvalue, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_AC_Score, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_Conflict_Resolution, new List<CVID> { CVID.MS_Phenyx_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_AC, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_ID, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Score, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Peptides1, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Peptides2, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Auto, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_User, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Pepzscore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_PepPvalue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_p_value, });
            RelationsIsA.Add(CVID.MS_Phenyx_NumberOfMC, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Phenyx_Modif, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_OMSSA_csv_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_OMSSA_xml_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_X__Tandem_xml_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_param__internal_yb_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__internal_ya_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__z_1_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__z_2_ion, new List<CVID> { CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_translation_start_codons, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_search_tolerance_specification, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_search_tolerance_plus_value, new List<CVID> { CVID.MS_search_tolerance_specification, });
            RelationsIsA.Add(CVID.MS_search_tolerance_minus_value, new List<CVID> { CVID.MS_search_tolerance_specification, });
            RelationsIsA.Add(CVID.MS_MGF_scans_OBSOLETE, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_MGF_raw_scans_OBSOLETE, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_spectrum_title_OBSOLETE, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_SpectraST_dot, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectraST_dot_bias, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectraST_discriminant_score_F, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectraST_delta, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_pepXML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_protXML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_translation_table_description, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_Methodname, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_GenerateNonRedundant, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_IncludeIdentified, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MaxNumberOfProteins, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MaxProteinMass, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MinNumberOfPeptides, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_UseMascot, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MascotPeptideScoreThreshold, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MascotUniqueScore, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MascotUseIdentityScore, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_MascotWeighting, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_UseSequest, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_SequestPeptideScoreThreshold, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_SequestUniqueScore, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_SequestWeighting, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_UseProteinSolver, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_ProteinSolverUniqueScore, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_ProteinSolverWeighting, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_UsePhenyx, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_PhenyxPeptideScoreThreshold, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_PhenyxUniqueScore, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_PhenyxWeighting, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_prot_FDR_threshold, new List<CVID> { CVID.MS_protein_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_pep_FDR_threshold, new List<CVID> { CVID.MS_peptide_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_OMSSA_e_value_threshold, new List<CVID> { CVID.MS_OMSSA_input_parameter, });
            RelationsIsA.Add(CVID.MS_decoy_DB_details, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_decoy_DB_generation_algorithm, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_decoy_DB_type_shuffle, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_DB_composition_only_decoy, new List<CVID> { CVID.MS_decoy_DB_details, });
            RelationsIsA.Add(CVID.MS_quality_estimation_with_implicite_decoy_sequences, new List<CVID> { CVID.MS_quality_estimation_method_details, });
            RelationsIsA.Add(CVID.MS_acquisition_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_analysis_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_data_processing_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_unknown_modification, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_greylag, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_PEFF_format, new List<CVID> { CVID.MS_database_file_formats, });
            RelationsIsA.Add(CVID.MS_Phenyx_XML_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_DTASelect_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_MS2_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_taxonomy__NCBI_TaxID, new List<CVID> { CVID.MS_molecule_taxonomy, });
            RelationsIsA.Add(CVID.MS_taxonomy__common_name, new List<CVID> { CVID.MS_molecule_taxonomy, });
            RelationsIsA.Add(CVID.MS_taxonomy__scientific_name, new List<CVID> { CVID.MS_molecule_taxonomy, });
            RelationsIsA.Add(CVID.MS_taxonomy__Swiss_Prot_ID, new List<CVID> { CVID.MS_molecule_taxonomy, });
            RelationsIsA.Add(CVID.MS_selected_ion_monitoring_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_selected_reaction_monitoring_chromatogram, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE, new List<CVID> { CVID.MS_data_file_content, CVID.MS_mass_chromatogram, });
            RelationsIsA.Add(CVID.MS_OMSSA, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_X__Tandem, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_SpectraST, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Mascot_Parser, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_null_terminated_ASCII_string, new List<CVID> { CVID.MS_binary_data_type, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_TOF_TOF_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_TOF_TOF_database, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_TOF_TOF_5800, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_TOF_TOF_Series_Explorer_Software, new List<CVID> { CVID.MS_AB_SCIEX_software, CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_intensity_normalization, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_m_z_calibration, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_data_filtering, new List<CVID> { CVID.MS_data_processing_action, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor, new List<CVID> { CVID.MS_Bruker_software, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Mascot_Distiller, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Mascot_Integra, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Percolator, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_percolator_Q_value, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_q_value, });
            RelationsIsA.Add(CVID.MS_percolator_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_percolator_PEP, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_no_threshold, new List<CVID> { CVID.MS_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_ProteinScape_SearchResultId, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_SearchEventId, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_ProfoundProbability, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Profound_z_value, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Profound_Cluster, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Profound_ClusterRank, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MSFit_Mowse_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Sonar_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_PFFSolverExp, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_PFFSolverScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_IntensityCoverage, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinScape_SequestMetaScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_Score, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Agilent_MassHunter_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Agilent_MassHunter_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_TSQ_Vantage, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Sequence_database_filter_types, new List<CVID> { CVID.MS_database_filtering, });
            RelationsIsA.Add(CVID.MS_Sequence_database_filters, new List<CVID> { CVID.MS_database_filtering, });
            RelationsIsA.Add(CVID.MS_DB_sequence_filter_pattern, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_DB_accession_filter_string, new List<CVID> { CVID.MS_Sequence_database_filters, });
            RelationsIsA.Add(CVID.MS_frag__c_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__c_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__z_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__z_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__x_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__x_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__precursor_ion___H2O, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__precursor_ion___NH3, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_frag__precursor_ion, new List<CVID> { CVID.MS_fragmentation_ion_type, });
            RelationsIsA.Add(CVID.MS_fragment_neutral_loss, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_precursor_neutral_loss, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_spectrum_from_database_integer_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_Proteinscape_spectra, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Mascot_query_number, new List<CVID> { CVID.MS_native_spectrum_identifier_format, CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_spectra_data_details, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_mzML_unique_identifier, new List<CVID> { CVID.MS_spectra_data_details, });
            RelationsIsA.Add(CVID.MS_spectrum_from_ProteinScape_database_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, CVID.MS_spectra_data_details, });
            RelationsIsA.Add(CVID.MS_spectrum_from_database_string_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, CVID.MS_spectra_data_details, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_esquire_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_flex_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_BioTOF_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_micrOTOF_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_BioTOF, new List<CVID> { CVID.MS_Bruker_Daltonics_BioTOF_series, });
            RelationsIsA.Add(CVID.MS_BioTOF_III, new List<CVID> { CVID.MS_Bruker_Daltonics_BioTOF_series, });
            RelationsIsA.Add(CVID.MS_UltroTOF_Q, new List<CVID> { CVID.MS_Bruker_Daltonics_BioTOF_series, });
            RelationsIsA.Add(CVID.MS_micrOTOF_II, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_maXis, new List<CVID> { CVID.MS_Bruker_Daltonics_maXis_series, });
            RelationsIsA.Add(CVID.MS_amaZon_ETD, new List<CVID> { CVID.MS_Bruker_Daltonics_amaZon_series, });
            RelationsIsA.Add(CVID.MS_microflex_LRF, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_ultrafleXtreme, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_amaZon_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_amaZon_X, new List<CVID> { CVID.MS_Bruker_Daltonics_amaZon_series, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_maXis_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_solarix_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_solariX, new List<CVID> { CVID.MS_Bruker_Daltonics_solarix_series, });
            RelationsIsA.Add(CVID.MS_microflex_II, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_autoflex_II_TOF_TOF, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_autoflex_III_TOF_TOF_smartbeam, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_autoflex, new List<CVID> { CVID.MS_Bruker_Daltonics_flex_series, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_apex_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Shimadzu_Corporation_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_MALDI_Solutions, new List<CVID> { CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, CVID.MS_Shimadzu_Corporation_software, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_TOF_TOF_T2D_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_AB_SCIEX_TOF_TOF_T2D_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Scaffold, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Scaffold_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_SEQUEST_SQT_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_Discoverer_MSF_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_IdentityE_XML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_ProteinLynx_XML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_SpectrumMill_directories, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_Scaffold_Peptide_Probability, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_IdentityE_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinLynx_Log_Likelihood, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinLynx_Ladder_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectrumMill_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectrumMill_SPI, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_report_only_spectra_assigned_to_identified_proteins, new List<CVID> { CVID.MS_quality_estimation_method_details, });
            RelationsIsA.Add(CVID.MS_Scaffold__Minimum_Peptide_Count, new List<CVID> { CVID.MS_Scaffold_input_parameter, });
            RelationsIsA.Add(CVID.MS_Scaffold__Minimum_Protein_Probability, new List<CVID> { CVID.MS_Scaffold_input_parameter, });
            RelationsIsA.Add(CVID.MS_Scaffold__Minimum_Peptide_Probability, new List<CVID> { CVID.MS_Scaffold_input_parameter, });
            RelationsIsA.Add(CVID.MS_minimum_number_of_enzymatic_termini, new List<CVID> { CVID.MS_common_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_Scaffold_Protein_Probability, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SpectrumMill_Discriminant_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_FAIMS_compensation_voltage, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_XCMS, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_MaxQuant, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_combined_pmf___ms_ms_search, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_MyriMatch, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_DirecTag, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_TagRecon, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Pepitome, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_MyriMatch_MVH, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MyriMatch_mzFidelity, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_anchor_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_family_member_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_group_member_with_undefined_relationship_OR_ortholog_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_sequence_same_set_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_spectrum_same_set_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_sequence_sub_set_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_spectrum_sub_set_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_sequence_subsumable_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_spectrum_subsumable_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_protein_inference_confidence_category, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Files_Raw_File_names_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SRF_File_Selector_SRF_File_Path_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Ionization_Source_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Activation_Type_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Lower_RT_Limit, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mass_Analyzer_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Max_Precursor_Mass, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Min_Precursor_Mass, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Minimum_Peak_Count, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_MS_Order_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Polarity_Mode_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Selection, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SN_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Scan_Type_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Total_Intensity_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Activation_Type_Replacements, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Charge_Replacements, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Mass_Analyzer_Replacements, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_MS_Order_Replacements, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Unrecognized_Polarity_Replacements, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Upper_RT_Limit, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Mass_Window_Offset, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Maximum_Neutral_Loss_Mass, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Charge_Reduced_Precursor, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Neutral_Loss_Peaks, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Only_Known_Masses, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Overtones, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Non_Fragment_Filter_Remove_Precursor_Peak, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_Mass_Analyzer_Mismatch, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Allow_MS_Order_Mismatch, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Max_RT_Difference_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Grouper_Precursor_Mass_Criterion, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Highest_Charge, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Highest_MZ_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_Charge, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Lowest_MZ_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Monoisotopic_Mass_Only, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Overlapping_Remainder, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Required_Fitting_Accuracy, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Xtract_Resolution_At_400, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Lowest_Charge_State, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Highest_Charge_State, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Score_Filter_Let_Pass_Above_Scores, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Dynamic_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Static_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Decoy_Search_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Error_tolerant_Search, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Max_MGF_File_Size, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Mascot_Server_URL, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Number_of_attempts_to_submit_the_search, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_X_Static_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_User_Name_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Time_interval_between_attempts_to_submit_a_search, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Enzyme_Name_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Fragment_Mass_Tolerance_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_Instrument, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Maximum_Missed_Cleavage_Sites, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Peptide_CutOff_Score, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Precursor_Mass_Tolerance_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Protein_CutOff_Score, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Protein_Database_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Protein_Relevance_Factor, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Target_FDR_Relaxed, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Target_FDR_Strict, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Taxonomy_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Use_Average_Precursor_Mass_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_use_MudPIT_scoring_OBSOLETE, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Absolute_XCorr_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Calculate_Probability_Score, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_CTerminal_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Fragment_Ion_Cutoff_Percentage, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Max_Identical_Modifications_Per_Peptide, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Max_Modifications_Per_Peptide, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Maximum_Peptides_Considered, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Maximum_Peptides_Output, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Maximum_Protein_References_Per_Peptide, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_NTerminal_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Peptide_CTerminus, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Peptide_NTerminus, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Peptide_Relevance_Factor, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Protein_Relevance_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Search_Against_Decoy_Database_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Use_Average_Fragment_Masses, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_a_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_b_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_y_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Use_Neutral_Loss_z_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_a_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_b_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_c_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_d_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_v_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_w_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_x_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_y_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Weight_of_z_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_ZCore_Protein_Score_Cutoff, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Method, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Integration_Window_Tolerance, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Reporter_Ions_Quantizer_Quantitation_Method, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_Export_Format_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Exporter_File_name, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Search_Modifications_Only_For_Identified_Proteins, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge1, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge2, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge3, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_High_Confidence_XCorr_Charge4, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge1, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge2, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge3, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Std_Medium_Confidence_XCorr_Charge4, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge1, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge2, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge3, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_High_Confidence_XCorr_Charge4, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge1, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge2, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge3, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_FT_Medium_Confidence_XCorr_Charge4, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_1__Dynamic_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_2__Dynamic_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_3__Dynamic_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_4__Dynamic_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Static_Modification_for_X, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Initial_minimal_peptide_probability, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Minimal_peptide_probability, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Minimal_peptide_weight, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_input1_spectra, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_input2_spectra, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_input3_spectra, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_input4_spectra, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_input5_spectra, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_predicted_correct_proteins, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Organism_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Reference_Database_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Residue_substitution_list, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Source_file_extension_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Source_Files_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Source_Files_old_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_WinCyg_reference_database, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_WinCyg_source_files, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap_Velos, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_A_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_B_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_C_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_D_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_V_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_W_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_X_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Y_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Weight_of_Z_Ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Use_New_Precursor_Reevaluation, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_SN_Threshold_FTonly, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Please_Do_not_Touch_this, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_contact_phone_number, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_fax_number, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_contact_toll_free_phone_number, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_Mascot_SigThresholdType, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_ProteinGrouping, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Percolator_features, new List<CVID> { CVID.MS_Percolator_input_parameter, });
            RelationsIsA.Add(CVID.MS_ACQUITY_UPLC, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_ACQUITY_UPLC_H_Class, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_ACQUITY_UPLC_H_Class_Bio, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_ACQUITY_UPLC_I_Class, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_ACQUITY_UPLC_Systems_with_2D_Technology, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_nanoACQUITY_UPLC, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_nanoACQUITY_UPLC_System_with_Technology, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_nanoACQUITY_UPLC_with_HDX_Technology, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_TRIZAIC_UPLC_nanoTile, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_GCT_Premier, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_G2_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_G2_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_G2_S_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_G2_S_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_MALDI_Synapt_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_G2_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_G2_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_G2_S_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_G2_S_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_HDMS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Synapt_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_G2_Q_Tof, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_G2_Tof, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_Q_Tof, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_3100, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Acquity_SQD, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Acquity_TQD, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Quattro_micro_GC, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_TQ_MS, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_TQD, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_TQ_S, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Mascot_PreferredTaxonomy, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_Empower, new List<CVID> { CVID.MS_Waters_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Unify, new List<CVID> { CVID.MS_Waters_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_LECO_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_ChromaTOF_software, new List<CVID> { CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, CVID.MS_LECO_software, });
            RelationsIsA.Add(CVID.MS_LECO_instrument_model, new List<CVID> { CVID.MS_instrument_model, });
            RelationsIsA.Add(CVID.MS_Pegasus_HRT, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_Citius_HRT, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_Pegasus, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_TruTOF, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_quantification_datatype, new List<CVID> { CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_quantification_object_attribute, new List<CVID> { CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_study_variable_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_technical_replicate, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_biological_replicate, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_experimental_condition__case_, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_experimental_condition__control_, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_experimental_condition__disease_, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_experimental_condition__healthy_, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_generic_experimental_condition, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_time_series__time_point_X, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_dilution_series__concentration_X, new List<CVID> { CVID.MS_study_variable_attribute, });
            RelationsIsA.Add(CVID.MS_raw_file_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_one_sample_run, new List<CVID> { CVID.MS_raw_file_attribute, });
            RelationsIsA.Add(CVID.MS_two_sample_run, new List<CVID> { CVID.MS_raw_file_attribute, });
            RelationsIsA.Add(CVID.MS_three_sample_run, new List<CVID> { CVID.MS_raw_file_attribute, });
            RelationsIsA.Add(CVID.MS_four_sample_run, new List<CVID> { CVID.MS_raw_file_attribute, });
            RelationsIsA.Add(CVID.MS_eight_sample_run, new List<CVID> { CVID.MS_raw_file_attribute, });
            RelationsIsA.Add(CVID.MS_raw_files_group_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_merge_of_runs_of_1D_gel_bands, new List<CVID> { CVID.MS_raw_files_group_attribute, });
            RelationsIsA.Add(CVID.MS_feature_list_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_mass_trace_reporting__rectangles, new List<CVID> { CVID.MS_feature_list_attribute, });
            RelationsIsA.Add(CVID.MS_mass_trace_reporting__polygons, new List<CVID> { CVID.MS_feature_list_attribute, });
            RelationsIsA.Add(CVID.MS_feature_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_SRM_transition_ID, new List<CVID> { CVID.MS_feature_attribute, });
            RelationsIsA.Add(CVID.MS_Progenesis_LC_MS, new List<CVID> { CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_SILACAnalyzer, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_quantitation_software_comment_or_customizations, new List<CVID> { CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_quantitation_analysis_summary, new List<CVID> { CVID.MS_quantification_information, });
            RelationsIsA.Add(CVID.MS_LC_MS_label_free_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_SILAC_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_spectral_counting_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_iTRAQ_quantitation_analysis, new List<CVID> { CVID.MS_isobaric_label_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_SRM_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_metabolic_labeling_14N___15N_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_LC_MS_feature_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_LC_MS_feature_volume, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peptide_PSM_count, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MS1_feature_maximum_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MS1_feature_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peak_area_OBSOLETE, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_isotopic_pattern_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_reporter_ion_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_simple_ratio_of_two_values, new List<CVID> { CVID.MS_ratio_calculation_method, });
            RelationsIsA.Add(CVID.MS_sum_of_MatchedFeature_values_OBSOLETE, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_normalized_peptide_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_protein_value__sum_of_peptide_values, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_normalized_protein_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_max_fold_change, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_ANOVA_p_value, new List<CVID> { CVID.MS_p_value, });
            RelationsIsA.Add(CVID.MS_t_test_p_value, new List<CVID> { CVID.MS_p_value, });
            RelationsIsA.Add(CVID.MS_reporter_ion_raw_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_reporter_ion_normalized_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_XIC_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_normalized_XIC_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_protein_value__mean_of_peptide_ratios, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_normalization_to_mean_of_sum_of_all_proteins, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_quantile_normalization__proteins, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_quantile_normalization__peptides, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_Progenesis_automatic_alignment, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_Progenesis_manual_alignment, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_Progenesis_normalization, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_q_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_level_q_value, new List<CVID> { CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_p_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_level_p_value, new List<CVID> { CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_e_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_level_e_value, new List<CVID> { CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_FDRScore_OBSOLETE, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_modification_motif, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_modification_probability, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_ChromaTOF_HRT_software, new List<CVID> { CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, CVID.MS_LECO_software, });
            RelationsIsA.Add(CVID.MS_MALDI_Solutions_Microbial_Identification, new List<CVID> { CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, CVID.MS_MALDI_Solutions, });
            RelationsIsA.Add(CVID.MS_offset_voltage, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_in_source_collision_induced_dissociation, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_mz5_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_coefficient_of_variation, new List<CVID> { CVID.MS_transition_validation_attribute, });
            RelationsIsA.Add(CVID.MS_signal_to_noise_ratio, new List<CVID> { CVID.MS_transition_validation_attribute, });
            RelationsIsA.Add(CVID.MS_command_line_parameters, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_SQID, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_SQID_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SQID_deltaScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SQID_protein_score, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Progenesis_protein_normalised_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_peptide_normalised_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_protein_raw_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_peptide_raw_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_confidence_score, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_peptide_count, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_feature_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_peptide_counts__unique_, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_peptide_counts__all_, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_peptide_counts__razor_unique_, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_sequence_length, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_PEP, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_LFQ_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_feature_intensity, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_MaxQuant_MS_MS_count, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_emPAI_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_APEX_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_retention_time_window_width, new List<CVID> { CVID.MS_retention_time_window_attribute, });
            RelationsIsA.Add(CVID.MS_ISQ, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Velos_Plus, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_LTQ_Orbitrap_Elite, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Q_Exactive, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_PinPoint, new List<CVID> { CVID.MS_Thermo_Finnigan_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_S_lens_voltage, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_pymzML, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_leukocyte_elastase, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_proline_endopeptidase, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_glutamyl_endopeptidase, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_2_iodobenzoate, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_ProteomeXchange_accession_number, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_ProteomeXchange_accession_number_version_number, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_Digital_Object_Identifier__DOI_, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_external_reference_keyword, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_journal_article_keyword, new List<CVID> { CVID.MS_external_reference_keyword, });
            RelationsIsA.Add(CVID.MS_submitter_keyword, new List<CVID> { CVID.MS_external_reference_keyword, });
            RelationsIsA.Add(CVID.MS_curator_keyword, new List<CVID> { CVID.MS_external_reference_keyword, });
            RelationsIsA.Add(CVID.MS_Tranche_file_hash, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_Tranche_project_hash, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_PRIDE_experiment_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_PRIDE_project_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_stainless_steel_plate, new List<CVID> { CVID.MS_sample_plate_type, });
            RelationsIsA.Add(CVID.MS_coated_glass_plate, new List<CVID> { CVID.MS_sample_plate_type, });
            RelationsIsA.Add(CVID.MS_static_supply_electrospray, new List<CVID> { CVID.MS_electrospray_supply_type, });
            RelationsIsA.Add(CVID.MS_fed_supply_electrospray, new List<CVID> { CVID.MS_electrospray_supply_type, });
            RelationsIsA.Add(CVID.MS_Collision_cell_exit_potential, new List<CVID> { CVID.MS_precursor_activation_attribute, });
            RelationsIsA.Add(CVID.MS_Pegasus_4D, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_PEAKS_Studio, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PEAKS_Online, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PEAKS_Node, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_BSI_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_PEAKS_peptideScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PEAKS_proteinScore, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ZCore_probScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_no_cleavage, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS_unspecific_cleavage, new List<CVID> { CVID.MS_cleavage_agent_name, });
            RelationsIsA.Add(CVID.MS______ALIV_____P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS______HKR_P____P_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_______E_E_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_____W_, new List<CVID> { CVID.MS_Cleavage_agent_regular_expression, });
            RelationsIsA.Add(CVID.MS_Mascot_C13_counts, new List<CVID> { CVID.MS_Mascot_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_Weighting, new List<CVID> { CVID.MS_ProteinExtractor_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinScape_second_round_Mascot, new List<CVID> { CVID.MS_ProteinScape_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinScape_second_round_Phenyx, new List<CVID> { CVID.MS_ProteinScape_input_parameter, });
            RelationsIsA.Add(CVID.MS_product_ion_mobility, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_product_ion_drift_time_OBSOLETE, new List<CVID> { CVID.MS_SRM_transition_attribute, });
            RelationsIsA.Add(CVID.MS_PSM_level_PTM_localization_score, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_phosphoRS_score, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_phosphoRS_sequence_probability, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_phosphoRS_site_probability, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_PTM_scoring_algorithm_version, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_DeBunker, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_DeBunker_score, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_delta_m_z, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_delta_M, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_MSQuant, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_MSQuant_PTM_score, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MaxQuant_PTM_Score, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MaxQuant_Phospho__STY__Probabilities, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_spectrum_identification_result_details, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MaxQuant_Phospho__STY__Score_Diffs, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_spectrum_identification_result_details, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MaxQuant_P_site_localization_probability, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_spectrum_identification_result_details, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MaxQuant_PTM_Delta_Score, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_Ascore, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Ascore1, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_H_Score, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_vacuum_drying_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_crushed_crystal_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_fast_evaporation_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_overlayer_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_sandwich_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_spin_coating_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_quick_and_dirty_MALDI_sample_preparation, new List<CVID> { CVID.MS_matrix_application_type, });
            RelationsIsA.Add(CVID.MS_top_hat_baseline_reduction, new List<CVID> { CVID.MS_baseline_reduction, });
            RelationsIsA.Add(CVID.MS_convex_hull_baseline_reduction, new List<CVID> { CVID.MS_baseline_reduction, });
            RelationsIsA.Add(CVID.MS_median_baseline_reduction, new List<CVID> { CVID.MS_baseline_reduction, });
            RelationsIsA.Add(CVID.MS_wavelet_transformation_smoothing, new List<CVID> { CVID.MS_smoothing, });
            RelationsIsA.Add(CVID.MS_sophisticated_numerical_annotation_procedure, new List<CVID> { CVID.MS_area_peak_picking, });
            RelationsIsA.Add(CVID.MS_area_normalization, new List<CVID> { CVID.MS_intensity_normalization, });
            RelationsIsA.Add(CVID.MS_LIFT, new List<CVID> { CVID.MS_dissociation_method, });
            RelationsIsA.Add(CVID.MS_MS1_label_based_raw_feature_quantitation, new List<CVID> { CVID.MS_MS1_label_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS1_label_based_peptide_level_quantitation, new List<CVID> { CVID.MS_MS1_label_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS1_label_based_protein_level_quantitation, new List<CVID> { CVID.MS_MS1_label_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS1_label_based_proteingroup_level_quantitation, new List<CVID> { CVID.MS_MS1_label_based_analysis, });
            RelationsIsA.Add(CVID.MS_iRT_retention_time_normalization_standard, new List<CVID> { CVID.MS_retention_time_normalization_standard, });
            RelationsIsA.Add(CVID.MS_target_SRM_transition, new List<CVID> { CVID.MS_SRM_transition_type, });
            RelationsIsA.Add(CVID.MS_decoy_SRM_transition, new List<CVID> { CVID.MS_SRM_transition_type, });
            RelationsIsA.Add(CVID.MS_isobaric_label_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_TMT_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, CVID.MS_isobaric_label_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_desorption_electrospray_ionization, new List<CVID> { CVID.MS_atmospheric_pressure_ionization, });
            RelationsIsA.Add(CVID.MS_Mascot_PTM_site_assignment_confidence, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_spectrum_identification_result_details, CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_collision_energy_ramp_start, new List<CVID> { CVID.MS_collision_energy, });
            RelationsIsA.Add(CVID.MS_collision_energy_ramp_end, new List<CVID> { CVID.MS_collision_energy, });
            RelationsIsA.Add(CVID.MS_spectral_count_peptide_level_quantitation, new List<CVID> { CVID.MS_spectral_counting_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_spectral_count_protein_level_quantitation, new List<CVID> { CVID.MS_spectral_counting_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_spectral_count_proteingroup_level_quantitation, new List<CVID> { CVID.MS_spectral_counting_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_MS1_label_based_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_label_free_raw_feature_quantitation, new List<CVID> { CVID.MS_LC_MS_label_free_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_label_free_peptide_level_quantitation, new List<CVID> { CVID.MS_LC_MS_label_free_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_label_free_protein_level_quantitation, new List<CVID> { CVID.MS_LC_MS_label_free_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_label_free_proteingroup_level_quantitation, new List<CVID> { CVID.MS_LC_MS_label_free_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_MS2_tag_based_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_MS2_tag_based_feature_level_quantitation, new List<CVID> { CVID.MS_MS2_tag_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS2_tag_based_peptide_level_quantitation, new List<CVID> { CVID.MS_MS2_tag_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS2_tag_based_protein_level_quantitation, new List<CVID> { CVID.MS_MS2_tag_based_analysis, });
            RelationsIsA.Add(CVID.MS_MS2_tag_based_proteingroup_level_quantitation, new List<CVID> { CVID.MS_MS2_tag_based_analysis, });
            RelationsIsA.Add(CVID.MS_nucleic_acid_base_modification, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_original_nucleic_acid_sequence, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_modified_nucleic_acid_sequence, new List<CVID> { CVID.MS_peptide_modification_details, });
            RelationsIsA.Add(CVID.MS_PASSEL_transition_group_browser_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_PeptideAtlas_dataset_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_contact_role, new List<CVID> { CVID.MS_contact_attribute, });
            RelationsIsA.Add(CVID.MS_first_author, new List<CVID> { CVID.MS_contact_role, });
            RelationsIsA.Add(CVID.MS_senior_author, new List<CVID> { CVID.MS_contact_role, });
            RelationsIsA.Add(CVID.MS_co_author, new List<CVID> { CVID.MS_contact_role, });
            RelationsIsA.Add(CVID.MS_dataset_submitter, new List<CVID> { CVID.MS_contact_role, });
            RelationsIsA.Add(CVID.MS_unlabeled_sample, new List<CVID> { CVID.MS_sample_attribute, });
            RelationsIsA.Add(CVID.MS_inlet_attribute, new List<CVID> { CVID.MS_object_attribute, });
            RelationsIsA.Add(CVID.MS_inlet_temperature, new List<CVID> { CVID.MS_source_attribute, CVID.MS_inlet_attribute, });
            RelationsIsA.Add(CVID.MS_source_temperature, new List<CVID> { CVID.MS_source_attribute, });
            RelationsIsA.Add(CVID.MS_modulation_time, new List<CVID> { CVID.MS_run_attribute, });
            RelationsIsA.Add(CVID.MS_ProteinProspector, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_ProteinProspector_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteinProspector_expectation_value, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_native_source_path, new List<CVID> { CVID.MS_spectrum_generation_information, });
            RelationsIsA.Add(CVID.MS_MS_GF, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_MS_GF_, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_MS_GF_RawScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MS_GF_DeNovoScore, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MS_GF_Energy, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MS_GF_SpecEValue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_PSM_level_e_value, });
            RelationsIsA.Add(CVID.MS_MS_GF_EValue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_PSM_level_e_value, });
            RelationsIsA.Add(CVID.MS_MS_GF_QValue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_PSM_level_q_value, });
            RelationsIsA.Add(CVID.MS_MS_GF_PepQValue, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, CVID.MS_distinct_peptide_level_q_value, });
            RelationsIsA.Add(CVID.MS_MS_GF_PEP, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_modification_specificity_protein_N_term, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_modification_specificity_protein_C_term, new List<CVID> { CVID.MS_modification_specificity_rule, });
            RelationsIsA.Add(CVID.MS_Microsoft_Excel, new List<CVID> { CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_database_UniProtKB_TrEMBL, new List<CVID> { CVID.MS_database_UniProtKB, });
            RelationsIsA.Add(CVID.MS_metabolic_labelling__natural_N__mainly_14N_, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_FindPairs, new List<CVID> { CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_peptide_consensus_RT, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peptide_consensus_m_z, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_ratio_calculation_method, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_protein_value__median_of_peptide_ratios, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_metabolic_labelling__heavy_N__mainly_15N_, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_metabolic_labelling__labelling_purity, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_t_test, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_ANOVA_test, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_p_value, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_mzIdentML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_quantification_file_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_mzQuantML_format, new List<CVID> { CVID.MS_quantification_file_format, });
            RelationsIsA.Add(CVID.MS_PAnalyzer, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_impact, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_1__Static_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_2__Static_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_Before, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Spectrum_Selector_Precursor_Clipping_Range_After, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_first_column_elution_time, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_second_column_elution_time, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_multidimensional_chromatography_modulation_description, new List<CVID> { CVID.MS_run_attribute, });
            RelationsIsA.Add(CVID.MS_two_dimensional_gas_chromatography_with_fixed_modulation_time, new List<CVID> { CVID.MS_multidimensional_chromatography_modulation_description, });
            RelationsIsA.Add(CVID.MS_two_dimensional_gas_chromatography_with_discrete_modulation_time_steps, new List<CVID> { CVID.MS_multidimensional_chromatography_modulation_description, });
            RelationsIsA.Add(CVID.MS_two_dimensional_liquid_chromatography_with_fixed_modulation_time, new List<CVID> { CVID.MS_multidimensional_chromatography_modulation_description, });
            RelationsIsA.Add(CVID.MS_two_dimensional_liquid_chromatography_with_discrete_modulation_time_steps, new List<CVID> { CVID.MS_multidimensional_chromatography_modulation_description, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_XCorr_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Calculate_Probability_Scores, new List<CVID> { CVID.MS_common_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Maximum_Delta_Cn, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Percolator_Validation_based_on, new List<CVID> { CVID.MS_Percolator_input_parameter, });
            RelationsIsA.Add(CVID.MS_search_engine_input_parameter, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_common_search_engine_input_parameter, new List<CVID> { CVID.MS_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_Mascot_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_SEQUEST_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_Phenyx_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinExtractor_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_OMSSA_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteinScape_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_software_input_parameter, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_common_software_input_parameter, new List<CVID> { CVID.MS_software_input_parameter, });
            RelationsIsA.Add(CVID.MS_software_specific_input_parameter, new List<CVID> { CVID.MS_software_input_parameter, });
            RelationsIsA.Add(CVID.MS_Scaffold_input_parameter, new List<CVID> { CVID.MS_software_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_Percolator_input_parameter, new List<CVID> { CVID.MS_software_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_assay_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_assay_label_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_protein_group_list_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_protein_group_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_protein_list_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_peptide_consensus_list_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_peptide_consensus_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_small_molecule_list_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_small_molecule_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_small_molecule_modification_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_experiment_name, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_spectral_count_feature, new List<CVID> { CVID.MS_feature_attribute, });
            RelationsIsA.Add(CVID.MS_counts_reporting, new List<CVID> { CVID.MS_feature_list_attribute, });
            RelationsIsA.Add(CVID.MS_x_Tracker, new List<CVID> { CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_ProteoSuite, new List<CVID> { CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_combined_FDRScore_OBSOLETE, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_database_UniProtKB, new List<CVID> { CVID.MS_database_name, });
            RelationsIsA.Add(CVID.MS_identification_file_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_method_file_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_ITRAQAnalyzer, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_identification_file_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_TOPP_noise_filter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_NoiseFilterGaussian, new List<CVID> { CVID.MS_TOPP_noise_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_NoiseFilterSGolay, new List<CVID> { CVID.MS_TOPP_noise_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_peak_picker, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_PeakPickerHiRes, new List<CVID> { CVID.MS_TOPP_peak_picker, });
            RelationsIsA.Add(CVID.MS_TOPP_PeakPickerWavelet, new List<CVID> { CVID.MS_TOPP_peak_picker, });
            RelationsIsA.Add(CVID.MS_TOPP_spectra_filter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterBernNorm, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterMarkerMower, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterNLargest, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterNormalizer, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterParentPeakMower, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterScaler, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterSqrtMower, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterThresholdMower, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraFilterWindowMower, new List<CVID> { CVID.MS_TOPP_spectra_filter, });
            RelationsIsA.Add(CVID.MS_TOPP_map_aligner, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_MapAlignerIdentification, new List<CVID> { CVID.MS_TOPP_map_aligner, });
            RelationsIsA.Add(CVID.MS_TOPP_MapAlignerPoseClustering, new List<CVID> { CVID.MS_TOPP_map_aligner, });
            RelationsIsA.Add(CVID.MS_TOPP_MapAlignerSpectrum, new List<CVID> { CVID.MS_TOPP_map_aligner, });
            RelationsIsA.Add(CVID.MS_numerator_data_type_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_denominator_data_type_attribute, new List<CVID> { CVID.MS_quantification_object_attribute, });
            RelationsIsA.Add(CVID.MS_protein_level_PSM_counts, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_TOPP_DTAExtractor, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDMerger, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDFileConverter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_SpectraMerger, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_MzTabExporter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_MassTraceExtractor, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_PrecursorMassCorrector, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_HighResPrecursorMassCorrector, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_AdditiveSeries, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_Decharger, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_EICExtractor, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_feature_finder, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureFinderCentroided, new List<CVID> { CVID.MS_TOPP_feature_finder, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureFinderRaw, new List<CVID> { CVID.MS_TOPP_feature_finder, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureFinderIsotopeWavelet, new List<CVID> { CVID.MS_TOPP_feature_finder, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureFinderMetabo, new List<CVID> { CVID.MS_TOPP_feature_finder, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureFinderMRM, new List<CVID> { CVID.MS_TOPP_feature_finder, });
            RelationsIsA.Add(CVID.MS_TOPP_ProteinQuantifier, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_ConsensusMapNormalizer, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_MapRTTransformer, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_feature_linker, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureLinkerLabeled, new List<CVID> { CVID.MS_TOPP_feature_linker, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureLinkerUnlabeled, new List<CVID> { CVID.MS_TOPP_feature_linker, });
            RelationsIsA.Add(CVID.MS_TOPP_FeatureLinkerUnlabeledQT, new List<CVID> { CVID.MS_TOPP_feature_linker, });
            RelationsIsA.Add(CVID.MS_TOPP_CompNovo, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_CompNovoCID, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_software_adaptor, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_InspectAdapter, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_MascotAdapter, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_MascotAdapterOnline, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_OMSSAAdapter, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_PepNovoAdapter, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_XTandemAdapter, new List<CVID> { CVID.MS_TOPP_software_adaptor, });
            RelationsIsA.Add(CVID.MS_TOPP_SpecLibSearcher, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_ConsensusID, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDConflictResolver, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDFilter, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDMapper, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDPosteriorErrorProbability, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_IDRTCalibration, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_PeptideIndexer, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_PrecursorIonSelector, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_MRMMapper, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwath_component, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwathAnalyzer, new List<CVID> { CVID.MS_TOPP_OpenSwath_component, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwathChromatogramExtractor, new List<CVID> { CVID.MS_TOPP_OpenSwath_component, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwathDecoyGenerator, new List<CVID> { CVID.MS_TOPP_OpenSwath_component, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwathFeatureXMLToTSV, new List<CVID> { CVID.MS_TOPP_OpenSwath_component, });
            RelationsIsA.Add(CVID.MS_TOPP_OpenSwathRTNormalizer, new List<CVID> { CVID.MS_TOPP_OpenSwath_component, });
            RelationsIsA.Add(CVID.MS_TOPP_ProteinInference, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_TOPP_FalseDiscoveryRate, new List<CVID> { CVID.MS_TOPP_software, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_msconvert, new List<CVID> { CVID.MS_ProteoWizard_software, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_idconvert, new List<CVID> { CVID.MS_ProteoWizard_software, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_chainsaw, new List<CVID> { CVID.MS_ProteoWizard_software, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_msaccess, new List<CVID> { CVID.MS_ProteoWizard_software, });
            RelationsIsA.Add(CVID.MS_ProteoWizard_SeeMS, new List<CVID> { CVID.MS_ProteoWizard_software, });
            RelationsIsA.Add(CVID.MS_IsobariQ, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Variance_stabilizing_normalization, new List<CVID> { CVID.MS_quantification_data_processing, });
            RelationsIsA.Add(CVID.MS_IPTL_quantitation_analysis, new List<CVID> { CVID.MS_isobaric_label_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_PAnalyzer_conclusive_protein, new List<CVID> { CVID.MS_protein_inference_confidence_category, });
            RelationsIsA.Add(CVID.MS_PAnalyzer_indistinguishable_protein, new List<CVID> { CVID.MS_protein_inference_confidence_category, });
            RelationsIsA.Add(CVID.MS_PAnalyzer_non_conclusive_protein, new List<CVID> { CVID.MS_protein_inference_confidence_category, });
            RelationsIsA.Add(CVID.MS_PAnalyzer_ambiguous_group_member, new List<CVID> { CVID.MS_protein_inference_confidence_category, });
            RelationsIsA.Add(CVID.MS_decoy_peptide, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_percent_collision_energy_ramp_start, new List<CVID> { CVID.MS_normalized_collision_energy, });
            RelationsIsA.Add(CVID.MS_percent_collision_energy_ramp_end, new List<CVID> { CVID.MS_normalized_collision_energy, });
            RelationsIsA.Add(CVID.MS_MRMaid, new List<CVID> { CVID.MS_SRM_software, });
            RelationsIsA.Add(CVID.MS_MRMaid_peptide_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SRM_transition_attribute, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_precursor_ion_detection_probability, new List<CVID> { CVID.MS_SRM_transition_attribute, });
            RelationsIsA.Add(CVID.MS_product_ion_detection_probability, new List<CVID> { CVID.MS_SRM_transition_attribute, });
            RelationsIsA.Add(CVID.MS_average_product_ion_intensity, new List<CVID> { CVID.MS_product_ion_intensity, });
            RelationsIsA.Add(CVID.MS_product_ion_intensity_standard_deviation, new List<CVID> { CVID.MS_product_ion_intensity, });
            RelationsIsA.Add(CVID.MS_number_of_product_ion_observations, new List<CVID> { CVID.MS_SRM_transition_attribute, });
            RelationsIsA.Add(CVID.MS_number_of_precursor_ion_observations, new List<CVID> { CVID.MS_SRM_transition_attribute, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Significance_Middle, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Mascot_Significance_High, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_regular_expressions_for_a_GUID, new List<CVID> { CVID.MS_regular_expression, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Default_FDR_calculator, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_SEQUEST_Low_resolution_spectra_contained, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_selected_precursor_m_z, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_ProteoGrouper_PDH_score, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_ProteoGrouper_PAG_score, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_mzidLib, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_mzidLib_Omssa2Mzid, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_Tandem2Mzid, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_Csv2Mzid, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_ProteoGrouper, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_Thresholder, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_Perform_emPAI_on_mzid, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_FalseDiscoveryRate, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_Mzidentml2Csv, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_CombineSearchEngines, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_mzidLib_InsertMetaDataFromFasta, new List<CVID> { CVID.MS_mzidLib, });
            RelationsIsA.Add(CVID.MS_SEQUEST_spscore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_sprank, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_SEQUEST_deltacnstar, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Comet_xcorr, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_deltacn, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_deltacnstar, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_spscore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_sprank, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_expectation_value, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_matched_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Comet_total_ions, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PSM_FDR_threshold, new List<CVID> { CVID.MS_PSM_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_Byonic, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Byonic_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_Delta_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_DeltaMod_Score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_PEP, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_Peptide_LogProb, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_Protein_LogProb, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_Best_LogProb, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic_Best_Score, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_chromatography_separation, new List<CVID> { CVID.MS_run_attribute, });
            RelationsIsA.Add(CVID.MS_liquid_chromatography_separation, new List<CVID> { CVID.MS_chromatography_separation, });
            RelationsIsA.Add(CVID.MS_gas_chromatography_separation, new List<CVID> { CVID.MS_chromatography_separation, });
            RelationsIsA.Add(CVID.MS_detector_potential, new List<CVID> { CVID.MS_detector_attribute, });
            RelationsIsA.Add(CVID.MS_SQ_Detector_2_, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_G2_S_Tof, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Xevo_G2_S_QTof, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_AutoSpec_Premier, new List<CVID> { CVID.MS_Waters_instrument_model, });
            RelationsIsA.Add(CVID.MS_Pegasus_III, new List<CVID> { CVID.MS_LECO_instrument_model, });
            RelationsIsA.Add(CVID.MS_maXis_4G, new List<CVID> { CVID.MS_Bruker_Daltonics_maXis_series, });
            RelationsIsA.Add(CVID.MS_compact, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_SRM_feature_level_quantitation, new List<CVID> { CVID.MS_SRM_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_SRM_peptide_level_quantitation, new List<CVID> { CVID.MS_SRM_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_SRM_protein_level_quantitation, new List<CVID> { CVID.MS_SRM_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_SRM_proteingroup_level_quantitation, new List<CVID> { CVID.MS_SRM_quantitation_analysis, });
            RelationsIsA.Add(CVID.MS_Trans_Proteomic_Pipeline, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Trans_Proteomic_Pipeline_software, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_PeptideProphet, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_iProphet, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_ProteinProphet, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_ASAPRatio, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_XPRESS, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_Libra, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_PTMProphet, new List<CVID> { CVID.MS_Trans_Proteomic_Pipeline_software, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_SCION_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_Bruker_Daltonics_EVOQ_series, new List<CVID> { CVID.MS_Bruker_Daltonics_instrument_model, });
            RelationsIsA.Add(CVID.MS_SCION_SQ, new List<CVID> { CVID.MS_Bruker_Daltonics_SCION_series, });
            RelationsIsA.Add(CVID.MS_SCION_TQ, new List<CVID> { CVID.MS_Bruker_Daltonics_SCION_series, });
            RelationsIsA.Add(CVID.MS_EVOQ_Elite, new List<CVID> { CVID.MS_Bruker_Daltonics_EVOQ_series, });
            RelationsIsA.Add(CVID.MS_EVOQ_Qube, new List<CVID> { CVID.MS_Bruker_Daltonics_EVOQ_series, });
            RelationsIsA.Add(CVID.MS_micrOTOF_Q_III, new List<CVID> { CVID.MS_Bruker_Daltonics_micrOTOF_series, });
            RelationsIsA.Add(CVID.MS_amaZon_Speed_ETD, new List<CVID> { CVID.MS_Bruker_Daltonics_amaZon_series, });
            RelationsIsA.Add(CVID.MS_amaZon_Speed, new List<CVID> { CVID.MS_Bruker_Daltonics_amaZon_series, });
            RelationsIsA.Add(CVID.MS_Bruker_Container_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_Bruker_Container_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_value_between_0_and_1_inclusive, new List<CVID> { CVID.MS_domain_range, });
            RelationsIsA.Add(CVID.MS_value_greater_than_zero, new List<CVID> { CVID.MS_domain_range, });
            RelationsIsA.Add(CVID.MS_fragmentation_ion_type, new List<CVID> { CVID.MS_fragmentation_information, });
            RelationsIsA.Add(CVID.MS_fluorescence_detector, new List<CVID> { CVID.MS_detector_type, });
            RelationsIsA.Add(CVID.MS_Byonic__Peptide_AbsLogProb, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic__Protein_AbsLogProb, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Byonic__Peptide_AbsLogProb2D, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_MS_Numpress_linear_prediction_compression, new List<CVID> { CVID.MS_binary_data_compression_type, });
            RelationsIsA.Add(CVID.MS_MS_Numpress_positive_integer_compression, new List<CVID> { CVID.MS_binary_data_compression_type, });
            RelationsIsA.Add(CVID.MS_MS_Numpress_short_logged_float_compression, new List<CVID> { CVID.MS_binary_data_compression_type, });
            RelationsIsA.Add(CVID.MS_consensus_result, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Amanda_high_confidence_threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Amanda_middle_confidence_threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_automatic_workload, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Amanda_AmandaScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_differential_modifications, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_equal_modifications, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_min_peptide_length, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_peptide_length, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_number_neutral_loss_modifications, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_use_flanking_ions, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_max_number_of_same_modifs, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_perform_deisotoping, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_ion_settings, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_3__Static_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_5__Dynamic_Modification_OBSOLETE, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_lab_head, new List<CVID> { CVID.MS_contact_role, });
            RelationsIsA.Add(CVID.MS_conversion_software, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_ProCon, new List<CVID> { CVID.MS_conversion_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PRIDE_Converter2, new List<CVID> { CVID.MS_conversion_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Amanda, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Andromeda, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_Andromeda_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_site_global_FDR, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_ProteomeXchange_project_tag, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_second_pass_peptide_identification, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_MZmine, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_Maltcms, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PSM_level_result_details, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_protein_group_level_result_details, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_PSM_level_identification_confidence_metric, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_protein_group_level_identification_confidence_metric, new List<CVID> { CVID.MS_protein_group_level_result_details, });
            RelationsIsA.Add(CVID.MS_value_greater_than_zero_but_less_than_or_equal_to_one, new List<CVID> { CVID.MS_domain_range, });
            RelationsIsA.Add(CVID.MS_PSM_level_global_FDR, new List<CVID> { CVID.MS_PSM_level_result_details, CVID.MS_PSM_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_PSM_level_local_FDR, new List<CVID> { CVID.MS_PSM_level_result_details, CVID.MS_PSM_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_PSM_level_p_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PSM_level_e_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PSM_level_q_value, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PSM_level_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PSM_level_combined_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PSM_level_probability, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_score_for_distinct_peptides, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_local_FDR, new List<CVID> { CVID.MS_peptide_result_details, CVID.MS_peptide_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_distinct_peptides, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_combined_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_distinct_peptides, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_probability, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_score_for_proteins, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_protein_level_local_FDR, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_FDRScore_for_proteins, new List<CVID> { CVID.MS_search_engine_specific_score_for_proteins, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_combined_FDRScore_for_proteins, new List<CVID> { CVID.MS_search_engine_specific_score_for_proteins, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_probability_for_proteins, new List<CVID> { CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_score_for_protein_groups, new List<CVID> { CVID.MS_protein_group_level_result_details, });
            RelationsIsA.Add(CVID.MS_protein_group_level_global_FDR, new List<CVID> { CVID.MS_protein_group_level_result_details, CVID.MS_protein_group_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_protein_group_level_local_FDR, new List<CVID> { CVID.MS_protein_group_level_result_details, CVID.MS_protein_group_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_protein_group_level_p_value, new List<CVID> { CVID.MS_protein_group_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_group_level_e_value, new List<CVID> { CVID.MS_protein_group_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_group_level_q_value, new List<CVID> { CVID.MS_protein_group_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_protein_group_level_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_protein_groups, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_protein_group_level_combined_FDRScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_protein_groups, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_protein_group_level_probability, new List<CVID> { CVID.MS_search_engine_specific_score_for_protein_groups, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Relaxed_Score_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Strict_Score_Threshold, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Peptide_Without_Protein_Cut_Off_Score, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_false_localization_rate, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_MALDI_Solutions_LC_MALDI, new List<CVID> { CVID.MS_acquisition_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, CVID.MS_Shimadzu_Corporation_software, });
            RelationsIsA.Add(CVID.MS_Shimadzu_MALDI_7090, new List<CVID> { CVID.MS_Shimadzu_MALDI_TOF_instrument_model, });
            RelationsIsA.Add(CVID.MS_SCiLS_software, new List<CVID> { CVID.MS_software, });
            RelationsIsA.Add(CVID.MS_SCiLS_Lab, new List<CVID> { CVID.MS_SCiLS_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_SCiLS_Lab_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_preprocessing_software, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PIA, new List<CVID> { CVID.MS_postprocessing_software, CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_PIA_XML_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_PIA_workflow_parameter, new List<CVID> { CVID.MS_software_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_FDRScore_calculated, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_Combined_FDRScore_calculated, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_PSM_sets_created, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_used_top_identifications_for_FDR, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_protein_score, new List<CVID> { CVID.MS_single_protein_result_details, });
            RelationsIsA.Add(CVID.MS_PIA_protein_inference, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_protein_inference_filter, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_protein_inference_scoring, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_protein_inference_used_score, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_protein_inference_used_PSMs, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_PIA_filter, new List<CVID> { CVID.MS_PIA_workflow_parameter, });
            RelationsIsA.Add(CVID.MS_leading_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_non_leading_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_group_representative, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_count_of_identified_proteins, new List<CVID> { CVID.MS_protein_result_details, });
            RelationsIsA.Add(CVID.MS_protein_cluster_details, new List<CVID> { CVID.MS_protein_result_details, });
            RelationsIsA.Add(CVID.MS_count_of_identified_clusters, new List<CVID> { CVID.MS_protein_cluster_details, });
            RelationsIsA.Add(CVID.MS_cluster_identifier, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_number_of_distinct_protein_sequences, new List<CVID> { CVID.MS_protein_cluster_details, });
            RelationsIsA.Add(CVID.MS_marginally_distinguished_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_Anubis, new List<CVID> { CVID.MS_SRM_software, CVID.MS_quantitation_software_name, });
            RelationsIsA.Add(CVID.MS_TraML_format, new List<CVID> { CVID.MS_method_file_format, });
            RelationsIsA.Add(CVID.MS_total_XIC_area, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_product_background, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_postprocessing_software, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_protein_group_passes_threshold, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_Orbitrap_Fusion, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Orbitrap_Fusion_ETD, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_Quantiva, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_TSQ_Endura, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_PASSEL_experiment_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_Paragon_input_parameter, new List<CVID> { CVID.MS_search_engine_specific_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__sample_type, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__cysteine_alkylation, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__instrument_setting, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__search_effort, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__ID_focus, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__FDR_analysis, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__quantitation, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__background_correction, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__bias_correction, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__channel_to_use_as_denominator_in_ratios, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_search_engine_specific_input_metadata, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_Paragon__modified_data_dictionary_or_parameter_translation, new List<CVID> { CVID.MS_search_engine_specific_input_metadata, });
            RelationsIsA.Add(CVID.MS_number_of_spectra_searched, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_data_processing_start_time, new List<CVID> { CVID.MS_data_processing_parameter, });
            RelationsIsA.Add(CVID.MS_Paragon__digestion, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_number_of_decoy_sequences, new List<CVID> { CVID.MS_search_database_details, });
            RelationsIsA.Add(CVID.MS_final_PSM_list, new List<CVID> { CVID.MS_spectrum_identification_list_result_details, });
            RelationsIsA.Add(CVID.MS_intermediate_PSM_list, new List<CVID> { CVID.MS_spectrum_identification_list_result_details, });
            RelationsIsA.Add(CVID.MS_Andi_MS_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_chromatograph_file_format, new List<CVID> { CVID.MS_file_format, });
            RelationsIsA.Add(CVID.MS_Andi_CHROM_format, new List<CVID> { CVID.MS_chromatograph_file_format, });
            RelationsIsA.Add(CVID.MS_6420_Triple_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6460_Triple_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_6490_Triple_Quadrupole_LC_MS, new List<CVID> { CVID.MS_Agilent_instrument_model, });
            RelationsIsA.Add(CVID.MS_Paragon_special_factor, new List<CVID> { CVID.MS_Paragon_input_parameter, });
            RelationsIsA.Add(CVID.MS_PEAKS_inChorusPeptideScore, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PEAKS_inChorusProteinScore, new List<CVID> { CVID.MS_single_protein_result_details, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_param__b_ion_H3PO4_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_param__y_ion_H3PO4_DEPRECATED, new List<CVID> { CVID.MS_ions_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_Maui, new List<CVID> { CVID.MS_analysis_software, CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_No_fixed_modifications_searched, new List<CVID> { CVID.MS_common_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_No_variable_modifications_searched, new List<CVID> { CVID.MS_common_search_engine_input_parameter, });
            RelationsIsA.Add(CVID.MS_H2O_neutral_loss, new List<CVID> { CVID.MS_neutral_loss, CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_NH3_neutral_loss, new List<CVID> { CVID.MS_neutral_loss, CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_H3PO4_neutral_loss, new List<CVID> { CVID.MS_neutral_loss, CVID.MS_ion_series_considered_in_search, });
            RelationsIsA.Add(CVID.MS_PeptideShaker, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_MS_Amanda_csv_format, new List<CVID> { CVID.MS_intermediate_analysis_format, });
            RelationsIsA.Add(CVID.MS_protein_group_level_global_FNR, new List<CVID> { CVID.MS_protein_group_level_result_details, CVID.MS_protein_group_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_protein_group_level_confidence, new List<CVID> { CVID.MS_protein_group_level_result_details, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_global_FNR, new List<CVID> { CVID.MS_peptide_result_details, CVID.MS_peptide_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_distinct_peptide_level_global_confidence, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_PSM_level_global_FNR, new List<CVID> { CVID.MS_PSM_level_result_details, CVID.MS_PSM_level_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_PSM_level_global_confidence, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_PSM_score, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_PSM_confidence, new List<CVID> { CVID.MS_search_engine_specific_score, CVID.MS_search_engine_specific_score_for_PSMs, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_peptide_score, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_peptide_confidence, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_protein_group_score, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_protein_group_confidence, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_trap_type_collision_induced_dissociation, new List<CVID> { CVID.MS_collision_induced_dissociation, });
            RelationsIsA.Add(CVID.MS_ion_series_considered_in_search, new List<CVID> { CVID.MS_search_input_details, });
            RelationsIsA.Add(CVID.MS_ProteoAnnotator_non_canonical_gene_model_score, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_ProteoAnnotator_count_alternative_peptides, new List<CVID> { CVID.MS_protein_ambiguity_group_result_details, });
            RelationsIsA.Add(CVID.MS_ion_mobility_drift_time, new List<CVID> { CVID.MS_ion_selection_attribute, });
            RelationsIsA.Add(CVID.MS_mean_drift_time_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_mean_charge_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_regular_expression_for_a_digital_object_identifier__DOI_, new List<CVID> { CVID.MS_regular_expression, });
            RelationsIsA.Add(CVID.MS_higher_energy_beam_type_collision_induced_dissociation, new List<CVID> { CVID.MS_beam_type_collision_induced_dissociation, });
            RelationsIsA.Add(CVID.MS_statistical_threshold, new List<CVID> { CVID.MS_quality_estimation_method_details, });
            RelationsIsA.Add(CVID.MS_PSM_level_statistical_threshold, new List<CVID> { CVID.MS_spectrum_identification_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_peptide_level_statistical_threshold, new List<CVID> { CVID.MS_spectrum_identification_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_protein_level_statistical_threshold, new List<CVID> { CVID.MS_protein_detection_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_protein_group_level_statistical_threshold, new List<CVID> { CVID.MS_protein_detection_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_MassIVE_dataset_identifier, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_MassIVE_dataset_URI, new List<CVID> { CVID.MS_external_reference_identifier, });
            RelationsIsA.Add(CVID.MS_special_processing, new List<CVID> { CVID.MS_search_type, });
            RelationsIsA.Add(CVID.MS_peptide_level_scoring, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_modification_localization_scoring, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_consensus_scoring, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_sample_pre_fractionation, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_cross_linking_search, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_no_special_processing, new List<CVID> { CVID.MS_special_processing, });
            RelationsIsA.Add(CVID.MS_group_PSMs_by_sequence, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_group_PSMs_by_sequence_with_modifications, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_group_PSMs_by_sequence_with_modifications_and_charge, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_peptide_level_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_distinct_peptides, });
            RelationsIsA.Add(CVID.MS_peptide_passes_threshold, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_no_PSM_threshold, new List<CVID> { CVID.MS_PSM_level_result_details, });
            RelationsIsA.Add(CVID.MS_no_peptide_level_threshold, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_PSM_is_used_for_peptide_level_scoring, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_modification_index, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_regular_expression_for_modification_localization_scoring, new List<CVID> { CVID.MS_regular_expression, });
            RelationsIsA.Add(CVID.MS_modification_position_score, new List<CVID> { CVID.MS_modification_parameters, });
            RelationsIsA.Add(CVID.MS_modification_rescoring_false_localization_rate, new List<CVID> { CVID.MS_modification_position_score, });
            RelationsIsA.Add(CVID.MS_cross_linking_attribute, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_cross_link_donor, new List<CVID> { CVID.MS_cross_linking_attribute, });
            RelationsIsA.Add(CVID.MS_cross_link_receiver, new List<CVID> { CVID.MS_cross_linking_attribute, });
            RelationsIsA.Add(CVID.MS_cross_link_spectrum_identification_item, new List<CVID> { CVID.MS_cross_linking_attribute, });
            RelationsIsA.Add(CVID.MS_cross_linking_score, new List<CVID> { CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_molecules_per_cell_, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_absolute_quantitation_analysis, new List<CVID> { CVID.MS_quantitation_analysis_summary, });
            RelationsIsA.Add(CVID.MS_internal_peptide_reference_used, new List<CVID> { CVID.MS_quantitation_software_comment_or_customizations, });
            RelationsIsA.Add(CVID.MS_internal_protein_reference_used, new List<CVID> { CVID.MS_quantitation_software_comment_or_customizations, });
            RelationsIsA.Add(CVID.MS_internal_reference_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_protein_group_normalised_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_Progenesis_protein_group_raw_abundance, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peptide_group_ID, new List<CVID> { CVID.MS_peptide_result_details, });
            RelationsIsA.Add(CVID.MS_mass_spectrometry_imaging, new List<CVID> { CVID.MS_run_attribute, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_1__Static_Terminal_Modification, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_Q_Exactive_HF, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_PepFinder, new List<CVID> { CVID.MS_data_processing_software, });
            RelationsIsA.Add(CVID.MS_TSQ_8000_Evo, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_Exactive_Plus, new List<CVID> { CVID.MS_Thermo_Scientific_instrument_model, });
            RelationsIsA.Add(CVID.MS_instrument_specific_scan_attribute, new List<CVID> { CVID.MS_scan_attribute, });
            RelationsIsA.Add(CVID.MS_synchronous_prefilter_selection, new List<CVID> { CVID.MS_instrument_specific_scan_attribute, });
            RelationsIsA.Add(CVID.MS_resolution_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_baseline_array, new List<CVID> { CVID.MS_binary_data_array, });
            RelationsIsA.Add(CVID.MS_UIMF_format, new List<CVID> { CVID.MS_mass_spectrometer_file_format, });
            RelationsIsA.Add(CVID.MS_UIMF_nativeID_format, new List<CVID> { CVID.MS_native_spectrum_identifier_format, });
            RelationsIsA.Add(CVID.MS_TripleTOF_6600, new List<CVID> { CVID.MS_AB_SCIEX_instrument_model, });
            RelationsIsA.Add(CVID.MS_ProLuCID_xcorr, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_ProLuCID_deltacn, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_D_Score, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_MD_Score, new List<CVID> { CVID.MS_PSM_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_PTM_localization_confidence_metric, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_PTM_confidence_type, new List<CVID> { CVID.MS_PTM_localization_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_PSM_confidence_type, new List<CVID> { CVID.MS_PSM_level_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_peptide_confidence_type, new List<CVID> { CVID.MS_peptide_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_PeptideShaker_protein_confidence_type, new List<CVID> { CVID.MS_protein_identification_confidence_metric, });
            RelationsIsA.Add(CVID.MS_xiFDR, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_xi, new List<CVID> { CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_xi_score, new List<CVID> { CVID.MS_search_engine_specific_score_for_PSMs, CVID.MS_search_engine_specific_score, });
            RelationsIsA.Add(CVID.MS_Skyline_mzQuantML_converter_, new List<CVID> { CVID.MS_quantitation_software_name, CVID.MS_analysis_software, });
            RelationsIsA.Add(CVID.MS_normalized_spectral_abundance_factor, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_distributed_normalized_spectral_abundance_factor, new List<CVID> { CVID.MS_quantification_datatype, });
            RelationsIsA.Add(CVID.MS_peptide_level_PTM_localization_score, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_peptide_phosphoRS_score, new List<CVID> { CVID.MS_peptide_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_peptide_Ascore, new List<CVID> { CVID.MS_peptide_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_peptide_H_Score, new List<CVID> { CVID.MS_peptide_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_peptide_D_Score, new List<CVID> { CVID.MS_peptide_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_peptide_MD_Score, new List<CVID> { CVID.MS_peptide_level_PTM_localization_score, });
            RelationsIsA.Add(CVID.MS_PTM_localization_score_threshold, new List<CVID> { CVID.MS_spectrum_identification_result_details, });
            RelationsIsA.Add(CVID.MS_Ascore_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_D_Score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MD_Score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_H_Score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_DeBunker_score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_Mascot_PTM_site_assignment_confidence_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MSQuant_PTM_score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MaxQuant_PTM_Score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MaxQuant_P_site_localization_probability_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MaxQuant_PTM_Delta_Score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_MaxQuant_Phospho__STY__Probabilities_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_phosphoRS_score_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_phosphoRS_site_probability_threshold, new List<CVID> { CVID.MS_PTM_localization_score_threshold, });
            RelationsIsA.Add(CVID.MS_ProteomeDiscoverer_Number_of_Spectra_Processed_At_Once, new List<CVID> { CVID.MS_ProteomeDiscoverer_input_parameter, });
            RelationsIsA.Add(CVID.MS_sequence_multiply_subsumable_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_spectrum_multiply_subsumable_protein, new List<CVID> { CVID.MS_protein_group_or_subset_relationship, });
            RelationsIsA.Add(CVID.MS_protein_detection_statistical_threshold, new List<CVID> { CVID.MS_statistical_threshold, });
            RelationsIsA.Add(CVID.MS_spectrum_identification_statistical_threshold, new List<CVID> { CVID.MS_statistical_threshold, });
            RelationsIsA.Add(CVID.UNIMOD_Acetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Amidated, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carbamidomethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carbamyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carboxymethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Deamidated, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_G, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_G_2H_8_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Hse, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Hsl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_D_2H_8_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_D, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NIPCAM, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PEO_Iodoacetyl_LC_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dehydrated, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propionamide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pyridylacetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pyro_carbamidomethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__pyro_Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__pyro_Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SMA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Na, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pyridylethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Oxidation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methylthio, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Sulfo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lipoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Farnesyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Myristoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PyridoxalPhosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Palmitoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GeranylGeranyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phosphopantetheine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FAD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tripalmitate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Guanidinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HNE, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glucuronyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glutathione, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Acetyl_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propionyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propionyl_13C_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GIST_Quat, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GIST_Quat_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GIST_Quat_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GIST_Quat_2H_9_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Succinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Succinyl_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Succinyl_13C_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Iminobiotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ESP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ESP_2H_10_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NHS_LC_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EDT_maleimide_PEO_biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IMID, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IMID_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propionamide_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_C, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_C_13C_9_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FormylMet, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nethylmaleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxLysBiotinRed, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxLysBiotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxProBiotinRed, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxProBiotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxArgBiotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_OxArgBiotinRed, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EDT_iodoacetyl_PEO_biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IBTP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Formyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_H, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICAT_H_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thioacyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Fluoro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Fluorescein, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Iodo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diiodo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Triiodo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Myristoleyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Myristoyl_Delta_H__4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Benzoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_5_HexNAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dansyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_a_type_ion, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Amidine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc_1_dHex_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc_1_dHex_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_1_dHex_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc_2_dHex_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexNAc_2_dHex_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_2_Pent_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_2_HexNAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_3_HexNAc_1_Pent_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_1_Pent_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_2_dHex_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_2_HexNAc_2_Pent_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_2_HexNAc_2_dHex_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_3_HexNAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_1_HexNAc_1_NeuAc_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_3_HexNAc_2_P_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_S__1_Se_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_1_O__1_18O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NBS_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NBS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BHT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DAET, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_9_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_9__Phospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HPG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_2HPG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_18O_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AccQTag, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_QAT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_QAT_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EQAT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EQAT_2H_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dimethyl_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethanedithiol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_6_C_6_O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_4_C_3_O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_2_C_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_4_C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_8_C_6_O_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NEIAA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NEIAA_2H_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ADP_Ribosyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_iTRAQ4plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IGBP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Crotonaldehyde, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_2_C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_4_C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_4_C_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_18O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thiophospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SPITC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PET, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_5_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_9_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cytopiloyne, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cytopiloyne_water, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CAF, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_SSD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nitrosyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AEBS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethanolyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CoenzymeA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_2H_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SulfanilicAcid, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SulfanilicAcid_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Oxolactone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_PEO_Amine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_HPDP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_Hg_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IodoU_AMP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CAMthiopropanoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IED_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dHex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carboxy, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Bromobimane, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Menadione, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DeStreak, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dHex_1_Hex_3_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dHex_1_Hex_4_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dHex_1_Hex_5_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_3_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_4_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_5_HexNAc_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cysteinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys_loss, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nmethylmaleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DimethylpyrroleAdduct, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_2_C_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_2_C_3_O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nethylmaleimide_water, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_B10621, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DTBP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FP_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_4_C_2_O__1_S_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_2H_3_13C_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dimethyl_2H_6_13C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thiophos_S_S_biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Can_FP_biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HNE_Delta_H_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methylamine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Bromo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Amino, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Argbiotinhydrazide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__GluSA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trioxidation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Hydroxykynurenin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Kynurenin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Allysine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lysbiotinhydrazide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nitro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_probiotinhydrazide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__pyro_Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Pyrrolidinone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thrbiotinhydrazide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diisopropylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Isopropylphospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICPL_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICPL, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Deamidated_18O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Dha, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Pyrrolidone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HMVK, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Orn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dehydro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diphthamide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hydroxyfarnesyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diacylglycerol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carboxyethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hypusine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Retinylidene, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__AminoadipicAcid, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__PyruvicAcid, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ammonia_loss, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phycocyanobilin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phycoerythrobilin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phytochromobilin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Heme, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Molybdopterin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Quinone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glucosylgalactosyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GPIanchor, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PhosphoribosyldephosphoCoA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GlycerylPE, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Triiodothyronine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thyroxine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Dha, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Didehydro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Oxoalanine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__LacticAcid, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phosphoadenosine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hydroxycinnamyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glycosyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FMNH, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Archaeol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phenylisocyanate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phenylisocyanate_2H_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phosphoguanosine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hydroxymethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MolybdopterinGD_Delta_S__1_Se_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dipyrrolylmethanemethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PhosphoUridine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glycerophospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carboxy__Thiocarboxy, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Sulfide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PyruvicAcidIminyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_Se_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MolybdopterinGD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dioxidation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Octanoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PhosphoHexNAc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PhosphoHex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Palmitoleyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cholesterol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Didehydroretinylidene, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CHDH, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methylpyrroline, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hydroxyheme, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MicrocinC7, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cyano, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diironsubcluster, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Amidino, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FMN, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FMNC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CuSMo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hydroxytrimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Deoxy, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Microcin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Decanoyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GluGlu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GluGluGlu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GluGluGluGlu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HexN, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DMP_s, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DMP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NDA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SPITC_13C_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AEC_MAEC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMAB, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMAB_2H_9_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FTC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DHP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hep, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BADGE, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CyDye_Cy3, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CyDye_Cy5, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BHTOH, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IGBP_13C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Nmethylmaleimide_water, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PyMIC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_lactam_K, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_Hlactam_K, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_lactam_R, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_Hlactam_R, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dimethyl_2H_4_13C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_C8_QAT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PropylNAGthiazoline, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_FNEM, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BisANS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Piperidine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Maleimide_PEO2_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Sulfo_NHS_LC_LC_Biotin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CLIP_TRAQ_2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dethiomethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_Deamidated, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_5_C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_K, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Cu_I_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_iTRAQ4plex114, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_iTRAQ4plex115, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dibromo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LeuArgGlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CLIP_TRAQ_3, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CLIP_TRAQ_4, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Cayman_10141, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Cayman_10013, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BDMAPP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NA_LNO2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NA_OA_NO2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICPL_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_9_13C_6_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NIC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dNIC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HNE_Delta_H_2_O, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_4_ONE, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_O_Dimethylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_O_Methylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Diethylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_O_pinacolylmethylphosphonate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methylphosphonate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_O_Isopropylmethylphosphonate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_iTRAQ8plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_iTRAQ8plex_13C_6_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethanolamine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DTT_ST, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DTT_C, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMT6plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMT2plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ExacTagThiol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ExacTagAmine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_4_ONE_Delta_H__2_O__1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NO_SMX_SEMD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NO_SMX_SMCT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NO_SMX_SIMD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Malonyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_3sulfo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_trifluoro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TNBS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IDEnT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DTT_ST_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DTT_C_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met_loss, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met_loss_Acetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Menadione_HQ, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_Acetyl_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_lapachenole, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_phenacyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carboxymethyl_13C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NEM_2H_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AEC_MAEC_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Hex1HexNAc1, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6__GlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_21345, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pentylamine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_21360, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cy3b_maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly_loss_Amide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BMOE, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DFDNB, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TMPP_Ac, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dihydroxyimidazolidine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_4__Acetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6__Acetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_2__Acetyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Npo, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EQIGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg2PG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_cGMP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_cGMP_RMP_loss, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_4__GlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_8_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MG_H1, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_G_H1, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ZGB, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_1_2H_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_2__GlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICPL_13C_6_2H_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_QEQTGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_QQQTGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Bodipy, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_21325, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_1_2H_3__Oxidation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HydroxymethylOP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MDCC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_mTRAQ, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_mTRAQ_13C_3_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DyLight_maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methyl_PEO12_Maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CarbamidomethylDTT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CarboxymethylDTT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_PEG_PRA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Aha, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_15N_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_pyrophospho, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Hpg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_4AcAllylGal, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DimethylArsino, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__CamCys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__CamCys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Leu__MetOx, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__MetOx, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Galactosyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SMCC_maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Bacillosamine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MTSL, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HNE_BAHAH, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Methylmalonylation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ethoxyformyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_4_15N_2__GlyGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ethylamino, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MercaptoEthanol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EthylAmide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_VFQQQTGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_VIEVYQEQTGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AMTzHexNAc2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Atto495Maleimide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Chlorination, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_dichlorination, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AROD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__methylaminoAla, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__ethylaminoAla, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DNPS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SulfoGMBS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DimethylamineGMBS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_15N_2_2H_9_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_anhydrolactam, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_pyrrole, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_LG_anhyropyrrole, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_3_deoxyglucosone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Li, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Ca_II_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Fe_II_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Ni_II_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Zn_II_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Ag, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cation_Mg_II_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_2_succinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propargylamine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phosphopropargyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SUMO2135, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SUMO3549, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_thioacylPA, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_maleimide3, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_maleimide5, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Puromycin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Chlorpyrifos, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Carbofuran, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BITC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_PEITC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_glucosone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_cysTMT, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_cysTMT6plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6__Dimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_2__Dimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ammonium, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ISD_z_2_ion, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Sigma_B1267, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_15N_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_sulfo_amino, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BHAc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AHA_Alkyne, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AHA_Alkyne_KDDDD, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EGCG1, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EGCG2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_4__Methyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_4__Methyl_2H_3_13C_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_6_15N_4__Dimethyl_2H_6_13C_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SecCarbamidomethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thiazolidine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DEDGFLYMVYASQETFG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Invitrogen_M1602, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_glycidamide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ahx2_Hsl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DMPO, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICDID, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_ICDID_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DSS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_EGS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DST, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DTSSP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_SMCC, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_DMP_de, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xlink_EGScleaved, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_88310, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_2_nitrobenzyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SecNEM, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SecNEM_2H_5_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thiadiazole, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Withaferin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_88317, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_TAMRA_FP, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_21901_H2O, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Deoxyhypusine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Acetyldeoxyhypusine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Acetylhypusine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ala__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cys__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asp__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Glu__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Phe__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_His__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Xle__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Met__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Asn__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Pro__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gln__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ser__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Thr__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Cys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Ser, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Val__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Asp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Phe, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__His, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Asn, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Trp__Tyr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Ala, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Glu, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Met, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Pro, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Gln, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Thr, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Val, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Trp, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Tyr__Xle, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AHA_SS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AHA_SS_CAM, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_33033, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_33033_H, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_2_monomethylsuccinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Saligenin, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Cresylphosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_CresylSaligeninPhosphate, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ub_Br2, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ub_VME, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ub_amide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Ub_fluorescein, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_2_dimethylsuccinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Gly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_pupylation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_4_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_4__Oxidation, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HCysThiolactone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_HCysteinyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_UgiJoullie, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dipyridyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Furan, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Difuran, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_BMP_piperidinol, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_UgiJoullieProGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_UgiJoullieProGlyProGly, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_IMEHex_2_NeuAc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg_loss, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Arg, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Butyryl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dicarbamidomethyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Dimethyl_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_GGQ, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_QTGG, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_3_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_3_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_13C_4_15N_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_10_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Label_2H_4_13C_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Lys, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_mTRAQ_13C_6_15N_2_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NeuAc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NeuGc, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propyl, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propyl_2H_6_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Propiophenone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_AhaEthynylUridine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_6_C_3_O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Delta_H_8_C_6_O_1_, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_biotinAcrolein298, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_MM_diphenylpentanone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_EHD_diphenylpentanone, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Bipyridine, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_VinylPMS, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_Biotin_Thermo_21901_2H2O, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DiLeu4plex115, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DiLeu4plex, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DiLeu4plex117, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_DiLeu4plex118, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NEMsulfur, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_SulfurDioxide, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.UNIMOD_NEMsulfurWater, new List<CVID> { CVID.UNIMOD_unimod_root_node, });
            RelationsIsA.Add(CVID.PATO_mobility, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_speed, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_age, new List<CVID> { CVID.PATO_time, });
            RelationsIsA.Add(CVID.PATO_color, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_color_hue, new List<CVID> { CVID.PATO_chromatic_property, });
            RelationsIsA.Add(CVID.PATO_color_brightness, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_color_saturation, new List<CVID> { CVID.PATO_chromatic_property, });
            RelationsIsA.Add(CVID.PATO_fluorescence, new List<CVID> { CVID.PATO_luminous_flux, });
            RelationsIsA.Add(CVID.PATO_color_pattern, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_compatibility, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_composition, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_concentration_of, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_consistency, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_direction, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_distance, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_flavor, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_frequency, new List<CVID> { CVID.PATO_rate, });
            RelationsIsA.Add(CVID.PATO_biological_sex, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_hardness, new List<CVID> { CVID.PATO_quality_of_a_solid, });
            RelationsIsA.Add(CVID.PATO_intensity, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_life_span, new List<CVID> { CVID.PATO_time, });
            RelationsIsA.Add(CVID.PATO_morphology, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_shape, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_trophic_quality, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_occurrence, new List<CVID> { CVID.PATO_temporal_distribution_quality, });
            RelationsIsA.Add(CVID.PATO_odor, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_spatial_pattern, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_sleep_pattern, new List<CVID> { CVID.PATO_behavioral_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_pilosity, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_qualitative, new List<CVID> { CVID.PATO_quality, });
            RelationsIsA.Add(CVID.PATO_deviation_from_normal_, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_count, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_response_to, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_rhythm_quality, new List<CVID> { CVID.PATO_temporal_distribution_quality, });
            RelationsIsA.Add(CVID.PATO_amplitude, new List<CVID> { CVID.PATO_physical_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_persistence, new List<CVID> { CVID.PATO_rhythm_quality, });
            RelationsIsA.Add(CVID.PATO_phase, new List<CVID> { CVID.PATO_temporal_distribution_quality, });
            RelationsIsA.Add(CVID.PATO_sensitivity_toward, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_size, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_height, new List<CVID> { CVID.PATO_1_D_extent, });
            RelationsIsA.Add(CVID.PATO_length, new List<CVID> { CVID.PATO_1_D_extent, });
            RelationsIsA.Add(CVID.PATO_mass, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_weight, new List<CVID> { CVID.PATO_force, });
            RelationsIsA.Add(CVID.PATO_orientation, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_closure, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_position, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_structure, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_temperature, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_texture, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_threshold, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_rate, new List<CVID> { CVID.PATO_physical_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_time, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_viability, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_balance, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_behavioral_quality, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_coordination, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_discrimination, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_maturity, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_fecundity, new List<CVID> { CVID.PATO_reproductive_quality, });
            RelationsIsA.Add(CVID.PATO_fertility, new List<CVID> { CVID.PATO_reproductive_quality, });
            RelationsIsA.Add(CVID.PATO_brood_size, new List<CVID> { CVID.PATO_brood_quality, });
            RelationsIsA.Add(CVID.PATO_female_fertility, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_male_fertility, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_arrested, new List<CVID> { CVID.PATO_occurrence, CVID.PATO_decreased_occurrence, CVID.PATO_offset_quality, });
            RelationsIsA.Add(CVID.PATO_mobile, new List<CVID> { CVID.PATO_mobility, });
            RelationsIsA.Add(CVID.PATO_immobile, new List<CVID> { CVID.PATO_mobility, });
            RelationsIsA.Add(CVID.PATO_increased_speed, new List<CVID> { CVID.PATO_speed, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_speed, new List<CVID> { CVID.PATO_speed, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_old, new List<CVID> { CVID.PATO_age, });
            RelationsIsA.Add(CVID.PATO_young, new List<CVID> { CVID.PATO_age, });
            RelationsIsA.Add(CVID.PATO_black, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_blue, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_cyan, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_green, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_magenta, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_red, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_white, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_yellow, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_low_brightness, new List<CVID> { CVID.PATO_color_brightness, });
            RelationsIsA.Add(CVID.PATO_low_saturation, new List<CVID> { CVID.PATO_color_saturation, });
            RelationsIsA.Add(CVID.PATO_blotchy, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_irregular_spatial_pattern, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_discolored, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_spotted, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_colored, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_colorless, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_compatible, new List<CVID> { CVID.PATO_compatibility, });
            RelationsIsA.Add(CVID.PATO_incompatible, new List<CVID> { CVID.PATO_compatibility, });
            RelationsIsA.Add(CVID.PATO_down, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_left, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_right, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_up, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_increased_distance, new List<CVID> { CVID.PATO_distance, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_distance, new List<CVID> { CVID.PATO_distance, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_frequency, new List<CVID> { CVID.PATO_frequency, CVID.PATO_increased_rate, });
            RelationsIsA.Add(CVID.PATO_decreased_frequency, new List<CVID> { CVID.PATO_frequency, CVID.PATO_decreased_rate, });
            RelationsIsA.Add(CVID.PATO_female, new List<CVID> { CVID.PATO_phenotypic_sex, });
            RelationsIsA.Add(CVID.PATO_male, new List<CVID> { CVID.PATO_phenotypic_sex, });
            RelationsIsA.Add(CVID.PATO_hard, new List<CVID> { CVID.PATO_hardness, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_soft, new List<CVID> { CVID.PATO_hardness, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_acute, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_mild_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_moderate_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_severe_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_branched, new List<CVID> { CVID.PATO_branchiness, });
            RelationsIsA.Add(CVID.PATO_cleft, new List<CVID> { CVID.PATO_concave, });
            RelationsIsA.Add(CVID.PATO_coiled, new List<CVID> { CVID.PATO_coiling, });
            RelationsIsA.Add(CVID.PATO_curled, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_curved, new List<CVID> { CVID.PATO_curvature, });
            RelationsIsA.Add(CVID.PATO_flat, new List<CVID> { CVID.PATO_flattened, });
            RelationsIsA.Add(CVID.PATO_oblate, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_pinnate, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_circular, new List<CVID> { CVID.PATO_elliptic, });
            RelationsIsA.Add(CVID.PATO_square, new List<CVID> { CVID.PATO_parallelogram, });
            RelationsIsA.Add(CVID.PATO_unbranched, new List<CVID> { CVID.PATO_branchiness, });
            RelationsIsA.Add(CVID.PATO_uncoiled, new List<CVID> { CVID.PATO_coiling, });
            RelationsIsA.Add(CVID.PATO_auxotrophic, new List<CVID> { CVID.PATO_trophic_quality, });
            RelationsIsA.Add(CVID.PATO_prototrophic, new List<CVID> { CVID.PATO_trophic_quality, });
            RelationsIsA.Add(CVID.PATO_recurrent, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_sporadic, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_invariant, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_regular_spatial_pattern, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_repetitive, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_glabrous, new List<CVID> { CVID.PATO_pilosity, });
            RelationsIsA.Add(CVID.PATO_hairy, new List<CVID> { CVID.PATO_pilosity, });
            RelationsIsA.Add(CVID.PATO_pubescent, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_abnormal, new List<CVID> { CVID.PATO_deviation_from_normal_, });
            RelationsIsA.Add(CVID.PATO_normal, new List<CVID> { CVID.PATO_deviation_from_normal_, });
            RelationsIsA.Add(CVID.PATO_absent, new List<CVID> { CVID.PATO_count, });
            RelationsIsA.Add(CVID.PATO_conspicuous, new List<CVID> { CVID.PATO_conspicuousness, });
            RelationsIsA.Add(CVID.PATO_inconspicuous, new List<CVID> { CVID.PATO_conspicuousness, });
            RelationsIsA.Add(CVID.PATO_present, new List<CVID> { CVID.PATO_count, });
            RelationsIsA.Add(CVID.PATO_present_in_greater_numbers_in_organism, new List<CVID> { CVID.PATO_present, CVID.PATO_increased_quality, });
            RelationsIsA.Add(CVID.PATO_responsive_to, new List<CVID> { CVID.PATO_response_to, });
            RelationsIsA.Add(CVID.PATO_unresponsive_to, new List<CVID> { CVID.PATO_response_to, });
            RelationsIsA.Add(CVID.PATO_increased_duration, new List<CVID> { CVID.PATO_duration, CVID.PATO_increased_process_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_duration, new List<CVID> { CVID.PATO_duration, CVID.PATO_decreased_process_quality, });
            RelationsIsA.Add(CVID.PATO_advanced_phase, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_dark_phase, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_delayed, new List<CVID> { CVID.PATO_onset_quality, });
            RelationsIsA.Add(CVID.PATO_light_phase, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_arrhythmic, new List<CVID> { CVID.PATO_rhythm_quality, });
            RelationsIsA.Add(CVID.PATO_rhythmic, new List<CVID> { CVID.PATO_rhythm_quality, });
            RelationsIsA.Add(CVID.PATO_insensitive_toward, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_tolerant_to, new List<CVID> { CVID.PATO_resistance_to, });
            RelationsIsA.Add(CVID.PATO_sensitive_toward, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_photoinsensitive, new List<CVID> { CVID.PATO_photosensitivity, });
            RelationsIsA.Add(CVID.PATO_photosensitive, new List<CVID> { CVID.PATO_photosensitivity, });
            RelationsIsA.Add(CVID.PATO_decreased_height, new List<CVID> { CVID.PATO_height, CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_increased_height, new List<CVID> { CVID.PATO_height, CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_increased_length, new List<CVID> { CVID.PATO_length, CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_decreased_length, new List<CVID> { CVID.PATO_length, CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_increased_weight, new List<CVID> { CVID.PATO_weight, CVID.PATO_increased_force, });
            RelationsIsA.Add(CVID.PATO_decreased_weight, new List<CVID> { CVID.PATO_weight, CVID.PATO_decreased_force, });
            RelationsIsA.Add(CVID.PATO_hypertrophic, new List<CVID> { CVID.PATO_increased_volume, });
            RelationsIsA.Add(CVID.PATO_hypotrophic, new List<CVID> { CVID.PATO_decreased_volume, });
            RelationsIsA.Add(CVID.PATO_increased_size, new List<CVID> { CVID.PATO_size, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_size, new List<CVID> { CVID.PATO_size, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_vestigial, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_increased_thickness, new List<CVID> { CVID.PATO_increased_size, CVID.PATO_thickness, });
            RelationsIsA.Add(CVID.PATO_decreased_thickness, new List<CVID> { CVID.PATO_decreased_size, CVID.PATO_thickness, });
            RelationsIsA.Add(CVID.PATO_increased_volume, new List<CVID> { CVID.PATO_increased_size, CVID.PATO_volume, });
            RelationsIsA.Add(CVID.PATO_decreased_volume, new List<CVID> { CVID.PATO_decreased_size, CVID.PATO_volume, });
            RelationsIsA.Add(CVID.PATO_decreased_width, new List<CVID> { CVID.PATO_decreased_size, CVID.PATO_width, });
            RelationsIsA.Add(CVID.PATO_increased_width, new List<CVID> { CVID.PATO_increased_size, CVID.PATO_width, });
            RelationsIsA.Add(CVID.PATO_closed, new List<CVID> { CVID.PATO_closure, });
            RelationsIsA.Add(CVID.PATO_closure_incomplete, new List<CVID> { CVID.PATO_open, });
            RelationsIsA.Add(CVID.PATO_open, new List<CVID> { CVID.PATO_closure, });
            RelationsIsA.Add(CVID.PATO_disoriented, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_oriented, new List<CVID> { CVID.PATO_regular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_anterioralized, new List<CVID> { CVID.PATO_malformed, });
            RelationsIsA.Add(CVID.PATO_asymmetrical, new List<CVID> { CVID.PATO_symmetry, });
            RelationsIsA.Add(CVID.PATO_bent, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_bilateral, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_crowded, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_dorsalized, new List<CVID> { CVID.PATO_malformed, });
            RelationsIsA.Add(CVID.PATO_erect, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_exserted, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_inserted_into, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_inverted, new List<CVID> { CVID.PATO_oriented, });
            RelationsIsA.Add(CVID.PATO_lateralized, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_localized, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_mislocalised, new List<CVID> { CVID.PATO_displaced, });
            RelationsIsA.Add(CVID.PATO_misrouted, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_posterioralized, new List<CVID> { CVID.PATO_malformed, });
            RelationsIsA.Add(CVID.PATO_prostrate, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_symmetrical, new List<CVID> { CVID.PATO_symmetry, });
            RelationsIsA.Add(CVID.PATO_uncrowded, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_unilateral, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_unlocalised, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_ventralized, new List<CVID> { CVID.PATO_malformed, });
            RelationsIsA.Add(CVID.PATO_apoptotic, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_degenerate, new List<CVID> { CVID.PATO_degeneration, });
            RelationsIsA.Add(CVID.PATO_dysplastic, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_fused_with, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_herniated, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_hyperplastic, new List<CVID> { CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_hypoplastic, new List<CVID> { CVID.PATO_aplastic_hypoplastic, });
            RelationsIsA.Add(CVID.PATO_malformed, new List<CVID> { CVID.PATO_deformed, });
            RelationsIsA.Add(CVID.PATO_necrotic, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_obstructed, new List<CVID> { CVID.PATO_closed, });
            RelationsIsA.Add(CVID.PATO_unfused_from, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_high_brightness, new List<CVID> { CVID.PATO_color_brightness, });
            RelationsIsA.Add(CVID.PATO_asynchronous, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_continuous, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_discontinuous, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_heterochronic, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_premature, new List<CVID> { CVID.PATO_onset_quality, });
            RelationsIsA.Add(CVID.PATO_synchronous, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_rough, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_smooth, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_increased_threshold, new List<CVID> { CVID.PATO_threshold, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_threshold, new List<CVID> { CVID.PATO_threshold, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_lethal__sensu_genetics_, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_viable, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_balanced, new List<CVID> { CVID.PATO_balance, });
            RelationsIsA.Add(CVID.PATO_unbalanced, new List<CVID> { CVID.PATO_balance, });
            RelationsIsA.Add(CVID.PATO_bang_sensitive, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_increased_behavioural_activity, new List<CVID> { CVID.PATO_behavioural_active, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_behavioural_activity, new List<CVID> { CVID.PATO_behavioural_active, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_paralysed, new List<CVID> { CVID.PATO_movement_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_passive, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_coordinated, new List<CVID> { CVID.PATO_coordination, });
            RelationsIsA.Add(CVID.PATO_uncoordinated, new List<CVID> { CVID.PATO_coordination, });
            RelationsIsA.Add(CVID.PATO_aversion, new List<CVID> { CVID.PATO_preference, });
            RelationsIsA.Add(CVID.PATO_indifference, new List<CVID> { CVID.PATO_preference, });
            RelationsIsA.Add(CVID.PATO_preference, new List<CVID> { CVID.PATO_discrimination, });
            RelationsIsA.Add(CVID.PATO_female_fertile, new List<CVID> { CVID.PATO_female_fertility, });
            RelationsIsA.Add(CVID.PATO_male_sterile, new List<CVID> { CVID.PATO_sterile, });
            RelationsIsA.Add(CVID.PATO_male_fertile, new List<CVID> { CVID.PATO_male_fertility, });
            RelationsIsA.Add(CVID.PATO_female_sterile, new List<CVID> { CVID.PATO_sterile, });
            RelationsIsA.Add(CVID.PATO_decreased_rate, new List<CVID> { CVID.PATO_rate, CVID.PATO_decreased_process_quality, });
            RelationsIsA.Add(CVID.PATO_increased_rate, new List<CVID> { CVID.PATO_rate, CVID.PATO_increased_process_quality, });
            RelationsIsA.Add(CVID.PATO_thickness, new List<CVID> { CVID.PATO_1_D_extent, });
            RelationsIsA.Add(CVID.PATO_volume, new List<CVID> { CVID.PATO_3_D_extent, });
            RelationsIsA.Add(CVID.PATO_width, new List<CVID> { CVID.PATO_1_D_extent, });
            RelationsIsA.Add(CVID.PATO_photosensitivity, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_truncated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_disorganized, new List<CVID> { CVID.PATO_organization_quality, });
            RelationsIsA.Add(CVID.PATO_organized, new List<CVID> { CVID.PATO_organization_quality, });
            RelationsIsA.Add(CVID.PATO_vacuolated, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_sharpness, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_epinastic, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_oblong, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_elliptic, new List<CVID> { CVID.PATO_superelliptic, });
            RelationsIsA.Add(CVID.PATO_heart_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_fasciated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_grey, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_purple, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_brown, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_orange, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_pink, new List<CVID> { CVID.PATO_red, });
            RelationsIsA.Add(CVID.PATO_fertile, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_sterile, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_opacity, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_opaque, new List<CVID> { CVID.PATO_opacity, });
            RelationsIsA.Add(CVID.PATO_transparent, new List<CVID> { CVID.PATO_opacity, });
            RelationsIsA.Add(CVID.PATO_symmetry, new List<CVID> { CVID.PATO_regular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_undulate, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_dwarf_like, new List<CVID> { CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_permeability, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_porosity, new List<CVID> { CVID.PATO_permeability, });
            RelationsIsA.Add(CVID.PATO_permeable, new List<CVID> { CVID.PATO_permeability, });
            RelationsIsA.Add(CVID.PATO_impermeable, new List<CVID> { CVID.PATO_permeability, });
            RelationsIsA.Add(CVID.PATO_porous, new List<CVID> { CVID.PATO_porosity, });
            RelationsIsA.Add(CVID.PATO_non_porous, new List<CVID> { CVID.PATO_porosity, });
            RelationsIsA.Add(CVID.PATO_viscosity, new List<CVID> { CVID.PATO_quality_of_a_liquid, });
            RelationsIsA.Add(CVID.PATO_viscous, new List<CVID> { CVID.PATO_viscosity, });
            RelationsIsA.Add(CVID.PATO_alternation, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_latency, new List<CVID> { CVID.PATO_delayed, });
            RelationsIsA.Add(CVID.PATO_physical_quality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_mass_density, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_damage, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_energy, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_impulse, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_momentum, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_power, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_pressure, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_work, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_acceleration, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_efficiency, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_flux, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_elasticity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_strain, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_force, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_susceptibility_toward, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_resistance_to, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_acute_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_obtuse_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_convex_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_internal_angle, new List<CVID> { CVID.PATO_convex_angle_to, });
            RelationsIsA.Add(CVID.PATO_reflex_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_susceptible_toward, new List<CVID> { CVID.PATO_susceptibility_toward, });
            RelationsIsA.Add(CVID.PATO_insusceptible_toward, new List<CVID> { CVID.PATO_susceptibility_toward, });
            RelationsIsA.Add(CVID.PATO_elongated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_concentrated, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_diluted, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_increased_concentration, new List<CVID> { CVID.PATO_concentrated, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_concentration, new List<CVID> { CVID.PATO_concentrated, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_dense, new List<CVID> { CVID.PATO_mass_density, });
            RelationsIsA.Add(CVID.PATO_damaged, new List<CVID> { CVID.PATO_damage, });
            RelationsIsA.Add(CVID.PATO_undamaged, new List<CVID> { CVID.PATO_damage, });
            RelationsIsA.Add(CVID.PATO_elastic, new List<CVID> { CVID.PATO_elasticity, });
            RelationsIsA.Add(CVID.PATO_inelastic, new List<CVID> { CVID.PATO_elasticity, });
            RelationsIsA.Add(CVID.PATO_resistant_to, new List<CVID> { CVID.PATO_resistance_to, });
            RelationsIsA.Add(CVID.PATO_larval, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_prepubescent, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_pupal, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_prepupal, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_adolescent, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_juvenile, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_medial_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_hyperresponsive_to, new List<CVID> { CVID.PATO_responsive_to, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_lateral_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_hyporesponsive_to, new List<CVID> { CVID.PATO_responsive_to, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_proximal_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_ventral_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_linear, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_T_shaped, new List<CVID> { CVID.PATO_tripartite, });
            RelationsIsA.Add(CVID.PATO_Y_shaped, new List<CVID> { CVID.PATO_tripartite, });
            RelationsIsA.Add(CVID.PATO_dentated, new List<CVID> { CVID.PATO_serrated, });
            RelationsIsA.Add(CVID.PATO_serrated, new List<CVID> { CVID.PATO_serration, });
            RelationsIsA.Add(CVID.PATO_odorless, new List<CVID> { CVID.PATO_odor, });
            RelationsIsA.Add(CVID.PATO_variant, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_high_saturation, new List<CVID> { CVID.PATO_color_saturation, });
            RelationsIsA.Add(CVID.PATO_strength, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_dorsal_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_distal_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_process_quality, new List<CVID> { CVID.PATO_quality, });
            RelationsIsA.Add(CVID.PATO_physical_object_quality, new List<CVID> { CVID.PATO_quality, });
            RelationsIsA.Add(CVID.PATO_wavelength, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_light_blue, new List<CVID> { CVID.PATO_blue, });
            RelationsIsA.Add(CVID.PATO_dark_blue, new List<CVID> { CVID.PATO_blue, });
            RelationsIsA.Add(CVID.PATO_dark_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_light_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_light_cyan, new List<CVID> { CVID.PATO_cyan, });
            RelationsIsA.Add(CVID.PATO_dark_cyan, new List<CVID> { CVID.PATO_cyan, });
            RelationsIsA.Add(CVID.PATO_dark_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_light_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_dark_grey, new List<CVID> { CVID.PATO_grey, });
            RelationsIsA.Add(CVID.PATO_light_grey, new List<CVID> { CVID.PATO_grey, });
            RelationsIsA.Add(CVID.PATO_light_magenta, new List<CVID> { CVID.PATO_magenta, });
            RelationsIsA.Add(CVID.PATO_dark_magenta, new List<CVID> { CVID.PATO_magenta, });
            RelationsIsA.Add(CVID.PATO_light_orange, new List<CVID> { CVID.PATO_orange, });
            RelationsIsA.Add(CVID.PATO_dark_orange, new List<CVID> { CVID.PATO_orange, });
            RelationsIsA.Add(CVID.PATO_light_deep_pink, new List<CVID> { CVID.PATO_pink, });
            RelationsIsA.Add(CVID.PATO_deep_pink, new List<CVID> { CVID.PATO_pink, });
            RelationsIsA.Add(CVID.PATO_dark_purple, new List<CVID> { CVID.PATO_purple, });
            RelationsIsA.Add(CVID.PATO_light_purple, new List<CVID> { CVID.PATO_purple, });
            RelationsIsA.Add(CVID.PATO_dark_red, new List<CVID> { CVID.PATO_red, });
            RelationsIsA.Add(CVID.PATO_light_red, new List<CVID> { CVID.PATO_red, });
            RelationsIsA.Add(CVID.PATO_dark_yellow, new List<CVID> { CVID.PATO_yellow, });
            RelationsIsA.Add(CVID.PATO_light_yellow, new List<CVID> { CVID.PATO_yellow, });
            RelationsIsA.Add(CVID.PATO_saturated_blue, new List<CVID> { CVID.PATO_blue, });
            RelationsIsA.Add(CVID.PATO_desaturated_blue, new List<CVID> { CVID.PATO_blue, });
            RelationsIsA.Add(CVID.PATO_saturated_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_desaturated_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_saturated_cyan, new List<CVID> { CVID.PATO_cyan, });
            RelationsIsA.Add(CVID.PATO_desaturated_cyan, new List<CVID> { CVID.PATO_cyan, });
            RelationsIsA.Add(CVID.PATO_saturated_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_desaturated_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_saturated_magenta, new List<CVID> { CVID.PATO_magenta, });
            RelationsIsA.Add(CVID.PATO_desaturated_magenta, new List<CVID> { CVID.PATO_magenta, });
            RelationsIsA.Add(CVID.PATO_saturated_orange, new List<CVID> { CVID.PATO_orange, });
            RelationsIsA.Add(CVID.PATO_desaturated_orange, new List<CVID> { CVID.PATO_orange, });
            RelationsIsA.Add(CVID.PATO_dark_pale_pink, new List<CVID> { CVID.PATO_pink, });
            RelationsIsA.Add(CVID.PATO_saturated_purple, new List<CVID> { CVID.PATO_purple, });
            RelationsIsA.Add(CVID.PATO_desaturated_purple, new List<CVID> { CVID.PATO_purple, });
            RelationsIsA.Add(CVID.PATO_saturated_red, new List<CVID> { CVID.PATO_red, });
            RelationsIsA.Add(CVID.PATO_desaturated_red, new List<CVID> { CVID.PATO_red, });
            RelationsIsA.Add(CVID.PATO_saturated_yellow, new List<CVID> { CVID.PATO_yellow, });
            RelationsIsA.Add(CVID.PATO_desaturated_yellow, new List<CVID> { CVID.PATO_yellow, });
            RelationsIsA.Add(CVID.PATO_red_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_dark_red_brown, new List<CVID> { CVID.PATO_red_brown, });
            RelationsIsA.Add(CVID.PATO_light_red_brown, new List<CVID> { CVID.PATO_red_brown, });
            RelationsIsA.Add(CVID.PATO_fluorescent, new List<CVID> { CVID.PATO_fluorescence, });
            RelationsIsA.Add(CVID.PATO_electromagnetic__EM__radiation_quality, new List<CVID> { CVID.PATO_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_full_spectrum_EM_radiation_quality, new List<CVID> { CVID.PATO_electromagnetic__EM__radiation_quality, });
            RelationsIsA.Add(CVID.PATO_absorption_quality, new List<CVID> { CVID.PATO_full_spectrum_EM_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_radiation_reflective_quality, new List<CVID> { CVID.PATO_full_spectrum_EM_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_albedo, new List<CVID> { CVID.PATO_radiation_reflective_quality, });
            RelationsIsA.Add(CVID.PATO_luminous_flux, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_reflectivity, new List<CVID> { CVID.PATO_radiation_reflective_quality, });
            RelationsIsA.Add(CVID.PATO_phosphorescence, new List<CVID> { CVID.PATO_fluorescence, });
            RelationsIsA.Add(CVID.PATO_radiation_emitting_quality, new List<CVID> { CVID.PATO_full_spectrum_EM_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_optical_quality, new List<CVID> { CVID.PATO_electromagnetic__EM__radiation_quality, });
            RelationsIsA.Add(CVID.PATO_chromatic_property, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_vermilion, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_variability, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_variability_of_temperature, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_increased_temperature, new List<CVID> { CVID.PATO_temperature, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_temperature, new List<CVID> { CVID.PATO_temperature, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_variability_of_temperature, new List<CVID> { CVID.PATO_variant_temperature, CVID.PATO_decreased_process_quality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_variability_of_temperature, new List<CVID> { CVID.PATO_variant_temperature, CVID.PATO_increased_process_quality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_duration, new List<CVID> { CVID.PATO_physical_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_duration_of_temperature, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_decreased_duration_of_temperature, new List<CVID> { CVID.PATO_decreased_duration, CVID.PATO_duration_of_temperature, });
            RelationsIsA.Add(CVID.PATO_increased_duration_of_temperature, new List<CVID> { CVID.PATO_increased_duration, CVID.PATO_duration_of_temperature, });
            RelationsIsA.Add(CVID.PATO_invariant_temperature, new List<CVID> { CVID.PATO_variability_of_temperature, });
            RelationsIsA.Add(CVID.PATO_variant_temperature, new List<CVID> { CVID.PATO_variability_of_temperature, });
            RelationsIsA.Add(CVID.PATO_mild_increased_temperature, new List<CVID> { CVID.PATO_increased_temperature, });
            RelationsIsA.Add(CVID.PATO_moderate_increased_temperature, new List<CVID> { CVID.PATO_increased_temperature, });
            RelationsIsA.Add(CVID.PATO_severe_increased_temperature, new List<CVID> { CVID.PATO_increased_temperature, });
            RelationsIsA.Add(CVID.PATO_indiscriminate, new List<CVID> { CVID.PATO_discrimination, });
            RelationsIsA.Add(CVID.PATO_discriminate, new List<CVID> { CVID.PATO_discrimination, });
            RelationsIsA.Add(CVID.PATO_pubescent_hair, new List<CVID> { CVID.PATO_hairy, });
            RelationsIsA.Add(CVID.PATO_right_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_straight_angle_to, new List<CVID> { CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_area, new List<CVID> { CVID.PATO_2_D_extent, });
            RelationsIsA.Add(CVID.PATO_bilateral_symmetry, new List<CVID> { CVID.PATO_symmetry, });
            RelationsIsA.Add(CVID.PATO_radial_symmetry, new List<CVID> { CVID.PATO_symmetry, });
            RelationsIsA.Add(CVID.PATO_zygomorphic, new List<CVID> { CVID.PATO_bilateral_symmetry, });
            RelationsIsA.Add(CVID.PATO_actinomorphic, new List<CVID> { CVID.PATO_radial_symmetry, });
            RelationsIsA.Add(CVID.PATO_flavourful, new List<CVID> { CVID.PATO_flavor, });
            RelationsIsA.Add(CVID.PATO_flavourless, new List<CVID> { CVID.PATO_flavor, });
            RelationsIsA.Add(CVID.PATO_odorous, new List<CVID> { CVID.PATO_odor, });
            RelationsIsA.Add(CVID.PATO_amorphous, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_temporally_extended, new List<CVID> { CVID.PATO_increased_process_quality, CVID.PATO_offset_quality, });
            RelationsIsA.Add(CVID.PATO_diameter, new List<CVID> { CVID.PATO_length, });
            RelationsIsA.Add(CVID.PATO_bacterial_mating_type, new List<CVID> { CVID.PATO_mating_type, });
            RelationsIsA.Add(CVID.PATO_yeast_mating_type, new List<CVID> { CVID.PATO_mating_type, });
            RelationsIsA.Add(CVID.PATO_mixed_sex, new List<CVID> { CVID.PATO_population_quality, });
            RelationsIsA.Add(CVID.PATO_biomaterial_purity, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_hermaphrodite, new List<CVID> { CVID.PATO_phenotypic_sex, });
            RelationsIsA.Add(CVID.PATO_a_mating_type__yeast_, new List<CVID> { CVID.PATO_Saccharomyces_cerevisiae_mating_type, });
            RelationsIsA.Add(CVID.PATO_Saccharomyces_cerevisiae_mating_type, new List<CVID> { CVID.PATO_yeast_mating_type, });
            RelationsIsA.Add(CVID.PATO_Schizosaccharomyces_pombe_mating_type, new List<CVID> { CVID.PATO_yeast_mating_type, });
            RelationsIsA.Add(CVID.PATO_alpha_mating_type__yeast_, new List<CVID> { CVID.PATO_Saccharomyces_cerevisiae_mating_type, });
            RelationsIsA.Add(CVID.PATO_h_minus, new List<CVID> { CVID.PATO_Schizosaccharomyces_pombe_mating_type, });
            RelationsIsA.Add(CVID.PATO_h_plus, new List<CVID> { CVID.PATO_Schizosaccharomyces_pombe_mating_type, });
            RelationsIsA.Add(CVID.PATO_F_mating_type, new List<CVID> { CVID.PATO_bacterial_mating_type, });
            RelationsIsA.Add(CVID.PATO_F_minus_mating_type, new List<CVID> { CVID.PATO_bacterial_mating_type, });
            RelationsIsA.Add(CVID.PATO_high_frequency_recombinant, new List<CVID> { CVID.PATO_F_minus_mating_type, });
            RelationsIsA.Add(CVID.PATO_angular_acceleration, new List<CVID> { CVID.PATO_acceleration, });
            RelationsIsA.Add(CVID.PATO_area_density, new List<CVID> { CVID.PATO_mass_density, });
            RelationsIsA.Add(CVID.PATO_linear_density, new List<CVID> { CVID.PATO_mass_density, });
            RelationsIsA.Add(CVID.PATO_volumetric_density, new List<CVID> { CVID.PATO_mass_density, });
            RelationsIsA.Add(CVID.PATO_translucent, new List<CVID> { CVID.PATO_opacity, });
            RelationsIsA.Add(CVID.PATO_convex, new List<CVID> { CVID.PATO_concavity, });
            RelationsIsA.Add(CVID.PATO_pleomorphic, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_pulvinate, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_umbonate, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_rugose, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_filamentous, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_warty, new List<CVID> { CVID.PATO_rough, });
            RelationsIsA.Add(CVID.PATO_fragile, new List<CVID> { CVID.PATO_fragility, });
            RelationsIsA.Add(CVID.PATO_rhizoidal, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_spiny, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_punctiform, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_lobate, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_erose, new List<CVID> { CVID.PATO_serration, });
            RelationsIsA.Add(CVID.PATO_raised, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_viscid, new List<CVID> { CVID.PATO_coating, });
            RelationsIsA.Add(CVID.PATO_mucoid, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_refractivity, new List<CVID> { CVID.PATO_radiation_reflective_quality, });
            RelationsIsA.Add(CVID.PATO_glistening, new List<CVID> { CVID.PATO_reflectivity, });
            RelationsIsA.Add(CVID.PATO_ploidy, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_haploid, new List<CVID> { CVID.PATO_euploid, });
            RelationsIsA.Add(CVID.PATO_monoploid, new List<CVID> { CVID.PATO_euploid, });
            RelationsIsA.Add(CVID.PATO_polyploid, new List<CVID> { CVID.PATO_euploid, });
            RelationsIsA.Add(CVID.PATO_autopolyploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_allopolyploidy, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_paleopolyploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_triploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_tetraploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_pentaploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_hexaploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_aneuploid, new List<CVID> { CVID.PATO_ploidy, });
            RelationsIsA.Add(CVID.PATO_monosomy, new List<CVID> { CVID.PATO_aneuploid, });
            RelationsIsA.Add(CVID.PATO_disomy, new List<CVID> { CVID.PATO_aneuploid, });
            RelationsIsA.Add(CVID.PATO_uniparental_disomy, new List<CVID> { CVID.PATO_disomy, });
            RelationsIsA.Add(CVID.PATO_trisomy, new List<CVID> { CVID.PATO_aneuploid, });
            RelationsIsA.Add(CVID.PATO_partial_trisomy, new List<CVID> { CVID.PATO_trisomy, });
            RelationsIsA.Add(CVID.PATO_mosaic_trisomy, new List<CVID> { CVID.PATO_trisomy, });
            RelationsIsA.Add(CVID.PATO_endopolyploid, new List<CVID> { CVID.PATO_polyploid, });
            RelationsIsA.Add(CVID.PATO_euploid, new List<CVID> { CVID.PATO_ploidy, });
            RelationsIsA.Add(CVID.PATO_diploid, new List<CVID> { CVID.PATO_euploid, });
            RelationsIsA.Add(CVID.PATO_haplodiploid, new List<CVID> { CVID.PATO_diploid, });
            RelationsIsA.Add(CVID.PATO_cellular_quality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_cellular_potency, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_self_renewal, new List<CVID> { CVID.PATO_proliferative, });
            RelationsIsA.Add(CVID.PATO_totipotent, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_unipotent, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_oligopotent, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_multipotent, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_pluripotent, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_nucleate_quality, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_anucleate, new List<CVID> { CVID.PATO_nucleate_quality, });
            RelationsIsA.Add(CVID.PATO_binucleate, new List<CVID> { CVID.PATO_multinucleate, });
            RelationsIsA.Add(CVID.PATO_mononucleate, new List<CVID> { CVID.PATO_nucleated, });
            RelationsIsA.Add(CVID.PATO_ciliatedness, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_spindle_shaped, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_striated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_structured, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_unstructured, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_angular_velocity, new List<CVID> { CVID.PATO_velocity, });
            RelationsIsA.Add(CVID.PATO_catalytic_activity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_morbidity, new List<CVID> { CVID.PATO_population_quality, });
            RelationsIsA.Add(CVID.PATO_regular_duration, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_irregular_duration, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_lethargic, new List<CVID> { CVID.PATO_behavioural_activity, });
            RelationsIsA.Add(CVID.PATO_sharp, new List<CVID> { CVID.PATO_sharpness, });
            RelationsIsA.Add(CVID.PATO_buoyancy, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_alive, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_dead, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_refractile, new List<CVID> { CVID.PATO_refractivity, });
            RelationsIsA.Add(CVID.PATO_violet, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_rosy, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_maroon, new List<CVID> { CVID.PATO_color, });
            RelationsIsA.Add(CVID.PATO_compound_acidity, new List<CVID> { CVID.PATO_acidity, });
            RelationsIsA.Add(CVID.PATO_medium_acidity, new List<CVID> { CVID.PATO_acidity, });
            RelationsIsA.Add(CVID.PATO_acidic, new List<CVID> { CVID.PATO_medium_acidity, });
            RelationsIsA.Add(CVID.PATO_alkaline, new List<CVID> { CVID.PATO_medium_acidity, });
            RelationsIsA.Add(CVID.PATO_adhesivity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_decayed, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_growth_quality_of_occurrent, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_reproductive_quality, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_attachment_quality, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_sessile__sensu_botany_, new List<CVID> { CVID.PATO_attachment_quality, });
            RelationsIsA.Add(CVID.PATO_sessile__sensu_zoology_, new List<CVID> { CVID.PATO_attachment_quality, });
            RelationsIsA.Add(CVID.PATO_pedicellate, new List<CVID> { CVID.PATO_attachment_quality, });
            RelationsIsA.Add(CVID.PATO_tonicity, new List<CVID> { CVID.PATO_contractility, });
            RelationsIsA.Add(CVID.PATO_homophilic, new List<CVID> { CVID.PATO_cellular_adhesivity, });
            RelationsIsA.Add(CVID.PATO_heterophilic, new List<CVID> { CVID.PATO_cellular_adhesivity, });
            RelationsIsA.Add(CVID.PATO_wholeness, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_broken, new List<CVID> { CVID.PATO_wholeness, });
            RelationsIsA.Add(CVID.PATO_disassembled, new List<CVID> { CVID.PATO_broken, });
            RelationsIsA.Add(CVID.PATO_whole, new List<CVID> { CVID.PATO_wholeness, });
            RelationsIsA.Add(CVID.PATO_calcified, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_ossified, new List<CVID> { CVID.PATO_calcified, });
            RelationsIsA.Add(CVID.PATO_cartilaginous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_edematous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_detached_from, new List<CVID> { CVID.PATO_attachment_quality, });
            RelationsIsA.Add(CVID.PATO_sensitivity_to_oxygen, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_aerobic, new List<CVID> { CVID.PATO_sensitivity_to_oxygen, });
            RelationsIsA.Add(CVID.PATO_anaerobic, new List<CVID> { CVID.PATO_sensitivity_to_oxygen, });
            RelationsIsA.Add(CVID.PATO_sensitivity_of_a_process, new List<CVID> { CVID.PATO_physical_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_sensitivity_of_a_process_to_oxygen, new List<CVID> { CVID.PATO_sensitivity_of_a_process, });
            RelationsIsA.Add(CVID.PATO_aerobic__for_occurrence_, new List<CVID> { CVID.PATO_sensitivity_of_a_process_to_oxygen, });
            RelationsIsA.Add(CVID.PATO_anaerobic__for_occurrence_, new List<CVID> { CVID.PATO_sensitivity_of_a_process_to_oxygen, });
            RelationsIsA.Add(CVID.PATO_surface_tension, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_membrane_potential, new List<CVID> { CVID.PATO_electric_potential, });
            RelationsIsA.Add(CVID.PATO_action_potential, new List<CVID> { CVID.PATO_electric_potential, });
            RelationsIsA.Add(CVID.PATO_electric_potential, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_monstrous, new List<CVID> { CVID.PATO_malformed, });
            RelationsIsA.Add(CVID.PATO_curved_rostral, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_curved_caudal, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_curved_dorsal, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_curved_ventral, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_proportionality_to, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_depth, new List<CVID> { CVID.PATO_decreased_size, CVID.PATO_depth, });
            RelationsIsA.Add(CVID.PATO_duplicated, new List<CVID> { CVID.PATO_present_in_greater_numbers_in_organism, });
            RelationsIsA.Add(CVID.PATO_anteverted, new List<CVID> { CVID.PATO_oriented, });
            RelationsIsA.Add(CVID.PATO_increased_position, new List<CVID> { CVID.PATO_position, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_position, new List<CVID> { CVID.PATO_position, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_retracted, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_collapsed, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_spongy, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_sloped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_prominent, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_aplastic, new List<CVID> { CVID.PATO_absent, CVID.PATO_aplastic_hypoplastic, });
            RelationsIsA.Add(CVID.PATO_recent, new List<CVID> { CVID.PATO_onset_quality, });
            RelationsIsA.Add(CVID.PATO_condensed, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_chronological_age, new List<CVID> { CVID.PATO_age, });
            RelationsIsA.Add(CVID.PATO_senescent, new List<CVID> { CVID.PATO_age, });
            RelationsIsA.Add(CVID.PATO_cellular_motility, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_heterochronic_growth, new List<CVID> { CVID.PATO_growth_quality_of_occurrent, });
            RelationsIsA.Add(CVID.PATO_neotenous_growth, new List<CVID> { CVID.PATO_paedomorphic_growth, });
            RelationsIsA.Add(CVID.PATO_growth_rate, new List<CVID> { CVID.PATO_rate, });
            RelationsIsA.Add(CVID.PATO_hypertrophic_growth, new List<CVID> { CVID.PATO_growth_rate, });
            RelationsIsA.Add(CVID.PATO_hypotrophic_growth, new List<CVID> { CVID.PATO_growth_rate, });
            RelationsIsA.Add(CVID.PATO_notched, new List<CVID> { CVID.PATO_concave, });
            RelationsIsA.Add(CVID.PATO_brood_quality, new List<CVID> { CVID.PATO_reproductive_quality, });
            RelationsIsA.Add(CVID.PATO_brood_viability, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_spherical, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_tapered, new List<CVID> { CVID.PATO_sharp, });
            RelationsIsA.Add(CVID.PATO_immature, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_complexity, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_simple, new List<CVID> { CVID.PATO_complexity, });
            RelationsIsA.Add(CVID.PATO_complex, new List<CVID> { CVID.PATO_complexity, });
            RelationsIsA.Add(CVID.PATO_separated_from, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_diastatic, new List<CVID> { CVID.PATO_separated_from, });
            RelationsIsA.Add(CVID.PATO_disrupted, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_functionality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_functional, new List<CVID> { CVID.PATO_functionality, });
            RelationsIsA.Add(CVID.PATO_non_functional, new List<CVID> { CVID.PATO_functionality, });
            RelationsIsA.Add(CVID.PATO_punctate, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_delaminated, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_variable_color, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_focus, new List<CVID> { CVID.PATO_optical_quality, });
            RelationsIsA.Add(CVID.PATO_focused, new List<CVID> { CVID.PATO_focus, });
            RelationsIsA.Add(CVID.PATO_blurry, new List<CVID> { CVID.PATO_focus, });
            RelationsIsA.Add(CVID.PATO_sound_quality, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_sound_frequency, new List<CVID> { CVID.PATO_frequency, });
            RelationsIsA.Add(CVID.PATO_sound_amplitude, new List<CVID> { CVID.PATO_amplitude, });
            RelationsIsA.Add(CVID.PATO_sound_speed, new List<CVID> { CVID.PATO_speed, });
            RelationsIsA.Add(CVID.PATO_sound_wavelength, new List<CVID> { CVID.PATO_wavelength, });
            RelationsIsA.Add(CVID.PATO_intrasonic, new List<CVID> { CVID.PATO_sound_frequency, });
            RelationsIsA.Add(CVID.PATO_sonic, new List<CVID> { CVID.PATO_sound_frequency, });
            RelationsIsA.Add(CVID.PATO_ultrasonic, new List<CVID> { CVID.PATO_sound_frequency, });
            RelationsIsA.Add(CVID.PATO_quiet, new List<CVID> { CVID.PATO_sound_quality, });
            RelationsIsA.Add(CVID.PATO_loud, new List<CVID> { CVID.PATO_sound_quality, });
            RelationsIsA.Add(CVID.PATO_cellular_spatiotemporal_quality, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_behavioral_quality_of_a_process, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_cellular_adhesivity, new List<CVID> { CVID.PATO_cellular_quality, CVID.PATO_adhesivity, });
            RelationsIsA.Add(CVID.PATO_mono_colored, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_multi_colored, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_motley, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_dappled, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_solubility, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_soluble_in, new List<CVID> { CVID.PATO_solubility, });
            RelationsIsA.Add(CVID.PATO_insoluble_in, new List<CVID> { CVID.PATO_solubility, });
            RelationsIsA.Add(CVID.PATO_amylose_composition, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_glutinous, new List<CVID> { CVID.PATO_amylose_composition, });
            RelationsIsA.Add(CVID.PATO_non_glutinous, new List<CVID> { CVID.PATO_amylose_composition, });
            RelationsIsA.Add(CVID.PATO_delayed_phase, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_flexibility, new List<CVID> { CVID.PATO_quality_of_a_solid, });
            RelationsIsA.Add(CVID.PATO_flexible, new List<CVID> { CVID.PATO_flexibility, });
            RelationsIsA.Add(CVID.PATO_inflexible, new List<CVID> { CVID.PATO_flexibility, });
            RelationsIsA.Add(CVID.PATO_quality_of_a_solid, new List<CVID> { CVID.PATO_quality_of_a_substance, });
            RelationsIsA.Add(CVID.PATO_quality_of_a_gas, new List<CVID> { CVID.PATO_quality_of_a_substance, });
            RelationsIsA.Add(CVID.PATO_quality_of_a_liquid, new List<CVID> { CVID.PATO_quality_of_a_substance, });
            RelationsIsA.Add(CVID.PATO_increased_sensitivity_toward, new List<CVID> { CVID.PATO_sensitive_toward, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_sensitivity_toward, new List<CVID> { CVID.PATO_sensitive_toward, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_sensitivity_of_a_process, new List<CVID> { CVID.PATO_sensitivity_of_a_process, CVID.PATO_increased_process_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_sensitivity_of_a_process, new List<CVID> { CVID.PATO_sensitivity_of_a_process, CVID.PATO_decreased_process_quality, });
            RelationsIsA.Add(CVID.PATO_increased_sensitivity_of_a_process_to_oxygen, new List<CVID> { CVID.PATO_aerobic__for_occurrence_, CVID.PATO_increased_sensitivity_of_a_process, });
            RelationsIsA.Add(CVID.PATO_decreased_sensitivity_of_a_process_to_oxygen, new List<CVID> { CVID.PATO_aerobic__for_occurrence_, CVID.PATO_decreased_sensitivity_of_a_process, });
            RelationsIsA.Add(CVID.PATO_has_number_of, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_lacking_processual_parts, new List<CVID> { CVID.PATO_extra_or_missing_processual_parts, });
            RelationsIsA.Add(CVID.PATO_having_extra_function, new List<CVID> { CVID.PATO_functionality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_having_extra_processual_parts, new List<CVID> { CVID.PATO_extra_or_missing_processual_parts, });
            RelationsIsA.Add(CVID.PATO_decreased_mass, new List<CVID> { CVID.PATO_mass, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_mass, new List<CVID> { CVID.PATO_mass, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_extra_or_missing_processual_parts, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_distributed, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_undistributed, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_having_decreased_processual_parts, new List<CVID> { CVID.PATO_extra_or_missing_processual_parts, });
            RelationsIsA.Add(CVID.PATO_dilated, new List<CVID> { CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_isometrical, new List<CVID> { CVID.PATO_symmetry, });
            RelationsIsA.Add(CVID.PATO_flow_rate, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_pressure, new List<CVID> { CVID.PATO_pressure, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_pressure, new List<CVID> { CVID.PATO_pressure, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_permeability, new List<CVID> { CVID.PATO_permeable, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_permeability, new List<CVID> { CVID.PATO_permeable, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_contractility, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_increased_contractility, new List<CVID> { CVID.PATO_contractile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_contractility, new List<CVID> { CVID.PATO_contractile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_variability, new List<CVID> { CVID.PATO_variant, CVID.PATO_decreased_process_quality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_variability, new List<CVID> { CVID.PATO_variant, CVID.PATO_increased_process_quality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_conductivity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_variability_of_rate, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_increased_variability_of_rate, new List<CVID> { CVID.PATO_variability_of_rate, CVID.PATO_increased_process_quality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_variability_of_rate, new List<CVID> { CVID.PATO_variability_of_rate, CVID.PATO_decreased_process_quality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_overlap_with, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_curvature, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_increased_curvature, new List<CVID> { CVID.PATO_curved, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_curvature, new List<CVID> { CVID.PATO_curved, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_arched, new List<CVID> { CVID.PATO_concave, });
            RelationsIsA.Add(CVID.PATO_depth, new List<CVID> { CVID.PATO_1_D_extent, });
            RelationsIsA.Add(CVID.PATO_increased_depth, new List<CVID> { CVID.PATO_increased_size, CVID.PATO_depth, });
            RelationsIsA.Add(CVID.PATO_everted, new List<CVID> { CVID.PATO_oriented, });
            RelationsIsA.Add(CVID.PATO_protruding, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_rotated, new List<CVID> { CVID.PATO_oriented, });
            RelationsIsA.Add(CVID.PATO_posteriorly_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_anteriorly_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_distended, new List<CVID> { CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_increased_life_span, new List<CVID> { CVID.PATO_life_span, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_life_span, new List<CVID> { CVID.PATO_life_span, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_disheveled, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_greasy, new List<CVID> { CVID.PATO_coating, });
            RelationsIsA.Add(CVID.PATO_matted, new List<CVID> { CVID.PATO_tangled, });
            RelationsIsA.Add(CVID.PATO_patchy, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_sparse, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_variability_of_color, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_increased_variability_of_color, new List<CVID> { CVID.PATO_variant_color, CVID.PATO_increased_process_quality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_variability_of_color, new List<CVID> { CVID.PATO_variant_color, CVID.PATO_decreased_process_quality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_invariant_color, new List<CVID> { CVID.PATO_variability_of_color, });
            RelationsIsA.Add(CVID.PATO_variant_color, new List<CVID> { CVID.PATO_variability_of_color, });
            RelationsIsA.Add(CVID.PATO_deformed, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_increased_tonicity, new List<CVID> { CVID.PATO_tonicity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_tonicity, new List<CVID> { CVID.PATO_tonicity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_turgor, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_decreased_turgor, new List<CVID> { CVID.PATO_turgor, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_turgor, new List<CVID> { CVID.PATO_turgor, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_atrophied, new List<CVID> { CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_decreased_functionality, new List<CVID> { CVID.PATO_functional, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_functionality, new List<CVID> { CVID.PATO_functional, CVID.PATO_having_extra_function, });
            RelationsIsA.Add(CVID.PATO_sufficiency, new List<CVID> { CVID.PATO_functionality, });
            RelationsIsA.Add(CVID.PATO_sufficient, new List<CVID> { CVID.PATO_sufficiency, });
            RelationsIsA.Add(CVID.PATO_insufficient, new List<CVID> { CVID.PATO_sufficiency, });
            RelationsIsA.Add(CVID.PATO_aggregated, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_dispersed, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_anterior_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_posterior_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_necessity__continuant_, new List<CVID> { CVID.PATO_functionality, });
            RelationsIsA.Add(CVID.PATO_necessary__continuant_, new List<CVID> { CVID.PATO_necessity__continuant_, });
            RelationsIsA.Add(CVID.PATO_unnecessary__continuant_, new List<CVID> { CVID.PATO_necessity__continuant_, });
            RelationsIsA.Add(CVID.PATO_necessity_of_occurrent, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_necessary__occurrent_, new List<CVID> { CVID.PATO_necessity_of_occurrent, });
            RelationsIsA.Add(CVID.PATO_unnecessary__occurrent_, new List<CVID> { CVID.PATO_necessity_of_occurrent, });
            RelationsIsA.Add(CVID.PATO_stubby, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_protruding_into, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_protruding_out_of, new List<CVID> { CVID.PATO_protruding, });
            RelationsIsA.Add(CVID.PATO_circumference, new List<CVID> { CVID.PATO_perimeter, });
            RelationsIsA.Add(CVID.PATO_curved_lateral, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_increased_resistance_to, new List<CVID> { CVID.PATO_resistant_to, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_resistance_to, new List<CVID> { CVID.PATO_resistant_to, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_alignment, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_aligned_with, new List<CVID> { CVID.PATO_alignment, });
            RelationsIsA.Add(CVID.PATO_misaligned_with, new List<CVID> { CVID.PATO_alignment, });
            RelationsIsA.Add(CVID.PATO_osmolarity, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_decreased_osmolarity, new List<CVID> { CVID.PATO_osmolarity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_osmolarity, new List<CVID> { CVID.PATO_osmolarity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_dorsally_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_ventrally_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_fragility, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_increased_solubility, new List<CVID> { CVID.PATO_soluble_in, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_solubility, new List<CVID> { CVID.PATO_soluble_in, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_superficial, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_attached_to, new List<CVID> { CVID.PATO_attachment_quality, });
            RelationsIsA.Add(CVID.PATO_associated_with, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_increased_susceptibility_toward, new List<CVID> { CVID.PATO_susceptible_toward, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_susceptibility_toward, new List<CVID> { CVID.PATO_susceptible_toward, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_distribution, new List<CVID> { CVID.PATO_increased_position, CVID.PATO_distributed, });
            RelationsIsA.Add(CVID.PATO_decreased_distribution, new List<CVID> { CVID.PATO_decreased_position, CVID.PATO_distributed, });
            RelationsIsA.Add(CVID.PATO_cystic, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_catalytic__activity__concentration, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_decreased_efficiency, new List<CVID> { CVID.PATO_efficient, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_efficiency, new List<CVID> { CVID.PATO_efficient, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_inefficient, new List<CVID> { CVID.PATO_efficiency, });
            RelationsIsA.Add(CVID.PATO_efficient, new List<CVID> { CVID.PATO_efficiency, });
            RelationsIsA.Add(CVID.PATO_specific_volume, new List<CVID> { CVID.PATO_volume, });
            RelationsIsA.Add(CVID.PATO_molar_volume, new List<CVID> { CVID.PATO_volume, });
            RelationsIsA.Add(CVID.PATO_molar_mass, new List<CVID> { CVID.PATO_mass, });
            RelationsIsA.Add(CVID.PATO_magnetism, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_increased_magnetism, new List<CVID> { CVID.PATO_magnetic, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_magnetism, new List<CVID> { CVID.PATO_magnetic, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_magnetic, new List<CVID> { CVID.PATO_magnetism, });
            RelationsIsA.Add(CVID.PATO_non_magnetic, new List<CVID> { CVID.PATO_magnetism, });
            RelationsIsA.Add(CVID.PATO_elevation, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_increased_elevation, new List<CVID> { CVID.PATO_increased_position, CVID.PATO_elevation, });
            RelationsIsA.Add(CVID.PATO_decreased_elevation, new List<CVID> { CVID.PATO_decreased_position, CVID.PATO_elevation, });
            RelationsIsA.Add(CVID.PATO_contractile, new List<CVID> { CVID.PATO_contractility, });
            RelationsIsA.Add(CVID.PATO_non_contractile, new List<CVID> { CVID.PATO_contractility, });
            RelationsIsA.Add(CVID.PATO_increased_viscosity, new List<CVID> { CVID.PATO_viscous, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_viscosity, new List<CVID> { CVID.PATO_viscous, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_fecundity, new List<CVID> { CVID.PATO_fecundity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_fecundity, new List<CVID> { CVID.PATO_fecundity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_photosensitivity, new List<CVID> { CVID.PATO_photosensitive, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_photosensitivity, new List<CVID> { CVID.PATO_photosensitive, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_regular_sleep_pattern, new List<CVID> { CVID.PATO_sleep_pattern, });
            RelationsIsA.Add(CVID.PATO_irregular_sleep_pattern, new List<CVID> { CVID.PATO_sleep_pattern, });
            RelationsIsA.Add(CVID.PATO_mature, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_saturated_violet, new List<CVID> { CVID.PATO_violet, });
            RelationsIsA.Add(CVID.PATO_desaturated_violet, new List<CVID> { CVID.PATO_violet, });
            RelationsIsA.Add(CVID.PATO_light_violet, new List<CVID> { CVID.PATO_violet, });
            RelationsIsA.Add(CVID.PATO_dark_violet, new List<CVID> { CVID.PATO_violet, });
            RelationsIsA.Add(CVID.PATO_behavioural_inactive, new List<CVID> { CVID.PATO_behavioural_activity, });
            RelationsIsA.Add(CVID.PATO_behavioural_active, new List<CVID> { CVID.PATO_behavioural_activity, });
            RelationsIsA.Add(CVID.PATO_1_D_extent, new List<CVID> { CVID.PATO_size, });
            RelationsIsA.Add(CVID.PATO_2_D_extent, new List<CVID> { CVID.PATO_size, });
            RelationsIsA.Add(CVID.PATO_3_D_extent, new List<CVID> { CVID.PATO_size, });
            RelationsIsA.Add(CVID.PATO_perimeter, new List<CVID> { CVID.PATO_length, });
            RelationsIsA.Add(CVID.PATO_increased_perimeter, new List<CVID> { CVID.PATO_increased_length, CVID.PATO_perimeter, });
            RelationsIsA.Add(CVID.PATO_decreased_perimeter, new List<CVID> { CVID.PATO_decreased_length, CVID.PATO_perimeter, });
            RelationsIsA.Add(CVID.PATO_increased_diameter, new List<CVID> { CVID.PATO_increased_length, CVID.PATO_diameter, });
            RelationsIsA.Add(CVID.PATO_decreased_diameter, new List<CVID> { CVID.PATO_decreased_length, CVID.PATO_diameter, });
            RelationsIsA.Add(CVID.PATO_non_fragile, new List<CVID> { CVID.PATO_fragility, });
            RelationsIsA.Add(CVID.PATO_radiation_emitting_intensity_quality, new List<CVID> { CVID.PATO_radiation_emitting_quality, });
            RelationsIsA.Add(CVID.PATO_luminance, new List<CVID> { CVID.PATO_luminous_flux, });
            RelationsIsA.Add(CVID.PATO_receptivity, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_female_receptivity, new List<CVID> { CVID.PATO_receptivity, });
            RelationsIsA.Add(CVID.PATO_male_receptivity, new List<CVID> { CVID.PATO_receptivity, });
            RelationsIsA.Add(CVID.PATO_increased_female_receptivity, new List<CVID> { CVID.PATO_female_receptivity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_female_receptivity, new List<CVID> { CVID.PATO_female_receptivity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_male_receptivity, new List<CVID> { CVID.PATO_male_receptivity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_male_receptivity, new List<CVID> { CVID.PATO_male_receptivity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_disposition, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_multi_cellular_organismal_disposition, new List<CVID> { CVID.PATO_disposition, });
            RelationsIsA.Add(CVID.PATO_shedability, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_deciduous__generic_, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_deciduous__plant_, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_non_deciduous__any_body_part_, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_evergreen__plant_, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_semi_deciduous_plant_, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_liquid_configuration, new List<CVID> { CVID.PATO_quality_of_a_liquid, });
            RelationsIsA.Add(CVID.PATO_solid_configuration, new List<CVID> { CVID.PATO_quality_of_a_solid, });
            RelationsIsA.Add(CVID.PATO_gaseus_configuration, new List<CVID> { CVID.PATO_quality_of_a_gas, });
            RelationsIsA.Add(CVID.PATO_dissociated_from, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_radiation_quality, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_activity__of_a_radionuclide_, new List<CVID> { CVID.PATO_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_radioactive, new List<CVID> { CVID.PATO_activity__of_a_radionuclide_, });
            RelationsIsA.Add(CVID.PATO_increased_radioactivity, new List<CVID> { CVID.PATO_radioactive, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_radioactivity, new List<CVID> { CVID.PATO_radioactive, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_radiation_exposure, new List<CVID> { CVID.PATO_radiation_quality, });
            RelationsIsA.Add(CVID.PATO_radiation_absorbed_dose, new List<CVID> { CVID.PATO_radiation_exposure, });
            RelationsIsA.Add(CVID.PATO_radiation_equivalent_dose, new List<CVID> { CVID.PATO_radiation_exposure, });
            RelationsIsA.Add(CVID.PATO_radiation_effective_dose, new List<CVID> { CVID.PATO_radiation_exposure, });
            RelationsIsA.Add(CVID.PATO_invaginated, new List<CVID> { CVID.PATO_concave, });
            RelationsIsA.Add(CVID.PATO_paedomorphic_growth, new List<CVID> { CVID.PATO_heterochronic_growth, });
            RelationsIsA.Add(CVID.PATO_postdisplaced_growth, new List<CVID> { CVID.PATO_paedomorphic_growth, });
            RelationsIsA.Add(CVID.PATO_progenetic_growth, new List<CVID> { CVID.PATO_paedomorphic_growth, });
            RelationsIsA.Add(CVID.PATO_peramorphic_growth, new List<CVID> { CVID.PATO_heterochronic_growth, });
            RelationsIsA.Add(CVID.PATO_accelerated_growth, new List<CVID> { CVID.PATO_peramorphic_growth, });
            RelationsIsA.Add(CVID.PATO_predisplaced_growth, new List<CVID> { CVID.PATO_peramorphic_growth, });
            RelationsIsA.Add(CVID.PATO_hypermorphic_growth, new List<CVID> { CVID.PATO_peramorphic_growth, });
            RelationsIsA.Add(CVID.PATO_heat_conductivity, new List<CVID> { CVID.PATO_conductivity, });
            RelationsIsA.Add(CVID.PATO_electrical_conductivity, new List<CVID> { CVID.PATO_conductivity, });
            RelationsIsA.Add(CVID.PATO_nerve_conductivity, new List<CVID> { CVID.PATO_electrical_conductivity, });
            RelationsIsA.Add(CVID.PATO_granular, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_female_semi_fertile, new List<CVID> { CVID.PATO_semi_fertile, });
            RelationsIsA.Add(CVID.PATO_male_semi_fertile, new List<CVID> { CVID.PATO_semi_fertile, });
            RelationsIsA.Add(CVID.PATO_male_semi_sterile, new List<CVID> { CVID.PATO_male_fertility, });
            RelationsIsA.Add(CVID.PATO_female_semi_sterile, new List<CVID> { CVID.PATO_female_fertility, });
            RelationsIsA.Add(CVID.PATO_increased_age, new List<CVID> { CVID.PATO_age, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_age, new List<CVID> { CVID.PATO_age, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_semi_fertile, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_semi_lethal__sensu_genetics_, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_positional_polarity, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_semi_viable, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_surrounding, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_monophasic, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_polyphasic, new List<CVID> { CVID.PATO_phase, });
            RelationsIsA.Add(CVID.PATO_dorsal_ventral_polarity, new List<CVID> { CVID.PATO_positional_polarity, });
            RelationsIsA.Add(CVID.PATO_increased_flexibility, new List<CVID> { CVID.PATO_flexible, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_flexibility, new List<CVID> { CVID.PATO_flexible, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_strength, new List<CVID> { CVID.PATO_strength, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_strength, new List<CVID> { CVID.PATO_strength, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_dystrophic, new List<CVID> { CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_irregular_thickness, new List<CVID> { CVID.PATO_thickness, });
            RelationsIsA.Add(CVID.PATO_increased_intensity, new List<CVID> { CVID.PATO_intensity, CVID.PATO_increased_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_intensity, new List<CVID> { CVID.PATO_intensity, CVID.PATO_decreased_quality, });
            RelationsIsA.Add(CVID.PATO_bifurcated, new List<CVID> { CVID.PATO_branched, CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_splayed, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_split, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_rotational_curvature, new List<CVID> { CVID.PATO_curvature, });
            RelationsIsA.Add(CVID.PATO_increased_mass_density, new List<CVID> { CVID.PATO_dense, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_domed, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_decreased_mass_density, new List<CVID> { CVID.PATO_dense, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_multi_localised, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_left_side_of, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_right_side_of, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_coiling, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_increased_coiling, new List<CVID> { CVID.PATO_coiled, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_coiling, new List<CVID> { CVID.PATO_coiled, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_kinked, new List<CVID> { CVID.PATO_bent, });
            RelationsIsA.Add(CVID.PATO_ruffled, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_water_composition, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_decreased_water_composition, new List<CVID> { CVID.PATO_water_composition, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_loose, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_phototoxic, new List<CVID> { CVID.PATO_photosensitivity, });
            RelationsIsA.Add(CVID.PATO_scaly, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_flaky, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_sensitivity_to_irradiation, new List<CVID> { CVID.PATO_sensitivity_toward, });
            RelationsIsA.Add(CVID.PATO_decreased_sensitivity_to_irradiation, new List<CVID> { CVID.PATO_sensitivity_to_irradiation, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_sensitivity_to_irradiation, new List<CVID> { CVID.PATO_sensitivity_to_irradiation, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_tight, new List<CVID> { CVID.PATO_regular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_wrinkled, new List<CVID> { CVID.PATO_grooved, });
            RelationsIsA.Add(CVID.PATO_atonicity, new List<CVID> { CVID.PATO_tonicity, });
            RelationsIsA.Add(CVID.PATO_dystonicity, new List<CVID> { CVID.PATO_tonicity, });
            RelationsIsA.Add(CVID.PATO_fatigability, new List<CVID> { CVID.PATO_strength, });
            RelationsIsA.Add(CVID.PATO_increased_fatigability, new List<CVID> { CVID.PATO_increased_strength, CVID.PATO_fatigability, });
            RelationsIsA.Add(CVID.PATO_decreased_fatigability, new List<CVID> { CVID.PATO_decreased_strength, CVID.PATO_fatigability, });
            RelationsIsA.Add(CVID.PATO_progressive, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_atretic, new List<CVID> { CVID.PATO_closed, });
            RelationsIsA.Add(CVID.PATO_imperforate, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_wetness, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_wet, new List<CVID> { CVID.PATO_wetness, });
            RelationsIsA.Add(CVID.PATO_dry, new List<CVID> { CVID.PATO_wetness, });
            RelationsIsA.Add(CVID.PATO_increased_wetness, new List<CVID> { CVID.PATO_wet, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_wetness, new List<CVID> { CVID.PATO_wet, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_pseudohermaphrodite, new List<CVID> { CVID.PATO_phenotypic_sex, });
            RelationsIsA.Add(CVID.PATO_male_pseudohermaphrodite, new List<CVID> { CVID.PATO_pseudohermaphrodite, });
            RelationsIsA.Add(CVID.PATO_female_pseudohermaphrodite, new List<CVID> { CVID.PATO_pseudohermaphrodite, });
            RelationsIsA.Add(CVID.PATO_decreased_female_fertility, new List<CVID> { CVID.PATO_female_fertile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_female_fertility, new List<CVID> { CVID.PATO_female_fertile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_male_fertility, new List<CVID> { CVID.PATO_male_fertile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_male_fertility, new List<CVID> { CVID.PATO_male_fertile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_fertility, new List<CVID> { CVID.PATO_fertile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_fertility, new List<CVID> { CVID.PATO_fertile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_congested, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_decreased_fluid_flow, new List<CVID> { CVID.PATO_fluid_flow_rate, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_fluid_flow, new List<CVID> { CVID.PATO_fluid_flow_rate, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_remittent_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_acidity, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_decreased_acidity, new List<CVID> { CVID.PATO_acidity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_acidity, new List<CVID> { CVID.PATO_acidity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_irregular_rhythm, new List<CVID> { CVID.PATO_rhythm_quality, });
            RelationsIsA.Add(CVID.PATO_tangled, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_constricted, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_asymmetrically_curved, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_abrased, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_scarred, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_swollen, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_dislocated, new List<CVID> { CVID.PATO_displaced, });
            RelationsIsA.Add(CVID.PATO_hydrocephalic, new List<CVID> { CVID.PATO_edematous, });
            RelationsIsA.Add(CVID.PATO_vertical, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_horizontal, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_introverted, new List<CVID> { CVID.PATO_oriented, });
            RelationsIsA.Add(CVID.PATO_concave, new List<CVID> { CVID.PATO_concavity, });
            RelationsIsA.Add(CVID.PATO_partially_paralysed, new List<CVID> { CVID.PATO_movement_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_increased_coordination, new List<CVID> { CVID.PATO_coordinated, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_coordination, new List<CVID> { CVID.PATO_coordinated, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_fasciculated, new List<CVID> { CVID.PATO_fasciculation, });
            RelationsIsA.Add(CVID.PATO_lack_of_fertility_in_offspring, new List<CVID> { CVID.PATO_fertility, });
            RelationsIsA.Add(CVID.PATO_chronic, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_spheroid, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_prolate, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_rectangular, new List<CVID> { CVID.PATO_parallelogram, });
            RelationsIsA.Add(CVID.PATO_autofluorescence, new List<CVID> { CVID.PATO_fluorescence, });
            RelationsIsA.Add(CVID.PATO_pathological, new List<CVID> { CVID.PATO_abnormal, });
            RelationsIsA.Add(CVID.PATO_crescent_shaped, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_reniform, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_cuboid, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_cylindrical, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_discoid, new List<CVID> { CVID.PATO_cylindrical, });
            RelationsIsA.Add(CVID.PATO_triangular, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_dumbbell_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_lanceolate, new List<CVID> { CVID.PATO_sharp, });
            RelationsIsA.Add(CVID.PATO_sigmoid, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_U_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_caudate, new List<CVID> { CVID.PATO_exserted, });
            RelationsIsA.Add(CVID.PATO_arrow_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_limaciform, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_clavate, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_hydrophobicity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_hydrophobic, new List<CVID> { CVID.PATO_hydrophobicity, });
            RelationsIsA.Add(CVID.PATO_hydrophilicity, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_hydrophilic, new List<CVID> { CVID.PATO_hydrophilicity, });
            RelationsIsA.Add(CVID.PATO_miscibility, new List<CVID> { CVID.PATO_quality_of_a_liquid, });
            RelationsIsA.Add(CVID.PATO_scalloped, new List<CVID> { CVID.PATO_serration, });
            RelationsIsA.Add(CVID.PATO_tripartite, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_ovate, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_decreased_odor, new List<CVID> { CVID.PATO_odorous, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_odor, new List<CVID> { CVID.PATO_odorous, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_phenotypic_sex, new List<CVID> { CVID.PATO_biological_sex, });
            RelationsIsA.Add(CVID.PATO_mating_type, new List<CVID> { CVID.PATO_biological_sex, });
            RelationsIsA.Add(CVID.PATO_unlumenized, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_lumenized, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_increased_circumference, new List<CVID> { CVID.PATO_circumference, CVID.PATO_increased_perimeter, });
            RelationsIsA.Add(CVID.PATO_decreased_circumference, new List<CVID> { CVID.PATO_circumference, CVID.PATO_decreased_perimeter, });
            RelationsIsA.Add(CVID.PATO_front, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_back, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_unidirectional, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_bi_directional, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_circling_direction, new List<CVID> { CVID.PATO_direction, });
            RelationsIsA.Add(CVID.PATO_has_normal_numbers_of_parts_of_type, new List<CVID> { CVID.PATO_has_number_of, });
            RelationsIsA.Add(CVID.PATO_movement_quality, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_botryoidal, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_multinucleate, new List<CVID> { CVID.PATO_nucleated, });
            RelationsIsA.Add(CVID.PATO_trinucleate, new List<CVID> { CVID.PATO_multinucleate, });
            RelationsIsA.Add(CVID.PATO_folded, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_circling, new List<CVID> { CVID.PATO_movement_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_physiological_state, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_ictal, new List<CVID> { CVID.PATO_physiological_state, });
            RelationsIsA.Add(CVID.PATO_non_ictal, new List<CVID> { CVID.PATO_physiological_state, });
            RelationsIsA.Add(CVID.PATO_anterodorsal_to, new List<CVID> { CVID.PATO_anterior_to, });
            RelationsIsA.Add(CVID.PATO_posterodorsal_to, new List<CVID> { CVID.PATO_posterior_to, });
            RelationsIsA.Add(CVID.PATO_anteroventral_to, new List<CVID> { CVID.PATO_anterior_to, });
            RelationsIsA.Add(CVID.PATO_posteroventral_to, new List<CVID> { CVID.PATO_posterior_to, });
            RelationsIsA.Add(CVID.PATO_mislocalised_dorsally, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_ventrally, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_anteriorly, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_posteriorly, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_laterally, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_medially, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_surface_feature_shape, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_increased_fluorescence, new List<CVID> { CVID.PATO_fluorescent, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_fluorescence, new List<CVID> { CVID.PATO_fluorescent, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_blistered, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_variability_of_shape, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_variant_shape, new List<CVID> { CVID.PATO_variability_of_shape, });
            RelationsIsA.Add(CVID.PATO_invariant_shape, new List<CVID> { CVID.PATO_variability_of_shape, });
            RelationsIsA.Add(CVID.PATO_alternate_placement, new List<CVID> { CVID.PATO_regular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_opposite, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_orbicular, new List<CVID> { CVID.PATO_circular, });
            RelationsIsA.Add(CVID.PATO_obtuse, new List<CVID> { CVID.PATO_circular, });
            RelationsIsA.Add(CVID.PATO_obovate, new List<CVID> { CVID.PATO_ovate, });
            RelationsIsA.Add(CVID.PATO_spatulate, new List<CVID> { CVID.PATO_oblong, });
            RelationsIsA.Add(CVID.PATO_rhomboid, new List<CVID> { CVID.PATO_parallelogram, });
            RelationsIsA.Add(CVID.PATO_gigantic, new List<CVID> { CVID.PATO_increased_size, });
            RelationsIsA.Add(CVID.PATO_yellow_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_brown_green, new List<CVID> { CVID.PATO_green, });
            RelationsIsA.Add(CVID.PATO_lilac, new List<CVID> { CVID.PATO_purple, });
            RelationsIsA.Add(CVID.PATO_yellow_orange, new List<CVID> { CVID.PATO_orange, });
            RelationsIsA.Add(CVID.PATO_ochre, new List<CVID> { CVID.PATO_yellow_orange, });
            RelationsIsA.Add(CVID.PATO_banded, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_netted, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_furrowed, new List<CVID> { CVID.PATO_grooved, });
            RelationsIsA.Add(CVID.PATO_pointleted, new List<CVID> { CVID.PATO_sharp, });
            RelationsIsA.Add(CVID.PATO_blunt, new List<CVID> { CVID.PATO_sharpness, });
            RelationsIsA.Add(CVID.PATO_whorled, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_distichous, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_decussate, new List<CVID> { CVID.PATO_regular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_subulate, new List<CVID> { CVID.PATO_linear, });
            RelationsIsA.Add(CVID.PATO_cuneate, new List<CVID> { CVID.PATO_triangular, });
            RelationsIsA.Add(CVID.PATO_variability_of_size, new List<CVID> { CVID.PATO_variability, });
            RelationsIsA.Add(CVID.PATO_decreased_variability_of_size, new List<CVID> { CVID.PATO_variability_of_size, CVID.PATO_decreased_process_quality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_variability_of_size, new List<CVID> { CVID.PATO_variability_of_size, CVID.PATO_increased_process_quality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_defasciculated, new List<CVID> { CVID.PATO_fasciculation, });
            RelationsIsA.Add(CVID.PATO_interdigitated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_in_contact_with, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_involute, new List<CVID> { CVID.PATO_curled, });
            RelationsIsA.Add(CVID.PATO_revolute, new List<CVID> { CVID.PATO_curled, });
            RelationsIsA.Add(CVID.PATO_circinate, new List<CVID> { CVID.PATO_curled, });
            RelationsIsA.Add(CVID.PATO_reclinate, new List<CVID> { CVID.PATO_curled, });
            RelationsIsA.Add(CVID.PATO_convolute, new List<CVID> { CVID.PATO_curled, });
            RelationsIsA.Add(CVID.PATO_actinodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_parallelodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_craspedodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_brochidodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_cladodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_reticulodromous, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_cuspidate, new List<CVID> { CVID.PATO_tapered, });
            RelationsIsA.Add(CVID.PATO_retuse, new List<CVID> { CVID.PATO_blunt, });
            RelationsIsA.Add(CVID.PATO_unserrated, new List<CVID> { CVID.PATO_serration, });
            RelationsIsA.Add(CVID.PATO_serration, new List<CVID> { CVID.PATO_edge_shape, });
            RelationsIsA.Add(CVID.PATO_angular, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_cut, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_lobed, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_digitate, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_auriculate, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_attenuate, new List<CVID> { CVID.PATO_tapered, });
            RelationsIsA.Add(CVID.PATO_perfoliate, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_decurrent, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_frozen, new List<CVID> { CVID.PATO_temperature, });
            RelationsIsA.Add(CVID.PATO_dissolved, new List<CVID> { CVID.PATO_solubility, });
            RelationsIsA.Add(CVID.PATO_saccular, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_quadrangular, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_sinuous, new List<CVID> { CVID.PATO_curvature, });
            RelationsIsA.Add(CVID.PATO_duration_of_disease, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_immortal, new List<CVID> { CVID.PATO_viability, });
            RelationsIsA.Add(CVID.PATO_cellularity, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_multicellular, new List<CVID> { CVID.PATO_cellularity, });
            RelationsIsA.Add(CVID.PATO_unicellular, new List<CVID> { CVID.PATO_cellularity, });
            RelationsIsA.Add(CVID.PATO_organismal_quality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_present_in_fewer_numbers_in_organism, new List<CVID> { CVID.PATO_present, CVID.PATO_decreased_quality, });
            RelationsIsA.Add(CVID.PATO_conspicuousness, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_lacks_parts_or_has_fewer_parts_of_type, new List<CVID> { CVID.PATO_altered_number_of, });
            RelationsIsA.Add(CVID.PATO_lacks_all_parts_of_type, new List<CVID> { CVID.PATO_lacks_parts_or_has_fewer_parts_of_type, });
            RelationsIsA.Add(CVID.PATO_has_fewer_parts_of_type, new List<CVID> { CVID.PATO_lacks_parts_or_has_fewer_parts_of_type, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_has_extra_parts_of_type, new List<CVID> { CVID.PATO_altered_number_of, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_population_quality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_concavity, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_2_D_shape, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_convex_3_D_shape, new List<CVID> { CVID.PATO_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_concave_3_D_shape, new List<CVID> { CVID.PATO_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_branchiness, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_looseness, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_neoplastic, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_coating, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_fasciculation, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_structure__cavities, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_magnitude, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_increased_magnitude, new List<CVID> { CVID.PATO_magnitude, });
            RelationsIsA.Add(CVID.PATO_decreased_magnitude, new List<CVID> { CVID.PATO_magnitude, });
            RelationsIsA.Add(CVID.PATO_aplastic_growth, new List<CVID> { CVID.PATO_growth_quality_of_occurrent, });
            RelationsIsA.Add(CVID.PATO_pale_pink, new List<CVID> { CVID.PATO_pink, });
            RelationsIsA.Add(CVID.PATO_conical, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_villiform, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_apical_basal_polarity, new List<CVID> { CVID.PATO_positional_polarity, });
            RelationsIsA.Add(CVID.PATO_anterior_posterior_polarity, new List<CVID> { CVID.PATO_positional_polarity, });
            RelationsIsA.Add(CVID.PATO_external_angle, new List<CVID> { CVID.PATO_convex_angle_to, });
            RelationsIsA.Add(CVID.PATO_non_progressive, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_osmolality, new List<CVID> { CVID.PATO_concentration_of, });
            RelationsIsA.Add(CVID.PATO_decreased_osmolality, new List<CVID> { CVID.PATO_osmolality, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_osmolality, new List<CVID> { CVID.PATO_osmolality, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_specificity_to, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_upturned, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_forward_scatter, new List<CVID> { CVID.PATO_radiation_reflective_quality, });
            RelationsIsA.Add(CVID.PATO_side_scatter, new List<CVID> { CVID.PATO_radiation_reflective_quality, });
            RelationsIsA.Add(CVID.PATO_undivided, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_ipsilateral_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_axial_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_degeneration, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_non_degenerate, new List<CVID> { CVID.PATO_degeneration, });
            RelationsIsA.Add(CVID.PATO_biconcave, new List<CVID> { CVID.PATO_concave, });
            RelationsIsA.Add(CVID.PATO_biconvex, new List<CVID> { CVID.PATO_convex, });
            RelationsIsA.Add(CVID.PATO_anterior_posterior_diameter, new List<CVID> { CVID.PATO_diameter, });
            RelationsIsA.Add(CVID.PATO_decreased_anterior_posterior_diameter, new List<CVID> { CVID.PATO_decreased_diameter, CVID.PATO_anterior_posterior_diameter, });
            RelationsIsA.Add(CVID.PATO_increased_anterior_posterior_diameter, new List<CVID> { CVID.PATO_increased_diameter, CVID.PATO_anterior_posterior_diameter, });
            RelationsIsA.Add(CVID.PATO_trapezoid, new List<CVID> { CVID.PATO_quadrangular, });
            RelationsIsA.Add(CVID.PATO_dendritic, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_abaxial_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_adaxial_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_mosaicism, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_lateral_and_rotional_curvature, new List<CVID> { CVID.PATO_rotational_curvature, });
            RelationsIsA.Add(CVID.PATO_present_in_normal_numbers_in_organism, new List<CVID> { CVID.PATO_present, });
            RelationsIsA.Add(CVID.PATO_increased_occurrence, new List<CVID> { CVID.PATO_occurrence, CVID.PATO_increased_process_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_occurrence, new List<CVID> { CVID.PATO_occurrence, CVID.PATO_decreased_process_quality, });
            RelationsIsA.Add(CVID.PATO_dorso_ventrally_flattened, new List<CVID> { CVID.PATO_flattened, });
            RelationsIsA.Add(CVID.PATO_laterally_compressed, new List<CVID> { CVID.PATO_flattened, });
            RelationsIsA.Add(CVID.PATO_increased_fragility, new List<CVID> { CVID.PATO_fragile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_fragility, new List<CVID> { CVID.PATO_fragile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_area, new List<CVID> { CVID.PATO_increased_size, CVID.PATO_area, });
            RelationsIsA.Add(CVID.PATO_decreased_area, new List<CVID> { CVID.PATO_decreased_size, CVID.PATO_area, });
            RelationsIsA.Add(CVID.PATO_emmision_wavelength, new List<CVID> { CVID.PATO_radiation_emitting_quality, });
            RelationsIsA.Add(CVID.PATO_absorption_wavelength, new List<CVID> { CVID.PATO_absorption_quality, });
            RelationsIsA.Add(CVID.PATO_physical_quality_of_a_process, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_columnar, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_fenestrated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_star_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_crystal_configuration, new List<CVID> { CVID.PATO_solid_configuration, });
            RelationsIsA.Add(CVID.PATO_stratification, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_stratified, new List<CVID> { CVID.PATO_stratification, });
            RelationsIsA.Add(CVID.PATO_unstratified, new List<CVID> { CVID.PATO_stratification, });
            RelationsIsA.Add(CVID.PATO_affinity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_increased_affinity, new List<CVID> { CVID.PATO_affinity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_affinity, new List<CVID> { CVID.PATO_affinity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_avidity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_increased_avidity, new List<CVID> { CVID.PATO_avidity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_avidity, new List<CVID> { CVID.PATO_avidity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_movement_behavioral_quality, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_stacked, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_hollow, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_broken_into_two_pieces, new List<CVID> { CVID.PATO_broken, });
            RelationsIsA.Add(CVID.PATO_shattered, new List<CVID> { CVID.PATO_broken, });
            RelationsIsA.Add(CVID.PATO_partially_broken, new List<CVID> { CVID.PATO_broken, });
            RelationsIsA.Add(CVID.PATO_altered_number_of, new List<CVID> { CVID.PATO_has_number_of, });
            RelationsIsA.Add(CVID.PATO_bullet_shaped, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_monocystic, new List<CVID> { CVID.PATO_cystic, });
            RelationsIsA.Add(CVID.PATO_polycystic, new List<CVID> { CVID.PATO_cystic, });
            RelationsIsA.Add(CVID.PATO_adenomatous, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_subacute, new List<CVID> { CVID.PATO_duration, });
            RelationsIsA.Add(CVID.PATO_anaplastic, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_ballooning, new List<CVID> { CVID.PATO_increased_volume, });
            RelationsIsA.Add(CVID.PATO_basophilic, new List<CVID> { CVID.PATO_affinity, });
            RelationsIsA.Add(CVID.PATO_neoplastic__non_malignant, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_neoplastic__malignant, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_neoplastic__metastatic, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_differentiated, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_undifferentiated, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_metaplastic, new List<CVID> { CVID.PATO_cellular_potency, });
            RelationsIsA.Add(CVID.PATO_proliferative, new List<CVID> { CVID.PATO_cellular_quality, });
            RelationsIsA.Add(CVID.PATO_infiltrative, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_inflammatory, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_hemorrhagic, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_poorly_differentiated, new List<CVID> { CVID.PATO_differentiated, });
            RelationsIsA.Add(CVID.PATO_peripheral, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_papillary, new List<CVID> { CVID.PATO_exserted, });
            RelationsIsA.Add(CVID.PATO_caseous, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_well_differentiated, new List<CVID> { CVID.PATO_differentiated, });
            RelationsIsA.Add(CVID.PATO_moderately_well_differentiated, new List<CVID> { CVID.PATO_differentiated, });
            RelationsIsA.Add(CVID.PATO_perforate, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_cribriform, new List<CVID> { CVID.PATO_perforate, });
            RelationsIsA.Add(CVID.PATO_fatty, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_fibrinoid, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_fibrinopurulent, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_glandular, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_multiple, new List<CVID> { CVID.PATO_present_in_greater_numbers_in_organism, });
            RelationsIsA.Add(CVID.PATO_hydropic, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_suppurative, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_trabecular, new List<CVID> { CVID.PATO_irregular_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_mixed, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_minimal, new List<CVID> { CVID.PATO_present, });
            RelationsIsA.Add(CVID.PATO_laminar, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_nodular, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_osseous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_scirrhous, new List<CVID> { CVID.PATO_hard, });
            RelationsIsA.Add(CVID.PATO_serous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_neoplastic__invasive, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_neoplastic__deeply_invasive, new List<CVID> { CVID.PATO_neoplastic__invasive, });
            RelationsIsA.Add(CVID.PATO_abduction, new List<CVID> { CVID.PATO_displaced_to, });
            RelationsIsA.Add(CVID.PATO_neoplastic__non_invasive, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_adduction, new List<CVID> { CVID.PATO_displaced_to, });
            RelationsIsA.Add(CVID.PATO_fibrillary, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_delayed_closure, new List<CVID> { CVID.PATO_delayed, });
            RelationsIsA.Add(CVID.PATO_radiopacity, new List<CVID> { CVID.PATO_electromagnetic__EM__radiation_quality, });
            RelationsIsA.Add(CVID.PATO_radiopaque, new List<CVID> { CVID.PATO_radiopacity, });
            RelationsIsA.Add(CVID.PATO_edibility, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_edible, new List<CVID> { CVID.PATO_edibility, });
            RelationsIsA.Add(CVID.PATO_inedible, new List<CVID> { CVID.PATO_edibility, });
            RelationsIsA.Add(CVID.PATO_irregular_density, new List<CVID> { CVID.PATO_mass_density, });
            RelationsIsA.Add(CVID.PATO_bracket, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_sloped_downward, new List<CVID> { CVID.PATO_sloped, });
            RelationsIsA.Add(CVID.PATO_increased_radiopacity, new List<CVID> { CVID.PATO_radiopacity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_radiopacity, new List<CVID> { CVID.PATO_radiopacity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_virulence, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_reduced_virulence, new List<CVID> { CVID.PATO_virulence, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_virulence, new List<CVID> { CVID.PATO_virulence, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_ivory, new List<CVID> { CVID.PATO_increased_mass_density, });
            RelationsIsA.Add(CVID.PATO_splayed_caudal, new List<CVID> { CVID.PATO_splayed, });
            RelationsIsA.Add(CVID.PATO_splayed_dorsal, new List<CVID> { CVID.PATO_splayed, });
            RelationsIsA.Add(CVID.PATO_splayed_lateral, new List<CVID> { CVID.PATO_splayed, });
            RelationsIsA.Add(CVID.PATO_splayed_rostral, new List<CVID> { CVID.PATO_splayed, });
            RelationsIsA.Add(CVID.PATO_splayed_ventral, new List<CVID> { CVID.PATO_splayed, });
            RelationsIsA.Add(CVID.PATO_medially_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_laterally_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_partially_dislocated, new List<CVID> { CVID.PATO_dislocated, });
            RelationsIsA.Add(CVID.PATO_bicornuate, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_high_arched, new List<CVID> { CVID.PATO_arched, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_herniated_into, new List<CVID> { CVID.PATO_protruding_into, });
            RelationsIsA.Add(CVID.PATO_curved_medial, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_drooping, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_premature_closure, new List<CVID> { CVID.PATO_premature, });
            RelationsIsA.Add(CVID.PATO_herniated_out_of, new List<CVID> { CVID.PATO_protruding_out_of, });
            RelationsIsA.Add(CVID.PATO_displaced_to, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_split_medially, new List<CVID> { CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_split_laterally, new List<CVID> { CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_split_bilaterally, new List<CVID> { CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_split_radially, new List<CVID> { CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_misaligned_towards, new List<CVID> { CVID.PATO_misaligned_with, });
            RelationsIsA.Add(CVID.PATO_misaligned_away_from, new List<CVID> { CVID.PATO_misaligned_with, });
            RelationsIsA.Add(CVID.PATO_deviation, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_deviation_towards_the_lateral_side, new List<CVID> { CVID.PATO_deviation, });
            RelationsIsA.Add(CVID.PATO_deviation_towards_the_medial_side, new List<CVID> { CVID.PATO_deviation, });
            RelationsIsA.Add(CVID.PATO_mislocalised_radially, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalised_proximally, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_straight, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_displaced, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_molecular_quality, new List<CVID> { CVID.PATO_physical_object_quality, });
            RelationsIsA.Add(CVID.PATO_cyclicity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_cyclic_cyclicity, new List<CVID> { CVID.PATO_cyclicity, });
            RelationsIsA.Add(CVID.PATO_acyclic_cyclicity, new List<CVID> { CVID.PATO_cyclicity, });
            RelationsIsA.Add(CVID.PATO_polarity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_polar_polarity, new List<CVID> { CVID.PATO_polarity, });
            RelationsIsA.Add(CVID.PATO_nonpolar_polarity, new List<CVID> { CVID.PATO_polarity, });
            RelationsIsA.Add(CVID.PATO_electric_polarizability, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_aromaticity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_aromatic, new List<CVID> { CVID.PATO_aromaticity, });
            RelationsIsA.Add(CVID.PATO_non_aromatic, new List<CVID> { CVID.PATO_aromaticity, });
            RelationsIsA.Add(CVID.PATO_electric_charge, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_neutral_charge, new List<CVID> { CVID.PATO_electric_charge, });
            RelationsIsA.Add(CVID.PATO_positive_charge, new List<CVID> { CVID.PATO_electric_charge, });
            RelationsIsA.Add(CVID.PATO_negative_charge, new List<CVID> { CVID.PATO_electric_charge, });
            RelationsIsA.Add(CVID.PATO_electronegativity, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_quality_of_a_substance, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_meltability, new List<CVID> { CVID.PATO_quality_of_a_substance, });
            RelationsIsA.Add(CVID.PATO_vaporizability, new List<CVID> { CVID.PATO_quality_of_a_substance, });
            RelationsIsA.Add(CVID.PATO_handedness, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_left_handedness, new List<CVID> { CVID.PATO_handedness, });
            RelationsIsA.Add(CVID.PATO_right_handedness, new List<CVID> { CVID.PATO_handedness, });
            RelationsIsA.Add(CVID.PATO_ambidextrous_handedness, new List<CVID> { CVID.PATO_handedness, });
            RelationsIsA.Add(CVID.PATO_capacitance, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_neonatal, new List<CVID> { CVID.PATO_maturity, });
            RelationsIsA.Add(CVID.PATO_insertion_depth, new List<CVID> { CVID.PATO_distance, });
            RelationsIsA.Add(CVID.PATO_spoon_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_incisiform, new List<CVID> { CVID.PATO_sharp, });
            RelationsIsA.Add(CVID.PATO_bulbous, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_recurved, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_slender, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_obclavate, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_bilobed, new List<CVID> { CVID.PATO_lobed, });
            RelationsIsA.Add(CVID.PATO_falciform, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_ubiquinated, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_nitrated, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_demyelinated, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_fan_shaped, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_phosphorylated, new List<CVID> { CVID.PATO_phosphorylation, });
            RelationsIsA.Add(CVID.PATO_increased_phosphorylation, new List<CVID> { CVID.PATO_phosphorylated, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_phosphorylation, new List<CVID> { CVID.PATO_phosphorylated, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_oxidized, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_V_shaped, new List<CVID> { CVID.PATO_angular, });
            RelationsIsA.Add(CVID.PATO_L_shaped, new List<CVID> { CVID.PATO_angular, });
            RelationsIsA.Add(CVID.PATO_subcylindrical, new List<CVID> { CVID.PATO_cylindrical, });
            RelationsIsA.Add(CVID.PATO_cup_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_acuminate, new List<CVID> { CVID.PATO_tapered, });
            RelationsIsA.Add(CVID.PATO_subrectangular, new List<CVID> { CVID.PATO_quadrangular, });
            RelationsIsA.Add(CVID.PATO_subtriangular, new List<CVID> { CVID.PATO_triangular, });
            RelationsIsA.Add(CVID.PATO_multifid, new List<CVID> { CVID.PATO_split, });
            RelationsIsA.Add(CVID.PATO_semicircular, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_far_from, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_emarginate, new List<CVID> { CVID.PATO_notched, });
            RelationsIsA.Add(CVID.PATO_blade_like, new List<CVID> { CVID.PATO_tapered, });
            RelationsIsA.Add(CVID.PATO_aliform, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_retrorse, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_antrorse, new List<CVID> { CVID.PATO_curved, });
            RelationsIsA.Add(CVID.PATO_hourglass_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_teardrop_shaped, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_trilobed, new List<CVID> { CVID.PATO_lobed, });
            RelationsIsA.Add(CVID.PATO_velocity, new List<CVID> { CVID.PATO_movement_quality, });
            RelationsIsA.Add(CVID.PATO_fluid_flow_rate, new List<CVID> { CVID.PATO_flow_rate, });
            RelationsIsA.Add(CVID.PATO_mass_flow_rate, new List<CVID> { CVID.PATO_flow_rate, });
            RelationsIsA.Add(CVID.PATO_increased_force, new List<CVID> { CVID.PATO_force, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_force, new List<CVID> { CVID.PATO_force, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_degree_of_pigmentation, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_pigmented, new List<CVID> { CVID.PATO_degree_of_pigmentation, });
            RelationsIsA.Add(CVID.PATO_unpigmented, new List<CVID> { CVID.PATO_degree_of_pigmentation, });
            RelationsIsA.Add(CVID.PATO_increased_pigmentation, new List<CVID> { CVID.PATO_pigmented, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_pigmentation, new List<CVID> { CVID.PATO_pigmented, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_antero_posteriorly_flattened, new List<CVID> { CVID.PATO_flattened, });
            RelationsIsA.Add(CVID.PATO_platelike, new List<CVID> { CVID.PATO_flat, });
            RelationsIsA.Add(CVID.PATO_flattened, new List<CVID> { CVID.PATO_curvature, });
            RelationsIsA.Add(CVID.PATO_grooved, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_tricuspidate, new List<CVID> { CVID.PATO_multicuspidate, });
            RelationsIsA.Add(CVID.PATO_multicuspidate, new List<CVID> { CVID.PATO_cuspidate, });
            RelationsIsA.Add(CVID.PATO_pointed, new List<CVID> { CVID.PATO_sharp, });
            RelationsIsA.Add(CVID.PATO_adjacent_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_semi_erect, new List<CVID> { CVID.PATO_erect, });
            RelationsIsA.Add(CVID.PATO_located_in, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_phosphorylation, new List<CVID> { CVID.PATO_molecular_quality, });
            RelationsIsA.Add(CVID.PATO_dephosphorylated, new List<CVID> { CVID.PATO_phosphorylation, });
            RelationsIsA.Add(CVID.PATO_organization_quality, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_behavioural_activity, new List<CVID> { CVID.PATO_behavioral_quality, });
            RelationsIsA.Add(CVID.PATO_3_D_shape, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_edge_shape, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_centered, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_accumulation, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_increased_accumulation, new List<CVID> { CVID.PATO_accumulation, });
            RelationsIsA.Add(CVID.PATO_decreased_accumulation, new List<CVID> { CVID.PATO_accumulation, });
            RelationsIsA.Add(CVID.PATO_parallel_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_marbled, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_mottled, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_high_contrast_color_pattern, new List<CVID> { CVID.PATO_color_pattern, });
            RelationsIsA.Add(CVID.PATO_barred, new List<CVID> { CVID.PATO_multi_colored, });
            RelationsIsA.Add(CVID.PATO_iridescent, new List<CVID> { CVID.PATO_variant_color, });
            RelationsIsA.Add(CVID.PATO_articulated_with, new List<CVID> { CVID.PATO_in_contact_with, });
            RelationsIsA.Add(CVID.PATO_tightly_articulated_with, new List<CVID> { CVID.PATO_articulated_with, });
            RelationsIsA.Add(CVID.PATO_broadly_articulated_with, new List<CVID> { CVID.PATO_articulated_with, });
            RelationsIsA.Add(CVID.PATO_biscupidate, new List<CVID> { CVID.PATO_multicuspidate, });
            RelationsIsA.Add(CVID.PATO_increased_mobility, new List<CVID> { CVID.PATO_mobile, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_mobility, new List<CVID> { CVID.PATO_mobile, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_tension, new List<CVID> { CVID.PATO_physical_quality, });
            RelationsIsA.Add(CVID.PATO_increased_branchiness, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_decreased_branchiness, new List<CVID> { CVID.PATO_branched, });
            RelationsIsA.Add(CVID.PATO_increased_elasticity, new List<CVID> { CVID.PATO_elastic, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_elasticity, new List<CVID> { CVID.PATO_elastic, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_setose, new List<CVID> { CVID.PATO_hairy, });
            RelationsIsA.Add(CVID.PATO_aplastic_hypoplastic, new List<CVID> { CVID.PATO_decreased_size, });
            RelationsIsA.Add(CVID.PATO_agenesis, new List<CVID> { CVID.PATO_absent, });
            RelationsIsA.Add(CVID.PATO_transient, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_permanent, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_scrobiculate, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_areolate, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_foveate, new List<CVID> { CVID.PATO_texture, });
            RelationsIsA.Add(CVID.PATO_decreased_cellular_motility, new List<CVID> { CVID.PATO_cellular_motility, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_increased_cellular_motility, new List<CVID> { CVID.PATO_cellular_motility, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_tubular, new List<CVID> { CVID.PATO_cylindrical, CVID.PATO_hollow, });
            RelationsIsA.Add(CVID.PATO_increased_quality, new List<CVID> { CVID.PATO_deviation_from_normal_, });
            RelationsIsA.Add(CVID.PATO_decreased_quality, new List<CVID> { CVID.PATO_deviation_from_normal_, });
            RelationsIsA.Add(CVID.PATO_decreased_process_quality, new List<CVID> { CVID.PATO_process_quality, CVID.PATO_decreased_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_object_quality, new List<CVID> { CVID.PATO_physical_object_quality, CVID.PATO_decreased_quality, });
            RelationsIsA.Add(CVID.PATO_increased_process_quality, new List<CVID> { CVID.PATO_process_quality, CVID.PATO_increased_quality, });
            RelationsIsA.Add(CVID.PATO_increased_object_quality, new List<CVID> { CVID.PATO_physical_object_quality, CVID.PATO_increased_quality, });
            RelationsIsA.Add(CVID.PATO_equilateral_triangular, new List<CVID> { CVID.PATO_triangular, });
            RelationsIsA.Add(CVID.PATO_isosceles_triangular, new List<CVID> { CVID.PATO_triangular, });
            RelationsIsA.Add(CVID.PATO_scalene_triangular, new List<CVID> { CVID.PATO_triangular, });
            RelationsIsA.Add(CVID.PATO_fiber_shaped, new List<CVID> { CVID.PATO_subcylindrical, });
            RelationsIsA.Add(CVID.PATO_robust, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_fimbriated, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_segmented, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_telescopic, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_ligamentous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_brush_like_shape, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_autogenous, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_parallelogram, new List<CVID> { CVID.PATO_quadrangular, });
            RelationsIsA.Add(CVID.PATO_superelliptic, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_squircle, new List<CVID> { CVID.PATO_superelliptic, });
            RelationsIsA.Add(CVID.PATO_diamond_shaped, new List<CVID> { CVID.PATO_superelliptic, });
            RelationsIsA.Add(CVID.PATO_hypoelliptic, new List<CVID> { CVID.PATO_superelliptic, });
            RelationsIsA.Add(CVID.PATO_hyperelliptic, new List<CVID> { CVID.PATO_superelliptic, });
            RelationsIsA.Add(CVID.PATO_temporal_distribution_quality, new List<CVID> { CVID.PATO_physical_quality_of_a_process, });
            RelationsIsA.Add(CVID.PATO_offset_quality, new List<CVID> { CVID.PATO_temporal_distribution_quality, });
            RelationsIsA.Add(CVID.PATO_onset_quality, new List<CVID> { CVID.PATO_temporal_distribution_quality, });
            RelationsIsA.Add(CVID.PATO_angle, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_increased_angle_to, new List<CVID> { CVID.PATO_increased_position, CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_decreased_angle_to, new List<CVID> { CVID.PATO_decreased_position, CVID.PATO_angle, });
            RelationsIsA.Add(CVID.PATO_hyponastic, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_oblanceolate, new List<CVID> { CVID.PATO_linear, });
            RelationsIsA.Add(CVID.PATO_adhesive, new List<CVID> { CVID.PATO_adhesivity, });
            RelationsIsA.Add(CVID.PATO_non_adhesive, new List<CVID> { CVID.PATO_adhesivity, });
            RelationsIsA.Add(CVID.PATO_increased_adhesivity, new List<CVID> { CVID.PATO_increased_object_quality, CVID.PATO_adhesive, });
            RelationsIsA.Add(CVID.PATO_decreased_adhesivity, new List<CVID> { CVID.PATO_decreased_object_quality, CVID.PATO_adhesive, });
            RelationsIsA.Add(CVID.PATO_tholiform, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_pyramidal, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_lance_ovate, new List<CVID> { CVID.PATO_lanceolate, });
            RelationsIsA.Add(CVID.PATO_lanceolate_triangular, new List<CVID> { CVID.PATO_lanceolate, });
            RelationsIsA.Add(CVID.PATO_hispid, new List<CVID> { CVID.PATO_hairy, });
            RelationsIsA.Add(CVID.PATO_hispidulous, new List<CVID> { CVID.PATO_hispid, });
            RelationsIsA.Add(CVID.PATO_tomentose, new List<CVID> { CVID.PATO_hairy, });
            RelationsIsA.Add(CVID.PATO_cupulate, new List<CVID> { CVID.PATO_cup_shaped, });
            RelationsIsA.Add(CVID.PATO_decumbent, new List<CVID> { CVID.PATO_prostrate, });
            RelationsIsA.Add(CVID.PATO_arachnose, new List<CVID> { CVID.PATO_hairy, });
            RelationsIsA.Add(CVID.PATO_lemon_shaped, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_snowman_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_obconical, new List<CVID> { CVID.PATO_conical, });
            RelationsIsA.Add(CVID.PATO_ligneous, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_basal_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_cauline_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_fleshy, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_herbaceous, new List<CVID> { CVID.PATO_shedability, });
            RelationsIsA.Add(CVID.PATO_activation_quality, new List<CVID> { CVID.PATO_functionality, });
            RelationsIsA.Add(CVID.PATO_active, new List<CVID> { CVID.PATO_activation_quality, });
            RelationsIsA.Add(CVID.PATO_inactive, new List<CVID> { CVID.PATO_activation_quality, });
            RelationsIsA.Add(CVID.PATO_constitutively_active, new List<CVID> { CVID.PATO_active, });
            RelationsIsA.Add(CVID.PATO_D_shaped, new List<CVID> { CVID.PATO_convex_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_ridged, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_broad, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_tendency, new List<CVID> { CVID.PATO_disposition, });
            RelationsIsA.Add(CVID.PATO_increased_tendency, new List<CVID> { CVID.PATO_increased_object_quality, CVID.PATO_tendency, });
            RelationsIsA.Add(CVID.PATO_decreased_tendency, new List<CVID> { CVID.PATO_decreased_object_quality, CVID.PATO_tendency, });
            RelationsIsA.Add(CVID.PATO_bronze, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_shortened, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_intact_female, new List<CVID> { CVID.PATO_female, });
            RelationsIsA.Add(CVID.PATO_intact_male, new List<CVID> { CVID.PATO_male, });
            RelationsIsA.Add(CVID.PATO_castrated_male, new List<CVID> { CVID.PATO_male, });
            RelationsIsA.Add(CVID.PATO_nulliparous, new List<CVID> { CVID.PATO_parity, });
            RelationsIsA.Add(CVID.PATO_multiparous, new List<CVID> { CVID.PATO_parity, });
            RelationsIsA.Add(CVID.PATO_parity, new List<CVID> { CVID.PATO_reproductive_quality, });
            RelationsIsA.Add(CVID.PATO_primiparous, new List<CVID> { CVID.PATO_parity, });
            RelationsIsA.Add(CVID.PATO_grand_multi_arous, new List<CVID> { CVID.PATO_multiparous, });
            RelationsIsA.Add(CVID.PATO_mediolateral_polarity, new List<CVID> { CVID.PATO_positional_polarity, });
            RelationsIsA.Add(CVID.PATO_fluctuating, new List<CVID> { CVID.PATO_variant, });
            RelationsIsA.Add(CVID.PATO_trumpet_shaped, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_inflated, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_uninflated, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_acinus, new List<CVID> { CVID.PATO_lobed, });
            RelationsIsA.Add(CVID.PATO_ovariohysterectomized_female, new List<CVID> { CVID.PATO_female_sterile, });
            RelationsIsA.Add(CVID.PATO_ovariectomized_female, new List<CVID> { CVID.PATO_female_sterile, });
            RelationsIsA.Add(CVID.PATO_waxiness, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_increased_waxiness, new List<CVID> { CVID.PATO_increased_object_quality, CVID.PATO_waxiness, });
            RelationsIsA.Add(CVID.PATO_decreased_waxiness, new List<CVID> { CVID.PATO_decreased_object_quality, CVID.PATO_waxiness, });
            RelationsIsA.Add(CVID.PATO_waxy, new List<CVID> { CVID.PATO_waxiness, });
            RelationsIsA.Add(CVID.PATO_striate_angular, new List<CVID> { CVID.PATO_striated, });
            RelationsIsA.Add(CVID.PATO_anvil, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_peracute, new List<CVID> { CVID.PATO_acute, });
            RelationsIsA.Add(CVID.PATO_pedunculate, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_procumbent, new List<CVID> { CVID.PATO_prostrate, });
            RelationsIsA.Add(CVID.PATO_radius, new List<CVID> { CVID.PATO_length, });
            RelationsIsA.Add(CVID.PATO_triradiate, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_diagonal_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_increased_tolerance_to, new List<CVID> { CVID.PATO_tolerant_to, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_tolerance_to, new List<CVID> { CVID.PATO_tolerant_to, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_mislocalized_abaxially, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_mislocalized_adaxially, new List<CVID> { CVID.PATO_mislocalised, });
            RelationsIsA.Add(CVID.PATO_subcircular, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_anteromedially_rotated, new List<CVID> { CVID.PATO_rotated, });
            RelationsIsA.Add(CVID.PATO_fusiform, new List<CVID> { CVID.PATO_spindle_shaped, });
            RelationsIsA.Add(CVID.PATO_random_pattern, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_multifocal_to_coalescing, new List<CVID> { CVID.PATO_multi_localised, });
            RelationsIsA.Add(CVID.PATO_generalized, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_segmental, new List<CVID> { CVID.PATO_spatial_pattern, });
            RelationsIsA.Add(CVID.PATO_friability, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_friable, new List<CVID> { CVID.PATO_friability, });
            RelationsIsA.Add(CVID.PATO_indurated, new List<CVID> { CVID.PATO_friability, });
            RelationsIsA.Add(CVID.PATO_watery, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_fluid_filled, new List<CVID> { CVID.PATO_structure__cavities, });
            RelationsIsA.Add(CVID.PATO_beige, new List<CVID> { CVID.PATO_light_yellow_brown, });
            RelationsIsA.Add(CVID.PATO_yellow_brown, new List<CVID> { CVID.PATO_brown, });
            RelationsIsA.Add(CVID.PATO_dark_yellow_brown, new List<CVID> { CVID.PATO_yellow_brown, });
            RelationsIsA.Add(CVID.PATO_light_yellow_brown, new List<CVID> { CVID.PATO_yellow_brown, });
            RelationsIsA.Add(CVID.PATO_chronic_active, new List<CVID> { CVID.PATO_chronic, });
            RelationsIsA.Add(CVID.PATO_focally_extensive, new List<CVID> { CVID.PATO_localized, });
            RelationsIsA.Add(CVID.PATO_sunken, new List<CVID> { CVID.PATO_elevation, });
            RelationsIsA.Add(CVID.PATO_transmural, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_acidophilic, new List<CVID> { CVID.PATO_affinity, });
            RelationsIsA.Add(CVID.PATO_eosinophilic, new List<CVID> { CVID.PATO_affinity, });
            RelationsIsA.Add(CVID.PATO_amphiphilic, new List<CVID> { CVID.PATO_affinity, });
            RelationsIsA.Add(CVID.PATO_cicatricial, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_acinar, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_papillomatous, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_divergent_from, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_exposed, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_scaphoid, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_knobbled, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_tripodal, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_x_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_strap_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_waisted, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_spade_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_sculpted_surface, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_perpendicular_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_abut, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_offset, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_interlocked_with, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_subdermal, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_w_shaped, new List<CVID> { CVID.PATO_angular, });
            RelationsIsA.Add(CVID.PATO_ornamentation, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_ornamented, new List<CVID> { CVID.PATO_ornamentation, });
            RelationsIsA.Add(CVID.PATO_unornamented, new List<CVID> { CVID.PATO_ornamentation, });
            RelationsIsA.Add(CVID.PATO_level_with, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_mineralized, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_torsioned, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_anchor_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_quadripartite, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_oriented_towards, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_posteromedial_to, new List<CVID> { CVID.PATO_posterior_to, });
            RelationsIsA.Add(CVID.PATO_firm, new List<CVID> { CVID.PATO_hardness, });
            RelationsIsA.Add(CVID.PATO_sexually_dimorphic, new List<CVID> { CVID.PATO_organismal_quality, });
            RelationsIsA.Add(CVID.PATO_decondensed, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_eroding, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_carpel_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_corymb_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_inflorescence_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_leaf_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_pin_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_sepal_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_shriveled, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_wilty, new List<CVID> { CVID.PATO_drooping, });
            RelationsIsA.Add(CVID.PATO_collagenous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_extends_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_extends_beyond, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_prism_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_keyhole_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_lathlike, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_distensible, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_sutured_to, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_transformed_to, new List<CVID> { CVID.PATO_morphology, });
            RelationsIsA.Add(CVID.PATO_increased_velocity, new List<CVID> { CVID.PATO_velocity, CVID.PATO_increased_object_quality, });
            RelationsIsA.Add(CVID.PATO_decreased_velocity, new List<CVID> { CVID.PATO_velocity, CVID.PATO_decreased_object_quality, });
            RelationsIsA.Add(CVID.PATO_neoplastic__spontaneous, new List<CVID> { CVID.PATO_neoplastic, });
            RelationsIsA.Add(CVID.PATO_bitter, new List<CVID> { CVID.PATO_flavourful, });
            RelationsIsA.Add(CVID.PATO_subterminal, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_terminal, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_brittle, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_transversely_striated, new List<CVID> { CVID.PATO_striated, });
            RelationsIsA.Add(CVID.PATO_obliquely_striated, new List<CVID> { CVID.PATO_striated, });
            RelationsIsA.Add(CVID.PATO_poorly_ossified, new List<CVID> { CVID.PATO_ossified, });
            RelationsIsA.Add(CVID.PATO_oblique_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_slit_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_external_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_inverted_V_shaped, new List<CVID> { CVID.PATO_angular, });
            RelationsIsA.Add(CVID.PATO_parallel_sided, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_multi_organismal_process_quality, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_single_organismal_process_quality, new List<CVID> { CVID.PATO_process_quality, });
            RelationsIsA.Add(CVID.PATO_overlapping, new List<CVID> { CVID.PATO_overlap_with, });
            RelationsIsA.Add(CVID.PATO_overlapped_by, new List<CVID> { CVID.PATO_overlap_with, });
            RelationsIsA.Add(CVID.PATO_anterior_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_anterodorsal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_anterolateral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_anteroventral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_distal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_dorsal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_dorsolateral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_lateral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_medial_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_posterior_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_ventrolaterally_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_ventral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_transverse_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_posterolateral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_posterodorsal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_nucleated, new List<CVID> { CVID.PATO_nucleate_quality, });
            RelationsIsA.Add(CVID.PATO_alobate, new List<CVID> { CVID.PATO_surface_feature_shape, });
            RelationsIsA.Add(CVID.PATO_keratinous, new List<CVID> { CVID.PATO_composition, });
            RelationsIsA.Add(CVID.PATO_concealed, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_hexagonal, new List<CVID> { CVID.PATO_2_D_shape, });
            RelationsIsA.Add(CVID.PATO_multipartite, new List<CVID> { CVID.PATO_concave_3_D_shape, });
            RelationsIsA.Add(CVID.PATO_cane_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_confluent_with, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_oblique_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_anteromedial_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_increased_elevation_relative_to, new List<CVID> { CVID.PATO_elevation, });
            RelationsIsA.Add(CVID.PATO_concealed_by, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_saddle_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_flush, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_cancellous, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_scute_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_funnel_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_keel_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_vertical_to, new List<CVID> { CVID.PATO_position, });
            RelationsIsA.Add(CVID.PATO_mesiolateral_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_separating, new List<CVID> { CVID.PATO_structure, });
            RelationsIsA.Add(CVID.PATO_anterodistal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_posterodistal_orientation, new List<CVID> { CVID.PATO_orientation, });
            RelationsIsA.Add(CVID.PATO_borderline_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_profound_intensity, new List<CVID> { CVID.PATO_intensity, });
            RelationsIsA.Add(CVID.PATO_episodic, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_refractory, new List<CVID> { CVID.PATO_occurrence, });
            RelationsIsA.Add(CVID.PATO_secondary, new List<CVID> { CVID.PATO_qualitative, });
            RelationsIsA.Add(CVID.PATO_bipartite, new List<CVID> { CVID.PATO_multipartite, });
            RelationsIsA.Add(CVID.PATO_plowshare_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_peg_like, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_boomerang_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_subovoid, new List<CVID> { CVID.PATO_spheroid, });
            RelationsIsA.Add(CVID.PATO_concavo_convex, new List<CVID> { CVID.PATO_concavity, });
            RelationsIsA.Add(CVID.PATO_ring_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.PATO_spur_shaped, new List<CVID> { CVID.PATO_shape, });
            RelationsIsA.Add(CVID.UO_length_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_mass_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_time_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_electric_current_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_temperature_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_substance_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_luminous_intensity_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_meter, new List<CVID> { CVID.UO_length_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_kilogram, new List<CVID> { CVID.UO_mass_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_second, new List<CVID> { CVID.UO_time_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_ampere, new List<CVID> { CVID.UO_electric_current_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_kelvin, new List<CVID> { CVID.UO_temperature_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_mole, new List<CVID> { CVID.UO_substance_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_candela, new List<CVID> { CVID.UO_luminous_intensity_unit, CVID.UO_base_unit, });
            RelationsIsA.Add(CVID.UO_centimeter, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_millimeter, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_micrometer, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_nanometer, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_angstrom, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_picometer, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_gram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_milligram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_microgram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_nanogram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_picogram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_femtogram, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_degree_Celsius, new List<CVID> { CVID.UO_temperature_unit, });
            RelationsIsA.Add(CVID.UO_millisecond, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_microsecond, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_picosecond, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_minute, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_hour, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_day, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_week, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_month, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_year, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_milliampere, new List<CVID> { CVID.UO_electric_current_unit, });
            RelationsIsA.Add(CVID.UO_microampere, new List<CVID> { CVID.UO_electric_current_unit, });
            RelationsIsA.Add(CVID.UO_micromole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_millimole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_nanomole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_picomole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_femtomole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_attomole, new List<CVID> { CVID.UO_substance_unit, });
            RelationsIsA.Add(CVID.UO_base_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_area_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_acceleration_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_angular_velocity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_angular_acceleration_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_concentration_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_mass_density_unit, new List<CVID> { CVID.UO_density_unit, });
            RelationsIsA.Add(CVID.UO_luminance_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_area_density_unit, new List<CVID> { CVID.UO_density_unit, });
            RelationsIsA.Add(CVID.UO_molar_mass_unit, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_molar_volume_unit, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_momentum_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_rotational_frequency_unit, new List<CVID> { CVID.UO_frequency_unit, });
            RelationsIsA.Add(CVID.UO_specific_volume_unit, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_speed_velocity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_unit_of_molarity, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_molar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_millimolar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_micromolar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_nanomolar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_picomolar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_unit_of_molality, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_molal, new List<CVID> { CVID.UO_unit_of_molality, });
            RelationsIsA.Add(CVID.UO_millimolal, new List<CVID> { CVID.UO_unit_of_molality, });
            RelationsIsA.Add(CVID.UO_micromolal, new List<CVID> { CVID.UO_unit_of_molality, });
            RelationsIsA.Add(CVID.UO_nanomolal, new List<CVID> { CVID.UO_unit_of_molality, });
            RelationsIsA.Add(CVID.UO_picomolal, new List<CVID> { CVID.UO_unit_of_molality, });
            RelationsIsA.Add(CVID.UO_femtomolar, new List<CVID> { CVID.UO_unit_of_molarity, });
            RelationsIsA.Add(CVID.UO_unit_of_normality, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_normal, new List<CVID> { CVID.UO_unit_of_normality, });
            RelationsIsA.Add(CVID.UO_mole_fraction, new List<CVID> { CVID.UO_concentration_unit, CVID.UO_fraction, });
            RelationsIsA.Add(CVID.UO_meter_per_second_per_second, new List<CVID> { CVID.UO_acceleration_unit, });
            RelationsIsA.Add(CVID.UO_radian_per_second_per_second, new List<CVID> { CVID.UO_angular_acceleration_unit, });
            RelationsIsA.Add(CVID.UO_radian_per_second, new List<CVID> { CVID.UO_angular_velocity_unit, });
            RelationsIsA.Add(CVID.UO_square_meter, new List<CVID> { CVID.UO_area_unit, });
            RelationsIsA.Add(CVID.UO_square_centimeter, new List<CVID> { CVID.UO_area_unit, });
            RelationsIsA.Add(CVID.UO_square_millimeter, new List<CVID> { CVID.UO_area_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_cubic_meter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_gram_per_cubic_centimeter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_candela_per_square_meter, new List<CVID> { CVID.UO_luminance_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_square_meter, new List<CVID> { CVID.UO_area_density_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_mole, new List<CVID> { CVID.UO_molar_mass_unit, });
            RelationsIsA.Add(CVID.UO_gram_per_mole, new List<CVID> { CVID.UO_molar_mass_unit, });
            RelationsIsA.Add(CVID.UO_cubic_meter_per_mole, new List<CVID> { CVID.UO_molar_volume_unit, });
            RelationsIsA.Add(CVID.UO_cubic_centimeter_per_mole, new List<CVID> { CVID.UO_molar_volume_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_meter_per_second, new List<CVID> { CVID.UO_momentum_unit, });
            RelationsIsA.Add(CVID.UO_turns_per_second, new List<CVID> { CVID.UO_rotational_frequency_unit, });
            RelationsIsA.Add(CVID.UO_cubic_meter_per_kilogram, new List<CVID> { CVID.UO_specific_volume_unit, });
            RelationsIsA.Add(CVID.UO_meter_per_second, new List<CVID> { CVID.UO_speed_velocity_unit, });
            RelationsIsA.Add(CVID.UO_volume_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_cubic_meter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_cubic_centimeter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_milliliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_liter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_cubic_decimeter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_microliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_nanoliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_picoliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_femtoliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_frequency_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_hertz, new List<CVID> { CVID.UO_frequency_unit, });
            RelationsIsA.Add(CVID.UO_force_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_newton, new List<CVID> { CVID.UO_force_unit, });
            RelationsIsA.Add(CVID.UO_pressure_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_pascal, new List<CVID> { CVID.UO_pressure_unit, });
            RelationsIsA.Add(CVID.UO_energy_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_joule, new List<CVID> { CVID.UO_energy_unit, });
            RelationsIsA.Add(CVID.UO_power_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_watt, new List<CVID> { CVID.UO_power_unit, });
            RelationsIsA.Add(CVID.UO_illuminance_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_lux, new List<CVID> { CVID.UO_illuminance_unit, });
            RelationsIsA.Add(CVID.UO_luminous_flux_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_lumen, new List<CVID> { CVID.UO_luminous_flux_unit, });
            RelationsIsA.Add(CVID.UO_catalytic_activity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_katal, new List<CVID> { CVID.UO_catalytic_activity_unit, });
            RelationsIsA.Add(CVID.UO_angle_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_plane_angle_unit, new List<CVID> { CVID.UO_angle_unit, });
            RelationsIsA.Add(CVID.UO_radian, new List<CVID> { CVID.UO_plane_angle_unit, });
            RelationsIsA.Add(CVID.UO_solid_angle_unit, new List<CVID> { CVID.UO_angle_unit, });
            RelationsIsA.Add(CVID.UO_steradian, new List<CVID> { CVID.UO_solid_angle_unit, });
            RelationsIsA.Add(CVID.UO_radiation_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_activity__of_a_radionuclide__unit, new List<CVID> { CVID.UO_radiation_unit, });
            RelationsIsA.Add(CVID.UO_absorbed_dose_unit, new List<CVID> { CVID.UO_radiation_unit, });
            RelationsIsA.Add(CVID.UO_dose_equivalent_unit, new List<CVID> { CVID.UO_radiation_unit, });
            RelationsIsA.Add(CVID.UO_exposure_unit, new List<CVID> { CVID.UO_radiation_unit, });
            RelationsIsA.Add(CVID.UO_becquerel, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_curie, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_gray, new List<CVID> { CVID.UO_absorbed_dose_unit, });
            RelationsIsA.Add(CVID.UO_rad, new List<CVID> { CVID.UO_absorbed_dose_unit, });
            RelationsIsA.Add(CVID.UO_roentgen, new List<CVID> { CVID.UO_exposure_unit, });
            RelationsIsA.Add(CVID.UO_sievert, new List<CVID> { CVID.UO_dose_equivalent_unit, });
            RelationsIsA.Add(CVID.UO_millisievert, new List<CVID> { CVID.UO_dose_equivalent_unit, });
            RelationsIsA.Add(CVID.UO_microsievert, new List<CVID> { CVID.UO_dose_equivalent_unit, });
            RelationsIsA.Add(CVID.UO_Roentgen_equivalent_man, new List<CVID> { CVID.UO_dose_equivalent_unit, });
            RelationsIsA.Add(CVID.UO_microgray, new List<CVID> { CVID.UO_absorbed_dose_unit, });
            RelationsIsA.Add(CVID.UO_milligray, new List<CVID> { CVID.UO_absorbed_dose_unit, });
            RelationsIsA.Add(CVID.UO_nanogray, new List<CVID> { CVID.UO_absorbed_dose_unit, });
            RelationsIsA.Add(CVID.UO_nanosievert, new List<CVID> { CVID.UO_dose_equivalent_unit, });
            RelationsIsA.Add(CVID.UO_millicurie, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_microcurie, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_disintegrations_per_minute, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_counts_per_minute, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_nanosecond, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_century, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_half_life, new List<CVID> { CVID.UO_time_unit, });
            RelationsIsA.Add(CVID.UO_foot_candle, new List<CVID> { CVID.UO_illuminance_unit, });
            RelationsIsA.Add(CVID.UO_irradiance_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_watt_per_square_meter, new List<CVID> { CVID.UO_irradiance_unit, });
            RelationsIsA.Add(CVID.UO_einstein_per_square_meter_per_second, new List<CVID> { CVID.UO_irradiance_unit, });
            RelationsIsA.Add(CVID.UO_light_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_watt_per_steradian_per_square_meter, new List<CVID> { CVID.UO_radiance_unit, });
            RelationsIsA.Add(CVID.UO_radiant_intensity_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_microeinstein_per_square_meter_per_second, new List<CVID> { CVID.UO_irradiance_unit, });
            RelationsIsA.Add(CVID.UO_radiance_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_watt_per_steradian, new List<CVID> { CVID.UO_radiant_intensity_unit, });
            RelationsIsA.Add(CVID.UO_mass_percentage, new List<CVID> { CVID.UO_concentration_unit, CVID.UO_percent, });
            RelationsIsA.Add(CVID.UO_mass_volume_percentage, new List<CVID> { CVID.UO_concentration_unit, CVID.UO_percent, });
            RelationsIsA.Add(CVID.UO_volume_percentage, new List<CVID> { CVID.UO_percent, CVID.UO_volume_per_unit_volume, });
            RelationsIsA.Add(CVID.UO_parts_per_notation_unit, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_hundred, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_thousand, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_million, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_billion, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_trillion, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_parts_per_quadrillion, new List<CVID> { CVID.UO_parts_per_notation_unit, });
            RelationsIsA.Add(CVID.UO_gram_per_milliliter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_liter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_gram_per_liter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_milligram_per_milliliter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_unit_per_volume_unit, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_unit_per_milliliter, new List<CVID> { CVID.UO_unit_per_volume_unit, });
            RelationsIsA.Add(CVID.UO_unit_per_liter, new List<CVID> { CVID.UO_unit_per_volume_unit, });
            RelationsIsA.Add(CVID.UO_mass_per_unit_volume, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_enzyme_unit, new List<CVID> { CVID.UO_catalytic_activity_unit, });
            RelationsIsA.Add(CVID.UO_density_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_linear_density_unit, new List<CVID> { CVID.UO_density_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_meter, new List<CVID> { CVID.UO_linear_density_unit, });
            RelationsIsA.Add(CVID.UO_degree, new List<CVID> { CVID.UO_plane_angle_unit, });
            RelationsIsA.Add(CVID.UO_dimensionless_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_percent, new List<CVID> { CVID.UO_ratio, });
            RelationsIsA.Add(CVID.UO_pi, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_count_unit, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_ratio, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_fraction, new List<CVID> { CVID.UO_ratio, });
            RelationsIsA.Add(CVID.UO_molecule_count, new List<CVID> { CVID.UO_count_unit, });
            RelationsIsA.Add(CVID.UO_purity_percentage, new List<CVID> { CVID.UO_percent, });
            RelationsIsA.Add(CVID.UO_confluence_percentage, new List<CVID> { CVID.UO_percent, });
            RelationsIsA.Add(CVID.UO_degree_Fahrenheit, new List<CVID> { CVID.UO_temperature_unit, });
            RelationsIsA.Add(CVID.UO_pH, new List<CVID> { CVID.UO_concentration_unit, CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_liter_per_kilogram, new List<CVID> { CVID.UO_specific_volume_unit, });
            RelationsIsA.Add(CVID.UO_milliliter_per_kilogram, new List<CVID> { CVID.UO_specific_volume_unit, });
            RelationsIsA.Add(CVID.UO_microliter_per_kilogram, new List<CVID> { CVID.UO_specific_volume_unit, });
            RelationsIsA.Add(CVID.UO_cell_concentration_unit, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_cells_per_milliliter, new List<CVID> { CVID.UO_cell_concentration_unit, });
            RelationsIsA.Add(CVID.UO_catalytic__activity__concentration_unit, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_katal_per_cubic_meter, new List<CVID> { CVID.UO_catalytic__activity__concentration_unit, });
            RelationsIsA.Add(CVID.UO_katal_per_liter, new List<CVID> { CVID.UO_catalytic__activity__concentration_unit, });
            RelationsIsA.Add(CVID.UO_volume_per_unit_volume, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_milliliter_per_cubic_meter, new List<CVID> { CVID.UO_volume_per_unit_volume, });
            RelationsIsA.Add(CVID.UO_milliliter_per_liter, new List<CVID> { CVID.UO_volume_per_unit_volume, });
            RelationsIsA.Add(CVID.UO_gram_per_deciliter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_deciliter, new List<CVID> { CVID.UO_volume_unit, });
            RelationsIsA.Add(CVID.UO_colony_forming_unit, new List<CVID> { CVID.UO_count_unit, });
            RelationsIsA.Add(CVID.UO_plaque_forming_unit, new List<CVID> { CVID.UO_count_unit, });
            RelationsIsA.Add(CVID.UO_colony_forming_unit_per_volume, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_colony_forming_unit_per_milliliter, new List<CVID> { CVID.UO_colony_forming_unit_per_volume, });
            RelationsIsA.Add(CVID.UO_plaque_forming_unit_per_volume, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_plaque_forming_unit_per_milliliter, new List<CVID> { CVID.UO_plaque_forming_unit_per_volume, });
            RelationsIsA.Add(CVID.UO_disintegrations_per_second, new List<CVID> { CVID.UO_activity__of_a_radionuclide__unit, });
            RelationsIsA.Add(CVID.UO_electric_potential_difference_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_volt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_electric_charge, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_coulomb, new List<CVID> { CVID.UO_electric_charge, });
            RelationsIsA.Add(CVID.UO_dalton, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_kilodalton, new List<CVID> { CVID.UO_mass_unit, });
            RelationsIsA.Add(CVID.UO_watt_hour, new List<CVID> { CVID.UO_energy_unit, });
            RelationsIsA.Add(CVID.UO_kilowatt_hour, new List<CVID> { CVID.UO_energy_unit, });
            RelationsIsA.Add(CVID.UO_magnetic_flux_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_weber, new List<CVID> { CVID.UO_magnetic_flux_unit, });
            RelationsIsA.Add(CVID.UO_magnetic_flux_density_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_tesla, new List<CVID> { CVID.UO_magnetic_flux_density_unit, });
            RelationsIsA.Add(CVID.UO_volt_hour, new List<CVID> { CVID.UO_magnetic_flux_unit, });
            RelationsIsA.Add(CVID.UO_kilovolt_hour, new List<CVID> { CVID.UO_magnetic_flux_unit, });
            RelationsIsA.Add(CVID.UO_information_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_bit, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_byte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_kilobyte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_megabyte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_image_resolution_unit, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_chroma_sampling_unit, new List<CVID> { CVID.UO_image_resolution_unit, });
            RelationsIsA.Add(CVID.UO_dynamic_range_unit, new List<CVID> { CVID.UO_image_resolution_unit, });
            RelationsIsA.Add(CVID.UO_spatial_resolution_unit, new List<CVID> { CVID.UO_image_resolution_unit, });
            RelationsIsA.Add(CVID.UO_dots_per_inch, new List<CVID> { CVID.UO_spatial_resolution_unit, });
            RelationsIsA.Add(CVID.UO_micron_pixel, new List<CVID> { CVID.UO_spatial_resolution_unit, });
            RelationsIsA.Add(CVID.UO_pixels_per_inch, new List<CVID> { CVID.UO_spatial_resolution_unit, });
            RelationsIsA.Add(CVID.UO_pixels_per_millimeter, new List<CVID> { CVID.UO_spatial_resolution_unit, });
            RelationsIsA.Add(CVID.UO_base_pair, new List<CVID> { CVID.UO_count_unit, });
            RelationsIsA.Add(CVID.UO_kibibyte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_mebibyte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_millivolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_kilovolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_microvolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_nanovolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_picovolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_megavolt, new List<CVID> { CVID.UO_electric_potential_difference_unit, });
            RelationsIsA.Add(CVID.UO_surface_tension_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_newton_per_meter, new List<CVID> { CVID.UO_surface_tension_unit, });
            RelationsIsA.Add(CVID.UO_dyne_per_cm, new List<CVID> { CVID.UO_surface_tension_unit, });
            RelationsIsA.Add(CVID.UO_viscosity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_pascal_second, new List<CVID> { CVID.UO_viscosity_unit, });
            RelationsIsA.Add(CVID.UO_poise, new List<CVID> { CVID.UO_viscosity_unit, });
            RelationsIsA.Add(CVID.UO_decibel, new List<CVID> { CVID.UO_ratio, });
            RelationsIsA.Add(CVID.UO_effective_dose_unit, new List<CVID> { CVID.UO_radiation_unit, });
            RelationsIsA.Add(CVID.UO_conduction_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_electrical_conduction_unit, new List<CVID> { CVID.UO_conduction_unit, });
            RelationsIsA.Add(CVID.UO_heat_conduction_unit, new List<CVID> { CVID.UO_conduction_unit, });
            RelationsIsA.Add(CVID.UO_siemens, new List<CVID> { CVID.UO_electrical_conduction_unit, });
            RelationsIsA.Add(CVID.UO_watt_per_meter_kelvin, new List<CVID> { CVID.UO_heat_conduction_unit, });
            RelationsIsA.Add(CVID.UO_electronvolt, new List<CVID> { CVID.UO_energy_unit, });
            RelationsIsA.Add(CVID.UO_electric_field_strength_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_volt_per_meter, new List<CVID> { CVID.UO_electric_field_strength_unit, });
            RelationsIsA.Add(CVID.UO_absorbance_unit, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_volumetric_flow_rate_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_microliters_per_minute, new List<CVID> { CVID.UO_volumetric_flow_rate_unit, });
            RelationsIsA.Add(CVID.UO_millimetres_of_mercury, new List<CVID> { CVID.UO_pressure_unit, });
            RelationsIsA.Add(CVID.UO_milligram_per_liter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_microgram_per_milliliter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_nanogram_per_milliliter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_amount_per_container, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_ug_disk, new List<CVID> { CVID.UO_amount_per_container, });
            RelationsIsA.Add(CVID.UO_nmole_disk, new List<CVID> { CVID.UO_amount_per_container, });
            RelationsIsA.Add(CVID.UO_milliunits_per_milliliter, new List<CVID> { CVID.UO_unit_per_volume_unit, });
            RelationsIsA.Add(CVID.UO_rate_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_count_per_nanomolar_second, new List<CVID> { CVID.UO_rate_unit, });
            RelationsIsA.Add(CVID.UO_count_per_molar_second, new List<CVID> { CVID.UO_rate_unit, });
            RelationsIsA.Add(CVID.UO_kilogram_per_hectare, new List<CVID> { CVID.UO_area_density_unit, });
            RelationsIsA.Add(CVID.UO_count_per_nanomolar, new List<CVID> { CVID.UO_rate_unit, });
            RelationsIsA.Add(CVID.UO_count_per_molar, new List<CVID> { CVID.UO_rate_unit, });
            RelationsIsA.Add(CVID.UO_yotta, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_hecto, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_zetta, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_exa, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_peta, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_tera, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_giga, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_mega, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_kilo, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_deca, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_deci, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_milli, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_centi, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_micro, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_nano, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_microgram_per_liter, new List<CVID> { CVID.UO_mass_density_unit, });
            RelationsIsA.Add(CVID.UO_pico, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_femto, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_atto, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_zepto, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_yocto, new List<CVID> { CVID.UO_prefix, });
            RelationsIsA.Add(CVID.UO_dose_unit, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_milligram_per_kilogram, new List<CVID> { CVID.UO_dose_unit, });
            RelationsIsA.Add(CVID.UO_milligram_per_square_meter, new List<CVID> { CVID.UO_dose_unit, });
            RelationsIsA.Add(CVID.UO_dosage_unit, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_milligram_per_kilogram_per_day, new List<CVID> { CVID.UO_dosage_unit, });
            RelationsIsA.Add(CVID.UO_relative_light_unit, new List<CVID> { CVID.UO_light_unit, });
            RelationsIsA.Add(CVID.UO_relative_luminescence_unit, new List<CVID> { CVID.UO_relative_light_unit, });
            RelationsIsA.Add(CVID.UO_relative_fluorescence_unit, new List<CVID> { CVID.UO_relative_light_unit, });
            RelationsIsA.Add(CVID.UO_turbidity_unit, new List<CVID> { CVID.UO_unit, });
            RelationsIsA.Add(CVID.UO_cells_per_microliter, new List<CVID> { CVID.UO_cell_concentration_unit, });
            RelationsIsA.Add(CVID.UO_cells_per_well, new List<CVID> { CVID.UO_cell_concentration_unit, });
            RelationsIsA.Add(CVID.UO_formazin_nephelometric_unit, new List<CVID> { CVID.UO_turbidity_unit, });
            RelationsIsA.Add(CVID.UO_radioactivity_concentration, new List<CVID> { CVID.UO_concentration_unit, });
            RelationsIsA.Add(CVID.UO_curie_per_liter, new List<CVID> { CVID.UO_radioactivity_concentration, });
            RelationsIsA.Add(CVID.UO_microcurie_per_milliliter, new List<CVID> { CVID.UO_radioactivity_concentration, });
            RelationsIsA.Add(CVID.UO_fold_dilution, new List<CVID> { CVID.UO_dimensionless_unit, });
            RelationsIsA.Add(CVID.UO_ton_per_hectare, new List<CVID> { CVID.UO_area_density_unit, });
            RelationsIsA.Add(CVID.UO_square_angstrom, new List<CVID> { CVID.UO_area_unit, });
            RelationsIsA.Add(CVID.UO_megaHertz, new List<CVID> { CVID.UO_hertz, });
            RelationsIsA.Add(CVID.UO_centiMorgan, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_centiRay, new List<CVID> { CVID.UO_length_unit, });
            RelationsIsA.Add(CVID.UO_kilobasepair, new List<CVID> { CVID.UO_base_pair, });
            RelationsIsA.Add(CVID.UO_megabasepair, new List<CVID> { CVID.UO_base_pair, });
            RelationsIsA.Add(CVID.UO_gigabasepair, new List<CVID> { CVID.UO_base_pair, });
            RelationsIsA.Add(CVID.UO_gigabyte, new List<CVID> { CVID.UO_information_unit, });
            RelationsIsA.Add(CVID.UO_terabyte, new List<CVID> { CVID.UO_information_unit, });
        }

    }

}

